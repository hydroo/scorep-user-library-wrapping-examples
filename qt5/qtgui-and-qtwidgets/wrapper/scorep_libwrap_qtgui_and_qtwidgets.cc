#include "libwrap.h"

#define SCOREP_LIBWRAP_REGION_DESCRIPTOR( func ) \
    libwrap_qtgui_and_qtwidgets_region__ ## func

#define SCOREP_LIBWRAP_REGION_HANDLE( func ) \
    SCOREP_LIBWRAP_REGION_DESCRIPTOR( func ).handle

#define SCOREP_LIBWRAP_REGION_FILTERED( func ) \
    SCOREP_LIBWRAP_REGION_DESCRIPTOR( func ).filtered

#if defined( SCOREP_LIBWRAP_SHARED )
#define SCOREP_LIBWRAP_FUNC_REAL_NAME( func ) \
    SCOREP_LIBWRAP_REGION_DESCRIPTOR( func ).funcptr
#endif

#include <scorep/SCOREP_Libwrap_Macros.h>

#ifdef __cplusplus
extern "C"
{
#endif

/* region descriptors */

#if defined( SCOREP_LIBWRAP_STATIC )

#define SCOREP_LIBWRAP_PROCESS_FUNC( rettype, func, args, prettyname, file, line, ns ) \
    SCOREP_LIBWRAP_DECLARE_REAL_FUNC( rettype, func, args ); \
    static struct \
    { \
        SCOREP_RegionHandle handle; \
        int                 filtered; \
    } SCOREP_LIBWRAP_REGION_DESCRIPTOR( func );

#elif defined( SCOREP_LIBWRAP_SHARED )

#define SCOREP_LIBWRAP_PROCESS_FUNC( rettype, func, args, prettyname, file, line, ns ) \
    static struct \
    { \
        SCOREP_RegionHandle handle; \
        int                 filtered; \
        SCOREP_LIBWRAP_FUNC_TYPE( rettype, funcptr, args ); \
    } SCOREP_LIBWRAP_REGION_DESCRIPTOR( func );

#endif

#define SCOREP_LIBWRAP_PROCESS_FUNC_WITH_NAMESPACE
#include "scorep_libwrap_qtgui_and_qtwidgets.inc.c"

#define SCOREP_LIBWRAP_PROCESS_FUNC( rettype, func, args, prettyname, file, line, ns ) \
    static void libwrap_qtgui_and_qtwidgets_init__##func( SCOREP_LibwrapHandle* handle ) \
    { \
        SCOREP_LIBWRAP_FUNC_INIT( handle, func, prettyname, file, line ); \
    }

#define SCOREP_LIBWRAP_PROCESS_FUNC_WITH_NAMESPACE
#include "scorep_libwrap_qtgui_and_qtwidgets.inc.c"

/* region init functions */

static void
libwrap_qtgui_and_qtwidgets_init( SCOREP_LibwrapHandle* handle )
{
#define SCOREP_LIBWRAP_PROCESS_FUNC( rettype, func, args, prettyname, file, line, ns ) \
    ns libwrap_qtgui_and_qtwidgets_init__##func( handle );

#include "scorep_libwrap_qtgui_and_qtwidgets.inc.c"
}

#if defined( SCOREP_LIBWRAP_SHARED )

#define LIBWRAP_EARLY_INIT( func ) \
    do \
    { \
        if ( !SCOREP_LIBWRAP_FUNC_REAL_NAME( func ) ) \
        { \
            libwrap_qtgui_and_qtwidgets_early_init(); \
        } \
    } while ( 0 )

/* region early init functions */

#define SCOREP_LIBWRAP_PROCESS_FUNC( rettype, func, args, prettyname, file, line, ns ) \
    static void libwrap_qtgui_and_qtwidgets_early_init__##func() \
    { \
        SCOREP_Libwrap_EarlySharedPtrInit( #func, ( void** )&SCOREP_LIBWRAP_FUNC_REAL_NAME( func ) ); \
    }

#define SCOREP_LIBWRAP_PROCESS_FUNC_WITH_NAMESPACE
#include "scorep_libwrap_qtgui_and_qtwidgets.inc.c"

static void
libwrap_qtgui_and_qtwidgets_early_init()
{
#define SCOREP_LIBWRAP_PROCESS_FUNC( rettype, func, args, prettyname, file, line, ns ) \
    ns libwrap_qtgui_and_qtwidgets_early_init__##func();

#include "scorep_libwrap_qtgui_and_qtwidgets.inc.c"
}

#else

#define LIBWRAP_EARLY_INIT( func ) do { } while ( 0 )

#endif

static const char* libwrap_qtgui_and_qtwidgets_libnames[] = {
    "libQt5Widgets.so",
    "libQt5Gui.so",
    "libQt5Core.so"
};
static SCOREP_LibwrapHandle*          libwrap_qtgui_and_qtwidgets_handle;
static const SCOREP_LibwrapAttributes libwrap_qtgui_and_qtwidgets_attributes =
{
    SCOREP_LIBWRAP_VERSION,
    "qtgui_and_qtwidgets",
    "Qt Gui & Widgets",
    SCOREP_LIBWRAP_MODE,
    libwrap_qtgui_and_qtwidgets_init,
    3,
    libwrap_qtgui_and_qtwidgets_libnames
};


namespace QtPrivate
{

#undef _ZN9QtPrivate22QPixelFormat_createYUVEN12QPixelFormat9YUVLayoutEhNS0_10AlphaUsageENS0_13AlphaPositionENS0_18AlphaPremultipliedENS0_18TypeInterpretationENS0_9ByteOrderE
QPixelFormat
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QtPrivate22QPixelFormat_createYUVEN12QPixelFormat9YUVLayoutEhNS0_10AlphaUsageENS0_13AlphaPositionENS0_18AlphaPremultipliedENS0_18TypeInterpretationENS0_9ByteOrderE )( QPixelFormat::YUVLayout yuvLayout, uchar alphaSize, QPixelFormat::AlphaUsage alphaUsage, QPixelFormat::AlphaPosition alphaPosition, QPixelFormat::AlphaPremultiplied premultiplied, QPixelFormat::TypeInterpretation typeInterpretation, QPixelFormat::ByteOrder byteOrder )
{
    LIBWRAP_EARLY_INIT( _ZN9QtPrivate22QPixelFormat_createYUVEN12QPixelFormat9YUVLayoutEhNS0_10AlphaUsageENS0_13AlphaPositionENS0_18AlphaPremultipliedENS0_18TypeInterpretationENS0_9ByteOrderE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QtPrivate22QPixelFormat_createYUVEN12QPixelFormat9YUVLayoutEhNS0_10AlphaUsageENS0_13AlphaPositionENS0_18AlphaPremultipliedENS0_18TypeInterpretationENS0_9ByteOrderE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPixelFormat scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN9QtPrivate22QPixelFormat_createYUVEN12QPixelFormat9YUVLayoutEhNS0_10AlphaUsageENS0_13AlphaPositionENS0_18AlphaPremultipliedENS0_18TypeInterpretationENS0_9ByteOrderE, ( yuvLayout, alphaSize, alphaUsage, alphaPosition, premultiplied, typeInterpretation, byteOrder ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QtPrivate22QPixelFormat_createYUVEN12QPixelFormat9YUVLayoutEhNS0_10AlphaUsageENS0_13AlphaPositionENS0_18AlphaPremultipliedENS0_18TypeInterpretationENS0_9ByteOrderE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

} // namespace QtPrivate

namespace Qt
{

#undef _ZN2Qt15mightBeRichTextERK7QString
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN2Qt15mightBeRichTextERK7QString )( const QString & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN2Qt15mightBeRichTextERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN2Qt15mightBeRichTextERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN2Qt15mightBeRichTextERK7QString, ( scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN2Qt15mightBeRichTextERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN2Qt20convertFromPlainTextERK7QStringNS_14WhiteSpaceModeE
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZN2Qt20convertFromPlainTextERK7QStringNS_14WhiteSpaceModeE )( const QString & plain, Qt::WhiteSpaceMode mode )
{
    LIBWRAP_EARLY_INIT( _ZN2Qt20convertFromPlainTextERK7QStringNS_14WhiteSpaceModeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN2Qt20convertFromPlainTextERK7QStringNS_14WhiteSpaceModeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN2Qt20convertFromPlainTextERK7QStringNS_14WhiteSpaceModeE, ( plain, mode ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN2Qt20convertFromPlainTextERK7QStringNS_14WhiteSpaceModeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN2Qt12codecForHtmlERK10QByteArray
QTextCodec *
SCOREP_LIBWRAP_FUNC_NAME( _ZN2Qt12codecForHtmlERK10QByteArray )( const QByteArray & ba )
{
    LIBWRAP_EARLY_INIT( _ZN2Qt12codecForHtmlERK10QByteArray );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN2Qt12codecForHtmlERK10QByteArray );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextCodec * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN2Qt12codecForHtmlERK10QByteArray, ( ba ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN2Qt12codecForHtmlERK10QByteArray );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

} // namespace Qt

#undef _Zls6QDebugRK6QColor
QDebug
SCOREP_LIBWRAP_FUNC_NAME( _Zls6QDebugRK6QColor )( QDebug scorep_libwrap_arg_1, const QColor & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _Zls6QDebugRK6QColor );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _Zls6QDebugRK6QColor );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDebug scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _Zls6QDebugRK6QColor, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _Zls6QDebugRK6QColor );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZlsR11QDataStreamRK6QColor
QDataStream &
SCOREP_LIBWRAP_FUNC_NAME( _ZlsR11QDataStreamRK6QColor )( QDataStream & scorep_libwrap_arg_1, const QColor & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _ZlsR11QDataStreamRK6QColor );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZlsR11QDataStreamRK6QColor );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDataStream & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZlsR11QDataStreamRK6QColor, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZlsR11QDataStreamRK6QColor );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZrsR11QDataStreamR6QColor
QDataStream &
SCOREP_LIBWRAP_FUNC_NAME( _ZrsR11QDataStreamR6QColor )( QDataStream & scorep_libwrap_arg_1, QColor & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _ZrsR11QDataStreamR6QColor );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZrsR11QDataStreamR6QColor );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDataStream & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZrsR11QDataStreamR6QColor, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZrsR11QDataStreamR6QColor );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QColorC2EN2Qt11GlobalColorE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QColorC2EN2Qt11GlobalColorE )( void *scorep_libwrap_arg_this, Qt::GlobalColor color )
{
    LIBWRAP_EARLY_INIT( _ZN6QColorC2EN2Qt11GlobalColorE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QColorC2EN2Qt11GlobalColorE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QColorC2EN2Qt11GlobalColorE, ( scorep_libwrap_arg_this, color ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QColorC2EN2Qt11GlobalColorE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QColorC1EN2Qt11GlobalColorE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QColorC1EN2Qt11GlobalColorE )( void *scorep_libwrap_arg_this, Qt::GlobalColor color )
{
    LIBWRAP_EARLY_INIT( _ZN6QColorC1EN2Qt11GlobalColorE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QColorC1EN2Qt11GlobalColorE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QColorC1EN2Qt11GlobalColorE, ( scorep_libwrap_arg_this, color ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QColorC1EN2Qt11GlobalColorE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QColorC2Ej
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QColorC2Ej )( void *scorep_libwrap_arg_this, QRgb rgb )
{
    LIBWRAP_EARLY_INIT( _ZN6QColorC2Ej );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QColorC2Ej );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QColorC2Ej, ( scorep_libwrap_arg_this, rgb ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QColorC2Ej );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QColorC1Ej
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QColorC1Ej )( void *scorep_libwrap_arg_this, QRgb rgb )
{
    LIBWRAP_EARLY_INIT( _ZN6QColorC1Ej );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QColorC1Ej );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QColorC1Ej, ( scorep_libwrap_arg_this, rgb ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QColorC1Ej );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QColorC2E7QRgba64
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QColorC2E7QRgba64 )( void *scorep_libwrap_arg_this, QRgba64 rgba64 )
{
    LIBWRAP_EARLY_INIT( _ZN6QColorC2E7QRgba64 );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QColorC2E7QRgba64 );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QColorC2E7QRgba64, ( scorep_libwrap_arg_this, rgba64 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QColorC2E7QRgba64 );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QColorC1E7QRgba64
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QColorC1E7QRgba64 )( void *scorep_libwrap_arg_this, QRgba64 rgba64 )
{
    LIBWRAP_EARLY_INIT( _ZN6QColorC1E7QRgba64 );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QColorC1E7QRgba64 );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QColorC1E7QRgba64, ( scorep_libwrap_arg_this, rgba64 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QColorC1E7QRgba64 );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QColorC2ENS_4SpecE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QColorC2ENS_4SpecE )( void *scorep_libwrap_arg_this, QColor::Spec spec )
{
    LIBWRAP_EARLY_INIT( _ZN6QColorC2ENS_4SpecE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QColorC2ENS_4SpecE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QColorC2ENS_4SpecE, ( scorep_libwrap_arg_this, spec ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QColorC2ENS_4SpecE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QColorC1ENS_4SpecE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QColorC1ENS_4SpecE )( void *scorep_libwrap_arg_this, QColor::Spec spec )
{
    LIBWRAP_EARLY_INIT( _ZN6QColorC1ENS_4SpecE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QColorC1ENS_4SpecE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QColorC1ENS_4SpecE, ( scorep_libwrap_arg_this, spec ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QColorC1ENS_4SpecE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QColoraSEN2Qt11GlobalColorE
QColor &
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QColoraSEN2Qt11GlobalColorE )( void *scorep_libwrap_arg_this, Qt::GlobalColor color )
{
    LIBWRAP_EARLY_INIT( _ZN6QColoraSEN2Qt11GlobalColorE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QColoraSEN2Qt11GlobalColorE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QColor & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN6QColoraSEN2Qt11GlobalColorE, ( scorep_libwrap_arg_this, color ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QColoraSEN2Qt11GlobalColorE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QColor4nameEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QColor4nameEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QColor4nameEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QColor4nameEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QColor4nameEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QColor4nameEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QColor4nameENS_10NameFormatE
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QColor4nameENS_10NameFormatE )( void *scorep_libwrap_arg_this, QColor::NameFormat format )
{
    LIBWRAP_EARLY_INIT( _ZNK6QColor4nameENS_10NameFormatE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QColor4nameENS_10NameFormatE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QColor4nameENS_10NameFormatE, ( scorep_libwrap_arg_this, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QColor4nameENS_10NameFormatE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QColor13setNamedColorERK7QString
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QColor13setNamedColorERK7QString )( void *scorep_libwrap_arg_this, const QString & name )
{
    LIBWRAP_EARLY_INIT( _ZN6QColor13setNamedColorERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QColor13setNamedColorERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QColor13setNamedColorERK7QString, ( scorep_libwrap_arg_this, name ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QColor13setNamedColorERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QColor10colorNamesEv
QStringList
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QColor10colorNamesEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN6QColor10colorNamesEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QColor10colorNamesEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QStringList scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN6QColor10colorNamesEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QColor10colorNamesEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QColor8setAlphaEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QColor8setAlphaEi )( void *scorep_libwrap_arg_this, int alpha )
{
    LIBWRAP_EARLY_INIT( _ZN6QColor8setAlphaEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QColor8setAlphaEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QColor8setAlphaEi, ( scorep_libwrap_arg_this, alpha ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QColor8setAlphaEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK6QColor6alphaFEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QColor6alphaFEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QColor6alphaFEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QColor6alphaFEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QColor6alphaFEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QColor6alphaFEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QColor9setAlphaFEd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QColor9setAlphaFEd )( void *scorep_libwrap_arg_this, qreal alpha )
{
    LIBWRAP_EARLY_INIT( _ZN6QColor9setAlphaFEd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QColor9setAlphaFEd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QColor9setAlphaFEd, ( scorep_libwrap_arg_this, alpha ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QColor9setAlphaFEd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK6QColor3redEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QColor3redEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QColor3redEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QColor3redEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QColor3redEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QColor3redEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QColor5greenEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QColor5greenEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QColor5greenEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QColor5greenEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QColor5greenEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QColor5greenEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QColor4blueEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QColor4blueEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QColor4blueEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QColor4blueEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QColor4blueEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QColor4blueEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QColor6setRedEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QColor6setRedEi )( void *scorep_libwrap_arg_this, int red )
{
    LIBWRAP_EARLY_INIT( _ZN6QColor6setRedEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QColor6setRedEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QColor6setRedEi, ( scorep_libwrap_arg_this, red ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QColor6setRedEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QColor8setGreenEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QColor8setGreenEi )( void *scorep_libwrap_arg_this, int green )
{
    LIBWRAP_EARLY_INIT( _ZN6QColor8setGreenEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QColor8setGreenEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QColor8setGreenEi, ( scorep_libwrap_arg_this, green ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QColor8setGreenEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QColor7setBlueEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QColor7setBlueEi )( void *scorep_libwrap_arg_this, int blue )
{
    LIBWRAP_EARLY_INIT( _ZN6QColor7setBlueEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QColor7setBlueEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QColor7setBlueEi, ( scorep_libwrap_arg_this, blue ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QColor7setBlueEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK6QColor4redFEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QColor4redFEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QColor4redFEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QColor4redFEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QColor4redFEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QColor4redFEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QColor6greenFEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QColor6greenFEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QColor6greenFEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QColor6greenFEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QColor6greenFEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QColor6greenFEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QColor5blueFEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QColor5blueFEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QColor5blueFEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QColor5blueFEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QColor5blueFEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QColor5blueFEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QColor7setRedFEd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QColor7setRedFEd )( void *scorep_libwrap_arg_this, qreal red )
{
    LIBWRAP_EARLY_INIT( _ZN6QColor7setRedFEd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QColor7setRedFEd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QColor7setRedFEd, ( scorep_libwrap_arg_this, red ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QColor7setRedFEd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QColor9setGreenFEd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QColor9setGreenFEd )( void *scorep_libwrap_arg_this, qreal green )
{
    LIBWRAP_EARLY_INIT( _ZN6QColor9setGreenFEd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QColor9setGreenFEd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QColor9setGreenFEd, ( scorep_libwrap_arg_this, green ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QColor9setGreenFEd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QColor8setBlueFEd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QColor8setBlueFEd )( void *scorep_libwrap_arg_this, qreal blue )
{
    LIBWRAP_EARLY_INIT( _ZN6QColor8setBlueFEd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QColor8setBlueFEd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QColor8setBlueFEd, ( scorep_libwrap_arg_this, blue ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QColor8setBlueFEd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK6QColor6getRgbEPiS0_S0_S0_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QColor6getRgbEPiS0_S0_S0_ )( void *scorep_libwrap_arg_this, int * r, int * g, int * b, int * a )
{
    LIBWRAP_EARLY_INIT( _ZNK6QColor6getRgbEPiS0_S0_S0_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QColor6getRgbEPiS0_S0_S0_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QColor6getRgbEPiS0_S0_S0_, ( scorep_libwrap_arg_this, r, g, b, a ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QColor6getRgbEPiS0_S0_S0_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QColor6setRgbEiiii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QColor6setRgbEiiii )( void *scorep_libwrap_arg_this, int r, int g, int b, int a )
{
    LIBWRAP_EARLY_INIT( _ZN6QColor6setRgbEiiii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QColor6setRgbEiiii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QColor6setRgbEiiii, ( scorep_libwrap_arg_this, r, g, b, a ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QColor6setRgbEiiii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK6QColor7getRgbFEPdS0_S0_S0_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QColor7getRgbFEPdS0_S0_S0_ )( void *scorep_libwrap_arg_this, qreal * r, qreal * g, qreal * b, qreal * a )
{
    LIBWRAP_EARLY_INIT( _ZNK6QColor7getRgbFEPdS0_S0_S0_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QColor7getRgbFEPdS0_S0_S0_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QColor7getRgbFEPdS0_S0_S0_, ( scorep_libwrap_arg_this, r, g, b, a ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QColor7getRgbFEPdS0_S0_S0_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QColor7setRgbFEdddd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QColor7setRgbFEdddd )( void *scorep_libwrap_arg_this, qreal r, qreal g, qreal b, qreal a )
{
    LIBWRAP_EARLY_INIT( _ZN6QColor7setRgbFEdddd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QColor7setRgbFEdddd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QColor7setRgbFEdddd, ( scorep_libwrap_arg_this, r, g, b, a ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QColor7setRgbFEdddd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK6QColor6rgba64Ev
QRgba64
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QColor6rgba64Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QColor6rgba64Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QColor6rgba64Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRgba64 scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QColor6rgba64Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QColor6rgba64Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QColor9setRgba64E7QRgba64
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QColor9setRgba64E7QRgba64 )( void *scorep_libwrap_arg_this, QRgba64 rgba )
{
    LIBWRAP_EARLY_INIT( _ZN6QColor9setRgba64E7QRgba64 );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QColor9setRgba64E7QRgba64 );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QColor9setRgba64E7QRgba64, ( scorep_libwrap_arg_this, rgba ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QColor9setRgba64E7QRgba64 );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK6QColor4rgbaEv
QRgb
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QColor4rgbaEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QColor4rgbaEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QColor4rgbaEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRgb scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QColor4rgbaEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QColor4rgbaEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QColor7setRgbaEj
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QColor7setRgbaEj )( void *scorep_libwrap_arg_this, QRgb rgba )
{
    LIBWRAP_EARLY_INIT( _ZN6QColor7setRgbaEj );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QColor7setRgbaEj );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QColor7setRgbaEj, ( scorep_libwrap_arg_this, rgba ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QColor7setRgbaEj );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK6QColor3rgbEv
QRgb
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QColor3rgbEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QColor3rgbEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QColor3rgbEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRgb scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QColor3rgbEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QColor3rgbEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QColor6setRgbEj
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QColor6setRgbEj )( void *scorep_libwrap_arg_this, QRgb rgb )
{
    LIBWRAP_EARLY_INIT( _ZN6QColor6setRgbEj );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QColor6setRgbEj );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QColor6setRgbEj, ( scorep_libwrap_arg_this, rgb ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QColor6setRgbEj );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK6QColor3hueEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QColor3hueEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QColor3hueEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QColor3hueEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QColor3hueEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QColor3hueEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QColor10saturationEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QColor10saturationEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QColor10saturationEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QColor10saturationEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QColor10saturationEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QColor10saturationEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QColor6hsvHueEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QColor6hsvHueEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QColor6hsvHueEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QColor6hsvHueEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QColor6hsvHueEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QColor6hsvHueEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QColor13hsvSaturationEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QColor13hsvSaturationEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QColor13hsvSaturationEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QColor13hsvSaturationEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QColor13hsvSaturationEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QColor13hsvSaturationEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QColor5valueEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QColor5valueEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QColor5valueEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QColor5valueEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QColor5valueEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QColor5valueEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QColor4hueFEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QColor4hueFEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QColor4hueFEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QColor4hueFEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QColor4hueFEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QColor4hueFEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QColor11saturationFEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QColor11saturationFEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QColor11saturationFEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QColor11saturationFEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QColor11saturationFEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QColor11saturationFEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QColor7hsvHueFEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QColor7hsvHueFEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QColor7hsvHueFEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QColor7hsvHueFEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QColor7hsvHueFEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QColor7hsvHueFEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QColor14hsvSaturationFEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QColor14hsvSaturationFEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QColor14hsvSaturationFEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QColor14hsvSaturationFEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QColor14hsvSaturationFEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QColor14hsvSaturationFEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QColor6valueFEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QColor6valueFEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QColor6valueFEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QColor6valueFEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QColor6valueFEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QColor6valueFEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QColor6getHsvEPiS0_S0_S0_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QColor6getHsvEPiS0_S0_S0_ )( void *scorep_libwrap_arg_this, int * h, int * s, int * v, int * a )
{
    LIBWRAP_EARLY_INIT( _ZNK6QColor6getHsvEPiS0_S0_S0_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QColor6getHsvEPiS0_S0_S0_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QColor6getHsvEPiS0_S0_S0_, ( scorep_libwrap_arg_this, h, s, v, a ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QColor6getHsvEPiS0_S0_S0_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QColor6setHsvEiiii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QColor6setHsvEiiii )( void *scorep_libwrap_arg_this, int h, int s, int v, int a )
{
    LIBWRAP_EARLY_INIT( _ZN6QColor6setHsvEiiii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QColor6setHsvEiiii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QColor6setHsvEiiii, ( scorep_libwrap_arg_this, h, s, v, a ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QColor6setHsvEiiii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK6QColor7getHsvFEPdS0_S0_S0_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QColor7getHsvFEPdS0_S0_S0_ )( void *scorep_libwrap_arg_this, qreal * h, qreal * s, qreal * v, qreal * a )
{
    LIBWRAP_EARLY_INIT( _ZNK6QColor7getHsvFEPdS0_S0_S0_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QColor7getHsvFEPdS0_S0_S0_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QColor7getHsvFEPdS0_S0_S0_, ( scorep_libwrap_arg_this, h, s, v, a ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QColor7getHsvFEPdS0_S0_S0_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QColor7setHsvFEdddd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QColor7setHsvFEdddd )( void *scorep_libwrap_arg_this, qreal h, qreal s, qreal v, qreal a )
{
    LIBWRAP_EARLY_INIT( _ZN6QColor7setHsvFEdddd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QColor7setHsvFEdddd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QColor7setHsvFEdddd, ( scorep_libwrap_arg_this, h, s, v, a ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QColor7setHsvFEdddd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK6QColor4cyanEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QColor4cyanEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QColor4cyanEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QColor4cyanEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QColor4cyanEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QColor4cyanEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QColor7magentaEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QColor7magentaEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QColor7magentaEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QColor7magentaEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QColor7magentaEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QColor7magentaEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QColor6yellowEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QColor6yellowEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QColor6yellowEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QColor6yellowEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QColor6yellowEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QColor6yellowEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QColor5blackEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QColor5blackEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QColor5blackEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QColor5blackEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QColor5blackEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QColor5blackEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QColor5cyanFEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QColor5cyanFEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QColor5cyanFEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QColor5cyanFEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QColor5cyanFEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QColor5cyanFEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QColor8magentaFEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QColor8magentaFEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QColor8magentaFEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QColor8magentaFEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QColor8magentaFEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QColor8magentaFEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QColor7yellowFEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QColor7yellowFEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QColor7yellowFEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QColor7yellowFEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QColor7yellowFEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QColor7yellowFEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QColor6blackFEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QColor6blackFEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QColor6blackFEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QColor6blackFEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QColor6blackFEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QColor6blackFEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QColor7getCmykEPiS0_S0_S0_S0_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QColor7getCmykEPiS0_S0_S0_S0_ )( void *scorep_libwrap_arg_this, int * c, int * m, int * y, int * k, int * a )
{
    LIBWRAP_EARLY_INIT( _ZN6QColor7getCmykEPiS0_S0_S0_S0_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QColor7getCmykEPiS0_S0_S0_S0_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QColor7getCmykEPiS0_S0_S0_S0_, ( scorep_libwrap_arg_this, c, m, y, k, a ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QColor7getCmykEPiS0_S0_S0_S0_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QColor7setCmykEiiiii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QColor7setCmykEiiiii )( void *scorep_libwrap_arg_this, int c, int m, int y, int k, int a )
{
    LIBWRAP_EARLY_INIT( _ZN6QColor7setCmykEiiiii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QColor7setCmykEiiiii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QColor7setCmykEiiiii, ( scorep_libwrap_arg_this, c, m, y, k, a ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QColor7setCmykEiiiii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QColor8getCmykFEPdS0_S0_S0_S0_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QColor8getCmykFEPdS0_S0_S0_S0_ )( void *scorep_libwrap_arg_this, qreal * c, qreal * m, qreal * y, qreal * k, qreal * a )
{
    LIBWRAP_EARLY_INIT( _ZN6QColor8getCmykFEPdS0_S0_S0_S0_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QColor8getCmykFEPdS0_S0_S0_S0_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QColor8getCmykFEPdS0_S0_S0_S0_, ( scorep_libwrap_arg_this, c, m, y, k, a ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QColor8getCmykFEPdS0_S0_S0_S0_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QColor8setCmykFEddddd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QColor8setCmykFEddddd )( void *scorep_libwrap_arg_this, qreal c, qreal m, qreal y, qreal k, qreal a )
{
    LIBWRAP_EARLY_INIT( _ZN6QColor8setCmykFEddddd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QColor8setCmykFEddddd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QColor8setCmykFEddddd, ( scorep_libwrap_arg_this, c, m, y, k, a ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QColor8setCmykFEddddd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK6QColor6hslHueEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QColor6hslHueEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QColor6hslHueEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QColor6hslHueEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QColor6hslHueEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QColor6hslHueEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QColor13hslSaturationEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QColor13hslSaturationEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QColor13hslSaturationEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QColor13hslSaturationEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QColor13hslSaturationEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QColor13hslSaturationEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QColor9lightnessEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QColor9lightnessEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QColor9lightnessEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QColor9lightnessEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QColor9lightnessEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QColor9lightnessEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QColor7hslHueFEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QColor7hslHueFEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QColor7hslHueFEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QColor7hslHueFEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QColor7hslHueFEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QColor7hslHueFEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QColor14hslSaturationFEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QColor14hslSaturationFEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QColor14hslSaturationFEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QColor14hslSaturationFEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QColor14hslSaturationFEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QColor14hslSaturationFEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QColor10lightnessFEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QColor10lightnessFEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QColor10lightnessFEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QColor10lightnessFEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QColor10lightnessFEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QColor10lightnessFEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QColor6getHslEPiS0_S0_S0_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QColor6getHslEPiS0_S0_S0_ )( void *scorep_libwrap_arg_this, int * h, int * s, int * l, int * a )
{
    LIBWRAP_EARLY_INIT( _ZNK6QColor6getHslEPiS0_S0_S0_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QColor6getHslEPiS0_S0_S0_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QColor6getHslEPiS0_S0_S0_, ( scorep_libwrap_arg_this, h, s, l, a ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QColor6getHslEPiS0_S0_S0_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QColor6setHslEiiii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QColor6setHslEiiii )( void *scorep_libwrap_arg_this, int h, int s, int l, int a )
{
    LIBWRAP_EARLY_INIT( _ZN6QColor6setHslEiiii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QColor6setHslEiiii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QColor6setHslEiiii, ( scorep_libwrap_arg_this, h, s, l, a ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QColor6setHslEiiii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK6QColor7getHslFEPdS0_S0_S0_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QColor7getHslFEPdS0_S0_S0_ )( void *scorep_libwrap_arg_this, qreal * h, qreal * s, qreal * l, qreal * a )
{
    LIBWRAP_EARLY_INIT( _ZNK6QColor7getHslFEPdS0_S0_S0_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QColor7getHslFEPdS0_S0_S0_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QColor7getHslFEPdS0_S0_S0_, ( scorep_libwrap_arg_this, h, s, l, a ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QColor7getHslFEPdS0_S0_S0_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QColor7setHslFEdddd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QColor7setHslFEdddd )( void *scorep_libwrap_arg_this, qreal h, qreal s, qreal l, qreal a )
{
    LIBWRAP_EARLY_INIT( _ZN6QColor7setHslFEdddd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QColor7setHslFEdddd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QColor7setHslFEdddd, ( scorep_libwrap_arg_this, h, s, l, a ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QColor7setHslFEdddd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK6QColor5toRgbEv
QColor
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QColor5toRgbEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QColor5toRgbEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QColor5toRgbEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QColor scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QColor5toRgbEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QColor5toRgbEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QColor5toHsvEv
QColor
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QColor5toHsvEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QColor5toHsvEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QColor5toHsvEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QColor scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QColor5toHsvEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QColor5toHsvEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QColor6toCmykEv
QColor
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QColor6toCmykEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QColor6toCmykEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QColor6toCmykEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QColor scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QColor6toCmykEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QColor6toCmykEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QColor5toHslEv
QColor
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QColor5toHslEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QColor5toHslEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QColor5toHslEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QColor scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QColor5toHslEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QColor5toHslEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QColor9convertToENS_4SpecE
QColor
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QColor9convertToENS_4SpecE )( void *scorep_libwrap_arg_this, QColor::Spec colorSpec )
{
    LIBWRAP_EARLY_INIT( _ZNK6QColor9convertToENS_4SpecE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QColor9convertToENS_4SpecE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QColor scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QColor9convertToENS_4SpecE, ( scorep_libwrap_arg_this, colorSpec ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QColor9convertToENS_4SpecE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QColor7fromRgbEj
QColor
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QColor7fromRgbEj )( QRgb rgb )
{
    LIBWRAP_EARLY_INIT( _ZN6QColor7fromRgbEj );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QColor7fromRgbEj );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QColor scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN6QColor7fromRgbEj, ( rgb ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QColor7fromRgbEj );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QColor8fromRgbaEj
QColor
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QColor8fromRgbaEj )( QRgb rgba )
{
    LIBWRAP_EARLY_INIT( _ZN6QColor8fromRgbaEj );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QColor8fromRgbaEj );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QColor scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN6QColor8fromRgbaEj, ( rgba ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QColor8fromRgbaEj );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QColor7fromRgbEiiii
QColor
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QColor7fromRgbEiiii )( int r, int g, int b, int a )
{
    LIBWRAP_EARLY_INIT( _ZN6QColor7fromRgbEiiii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QColor7fromRgbEiiii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QColor scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN6QColor7fromRgbEiiii, ( r, g, b, a ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QColor7fromRgbEiiii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QColor8fromRgbFEdddd
QColor
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QColor8fromRgbFEdddd )( qreal r, qreal g, qreal b, qreal a )
{
    LIBWRAP_EARLY_INIT( _ZN6QColor8fromRgbFEdddd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QColor8fromRgbFEdddd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QColor scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN6QColor8fromRgbFEdddd, ( r, g, b, a ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QColor8fromRgbFEdddd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QColor10fromRgba64Etttt
QColor
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QColor10fromRgba64Etttt )( ushort r, ushort g, ushort b, ushort a )
{
    LIBWRAP_EARLY_INIT( _ZN6QColor10fromRgba64Etttt );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QColor10fromRgba64Etttt );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QColor scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN6QColor10fromRgba64Etttt, ( r, g, b, a ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QColor10fromRgba64Etttt );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QColor10fromRgba64E7QRgba64
QColor
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QColor10fromRgba64E7QRgba64 )( QRgba64 rgba )
{
    LIBWRAP_EARLY_INIT( _ZN6QColor10fromRgba64E7QRgba64 );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QColor10fromRgba64E7QRgba64 );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QColor scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN6QColor10fromRgba64E7QRgba64, ( rgba ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QColor10fromRgba64E7QRgba64 );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QColor7fromHsvEiiii
QColor
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QColor7fromHsvEiiii )( int h, int s, int v, int a )
{
    LIBWRAP_EARLY_INIT( _ZN6QColor7fromHsvEiiii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QColor7fromHsvEiiii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QColor scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN6QColor7fromHsvEiiii, ( h, s, v, a ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QColor7fromHsvEiiii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QColor8fromHsvFEdddd
QColor
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QColor8fromHsvFEdddd )( qreal h, qreal s, qreal v, qreal a )
{
    LIBWRAP_EARLY_INIT( _ZN6QColor8fromHsvFEdddd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QColor8fromHsvFEdddd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QColor scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN6QColor8fromHsvFEdddd, ( h, s, v, a ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QColor8fromHsvFEdddd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QColor8fromCmykEiiiii
QColor
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QColor8fromCmykEiiiii )( int c, int m, int y, int k, int a )
{
    LIBWRAP_EARLY_INIT( _ZN6QColor8fromCmykEiiiii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QColor8fromCmykEiiiii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QColor scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN6QColor8fromCmykEiiiii, ( c, m, y, k, a ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QColor8fromCmykEiiiii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QColor9fromCmykFEddddd
QColor
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QColor9fromCmykFEddddd )( qreal c, qreal m, qreal y, qreal k, qreal a )
{
    LIBWRAP_EARLY_INIT( _ZN6QColor9fromCmykFEddddd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QColor9fromCmykFEddddd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QColor scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN6QColor9fromCmykFEddddd, ( c, m, y, k, a ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QColor9fromCmykFEddddd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QColor7fromHslEiiii
QColor
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QColor7fromHslEiiii )( int h, int s, int l, int a )
{
    LIBWRAP_EARLY_INIT( _ZN6QColor7fromHslEiiii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QColor7fromHslEiiii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QColor scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN6QColor7fromHslEiiii, ( h, s, l, a ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QColor7fromHslEiiii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QColor8fromHslFEdddd
QColor
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QColor8fromHslFEdddd )( qreal h, qreal s, qreal l, qreal a )
{
    LIBWRAP_EARLY_INIT( _ZN6QColor8fromHslFEdddd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QColor8fromHslFEdddd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QColor scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN6QColor8fromHslFEdddd, ( h, s, l, a ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QColor8fromHslFEdddd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QColor5lightEi
QColor
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QColor5lightEi )( void *scorep_libwrap_arg_this, int f )
{
    LIBWRAP_EARLY_INIT( _ZNK6QColor5lightEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QColor5lightEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QColor scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QColor5lightEi, ( scorep_libwrap_arg_this, f ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QColor5lightEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QColor4darkEi
QColor
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QColor4darkEi )( void *scorep_libwrap_arg_this, int f )
{
    LIBWRAP_EARLY_INIT( _ZNK6QColor4darkEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QColor4darkEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QColor scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QColor4darkEi, ( scorep_libwrap_arg_this, f ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QColor4darkEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QColoreqERKS_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QColoreqERKS_ )( void *scorep_libwrap_arg_this, const QColor & c )
{
    LIBWRAP_EARLY_INIT( _ZNK6QColoreqERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QColoreqERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QColoreqERKS_, ( scorep_libwrap_arg_this, c ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QColoreqERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QColorneERKS_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QColorneERKS_ )( void *scorep_libwrap_arg_this, const QColor & c )
{
    LIBWRAP_EARLY_INIT( _ZNK6QColorneERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QColorneERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QColorneERKS_, ( scorep_libwrap_arg_this, c ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QColorneERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QColor12isValidColorERK7QString
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QColor12isValidColorERK7QString )( const QString & name )
{
    LIBWRAP_EARLY_INIT( _ZN6QColor12isValidColorERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QColor12isValidColorERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN6QColor12isValidColorERK7QString, ( name ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QColor12isValidColorERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QRegionC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QRegionC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN7QRegionC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QRegionC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QRegionC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QRegionC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QRegionC1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QRegionC1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN7QRegionC1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QRegionC1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QRegionC1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QRegionC1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QRegionC2EiiiiNS_10RegionTypeE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QRegionC2EiiiiNS_10RegionTypeE )( void *scorep_libwrap_arg_this, int x, int y, int w, int h, QRegion::RegionType t )
{
    LIBWRAP_EARLY_INIT( _ZN7QRegionC2EiiiiNS_10RegionTypeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QRegionC2EiiiiNS_10RegionTypeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QRegionC2EiiiiNS_10RegionTypeE, ( scorep_libwrap_arg_this, x, y, w, h, t ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QRegionC2EiiiiNS_10RegionTypeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QRegionC1EiiiiNS_10RegionTypeE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QRegionC1EiiiiNS_10RegionTypeE )( void *scorep_libwrap_arg_this, int x, int y, int w, int h, QRegion::RegionType t )
{
    LIBWRAP_EARLY_INIT( _ZN7QRegionC1EiiiiNS_10RegionTypeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QRegionC1EiiiiNS_10RegionTypeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QRegionC1EiiiiNS_10RegionTypeE, ( scorep_libwrap_arg_this, x, y, w, h, t ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QRegionC1EiiiiNS_10RegionTypeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QRegionC2ERK5QRectNS_10RegionTypeE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QRegionC2ERK5QRectNS_10RegionTypeE )( void *scorep_libwrap_arg_this, const QRect & r, QRegion::RegionType t )
{
    LIBWRAP_EARLY_INIT( _ZN7QRegionC2ERK5QRectNS_10RegionTypeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QRegionC2ERK5QRectNS_10RegionTypeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QRegionC2ERK5QRectNS_10RegionTypeE, ( scorep_libwrap_arg_this, r, t ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QRegionC2ERK5QRectNS_10RegionTypeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QRegionC1ERK5QRectNS_10RegionTypeE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QRegionC1ERK5QRectNS_10RegionTypeE )( void *scorep_libwrap_arg_this, const QRect & r, QRegion::RegionType t )
{
    LIBWRAP_EARLY_INIT( _ZN7QRegionC1ERK5QRectNS_10RegionTypeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QRegionC1ERK5QRectNS_10RegionTypeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QRegionC1ERK5QRectNS_10RegionTypeE, ( scorep_libwrap_arg_this, r, t ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QRegionC1ERK5QRectNS_10RegionTypeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QRegionC2ERK8QPolygonN2Qt8FillRuleE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QRegionC2ERK8QPolygonN2Qt8FillRuleE )( void *scorep_libwrap_arg_this, const QPolygon & pa, Qt::FillRule fillRule )
{
    LIBWRAP_EARLY_INIT( _ZN7QRegionC2ERK8QPolygonN2Qt8FillRuleE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QRegionC2ERK8QPolygonN2Qt8FillRuleE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QRegionC2ERK8QPolygonN2Qt8FillRuleE, ( scorep_libwrap_arg_this, pa, fillRule ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QRegionC2ERK8QPolygonN2Qt8FillRuleE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QRegionC1ERK8QPolygonN2Qt8FillRuleE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QRegionC1ERK8QPolygonN2Qt8FillRuleE )( void *scorep_libwrap_arg_this, const QPolygon & pa, Qt::FillRule fillRule )
{
    LIBWRAP_EARLY_INIT( _ZN7QRegionC1ERK8QPolygonN2Qt8FillRuleE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QRegionC1ERK8QPolygonN2Qt8FillRuleE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QRegionC1ERK8QPolygonN2Qt8FillRuleE, ( scorep_libwrap_arg_this, pa, fillRule ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QRegionC1ERK8QPolygonN2Qt8FillRuleE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QRegionC2ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QRegionC2ERKS_ )( void *scorep_libwrap_arg_this, const QRegion & region )
{
    LIBWRAP_EARLY_INIT( _ZN7QRegionC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QRegionC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QRegionC2ERKS_, ( scorep_libwrap_arg_this, region ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QRegionC2ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QRegionC1ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QRegionC1ERKS_ )( void *scorep_libwrap_arg_this, const QRegion & region )
{
    LIBWRAP_EARLY_INIT( _ZN7QRegionC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QRegionC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QRegionC1ERKS_, ( scorep_libwrap_arg_this, region ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QRegionC1ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QRegionD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QRegionD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN7QRegionD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QRegionD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QRegionD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QRegionD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QRegionD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QRegionD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN7QRegionD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QRegionD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QRegionD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QRegionD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QRegionaSERKS_
QRegion &
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QRegionaSERKS_ )( void *scorep_libwrap_arg_this, const QRegion & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN7QRegionaSERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QRegionaSERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRegion & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN7QRegionaSERKS_, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QRegionaSERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QRegion6isNullEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QRegion6isNullEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QRegion6isNullEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QRegion6isNullEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QRegion6isNullEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QRegion6isNullEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QRegion8containsERK6QPoint
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QRegion8containsERK6QPoint )( void *scorep_libwrap_arg_this, const QPoint & p )
{
    LIBWRAP_EARLY_INIT( _ZNK7QRegion8containsERK6QPoint );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QRegion8containsERK6QPoint );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QRegion8containsERK6QPoint, ( scorep_libwrap_arg_this, p ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QRegion8containsERK6QPoint );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QRegion8containsERK5QRect
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QRegion8containsERK5QRect )( void *scorep_libwrap_arg_this, const QRect & r )
{
    LIBWRAP_EARLY_INIT( _ZNK7QRegion8containsERK5QRect );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QRegion8containsERK5QRect );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QRegion8containsERK5QRect, ( scorep_libwrap_arg_this, r ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QRegion8containsERK5QRect );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QRegion9translateEii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QRegion9translateEii )( void *scorep_libwrap_arg_this, int dx, int dy )
{
    LIBWRAP_EARLY_INIT( _ZN7QRegion9translateEii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QRegion9translateEii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QRegion9translateEii, ( scorep_libwrap_arg_this, dx, dy ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QRegion9translateEii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK7QRegion10translatedEii
QRegion
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QRegion10translatedEii )( void *scorep_libwrap_arg_this, int dx, int dy )
{
    LIBWRAP_EARLY_INIT( _ZNK7QRegion10translatedEii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QRegion10translatedEii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRegion scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QRegion10translatedEii, ( scorep_libwrap_arg_this, dx, dy ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QRegion10translatedEii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QRegion6unitedERKS_
QRegion
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QRegion6unitedERKS_ )( void *scorep_libwrap_arg_this, const QRegion & r )
{
    LIBWRAP_EARLY_INIT( _ZNK7QRegion6unitedERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QRegion6unitedERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRegion scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QRegion6unitedERKS_, ( scorep_libwrap_arg_this, r ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QRegion6unitedERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QRegion6unitedERK5QRect
QRegion
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QRegion6unitedERK5QRect )( void *scorep_libwrap_arg_this, const QRect & r )
{
    LIBWRAP_EARLY_INIT( _ZNK7QRegion6unitedERK5QRect );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QRegion6unitedERK5QRect );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRegion scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QRegion6unitedERK5QRect, ( scorep_libwrap_arg_this, r ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QRegion6unitedERK5QRect );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QRegion11intersectedERKS_
QRegion
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QRegion11intersectedERKS_ )( void *scorep_libwrap_arg_this, const QRegion & r )
{
    LIBWRAP_EARLY_INIT( _ZNK7QRegion11intersectedERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QRegion11intersectedERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRegion scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QRegion11intersectedERKS_, ( scorep_libwrap_arg_this, r ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QRegion11intersectedERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QRegion11intersectedERK5QRect
QRegion
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QRegion11intersectedERK5QRect )( void *scorep_libwrap_arg_this, const QRect & r )
{
    LIBWRAP_EARLY_INIT( _ZNK7QRegion11intersectedERK5QRect );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QRegion11intersectedERK5QRect );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRegion scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QRegion11intersectedERK5QRect, ( scorep_libwrap_arg_this, r ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QRegion11intersectedERK5QRect );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QRegion10subtractedERKS_
QRegion
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QRegion10subtractedERKS_ )( void *scorep_libwrap_arg_this, const QRegion & r )
{
    LIBWRAP_EARLY_INIT( _ZNK7QRegion10subtractedERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QRegion10subtractedERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRegion scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QRegion10subtractedERKS_, ( scorep_libwrap_arg_this, r ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QRegion10subtractedERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QRegion5xoredERKS_
QRegion
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QRegion5xoredERKS_ )( void *scorep_libwrap_arg_this, const QRegion & r )
{
    LIBWRAP_EARLY_INIT( _ZNK7QRegion5xoredERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QRegion5xoredERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRegion scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QRegion5xoredERKS_, ( scorep_libwrap_arg_this, r ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QRegion5xoredERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QRegion10intersectsERKS_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QRegion10intersectsERKS_ )( void *scorep_libwrap_arg_this, const QRegion & r )
{
    LIBWRAP_EARLY_INIT( _ZNK7QRegion10intersectsERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QRegion10intersectsERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QRegion10intersectsERKS_, ( scorep_libwrap_arg_this, r ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QRegion10intersectsERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QRegion10intersectsERK5QRect
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QRegion10intersectsERK5QRect )( void *scorep_libwrap_arg_this, const QRect & r )
{
    LIBWRAP_EARLY_INIT( _ZNK7QRegion10intersectsERK5QRect );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QRegion10intersectsERK5QRect );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QRegion10intersectsERK5QRect, ( scorep_libwrap_arg_this, r ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QRegion10intersectsERK5QRect );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QRegion12boundingRectEv
QRect
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QRegion12boundingRectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QRegion12boundingRectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QRegion12boundingRectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRect scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QRegion12boundingRectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QRegion12boundingRectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QRegion5rectsEv
QVector<QRect>
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QRegion5rectsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QRegion5rectsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QRegion5rectsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QVector<QRect> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QRegion5rectsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QRegion5rectsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QRegion8setRectsEPK5QRecti
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QRegion8setRectsEPK5QRecti )( void *scorep_libwrap_arg_this, const QRect * rect, int num )
{
    LIBWRAP_EARLY_INIT( _ZN7QRegion8setRectsEPK5QRecti );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QRegion8setRectsEPK5QRecti );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QRegion8setRectsEPK5QRecti, ( scorep_libwrap_arg_this, rect, num ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QRegion8setRectsEPK5QRecti );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK7QRegion9rectCountEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QRegion9rectCountEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QRegion9rectCountEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QRegion9rectCountEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QRegion9rectCountEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QRegion9rectCountEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QRegionorERKS_
QRegion
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QRegionorERKS_ )( void *scorep_libwrap_arg_this, const QRegion & r )
{
    LIBWRAP_EARLY_INIT( _ZNK7QRegionorERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QRegionorERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRegion scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QRegionorERKS_, ( scorep_libwrap_arg_this, r ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QRegionorERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QRegionplERKS_
QRegion
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QRegionplERKS_ )( void *scorep_libwrap_arg_this, const QRegion & r )
{
    LIBWRAP_EARLY_INIT( _ZNK7QRegionplERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QRegionplERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRegion scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QRegionplERKS_, ( scorep_libwrap_arg_this, r ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QRegionplERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QRegionplERK5QRect
QRegion
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QRegionplERK5QRect )( void *scorep_libwrap_arg_this, const QRect & r )
{
    LIBWRAP_EARLY_INIT( _ZNK7QRegionplERK5QRect );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QRegionplERK5QRect );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRegion scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QRegionplERK5QRect, ( scorep_libwrap_arg_this, r ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QRegionplERK5QRect );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QRegionanERKS_
QRegion
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QRegionanERKS_ )( void *scorep_libwrap_arg_this, const QRegion & r )
{
    LIBWRAP_EARLY_INIT( _ZNK7QRegionanERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QRegionanERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRegion scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QRegionanERKS_, ( scorep_libwrap_arg_this, r ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QRegionanERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QRegionanERK5QRect
QRegion
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QRegionanERK5QRect )( void *scorep_libwrap_arg_this, const QRect & r )
{
    LIBWRAP_EARLY_INIT( _ZNK7QRegionanERK5QRect );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QRegionanERK5QRect );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRegion scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QRegionanERK5QRect, ( scorep_libwrap_arg_this, r ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QRegionanERK5QRect );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QRegionmiERKS_
QRegion
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QRegionmiERKS_ )( void *scorep_libwrap_arg_this, const QRegion & r )
{
    LIBWRAP_EARLY_INIT( _ZNK7QRegionmiERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QRegionmiERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRegion scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QRegionmiERKS_, ( scorep_libwrap_arg_this, r ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QRegionmiERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QRegioneoERKS_
QRegion
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QRegioneoERKS_ )( void *scorep_libwrap_arg_this, const QRegion & r )
{
    LIBWRAP_EARLY_INIT( _ZNK7QRegioneoERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QRegioneoERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRegion scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QRegioneoERKS_, ( scorep_libwrap_arg_this, r ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QRegioneoERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QRegionoRERKS_
QRegion &
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QRegionoRERKS_ )( void *scorep_libwrap_arg_this, const QRegion & r )
{
    LIBWRAP_EARLY_INIT( _ZN7QRegionoRERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QRegionoRERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRegion & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN7QRegionoRERKS_, ( scorep_libwrap_arg_this, r ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QRegionoRERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QRegionpLERKS_
QRegion &
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QRegionpLERKS_ )( void *scorep_libwrap_arg_this, const QRegion & r )
{
    LIBWRAP_EARLY_INIT( _ZN7QRegionpLERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QRegionpLERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRegion & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN7QRegionpLERKS_, ( scorep_libwrap_arg_this, r ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QRegionpLERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QRegionpLERK5QRect
QRegion &
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QRegionpLERK5QRect )( void *scorep_libwrap_arg_this, const QRect & r )
{
    LIBWRAP_EARLY_INIT( _ZN7QRegionpLERK5QRect );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QRegionpLERK5QRect );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRegion & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN7QRegionpLERK5QRect, ( scorep_libwrap_arg_this, r ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QRegionpLERK5QRect );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QRegionaNERKS_
QRegion &
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QRegionaNERKS_ )( void *scorep_libwrap_arg_this, const QRegion & r )
{
    LIBWRAP_EARLY_INIT( _ZN7QRegionaNERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QRegionaNERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRegion & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN7QRegionaNERKS_, ( scorep_libwrap_arg_this, r ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QRegionaNERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QRegionaNERK5QRect
QRegion &
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QRegionaNERK5QRect )( void *scorep_libwrap_arg_this, const QRect & r )
{
    LIBWRAP_EARLY_INIT( _ZN7QRegionaNERK5QRect );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QRegionaNERK5QRect );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRegion & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN7QRegionaNERK5QRect, ( scorep_libwrap_arg_this, r ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QRegionaNERK5QRect );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QRegionmIERKS_
QRegion &
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QRegionmIERKS_ )( void *scorep_libwrap_arg_this, const QRegion & r )
{
    LIBWRAP_EARLY_INIT( _ZN7QRegionmIERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QRegionmIERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRegion & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN7QRegionmIERKS_, ( scorep_libwrap_arg_this, r ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QRegionmIERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QRegioneOERKS_
QRegion &
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QRegioneOERKS_ )( void *scorep_libwrap_arg_this, const QRegion & r )
{
    LIBWRAP_EARLY_INIT( _ZN7QRegioneOERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QRegioneOERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRegion & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN7QRegioneOERKS_, ( scorep_libwrap_arg_this, r ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QRegioneOERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QRegioneqERKS_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QRegioneqERKS_ )( void *scorep_libwrap_arg_this, const QRegion & r )
{
    LIBWRAP_EARLY_INIT( _ZNK7QRegioneqERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QRegioneqERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QRegioneqERKS_, ( scorep_libwrap_arg_this, r ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QRegioneqERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZlsR11QDataStreamRK7QRegion
QDataStream &
SCOREP_LIBWRAP_FUNC_NAME( _ZlsR11QDataStreamRK7QRegion )( QDataStream & scorep_libwrap_arg_1, const QRegion & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _ZlsR11QDataStreamRK7QRegion );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZlsR11QDataStreamRK7QRegion );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDataStream & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZlsR11QDataStreamRK7QRegion, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZlsR11QDataStreamRK7QRegion );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZrsR11QDataStreamR7QRegion
QDataStream &
SCOREP_LIBWRAP_FUNC_NAME( _ZrsR11QDataStreamR7QRegion )( QDataStream & scorep_libwrap_arg_1, QRegion & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _ZrsR11QDataStreamR7QRegion );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZrsR11QDataStreamR7QRegion );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDataStream & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZrsR11QDataStreamR7QRegion, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZrsR11QDataStreamR7QRegion );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _Z24qt_region_strictContainsRK7QRegionRK5QRect
bool
SCOREP_LIBWRAP_FUNC_NAME( _Z24qt_region_strictContainsRK7QRegionRK5QRect )( const QRegion & region, const QRect & rect )
{
    LIBWRAP_EARLY_INIT( _Z24qt_region_strictContainsRK7QRegionRK5QRect );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _Z24qt_region_strictContainsRK7QRegionRK5QRect );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _Z24qt_region_strictContainsRK7QRegionRK5QRect, ( region, rect ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _Z24qt_region_strictContainsRK7QRegionRK5QRect );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _Zls6QDebugRK7QRegion
QDebug
SCOREP_LIBWRAP_FUNC_NAME( _Zls6QDebugRK7QRegion )( QDebug scorep_libwrap_arg_1, const QRegion & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _Zls6QDebugRK7QRegion );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _Zls6QDebugRK7QRegion );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDebug scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _Zls6QDebugRK7QRegion, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _Zls6QDebugRK7QRegion );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZlsR11QDataStreamRK12QKeySequence
QDataStream &
SCOREP_LIBWRAP_FUNC_NAME( _ZlsR11QDataStreamRK12QKeySequence )( QDataStream & in, const QKeySequence & ks )
{
    LIBWRAP_EARLY_INIT( _ZlsR11QDataStreamRK12QKeySequence );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZlsR11QDataStreamRK12QKeySequence );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDataStream & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZlsR11QDataStreamRK12QKeySequence, ( in, ks ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZlsR11QDataStreamRK12QKeySequence );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZrsR11QDataStreamR12QKeySequence
QDataStream &
SCOREP_LIBWRAP_FUNC_NAME( _ZrsR11QDataStreamR12QKeySequence )( QDataStream & out, QKeySequence & ks )
{
    LIBWRAP_EARLY_INIT( _ZrsR11QDataStreamR12QKeySequence );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZrsR11QDataStreamR12QKeySequence );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDataStream & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZrsR11QDataStreamR12QKeySequence, ( out, ks ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZrsR11QDataStreamR12QKeySequence );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QKeySequenceC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QKeySequenceC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QKeySequenceC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QKeySequenceC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QKeySequenceC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QKeySequenceC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QKeySequenceC1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QKeySequenceC1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QKeySequenceC1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QKeySequenceC1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QKeySequenceC1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QKeySequenceC1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QKeySequenceC2Eiiii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QKeySequenceC2Eiiii )( void *scorep_libwrap_arg_this, int k1, int k2, int k3, int k4 )
{
    LIBWRAP_EARLY_INIT( _ZN12QKeySequenceC2Eiiii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QKeySequenceC2Eiiii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QKeySequenceC2Eiiii, ( scorep_libwrap_arg_this, k1, k2, k3, k4 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QKeySequenceC2Eiiii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QKeySequenceC1Eiiii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QKeySequenceC1Eiiii )( void *scorep_libwrap_arg_this, int k1, int k2, int k3, int k4 )
{
    LIBWRAP_EARLY_INIT( _ZN12QKeySequenceC1Eiiii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QKeySequenceC1Eiiii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QKeySequenceC1Eiiii, ( scorep_libwrap_arg_this, k1, k2, k3, k4 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QKeySequenceC1Eiiii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QKeySequenceC2ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QKeySequenceC2ERKS_ )( void *scorep_libwrap_arg_this, const QKeySequence & ks )
{
    LIBWRAP_EARLY_INIT( _ZN12QKeySequenceC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QKeySequenceC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QKeySequenceC2ERKS_, ( scorep_libwrap_arg_this, ks ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QKeySequenceC2ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QKeySequenceC1ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QKeySequenceC1ERKS_ )( void *scorep_libwrap_arg_this, const QKeySequence & ks )
{
    LIBWRAP_EARLY_INIT( _ZN12QKeySequenceC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QKeySequenceC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QKeySequenceC1ERKS_, ( scorep_libwrap_arg_this, ks ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QKeySequenceC1ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QKeySequenceC2ENS_11StandardKeyE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QKeySequenceC2ENS_11StandardKeyE )( void *scorep_libwrap_arg_this, QKeySequence::StandardKey key )
{
    LIBWRAP_EARLY_INIT( _ZN12QKeySequenceC2ENS_11StandardKeyE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QKeySequenceC2ENS_11StandardKeyE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QKeySequenceC2ENS_11StandardKeyE, ( scorep_libwrap_arg_this, key ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QKeySequenceC2ENS_11StandardKeyE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QKeySequenceC1ENS_11StandardKeyE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QKeySequenceC1ENS_11StandardKeyE )( void *scorep_libwrap_arg_this, QKeySequence::StandardKey key )
{
    LIBWRAP_EARLY_INIT( _ZN12QKeySequenceC1ENS_11StandardKeyE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QKeySequenceC1ENS_11StandardKeyE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QKeySequenceC1ENS_11StandardKeyE, ( scorep_libwrap_arg_this, key ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QKeySequenceC1ENS_11StandardKeyE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QKeySequenceD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QKeySequenceD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QKeySequenceD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QKeySequenceD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QKeySequenceD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QKeySequenceD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QKeySequenceD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QKeySequenceD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QKeySequenceD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QKeySequenceD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QKeySequenceD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QKeySequenceD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK12QKeySequence5countEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QKeySequence5countEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QKeySequence5countEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QKeySequence5countEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QKeySequence5countEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QKeySequence5countEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QKeySequence7isEmptyEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QKeySequence7isEmptyEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QKeySequence7isEmptyEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QKeySequence7isEmptyEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QKeySequence7isEmptyEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QKeySequence7isEmptyEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QKeySequence7matchesERKS_
QKeySequence::SequenceMatch
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QKeySequence7matchesERKS_ )( void *scorep_libwrap_arg_this, const QKeySequence & seq )
{
    LIBWRAP_EARLY_INIT( _ZNK12QKeySequence7matchesERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QKeySequence7matchesERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QKeySequence::SequenceMatch scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QKeySequence7matchesERKS_, ( scorep_libwrap_arg_this, seq ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QKeySequence7matchesERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QKeySequence8mnemonicERK7QString
QKeySequence
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QKeySequence8mnemonicERK7QString )( const QString & text )
{
    LIBWRAP_EARLY_INIT( _ZN12QKeySequence8mnemonicERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QKeySequence8mnemonicERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QKeySequence scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN12QKeySequence8mnemonicERK7QString, ( text ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QKeySequence8mnemonicERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QKeySequence11keyBindingsENS_11StandardKeyE
QList<QKeySequence>
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QKeySequence11keyBindingsENS_11StandardKeyE )( QKeySequence::StandardKey key )
{
    LIBWRAP_EARLY_INIT( _ZN12QKeySequence11keyBindingsENS_11StandardKeyE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QKeySequence11keyBindingsENS_11StandardKeyE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QList<QKeySequence> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN12QKeySequence11keyBindingsENS_11StandardKeyE, ( key ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QKeySequence11keyBindingsENS_11StandardKeyE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QKeySequenceixEj
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QKeySequenceixEj )( void *scorep_libwrap_arg_this, uint i )
{
    LIBWRAP_EARLY_INIT( _ZNK12QKeySequenceixEj );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QKeySequenceixEj );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QKeySequenceixEj, ( scorep_libwrap_arg_this, i ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QKeySequenceixEj );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QKeySequenceaSERKS_
QKeySequence &
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QKeySequenceaSERKS_ )( void *scorep_libwrap_arg_this, const QKeySequence & other )
{
    LIBWRAP_EARLY_INIT( _ZN12QKeySequenceaSERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QKeySequenceaSERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QKeySequence & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN12QKeySequenceaSERKS_, ( scorep_libwrap_arg_this, other ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QKeySequenceaSERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QKeySequenceltERKS_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QKeySequenceltERKS_ )( void *scorep_libwrap_arg_this, const QKeySequence & ks )
{
    LIBWRAP_EARLY_INIT( _ZNK12QKeySequenceltERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QKeySequenceltERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QKeySequenceltERKS_, ( scorep_libwrap_arg_this, ks ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QKeySequenceltERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QKeySequence10isDetachedEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QKeySequence10isDetachedEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QKeySequence10isDetachedEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QKeySequence10isDetachedEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QKeySequence10isDetachedEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QKeySequence10isDetachedEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _Z5qHashRK12QKeySequencej
uint
SCOREP_LIBWRAP_FUNC_NAME( _Z5qHashRK12QKeySequencej )( const QKeySequence & key, uint seed )
{
    LIBWRAP_EARLY_INIT( _Z5qHashRK12QKeySequencej );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _Z5qHashRK12QKeySequencej );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    uint scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _Z5qHashRK12QKeySequencej, ( key, seed ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _Z5qHashRK12QKeySequencej );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN9QVector2DC2ERK9QVector3D
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QVector2DC2ERK9QVector3D )( void *scorep_libwrap_arg_this, const QVector3D & vector )
{
    LIBWRAP_EARLY_INIT( _ZN9QVector2DC2ERK9QVector3D );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QVector2DC2ERK9QVector3D );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QVector2DC2ERK9QVector3D, ( scorep_libwrap_arg_this, vector ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QVector2DC2ERK9QVector3D );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QVector2DC1ERK9QVector3D
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QVector2DC1ERK9QVector3D )( void *scorep_libwrap_arg_this, const QVector3D & vector )
{
    LIBWRAP_EARLY_INIT( _ZN9QVector2DC1ERK9QVector3D );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QVector2DC1ERK9QVector3D );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QVector2DC1ERK9QVector3D, ( scorep_libwrap_arg_this, vector ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QVector2DC1ERK9QVector3D );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QVector2DC2ERK9QVector4D
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QVector2DC2ERK9QVector4D )( void *scorep_libwrap_arg_this, const QVector4D & vector )
{
    LIBWRAP_EARLY_INIT( _ZN9QVector2DC2ERK9QVector4D );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QVector2DC2ERK9QVector4D );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QVector2DC2ERK9QVector4D, ( scorep_libwrap_arg_this, vector ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QVector2DC2ERK9QVector4D );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QVector2DC1ERK9QVector4D
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QVector2DC1ERK9QVector4D )( void *scorep_libwrap_arg_this, const QVector4D & vector )
{
    LIBWRAP_EARLY_INIT( _ZN9QVector2DC1ERK9QVector4D );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QVector2DC1ERK9QVector4D );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QVector2DC1ERK9QVector4D, ( scorep_libwrap_arg_this, vector ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QVector2DC1ERK9QVector4D );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK9QVector2D6lengthEv
float
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QVector2D6lengthEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QVector2D6lengthEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QVector2D6lengthEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    float scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QVector2D6lengthEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QVector2D6lengthEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QVector2D13lengthSquaredEv
float
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QVector2D13lengthSquaredEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QVector2D13lengthSquaredEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QVector2D13lengthSquaredEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    float scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QVector2D13lengthSquaredEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QVector2D13lengthSquaredEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QVector2D10normalizedEv
QVector2D
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QVector2D10normalizedEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QVector2D10normalizedEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QVector2D10normalizedEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QVector2D scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QVector2D10normalizedEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QVector2D10normalizedEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN9QVector2D9normalizeEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QVector2D9normalizeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN9QVector2D9normalizeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QVector2D9normalizeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QVector2D9normalizeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QVector2D9normalizeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK9QVector2D15distanceToPointERKS_
float
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QVector2D15distanceToPointERKS_ )( void *scorep_libwrap_arg_this, const QVector2D & point )
{
    LIBWRAP_EARLY_INIT( _ZNK9QVector2D15distanceToPointERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QVector2D15distanceToPointERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    float scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QVector2D15distanceToPointERKS_, ( scorep_libwrap_arg_this, point ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QVector2D15distanceToPointERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QVector2D14distanceToLineERKS_S1_
float
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QVector2D14distanceToLineERKS_S1_ )( void *scorep_libwrap_arg_this, const QVector2D & point, const QVector2D & direction )
{
    LIBWRAP_EARLY_INIT( _ZNK9QVector2D14distanceToLineERKS_S1_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QVector2D14distanceToLineERKS_S1_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    float scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QVector2D14distanceToLineERKS_S1_, ( scorep_libwrap_arg_this, point, direction ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QVector2D14distanceToLineERKS_S1_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN9QVector2D10dotProductERKS_S1_
float
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QVector2D10dotProductERKS_S1_ )( const QVector2D & v1, const QVector2D & v2 )
{
    LIBWRAP_EARLY_INIT( _ZN9QVector2D10dotProductERKS_S1_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QVector2D10dotProductERKS_S1_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    float scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN9QVector2D10dotProductERKS_S1_, ( v1, v2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QVector2D10dotProductERKS_S1_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QVector2D10toVector3DEv
QVector3D
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QVector2D10toVector3DEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QVector2D10toVector3DEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QVector2D10toVector3DEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QVector3D scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QVector2D10toVector3DEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QVector2D10toVector3DEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QVector2D10toVector4DEv
QVector4D
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QVector2D10toVector4DEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QVector2D10toVector4DEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QVector2D10toVector4DEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QVector4D scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QVector2D10toVector4DEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QVector2D10toVector4DEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _Zls6QDebugRK9QVector2D
QDebug
SCOREP_LIBWRAP_FUNC_NAME( _Zls6QDebugRK9QVector2D )( QDebug dbg, const QVector2D & vector )
{
    LIBWRAP_EARLY_INIT( _Zls6QDebugRK9QVector2D );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _Zls6QDebugRK9QVector2D );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDebug scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _Zls6QDebugRK9QVector2D, ( dbg, vector ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _Zls6QDebugRK9QVector2D );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZlsR11QDataStreamRK9QVector2D
QDataStream &
SCOREP_LIBWRAP_FUNC_NAME( _ZlsR11QDataStreamRK9QVector2D )( QDataStream & scorep_libwrap_arg_1, const QVector2D & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _ZlsR11QDataStreamRK9QVector2D );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZlsR11QDataStreamRK9QVector2D );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDataStream & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZlsR11QDataStreamRK9QVector2D, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZlsR11QDataStreamRK9QVector2D );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZrsR11QDataStreamR9QVector2D
QDataStream &
SCOREP_LIBWRAP_FUNC_NAME( _ZrsR11QDataStreamR9QVector2D )( QDataStream & scorep_libwrap_arg_1, QVector2D & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _ZrsR11QDataStreamR9QVector2D );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZrsR11QDataStreamR9QVector2D );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDataStream & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZrsR11QDataStreamR9QVector2D, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZrsR11QDataStreamR9QVector2D );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QTouchDeviceC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QTouchDeviceC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QTouchDeviceC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QTouchDeviceC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QTouchDeviceC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QTouchDeviceC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QTouchDeviceC1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QTouchDeviceC1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QTouchDeviceC1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QTouchDeviceC1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QTouchDeviceC1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QTouchDeviceC1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QTouchDeviceD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QTouchDeviceD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QTouchDeviceD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QTouchDeviceD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QTouchDeviceD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QTouchDeviceD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QTouchDeviceD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QTouchDeviceD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QTouchDeviceD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QTouchDeviceD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QTouchDeviceD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QTouchDeviceD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QTouchDevice7devicesEv
QList<const QTouchDevice *>
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QTouchDevice7devicesEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN12QTouchDevice7devicesEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QTouchDevice7devicesEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QList<const QTouchDevice *> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN12QTouchDevice7devicesEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QTouchDevice7devicesEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QTouchDevice4nameEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QTouchDevice4nameEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QTouchDevice4nameEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QTouchDevice4nameEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QTouchDevice4nameEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QTouchDevice4nameEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QTouchDevice4typeEv
QTouchDevice::DeviceType
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QTouchDevice4typeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QTouchDevice4typeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QTouchDevice4typeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTouchDevice::DeviceType scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QTouchDevice4typeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QTouchDevice4typeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QTouchDevice12capabilitiesEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QTouchDevice12capabilitiesEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QTouchDevice12capabilitiesEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QTouchDevice12capabilitiesEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QTouchDevice12capabilitiesEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QTouchDevice12capabilitiesEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QTouchDevice18maximumTouchPointsEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QTouchDevice18maximumTouchPointsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QTouchDevice18maximumTouchPointsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QTouchDevice18maximumTouchPointsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QTouchDevice18maximumTouchPointsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QTouchDevice18maximumTouchPointsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QTouchDevice7setNameERK7QString
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QTouchDevice7setNameERK7QString )( void *scorep_libwrap_arg_this, const QString & name )
{
    LIBWRAP_EARLY_INIT( _ZN12QTouchDevice7setNameERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QTouchDevice7setNameERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QTouchDevice7setNameERK7QString, ( scorep_libwrap_arg_this, name ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QTouchDevice7setNameERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QTouchDevice7setTypeENS_10DeviceTypeE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QTouchDevice7setTypeENS_10DeviceTypeE )( void *scorep_libwrap_arg_this, QTouchDevice::DeviceType devType )
{
    LIBWRAP_EARLY_INIT( _ZN12QTouchDevice7setTypeENS_10DeviceTypeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QTouchDevice7setTypeENS_10DeviceTypeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QTouchDevice7setTypeENS_10DeviceTypeE, ( scorep_libwrap_arg_this, devType ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QTouchDevice7setTypeENS_10DeviceTypeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QTouchDevice21setMaximumTouchPointsEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QTouchDevice21setMaximumTouchPointsEi )( void *scorep_libwrap_arg_this, int max )
{
    LIBWRAP_EARLY_INIT( _ZN12QTouchDevice21setMaximumTouchPointsEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QTouchDevice21setMaximumTouchPointsEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QTouchDevice21setMaximumTouchPointsEi, ( scorep_libwrap_arg_this, max ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QTouchDevice21setMaximumTouchPointsEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _Zls6QDebugPK12QTouchDevice
QDebug
SCOREP_LIBWRAP_FUNC_NAME( _Zls6QDebugPK12QTouchDevice )( QDebug scorep_libwrap_arg_1, const QTouchDevice * scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _Zls6QDebugPK12QTouchDevice );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _Zls6QDebugPK12QTouchDevice );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDebug scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _Zls6QDebugPK12QTouchDevice, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _Zls6QDebugPK12QTouchDevice );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QInputEventC2EN6QEvent4TypeE6QFlagsIN2Qt16KeyboardModifierEE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QInputEventC2EN6QEvent4TypeE6QFlagsIN2Qt16KeyboardModifierEE )( void *scorep_libwrap_arg_this, QEvent::Type type, Qt::KeyboardModifiers modifiers )
{
    LIBWRAP_EARLY_INIT( _ZN11QInputEventC2EN6QEvent4TypeE6QFlagsIN2Qt16KeyboardModifierEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QInputEventC2EN6QEvent4TypeE6QFlagsIN2Qt16KeyboardModifierEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QInputEventC2EN6QEvent4TypeE6QFlagsIN2Qt16KeyboardModifierEE, ( scorep_libwrap_arg_this, type, modifiers ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QInputEventC2EN6QEvent4TypeE6QFlagsIN2Qt16KeyboardModifierEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QInputEventC1EN6QEvent4TypeE6QFlagsIN2Qt16KeyboardModifierEE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QInputEventC1EN6QEvent4TypeE6QFlagsIN2Qt16KeyboardModifierEE )( void *scorep_libwrap_arg_this, QEvent::Type type, Qt::KeyboardModifiers modifiers )
{
    LIBWRAP_EARLY_INIT( _ZN11QInputEventC1EN6QEvent4TypeE6QFlagsIN2Qt16KeyboardModifierEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QInputEventC1EN6QEvent4TypeE6QFlagsIN2Qt16KeyboardModifierEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QInputEventC1EN6QEvent4TypeE6QFlagsIN2Qt16KeyboardModifierEE, ( scorep_libwrap_arg_this, type, modifiers ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QInputEventC1EN6QEvent4TypeE6QFlagsIN2Qt16KeyboardModifierEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QInputEventD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QInputEventD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QInputEventD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QInputEventD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QInputEventD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QInputEventD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QInputEventD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QInputEventD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QInputEventD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QInputEventD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QInputEventD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QInputEventD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QInputEventD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QInputEventD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QInputEventD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QInputEventD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QInputEventD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QInputEventD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QEnterEventC2ERK7QPointFS2_S2_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QEnterEventC2ERK7QPointFS2_S2_ )( void *scorep_libwrap_arg_this, const QPointF & localPos, const QPointF & windowPos, const QPointF & screenPos )
{
    LIBWRAP_EARLY_INIT( _ZN11QEnterEventC2ERK7QPointFS2_S2_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QEnterEventC2ERK7QPointFS2_S2_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QEnterEventC2ERK7QPointFS2_S2_, ( scorep_libwrap_arg_this, localPos, windowPos, screenPos ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QEnterEventC2ERK7QPointFS2_S2_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QEnterEventC1ERK7QPointFS2_S2_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QEnterEventC1ERK7QPointFS2_S2_ )( void *scorep_libwrap_arg_this, const QPointF & localPos, const QPointF & windowPos, const QPointF & screenPos )
{
    LIBWRAP_EARLY_INIT( _ZN11QEnterEventC1ERK7QPointFS2_S2_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QEnterEventC1ERK7QPointFS2_S2_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QEnterEventC1ERK7QPointFS2_S2_, ( scorep_libwrap_arg_this, localPos, windowPos, screenPos ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QEnterEventC1ERK7QPointFS2_S2_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QEnterEventD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QEnterEventD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QEnterEventD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QEnterEventD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QEnterEventD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QEnterEventD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QEnterEventD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QEnterEventD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QEnterEventD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QEnterEventD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QEnterEventD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QEnterEventD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QEnterEventD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QEnterEventD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QEnterEventD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QEnterEventD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QEnterEventD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QEnterEventD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QMouseEventC2EN6QEvent4TypeERK7QPointFN2Qt11MouseButtonE6QFlagsIS6_ES7_INS5_16KeyboardModifierEE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QMouseEventC2EN6QEvent4TypeERK7QPointFN2Qt11MouseButtonE6QFlagsIS6_ES7_INS5_16KeyboardModifierEE )( void *scorep_libwrap_arg_this, QEvent::Type type, const QPointF & localPos, Qt::MouseButton button, Qt::MouseButtons buttons, Qt::KeyboardModifiers modifiers )
{
    LIBWRAP_EARLY_INIT( _ZN11QMouseEventC2EN6QEvent4TypeERK7QPointFN2Qt11MouseButtonE6QFlagsIS6_ES7_INS5_16KeyboardModifierEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QMouseEventC2EN6QEvent4TypeERK7QPointFN2Qt11MouseButtonE6QFlagsIS6_ES7_INS5_16KeyboardModifierEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QMouseEventC2EN6QEvent4TypeERK7QPointFN2Qt11MouseButtonE6QFlagsIS6_ES7_INS5_16KeyboardModifierEE, ( scorep_libwrap_arg_this, type, localPos, button, buttons, modifiers ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QMouseEventC2EN6QEvent4TypeERK7QPointFN2Qt11MouseButtonE6QFlagsIS6_ES7_INS5_16KeyboardModifierEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QMouseEventC1EN6QEvent4TypeERK7QPointFN2Qt11MouseButtonE6QFlagsIS6_ES7_INS5_16KeyboardModifierEE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QMouseEventC1EN6QEvent4TypeERK7QPointFN2Qt11MouseButtonE6QFlagsIS6_ES7_INS5_16KeyboardModifierEE )( void *scorep_libwrap_arg_this, QEvent::Type type, const QPointF & localPos, Qt::MouseButton button, Qt::MouseButtons buttons, Qt::KeyboardModifiers modifiers )
{
    LIBWRAP_EARLY_INIT( _ZN11QMouseEventC1EN6QEvent4TypeERK7QPointFN2Qt11MouseButtonE6QFlagsIS6_ES7_INS5_16KeyboardModifierEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QMouseEventC1EN6QEvent4TypeERK7QPointFN2Qt11MouseButtonE6QFlagsIS6_ES7_INS5_16KeyboardModifierEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QMouseEventC1EN6QEvent4TypeERK7QPointFN2Qt11MouseButtonE6QFlagsIS6_ES7_INS5_16KeyboardModifierEE, ( scorep_libwrap_arg_this, type, localPos, button, buttons, modifiers ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QMouseEventC1EN6QEvent4TypeERK7QPointFN2Qt11MouseButtonE6QFlagsIS6_ES7_INS5_16KeyboardModifierEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QMouseEventC2EN6QEvent4TypeERK7QPointFS4_N2Qt11MouseButtonE6QFlagsIS6_ES7_INS5_16KeyboardModifierEE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QMouseEventC2EN6QEvent4TypeERK7QPointFS4_N2Qt11MouseButtonE6QFlagsIS6_ES7_INS5_16KeyboardModifierEE )( void *scorep_libwrap_arg_this, QEvent::Type type, const QPointF & localPos, const QPointF & screenPos, Qt::MouseButton button, Qt::MouseButtons buttons, Qt::KeyboardModifiers modifiers )
{
    LIBWRAP_EARLY_INIT( _ZN11QMouseEventC2EN6QEvent4TypeERK7QPointFS4_N2Qt11MouseButtonE6QFlagsIS6_ES7_INS5_16KeyboardModifierEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QMouseEventC2EN6QEvent4TypeERK7QPointFS4_N2Qt11MouseButtonE6QFlagsIS6_ES7_INS5_16KeyboardModifierEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QMouseEventC2EN6QEvent4TypeERK7QPointFS4_N2Qt11MouseButtonE6QFlagsIS6_ES7_INS5_16KeyboardModifierEE, ( scorep_libwrap_arg_this, type, localPos, screenPos, button, buttons, modifiers ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QMouseEventC2EN6QEvent4TypeERK7QPointFS4_N2Qt11MouseButtonE6QFlagsIS6_ES7_INS5_16KeyboardModifierEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QMouseEventC1EN6QEvent4TypeERK7QPointFS4_N2Qt11MouseButtonE6QFlagsIS6_ES7_INS5_16KeyboardModifierEE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QMouseEventC1EN6QEvent4TypeERK7QPointFS4_N2Qt11MouseButtonE6QFlagsIS6_ES7_INS5_16KeyboardModifierEE )( void *scorep_libwrap_arg_this, QEvent::Type type, const QPointF & localPos, const QPointF & screenPos, Qt::MouseButton button, Qt::MouseButtons buttons, Qt::KeyboardModifiers modifiers )
{
    LIBWRAP_EARLY_INIT( _ZN11QMouseEventC1EN6QEvent4TypeERK7QPointFS4_N2Qt11MouseButtonE6QFlagsIS6_ES7_INS5_16KeyboardModifierEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QMouseEventC1EN6QEvent4TypeERK7QPointFS4_N2Qt11MouseButtonE6QFlagsIS6_ES7_INS5_16KeyboardModifierEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QMouseEventC1EN6QEvent4TypeERK7QPointFS4_N2Qt11MouseButtonE6QFlagsIS6_ES7_INS5_16KeyboardModifierEE, ( scorep_libwrap_arg_this, type, localPos, screenPos, button, buttons, modifiers ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QMouseEventC1EN6QEvent4TypeERK7QPointFS4_N2Qt11MouseButtonE6QFlagsIS6_ES7_INS5_16KeyboardModifierEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QMouseEventC2EN6QEvent4TypeERK7QPointFS4_S4_N2Qt11MouseButtonE6QFlagsIS6_ES7_INS5_16KeyboardModifierEE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QMouseEventC2EN6QEvent4TypeERK7QPointFS4_S4_N2Qt11MouseButtonE6QFlagsIS6_ES7_INS5_16KeyboardModifierEE )( void *scorep_libwrap_arg_this, QEvent::Type type, const QPointF & localPos, const QPointF & windowPos, const QPointF & screenPos, Qt::MouseButton button, Qt::MouseButtons buttons, Qt::KeyboardModifiers modifiers )
{
    LIBWRAP_EARLY_INIT( _ZN11QMouseEventC2EN6QEvent4TypeERK7QPointFS4_S4_N2Qt11MouseButtonE6QFlagsIS6_ES7_INS5_16KeyboardModifierEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QMouseEventC2EN6QEvent4TypeERK7QPointFS4_S4_N2Qt11MouseButtonE6QFlagsIS6_ES7_INS5_16KeyboardModifierEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QMouseEventC2EN6QEvent4TypeERK7QPointFS4_S4_N2Qt11MouseButtonE6QFlagsIS6_ES7_INS5_16KeyboardModifierEE, ( scorep_libwrap_arg_this, type, localPos, windowPos, screenPos, button, buttons, modifiers ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QMouseEventC2EN6QEvent4TypeERK7QPointFS4_S4_N2Qt11MouseButtonE6QFlagsIS6_ES7_INS5_16KeyboardModifierEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QMouseEventC1EN6QEvent4TypeERK7QPointFS4_S4_N2Qt11MouseButtonE6QFlagsIS6_ES7_INS5_16KeyboardModifierEE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QMouseEventC1EN6QEvent4TypeERK7QPointFS4_S4_N2Qt11MouseButtonE6QFlagsIS6_ES7_INS5_16KeyboardModifierEE )( void *scorep_libwrap_arg_this, QEvent::Type type, const QPointF & localPos, const QPointF & windowPos, const QPointF & screenPos, Qt::MouseButton button, Qt::MouseButtons buttons, Qt::KeyboardModifiers modifiers )
{
    LIBWRAP_EARLY_INIT( _ZN11QMouseEventC1EN6QEvent4TypeERK7QPointFS4_S4_N2Qt11MouseButtonE6QFlagsIS6_ES7_INS5_16KeyboardModifierEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QMouseEventC1EN6QEvent4TypeERK7QPointFS4_S4_N2Qt11MouseButtonE6QFlagsIS6_ES7_INS5_16KeyboardModifierEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QMouseEventC1EN6QEvent4TypeERK7QPointFS4_S4_N2Qt11MouseButtonE6QFlagsIS6_ES7_INS5_16KeyboardModifierEE, ( scorep_libwrap_arg_this, type, localPos, windowPos, screenPos, button, buttons, modifiers ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QMouseEventC1EN6QEvent4TypeERK7QPointFS4_S4_N2Qt11MouseButtonE6QFlagsIS6_ES7_INS5_16KeyboardModifierEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QMouseEventC2EN6QEvent4TypeERK7QPointFS4_S4_N2Qt11MouseButtonE6QFlagsIS6_ES7_INS5_16KeyboardModifierEENS5_16MouseEventSourceE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QMouseEventC2EN6QEvent4TypeERK7QPointFS4_S4_N2Qt11MouseButtonE6QFlagsIS6_ES7_INS5_16KeyboardModifierEENS5_16MouseEventSourceE )( void *scorep_libwrap_arg_this, QEvent::Type type, const QPointF & localPos, const QPointF & windowPos, const QPointF & screenPos, Qt::MouseButton button, Qt::MouseButtons buttons, Qt::KeyboardModifiers modifiers, Qt::MouseEventSource source )
{
    LIBWRAP_EARLY_INIT( _ZN11QMouseEventC2EN6QEvent4TypeERK7QPointFS4_S4_N2Qt11MouseButtonE6QFlagsIS6_ES7_INS5_16KeyboardModifierEENS5_16MouseEventSourceE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QMouseEventC2EN6QEvent4TypeERK7QPointFS4_S4_N2Qt11MouseButtonE6QFlagsIS6_ES7_INS5_16KeyboardModifierEENS5_16MouseEventSourceE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QMouseEventC2EN6QEvent4TypeERK7QPointFS4_S4_N2Qt11MouseButtonE6QFlagsIS6_ES7_INS5_16KeyboardModifierEENS5_16MouseEventSourceE, ( scorep_libwrap_arg_this, type, localPos, windowPos, screenPos, button, buttons, modifiers, source ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QMouseEventC2EN6QEvent4TypeERK7QPointFS4_S4_N2Qt11MouseButtonE6QFlagsIS6_ES7_INS5_16KeyboardModifierEENS5_16MouseEventSourceE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QMouseEventC1EN6QEvent4TypeERK7QPointFS4_S4_N2Qt11MouseButtonE6QFlagsIS6_ES7_INS5_16KeyboardModifierEENS5_16MouseEventSourceE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QMouseEventC1EN6QEvent4TypeERK7QPointFS4_S4_N2Qt11MouseButtonE6QFlagsIS6_ES7_INS5_16KeyboardModifierEENS5_16MouseEventSourceE )( void *scorep_libwrap_arg_this, QEvent::Type type, const QPointF & localPos, const QPointF & windowPos, const QPointF & screenPos, Qt::MouseButton button, Qt::MouseButtons buttons, Qt::KeyboardModifiers modifiers, Qt::MouseEventSource source )
{
    LIBWRAP_EARLY_INIT( _ZN11QMouseEventC1EN6QEvent4TypeERK7QPointFS4_S4_N2Qt11MouseButtonE6QFlagsIS6_ES7_INS5_16KeyboardModifierEENS5_16MouseEventSourceE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QMouseEventC1EN6QEvent4TypeERK7QPointFS4_S4_N2Qt11MouseButtonE6QFlagsIS6_ES7_INS5_16KeyboardModifierEENS5_16MouseEventSourceE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QMouseEventC1EN6QEvent4TypeERK7QPointFS4_S4_N2Qt11MouseButtonE6QFlagsIS6_ES7_INS5_16KeyboardModifierEENS5_16MouseEventSourceE, ( scorep_libwrap_arg_this, type, localPos, windowPos, screenPos, button, buttons, modifiers, source ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QMouseEventC1EN6QEvent4TypeERK7QPointFS4_S4_N2Qt11MouseButtonE6QFlagsIS6_ES7_INS5_16KeyboardModifierEENS5_16MouseEventSourceE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QMouseEventD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QMouseEventD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QMouseEventD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QMouseEventD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QMouseEventD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QMouseEventD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QMouseEventD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QMouseEventD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QMouseEventD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QMouseEventD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QMouseEventD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QMouseEventD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QMouseEventD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QMouseEventD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QMouseEventD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QMouseEventD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QMouseEventD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QMouseEventD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK11QMouseEvent6sourceEv
Qt::MouseEventSource
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QMouseEvent6sourceEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QMouseEvent6sourceEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QMouseEvent6sourceEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    Qt::MouseEventSource scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QMouseEvent6sourceEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QMouseEvent6sourceEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QMouseEvent5flagsEv
Qt::MouseEventFlags
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QMouseEvent5flagsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QMouseEvent5flagsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QMouseEvent5flagsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    Qt::MouseEventFlags scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QMouseEvent5flagsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QMouseEvent5flagsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QHoverEventC2EN6QEvent4TypeERK7QPointFS4_6QFlagsIN2Qt16KeyboardModifierEE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QHoverEventC2EN6QEvent4TypeERK7QPointFS4_6QFlagsIN2Qt16KeyboardModifierEE )( void *scorep_libwrap_arg_this, QEvent::Type type, const QPointF & pos, const QPointF & oldPos, Qt::KeyboardModifiers modifiers )
{
    LIBWRAP_EARLY_INIT( _ZN11QHoverEventC2EN6QEvent4TypeERK7QPointFS4_6QFlagsIN2Qt16KeyboardModifierEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QHoverEventC2EN6QEvent4TypeERK7QPointFS4_6QFlagsIN2Qt16KeyboardModifierEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QHoverEventC2EN6QEvent4TypeERK7QPointFS4_6QFlagsIN2Qt16KeyboardModifierEE, ( scorep_libwrap_arg_this, type, pos, oldPos, modifiers ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QHoverEventC2EN6QEvent4TypeERK7QPointFS4_6QFlagsIN2Qt16KeyboardModifierEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QHoverEventC1EN6QEvent4TypeERK7QPointFS4_6QFlagsIN2Qt16KeyboardModifierEE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QHoverEventC1EN6QEvent4TypeERK7QPointFS4_6QFlagsIN2Qt16KeyboardModifierEE )( void *scorep_libwrap_arg_this, QEvent::Type type, const QPointF & pos, const QPointF & oldPos, Qt::KeyboardModifiers modifiers )
{
    LIBWRAP_EARLY_INIT( _ZN11QHoverEventC1EN6QEvent4TypeERK7QPointFS4_6QFlagsIN2Qt16KeyboardModifierEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QHoverEventC1EN6QEvent4TypeERK7QPointFS4_6QFlagsIN2Qt16KeyboardModifierEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QHoverEventC1EN6QEvent4TypeERK7QPointFS4_6QFlagsIN2Qt16KeyboardModifierEE, ( scorep_libwrap_arg_this, type, pos, oldPos, modifiers ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QHoverEventC1EN6QEvent4TypeERK7QPointFS4_6QFlagsIN2Qt16KeyboardModifierEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QHoverEventD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QHoverEventD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QHoverEventD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QHoverEventD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QHoverEventD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QHoverEventD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QHoverEventD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QHoverEventD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QHoverEventD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QHoverEventD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QHoverEventD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QHoverEventD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QHoverEventD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QHoverEventD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QHoverEventD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QHoverEventD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QHoverEventD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QHoverEventD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QWheelEventC2ERK7QPointFi6QFlagsIN2Qt11MouseButtonEES3_INS4_16KeyboardModifierEENS4_11OrientationE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QWheelEventC2ERK7QPointFi6QFlagsIN2Qt11MouseButtonEES3_INS4_16KeyboardModifierEENS4_11OrientationE )( void *scorep_libwrap_arg_this, const QPointF & pos, int delta, Qt::MouseButtons buttons, Qt::KeyboardModifiers modifiers, Qt::Orientation orient )
{
    LIBWRAP_EARLY_INIT( _ZN11QWheelEventC2ERK7QPointFi6QFlagsIN2Qt11MouseButtonEES3_INS4_16KeyboardModifierEENS4_11OrientationE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QWheelEventC2ERK7QPointFi6QFlagsIN2Qt11MouseButtonEES3_INS4_16KeyboardModifierEENS4_11OrientationE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QWheelEventC2ERK7QPointFi6QFlagsIN2Qt11MouseButtonEES3_INS4_16KeyboardModifierEENS4_11OrientationE, ( scorep_libwrap_arg_this, pos, delta, buttons, modifiers, orient ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QWheelEventC2ERK7QPointFi6QFlagsIN2Qt11MouseButtonEES3_INS4_16KeyboardModifierEENS4_11OrientationE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QWheelEventC1ERK7QPointFi6QFlagsIN2Qt11MouseButtonEES3_INS4_16KeyboardModifierEENS4_11OrientationE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QWheelEventC1ERK7QPointFi6QFlagsIN2Qt11MouseButtonEES3_INS4_16KeyboardModifierEENS4_11OrientationE )( void *scorep_libwrap_arg_this, const QPointF & pos, int delta, Qt::MouseButtons buttons, Qt::KeyboardModifiers modifiers, Qt::Orientation orient )
{
    LIBWRAP_EARLY_INIT( _ZN11QWheelEventC1ERK7QPointFi6QFlagsIN2Qt11MouseButtonEES3_INS4_16KeyboardModifierEENS4_11OrientationE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QWheelEventC1ERK7QPointFi6QFlagsIN2Qt11MouseButtonEES3_INS4_16KeyboardModifierEENS4_11OrientationE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QWheelEventC1ERK7QPointFi6QFlagsIN2Qt11MouseButtonEES3_INS4_16KeyboardModifierEENS4_11OrientationE, ( scorep_libwrap_arg_this, pos, delta, buttons, modifiers, orient ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QWheelEventC1ERK7QPointFi6QFlagsIN2Qt11MouseButtonEES3_INS4_16KeyboardModifierEENS4_11OrientationE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QWheelEventC2ERK7QPointFS2_i6QFlagsIN2Qt11MouseButtonEES3_INS4_16KeyboardModifierEENS4_11OrientationE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QWheelEventC2ERK7QPointFS2_i6QFlagsIN2Qt11MouseButtonEES3_INS4_16KeyboardModifierEENS4_11OrientationE )( void *scorep_libwrap_arg_this, const QPointF & pos, const QPointF & globalPos, int delta, Qt::MouseButtons buttons, Qt::KeyboardModifiers modifiers, Qt::Orientation orient )
{
    LIBWRAP_EARLY_INIT( _ZN11QWheelEventC2ERK7QPointFS2_i6QFlagsIN2Qt11MouseButtonEES3_INS4_16KeyboardModifierEENS4_11OrientationE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QWheelEventC2ERK7QPointFS2_i6QFlagsIN2Qt11MouseButtonEES3_INS4_16KeyboardModifierEENS4_11OrientationE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QWheelEventC2ERK7QPointFS2_i6QFlagsIN2Qt11MouseButtonEES3_INS4_16KeyboardModifierEENS4_11OrientationE, ( scorep_libwrap_arg_this, pos, globalPos, delta, buttons, modifiers, orient ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QWheelEventC2ERK7QPointFS2_i6QFlagsIN2Qt11MouseButtonEES3_INS4_16KeyboardModifierEENS4_11OrientationE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QWheelEventC1ERK7QPointFS2_i6QFlagsIN2Qt11MouseButtonEES3_INS4_16KeyboardModifierEENS4_11OrientationE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QWheelEventC1ERK7QPointFS2_i6QFlagsIN2Qt11MouseButtonEES3_INS4_16KeyboardModifierEENS4_11OrientationE )( void *scorep_libwrap_arg_this, const QPointF & pos, const QPointF & globalPos, int delta, Qt::MouseButtons buttons, Qt::KeyboardModifiers modifiers, Qt::Orientation orient )
{
    LIBWRAP_EARLY_INIT( _ZN11QWheelEventC1ERK7QPointFS2_i6QFlagsIN2Qt11MouseButtonEES3_INS4_16KeyboardModifierEENS4_11OrientationE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QWheelEventC1ERK7QPointFS2_i6QFlagsIN2Qt11MouseButtonEES3_INS4_16KeyboardModifierEENS4_11OrientationE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QWheelEventC1ERK7QPointFS2_i6QFlagsIN2Qt11MouseButtonEES3_INS4_16KeyboardModifierEENS4_11OrientationE, ( scorep_libwrap_arg_this, pos, globalPos, delta, buttons, modifiers, orient ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QWheelEventC1ERK7QPointFS2_i6QFlagsIN2Qt11MouseButtonEES3_INS4_16KeyboardModifierEENS4_11OrientationE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QWheelEventC2ERK7QPointFS2_6QPointS3_iN2Qt11OrientationE6QFlagsINS4_11MouseButtonEES6_INS4_16KeyboardModifierEE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QWheelEventC2ERK7QPointFS2_6QPointS3_iN2Qt11OrientationE6QFlagsINS4_11MouseButtonEES6_INS4_16KeyboardModifierEE )( void *scorep_libwrap_arg_this, const QPointF & pos, const QPointF & globalPos, QPoint pixelDelta, QPoint angleDelta, int qt4Delta, Qt::Orientation qt4Orientation, Qt::MouseButtons buttons, Qt::KeyboardModifiers modifiers )
{
    LIBWRAP_EARLY_INIT( _ZN11QWheelEventC2ERK7QPointFS2_6QPointS3_iN2Qt11OrientationE6QFlagsINS4_11MouseButtonEES6_INS4_16KeyboardModifierEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QWheelEventC2ERK7QPointFS2_6QPointS3_iN2Qt11OrientationE6QFlagsINS4_11MouseButtonEES6_INS4_16KeyboardModifierEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QWheelEventC2ERK7QPointFS2_6QPointS3_iN2Qt11OrientationE6QFlagsINS4_11MouseButtonEES6_INS4_16KeyboardModifierEE, ( scorep_libwrap_arg_this, pos, globalPos, pixelDelta, angleDelta, qt4Delta, qt4Orientation, buttons, modifiers ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QWheelEventC2ERK7QPointFS2_6QPointS3_iN2Qt11OrientationE6QFlagsINS4_11MouseButtonEES6_INS4_16KeyboardModifierEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QWheelEventC1ERK7QPointFS2_6QPointS3_iN2Qt11OrientationE6QFlagsINS4_11MouseButtonEES6_INS4_16KeyboardModifierEE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QWheelEventC1ERK7QPointFS2_6QPointS3_iN2Qt11OrientationE6QFlagsINS4_11MouseButtonEES6_INS4_16KeyboardModifierEE )( void *scorep_libwrap_arg_this, const QPointF & pos, const QPointF & globalPos, QPoint pixelDelta, QPoint angleDelta, int qt4Delta, Qt::Orientation qt4Orientation, Qt::MouseButtons buttons, Qt::KeyboardModifiers modifiers )
{
    LIBWRAP_EARLY_INIT( _ZN11QWheelEventC1ERK7QPointFS2_6QPointS3_iN2Qt11OrientationE6QFlagsINS4_11MouseButtonEES6_INS4_16KeyboardModifierEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QWheelEventC1ERK7QPointFS2_6QPointS3_iN2Qt11OrientationE6QFlagsINS4_11MouseButtonEES6_INS4_16KeyboardModifierEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QWheelEventC1ERK7QPointFS2_6QPointS3_iN2Qt11OrientationE6QFlagsINS4_11MouseButtonEES6_INS4_16KeyboardModifierEE, ( scorep_libwrap_arg_this, pos, globalPos, pixelDelta, angleDelta, qt4Delta, qt4Orientation, buttons, modifiers ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QWheelEventC1ERK7QPointFS2_6QPointS3_iN2Qt11OrientationE6QFlagsINS4_11MouseButtonEES6_INS4_16KeyboardModifierEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QWheelEventC2ERK7QPointFS2_6QPointS3_iN2Qt11OrientationE6QFlagsINS4_11MouseButtonEES6_INS4_16KeyboardModifierEENS4_11ScrollPhaseE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QWheelEventC2ERK7QPointFS2_6QPointS3_iN2Qt11OrientationE6QFlagsINS4_11MouseButtonEES6_INS4_16KeyboardModifierEENS4_11ScrollPhaseE )( void *scorep_libwrap_arg_this, const QPointF & pos, const QPointF & globalPos, QPoint pixelDelta, QPoint angleDelta, int qt4Delta, Qt::Orientation qt4Orientation, Qt::MouseButtons buttons, Qt::KeyboardModifiers modifiers, Qt::ScrollPhase phase )
{
    LIBWRAP_EARLY_INIT( _ZN11QWheelEventC2ERK7QPointFS2_6QPointS3_iN2Qt11OrientationE6QFlagsINS4_11MouseButtonEES6_INS4_16KeyboardModifierEENS4_11ScrollPhaseE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QWheelEventC2ERK7QPointFS2_6QPointS3_iN2Qt11OrientationE6QFlagsINS4_11MouseButtonEES6_INS4_16KeyboardModifierEENS4_11ScrollPhaseE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QWheelEventC2ERK7QPointFS2_6QPointS3_iN2Qt11OrientationE6QFlagsINS4_11MouseButtonEES6_INS4_16KeyboardModifierEENS4_11ScrollPhaseE, ( scorep_libwrap_arg_this, pos, globalPos, pixelDelta, angleDelta, qt4Delta, qt4Orientation, buttons, modifiers, phase ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QWheelEventC2ERK7QPointFS2_6QPointS3_iN2Qt11OrientationE6QFlagsINS4_11MouseButtonEES6_INS4_16KeyboardModifierEENS4_11ScrollPhaseE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QWheelEventC1ERK7QPointFS2_6QPointS3_iN2Qt11OrientationE6QFlagsINS4_11MouseButtonEES6_INS4_16KeyboardModifierEENS4_11ScrollPhaseE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QWheelEventC1ERK7QPointFS2_6QPointS3_iN2Qt11OrientationE6QFlagsINS4_11MouseButtonEES6_INS4_16KeyboardModifierEENS4_11ScrollPhaseE )( void *scorep_libwrap_arg_this, const QPointF & pos, const QPointF & globalPos, QPoint pixelDelta, QPoint angleDelta, int qt4Delta, Qt::Orientation qt4Orientation, Qt::MouseButtons buttons, Qt::KeyboardModifiers modifiers, Qt::ScrollPhase phase )
{
    LIBWRAP_EARLY_INIT( _ZN11QWheelEventC1ERK7QPointFS2_6QPointS3_iN2Qt11OrientationE6QFlagsINS4_11MouseButtonEES6_INS4_16KeyboardModifierEENS4_11ScrollPhaseE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QWheelEventC1ERK7QPointFS2_6QPointS3_iN2Qt11OrientationE6QFlagsINS4_11MouseButtonEES6_INS4_16KeyboardModifierEENS4_11ScrollPhaseE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QWheelEventC1ERK7QPointFS2_6QPointS3_iN2Qt11OrientationE6QFlagsINS4_11MouseButtonEES6_INS4_16KeyboardModifierEENS4_11ScrollPhaseE, ( scorep_libwrap_arg_this, pos, globalPos, pixelDelta, angleDelta, qt4Delta, qt4Orientation, buttons, modifiers, phase ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QWheelEventC1ERK7QPointFS2_6QPointS3_iN2Qt11OrientationE6QFlagsINS4_11MouseButtonEES6_INS4_16KeyboardModifierEENS4_11ScrollPhaseE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QWheelEventC2ERK7QPointFS2_6QPointS3_iN2Qt11OrientationE6QFlagsINS4_11MouseButtonEES6_INS4_16KeyboardModifierEENS4_11ScrollPhaseENS4_16MouseEventSourceE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QWheelEventC2ERK7QPointFS2_6QPointS3_iN2Qt11OrientationE6QFlagsINS4_11MouseButtonEES6_INS4_16KeyboardModifierEENS4_11ScrollPhaseENS4_16MouseEventSourceE )( void *scorep_libwrap_arg_this, const QPointF & pos, const QPointF & globalPos, QPoint pixelDelta, QPoint angleDelta, int qt4Delta, Qt::Orientation qt4Orientation, Qt::MouseButtons buttons, Qt::KeyboardModifiers modifiers, Qt::ScrollPhase phase, Qt::MouseEventSource source )
{
    LIBWRAP_EARLY_INIT( _ZN11QWheelEventC2ERK7QPointFS2_6QPointS3_iN2Qt11OrientationE6QFlagsINS4_11MouseButtonEES6_INS4_16KeyboardModifierEENS4_11ScrollPhaseENS4_16MouseEventSourceE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QWheelEventC2ERK7QPointFS2_6QPointS3_iN2Qt11OrientationE6QFlagsINS4_11MouseButtonEES6_INS4_16KeyboardModifierEENS4_11ScrollPhaseENS4_16MouseEventSourceE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QWheelEventC2ERK7QPointFS2_6QPointS3_iN2Qt11OrientationE6QFlagsINS4_11MouseButtonEES6_INS4_16KeyboardModifierEENS4_11ScrollPhaseENS4_16MouseEventSourceE, ( scorep_libwrap_arg_this, pos, globalPos, pixelDelta, angleDelta, qt4Delta, qt4Orientation, buttons, modifiers, phase, source ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QWheelEventC2ERK7QPointFS2_6QPointS3_iN2Qt11OrientationE6QFlagsINS4_11MouseButtonEES6_INS4_16KeyboardModifierEENS4_11ScrollPhaseENS4_16MouseEventSourceE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QWheelEventC1ERK7QPointFS2_6QPointS3_iN2Qt11OrientationE6QFlagsINS4_11MouseButtonEES6_INS4_16KeyboardModifierEENS4_11ScrollPhaseENS4_16MouseEventSourceE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QWheelEventC1ERK7QPointFS2_6QPointS3_iN2Qt11OrientationE6QFlagsINS4_11MouseButtonEES6_INS4_16KeyboardModifierEENS4_11ScrollPhaseENS4_16MouseEventSourceE )( void *scorep_libwrap_arg_this, const QPointF & pos, const QPointF & globalPos, QPoint pixelDelta, QPoint angleDelta, int qt4Delta, Qt::Orientation qt4Orientation, Qt::MouseButtons buttons, Qt::KeyboardModifiers modifiers, Qt::ScrollPhase phase, Qt::MouseEventSource source )
{
    LIBWRAP_EARLY_INIT( _ZN11QWheelEventC1ERK7QPointFS2_6QPointS3_iN2Qt11OrientationE6QFlagsINS4_11MouseButtonEES6_INS4_16KeyboardModifierEENS4_11ScrollPhaseENS4_16MouseEventSourceE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QWheelEventC1ERK7QPointFS2_6QPointS3_iN2Qt11OrientationE6QFlagsINS4_11MouseButtonEES6_INS4_16KeyboardModifierEENS4_11ScrollPhaseENS4_16MouseEventSourceE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QWheelEventC1ERK7QPointFS2_6QPointS3_iN2Qt11OrientationE6QFlagsINS4_11MouseButtonEES6_INS4_16KeyboardModifierEENS4_11ScrollPhaseENS4_16MouseEventSourceE, ( scorep_libwrap_arg_this, pos, globalPos, pixelDelta, angleDelta, qt4Delta, qt4Orientation, buttons, modifiers, phase, source ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QWheelEventC1ERK7QPointFS2_6QPointS3_iN2Qt11OrientationE6QFlagsINS4_11MouseButtonEES6_INS4_16KeyboardModifierEENS4_11ScrollPhaseENS4_16MouseEventSourceE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QWheelEventC2ERK7QPointFS2_6QPointS3_iN2Qt11OrientationE6QFlagsINS4_11MouseButtonEES6_INS4_16KeyboardModifierEENS4_11ScrollPhaseENS4_16MouseEventSourceEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QWheelEventC2ERK7QPointFS2_6QPointS3_iN2Qt11OrientationE6QFlagsINS4_11MouseButtonEES6_INS4_16KeyboardModifierEENS4_11ScrollPhaseENS4_16MouseEventSourceEb )( void *scorep_libwrap_arg_this, const QPointF & pos, const QPointF & globalPos, QPoint pixelDelta, QPoint angleDelta, int qt4Delta, Qt::Orientation qt4Orientation, Qt::MouseButtons buttons, Qt::KeyboardModifiers modifiers, Qt::ScrollPhase phase, Qt::MouseEventSource source, bool inverted )
{
    LIBWRAP_EARLY_INIT( _ZN11QWheelEventC2ERK7QPointFS2_6QPointS3_iN2Qt11OrientationE6QFlagsINS4_11MouseButtonEES6_INS4_16KeyboardModifierEENS4_11ScrollPhaseENS4_16MouseEventSourceEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QWheelEventC2ERK7QPointFS2_6QPointS3_iN2Qt11OrientationE6QFlagsINS4_11MouseButtonEES6_INS4_16KeyboardModifierEENS4_11ScrollPhaseENS4_16MouseEventSourceEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QWheelEventC2ERK7QPointFS2_6QPointS3_iN2Qt11OrientationE6QFlagsINS4_11MouseButtonEES6_INS4_16KeyboardModifierEENS4_11ScrollPhaseENS4_16MouseEventSourceEb, ( scorep_libwrap_arg_this, pos, globalPos, pixelDelta, angleDelta, qt4Delta, qt4Orientation, buttons, modifiers, phase, source, inverted ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QWheelEventC2ERK7QPointFS2_6QPointS3_iN2Qt11OrientationE6QFlagsINS4_11MouseButtonEES6_INS4_16KeyboardModifierEENS4_11ScrollPhaseENS4_16MouseEventSourceEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QWheelEventC1ERK7QPointFS2_6QPointS3_iN2Qt11OrientationE6QFlagsINS4_11MouseButtonEES6_INS4_16KeyboardModifierEENS4_11ScrollPhaseENS4_16MouseEventSourceEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QWheelEventC1ERK7QPointFS2_6QPointS3_iN2Qt11OrientationE6QFlagsINS4_11MouseButtonEES6_INS4_16KeyboardModifierEENS4_11ScrollPhaseENS4_16MouseEventSourceEb )( void *scorep_libwrap_arg_this, const QPointF & pos, const QPointF & globalPos, QPoint pixelDelta, QPoint angleDelta, int qt4Delta, Qt::Orientation qt4Orientation, Qt::MouseButtons buttons, Qt::KeyboardModifiers modifiers, Qt::ScrollPhase phase, Qt::MouseEventSource source, bool inverted )
{
    LIBWRAP_EARLY_INIT( _ZN11QWheelEventC1ERK7QPointFS2_6QPointS3_iN2Qt11OrientationE6QFlagsINS4_11MouseButtonEES6_INS4_16KeyboardModifierEENS4_11ScrollPhaseENS4_16MouseEventSourceEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QWheelEventC1ERK7QPointFS2_6QPointS3_iN2Qt11OrientationE6QFlagsINS4_11MouseButtonEES6_INS4_16KeyboardModifierEENS4_11ScrollPhaseENS4_16MouseEventSourceEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QWheelEventC1ERK7QPointFS2_6QPointS3_iN2Qt11OrientationE6QFlagsINS4_11MouseButtonEES6_INS4_16KeyboardModifierEENS4_11ScrollPhaseENS4_16MouseEventSourceEb, ( scorep_libwrap_arg_this, pos, globalPos, pixelDelta, angleDelta, qt4Delta, qt4Orientation, buttons, modifiers, phase, source, inverted ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QWheelEventC1ERK7QPointFS2_6QPointS3_iN2Qt11OrientationE6QFlagsINS4_11MouseButtonEES6_INS4_16KeyboardModifierEENS4_11ScrollPhaseENS4_16MouseEventSourceEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QWheelEventD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QWheelEventD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QWheelEventD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QWheelEventD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QWheelEventD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QWheelEventD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QWheelEventD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QWheelEventD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QWheelEventD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QWheelEventD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QWheelEventD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QWheelEventD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QWheelEventD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QWheelEventD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QWheelEventD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QWheelEventD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QWheelEventD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QWheelEventD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QTabletEventC2EN6QEvent4TypeERK7QPointFS4_iidiiddi6QFlagsIN2Qt16KeyboardModifierEExNS6_11MouseButtonES5_IS9_E
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QTabletEventC2EN6QEvent4TypeERK7QPointFS4_iidiiddi6QFlagsIN2Qt16KeyboardModifierEExNS6_11MouseButtonES5_IS9_E )( void *scorep_libwrap_arg_this, QEvent::Type t, const QPointF & pos, const QPointF & globalPos, int device, int pointerType, qreal pressure, int xTilt, int yTilt, qreal tangentialPressure, qreal rotation, int z, Qt::KeyboardModifiers keyState, qint64 uniqueID, Qt::MouseButton button, Qt::MouseButtons buttons )
{
    LIBWRAP_EARLY_INIT( _ZN12QTabletEventC2EN6QEvent4TypeERK7QPointFS4_iidiiddi6QFlagsIN2Qt16KeyboardModifierEExNS6_11MouseButtonES5_IS9_E );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QTabletEventC2EN6QEvent4TypeERK7QPointFS4_iidiiddi6QFlagsIN2Qt16KeyboardModifierEExNS6_11MouseButtonES5_IS9_E );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QTabletEventC2EN6QEvent4TypeERK7QPointFS4_iidiiddi6QFlagsIN2Qt16KeyboardModifierEExNS6_11MouseButtonES5_IS9_E, ( scorep_libwrap_arg_this, t, pos, globalPos, device, pointerType, pressure, xTilt, yTilt, tangentialPressure, rotation, z, keyState, uniqueID, button, buttons ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QTabletEventC2EN6QEvent4TypeERK7QPointFS4_iidiiddi6QFlagsIN2Qt16KeyboardModifierEExNS6_11MouseButtonES5_IS9_E );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QTabletEventC1EN6QEvent4TypeERK7QPointFS4_iidiiddi6QFlagsIN2Qt16KeyboardModifierEExNS6_11MouseButtonES5_IS9_E
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QTabletEventC1EN6QEvent4TypeERK7QPointFS4_iidiiddi6QFlagsIN2Qt16KeyboardModifierEExNS6_11MouseButtonES5_IS9_E )( void *scorep_libwrap_arg_this, QEvent::Type t, const QPointF & pos, const QPointF & globalPos, int device, int pointerType, qreal pressure, int xTilt, int yTilt, qreal tangentialPressure, qreal rotation, int z, Qt::KeyboardModifiers keyState, qint64 uniqueID, Qt::MouseButton button, Qt::MouseButtons buttons )
{
    LIBWRAP_EARLY_INIT( _ZN12QTabletEventC1EN6QEvent4TypeERK7QPointFS4_iidiiddi6QFlagsIN2Qt16KeyboardModifierEExNS6_11MouseButtonES5_IS9_E );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QTabletEventC1EN6QEvent4TypeERK7QPointFS4_iidiiddi6QFlagsIN2Qt16KeyboardModifierEExNS6_11MouseButtonES5_IS9_E );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QTabletEventC1EN6QEvent4TypeERK7QPointFS4_iidiiddi6QFlagsIN2Qt16KeyboardModifierEExNS6_11MouseButtonES5_IS9_E, ( scorep_libwrap_arg_this, t, pos, globalPos, device, pointerType, pressure, xTilt, yTilt, tangentialPressure, rotation, z, keyState, uniqueID, button, buttons ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QTabletEventC1EN6QEvent4TypeERK7QPointFS4_iidiiddi6QFlagsIN2Qt16KeyboardModifierEExNS6_11MouseButtonES5_IS9_E );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QTabletEventD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QTabletEventD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QTabletEventD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QTabletEventD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QTabletEventD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QTabletEventD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QTabletEventD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QTabletEventD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QTabletEventD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QTabletEventD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QTabletEventD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QTabletEventD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QTabletEventD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QTabletEventD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QTabletEventD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QTabletEventD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QTabletEventD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QTabletEventD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK12QTabletEvent6buttonEv
Qt::MouseButton
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QTabletEvent6buttonEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QTabletEvent6buttonEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QTabletEvent6buttonEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    Qt::MouseButton scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QTabletEvent6buttonEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QTabletEvent6buttonEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QTabletEvent7buttonsEv
Qt::MouseButtons
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QTabletEvent7buttonsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QTabletEvent7buttonsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QTabletEvent7buttonsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    Qt::MouseButtons scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QTabletEvent7buttonsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QTabletEvent7buttonsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN19QNativeGestureEventC2EN2Qt17NativeGestureTypeERK7QPointFS4_S4_dmy
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QNativeGestureEventC2EN2Qt17NativeGestureTypeERK7QPointFS4_S4_dmy )( void *scorep_libwrap_arg_this, Qt::NativeGestureType type, const QPointF & localPos, const QPointF & windowPos, const QPointF & screenPos, qreal value, ulong sequenceId, quint64 intArgument )
{
    LIBWRAP_EARLY_INIT( _ZN19QNativeGestureEventC2EN2Qt17NativeGestureTypeERK7QPointFS4_S4_dmy );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QNativeGestureEventC2EN2Qt17NativeGestureTypeERK7QPointFS4_S4_dmy );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN19QNativeGestureEventC2EN2Qt17NativeGestureTypeERK7QPointFS4_S4_dmy, ( scorep_libwrap_arg_this, type, localPos, windowPos, screenPos, value, sequenceId, intArgument ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QNativeGestureEventC2EN2Qt17NativeGestureTypeERK7QPointFS4_S4_dmy );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN19QNativeGestureEventC1EN2Qt17NativeGestureTypeERK7QPointFS4_S4_dmy
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QNativeGestureEventC1EN2Qt17NativeGestureTypeERK7QPointFS4_S4_dmy )( void *scorep_libwrap_arg_this, Qt::NativeGestureType type, const QPointF & localPos, const QPointF & windowPos, const QPointF & screenPos, qreal value, ulong sequenceId, quint64 intArgument )
{
    LIBWRAP_EARLY_INIT( _ZN19QNativeGestureEventC1EN2Qt17NativeGestureTypeERK7QPointFS4_S4_dmy );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QNativeGestureEventC1EN2Qt17NativeGestureTypeERK7QPointFS4_S4_dmy );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN19QNativeGestureEventC1EN2Qt17NativeGestureTypeERK7QPointFS4_S4_dmy, ( scorep_libwrap_arg_this, type, localPos, windowPos, screenPos, value, sequenceId, intArgument ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QNativeGestureEventC1EN2Qt17NativeGestureTypeERK7QPointFS4_S4_dmy );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QKeyEventC2EN6QEvent4TypeEi6QFlagsIN2Qt16KeyboardModifierEERK7QStringbt
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QKeyEventC2EN6QEvent4TypeEi6QFlagsIN2Qt16KeyboardModifierEERK7QStringbt )( void *scorep_libwrap_arg_this, QEvent::Type type, int key, Qt::KeyboardModifiers modifiers, const QString & text, bool autorep, ushort count )
{
    LIBWRAP_EARLY_INIT( _ZN9QKeyEventC2EN6QEvent4TypeEi6QFlagsIN2Qt16KeyboardModifierEERK7QStringbt );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QKeyEventC2EN6QEvent4TypeEi6QFlagsIN2Qt16KeyboardModifierEERK7QStringbt );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QKeyEventC2EN6QEvent4TypeEi6QFlagsIN2Qt16KeyboardModifierEERK7QStringbt, ( scorep_libwrap_arg_this, type, key, modifiers, text, autorep, count ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QKeyEventC2EN6QEvent4TypeEi6QFlagsIN2Qt16KeyboardModifierEERK7QStringbt );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QKeyEventC1EN6QEvent4TypeEi6QFlagsIN2Qt16KeyboardModifierEERK7QStringbt
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QKeyEventC1EN6QEvent4TypeEi6QFlagsIN2Qt16KeyboardModifierEERK7QStringbt )( void *scorep_libwrap_arg_this, QEvent::Type type, int key, Qt::KeyboardModifiers modifiers, const QString & text, bool autorep, ushort count )
{
    LIBWRAP_EARLY_INIT( _ZN9QKeyEventC1EN6QEvent4TypeEi6QFlagsIN2Qt16KeyboardModifierEERK7QStringbt );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QKeyEventC1EN6QEvent4TypeEi6QFlagsIN2Qt16KeyboardModifierEERK7QStringbt );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QKeyEventC1EN6QEvent4TypeEi6QFlagsIN2Qt16KeyboardModifierEERK7QStringbt, ( scorep_libwrap_arg_this, type, key, modifiers, text, autorep, count ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QKeyEventC1EN6QEvent4TypeEi6QFlagsIN2Qt16KeyboardModifierEERK7QStringbt );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QKeyEventC2EN6QEvent4TypeEi6QFlagsIN2Qt16KeyboardModifierEEjjjRK7QStringbt
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QKeyEventC2EN6QEvent4TypeEi6QFlagsIN2Qt16KeyboardModifierEEjjjRK7QStringbt )( void *scorep_libwrap_arg_this, QEvent::Type type, int key, Qt::KeyboardModifiers modifiers, quint32 nativeScanCode, quint32 nativeVirtualKey, quint32 nativeModifiers, const QString & text, bool autorep, ushort count )
{
    LIBWRAP_EARLY_INIT( _ZN9QKeyEventC2EN6QEvent4TypeEi6QFlagsIN2Qt16KeyboardModifierEEjjjRK7QStringbt );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QKeyEventC2EN6QEvent4TypeEi6QFlagsIN2Qt16KeyboardModifierEEjjjRK7QStringbt );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QKeyEventC2EN6QEvent4TypeEi6QFlagsIN2Qt16KeyboardModifierEEjjjRK7QStringbt, ( scorep_libwrap_arg_this, type, key, modifiers, nativeScanCode, nativeVirtualKey, nativeModifiers, text, autorep, count ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QKeyEventC2EN6QEvent4TypeEi6QFlagsIN2Qt16KeyboardModifierEEjjjRK7QStringbt );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QKeyEventC1EN6QEvent4TypeEi6QFlagsIN2Qt16KeyboardModifierEEjjjRK7QStringbt
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QKeyEventC1EN6QEvent4TypeEi6QFlagsIN2Qt16KeyboardModifierEEjjjRK7QStringbt )( void *scorep_libwrap_arg_this, QEvent::Type type, int key, Qt::KeyboardModifiers modifiers, quint32 nativeScanCode, quint32 nativeVirtualKey, quint32 nativeModifiers, const QString & text, bool autorep, ushort count )
{
    LIBWRAP_EARLY_INIT( _ZN9QKeyEventC1EN6QEvent4TypeEi6QFlagsIN2Qt16KeyboardModifierEEjjjRK7QStringbt );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QKeyEventC1EN6QEvent4TypeEi6QFlagsIN2Qt16KeyboardModifierEEjjjRK7QStringbt );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QKeyEventC1EN6QEvent4TypeEi6QFlagsIN2Qt16KeyboardModifierEEjjjRK7QStringbt, ( scorep_libwrap_arg_this, type, key, modifiers, nativeScanCode, nativeVirtualKey, nativeModifiers, text, autorep, count ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QKeyEventC1EN6QEvent4TypeEi6QFlagsIN2Qt16KeyboardModifierEEjjjRK7QStringbt );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QKeyEventD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QKeyEventD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN9QKeyEventD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QKeyEventD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QKeyEventD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QKeyEventD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QKeyEventD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QKeyEventD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN9QKeyEventD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QKeyEventD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QKeyEventD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QKeyEventD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QKeyEventD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QKeyEventD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN9QKeyEventD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QKeyEventD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QKeyEventD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QKeyEventD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK9QKeyEvent7matchesEN12QKeySequence11StandardKeyE
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QKeyEvent7matchesEN12QKeySequence11StandardKeyE )( void *scorep_libwrap_arg_this, QKeySequence::StandardKey key )
{
    LIBWRAP_EARLY_INIT( _ZNK9QKeyEvent7matchesEN12QKeySequence11StandardKeyE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QKeyEvent7matchesEN12QKeySequence11StandardKeyE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QKeyEvent7matchesEN12QKeySequence11StandardKeyE, ( scorep_libwrap_arg_this, key ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QKeyEvent7matchesEN12QKeySequence11StandardKeyE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QKeyEvent9modifiersEv
Qt::KeyboardModifiers
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QKeyEvent9modifiersEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QKeyEvent9modifiersEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QKeyEvent9modifiersEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    Qt::KeyboardModifiers scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QKeyEvent9modifiersEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QKeyEvent9modifiersEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QFocusEventC2EN6QEvent4TypeEN2Qt11FocusReasonE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QFocusEventC2EN6QEvent4TypeEN2Qt11FocusReasonE )( void *scorep_libwrap_arg_this, QEvent::Type type, Qt::FocusReason reason )
{
    LIBWRAP_EARLY_INIT( _ZN11QFocusEventC2EN6QEvent4TypeEN2Qt11FocusReasonE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QFocusEventC2EN6QEvent4TypeEN2Qt11FocusReasonE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QFocusEventC2EN6QEvent4TypeEN2Qt11FocusReasonE, ( scorep_libwrap_arg_this, type, reason ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QFocusEventC2EN6QEvent4TypeEN2Qt11FocusReasonE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QFocusEventC1EN6QEvent4TypeEN2Qt11FocusReasonE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QFocusEventC1EN6QEvent4TypeEN2Qt11FocusReasonE )( void *scorep_libwrap_arg_this, QEvent::Type type, Qt::FocusReason reason )
{
    LIBWRAP_EARLY_INIT( _ZN11QFocusEventC1EN6QEvent4TypeEN2Qt11FocusReasonE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QFocusEventC1EN6QEvent4TypeEN2Qt11FocusReasonE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QFocusEventC1EN6QEvent4TypeEN2Qt11FocusReasonE, ( scorep_libwrap_arg_this, type, reason ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QFocusEventC1EN6QEvent4TypeEN2Qt11FocusReasonE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QFocusEventD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QFocusEventD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QFocusEventD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QFocusEventD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QFocusEventD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QFocusEventD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QFocusEventD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QFocusEventD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QFocusEventD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QFocusEventD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QFocusEventD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QFocusEventD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QFocusEventD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QFocusEventD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QFocusEventD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QFocusEventD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QFocusEventD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QFocusEventD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK11QFocusEvent6reasonEv
Qt::FocusReason
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QFocusEvent6reasonEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QFocusEvent6reasonEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QFocusEvent6reasonEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    Qt::FocusReason scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QFocusEvent6reasonEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QFocusEvent6reasonEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QPaintEventC2ERK7QRegion
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QPaintEventC2ERK7QRegion )( void *scorep_libwrap_arg_this, const QRegion & paintRegion )
{
    LIBWRAP_EARLY_INIT( _ZN11QPaintEventC2ERK7QRegion );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QPaintEventC2ERK7QRegion );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QPaintEventC2ERK7QRegion, ( scorep_libwrap_arg_this, paintRegion ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QPaintEventC2ERK7QRegion );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QPaintEventC1ERK7QRegion
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QPaintEventC1ERK7QRegion )( void *scorep_libwrap_arg_this, const QRegion & paintRegion )
{
    LIBWRAP_EARLY_INIT( _ZN11QPaintEventC1ERK7QRegion );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QPaintEventC1ERK7QRegion );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QPaintEventC1ERK7QRegion, ( scorep_libwrap_arg_this, paintRegion ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QPaintEventC1ERK7QRegion );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QPaintEventC2ERK5QRect
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QPaintEventC2ERK5QRect )( void *scorep_libwrap_arg_this, const QRect & paintRect )
{
    LIBWRAP_EARLY_INIT( _ZN11QPaintEventC2ERK5QRect );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QPaintEventC2ERK5QRect );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QPaintEventC2ERK5QRect, ( scorep_libwrap_arg_this, paintRect ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QPaintEventC2ERK5QRect );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QPaintEventC1ERK5QRect
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QPaintEventC1ERK5QRect )( void *scorep_libwrap_arg_this, const QRect & paintRect )
{
    LIBWRAP_EARLY_INIT( _ZN11QPaintEventC1ERK5QRect );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QPaintEventC1ERK5QRect );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QPaintEventC1ERK5QRect, ( scorep_libwrap_arg_this, paintRect ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QPaintEventC1ERK5QRect );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QPaintEventD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QPaintEventD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QPaintEventD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QPaintEventD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QPaintEventD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QPaintEventD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QPaintEventD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QPaintEventD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QPaintEventD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QPaintEventD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QPaintEventD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QPaintEventD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QPaintEventD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QPaintEventD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QPaintEventD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QPaintEventD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QPaintEventD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QPaintEventD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QMoveEventC2ERK6QPointS2_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QMoveEventC2ERK6QPointS2_ )( void *scorep_libwrap_arg_this, const QPoint & pos, const QPoint & oldPos )
{
    LIBWRAP_EARLY_INIT( _ZN10QMoveEventC2ERK6QPointS2_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QMoveEventC2ERK6QPointS2_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QMoveEventC2ERK6QPointS2_, ( scorep_libwrap_arg_this, pos, oldPos ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QMoveEventC2ERK6QPointS2_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QMoveEventC1ERK6QPointS2_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QMoveEventC1ERK6QPointS2_ )( void *scorep_libwrap_arg_this, const QPoint & pos, const QPoint & oldPos )
{
    LIBWRAP_EARLY_INIT( _ZN10QMoveEventC1ERK6QPointS2_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QMoveEventC1ERK6QPointS2_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QMoveEventC1ERK6QPointS2_, ( scorep_libwrap_arg_this, pos, oldPos ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QMoveEventC1ERK6QPointS2_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QMoveEventD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QMoveEventD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN10QMoveEventD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QMoveEventD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QMoveEventD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QMoveEventD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QMoveEventD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QMoveEventD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN10QMoveEventD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QMoveEventD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QMoveEventD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QMoveEventD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QMoveEventD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QMoveEventD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN10QMoveEventD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QMoveEventD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QMoveEventD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QMoveEventD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QExposeEventC2ERK7QRegion
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QExposeEventC2ERK7QRegion )( void *scorep_libwrap_arg_this, const QRegion & rgn )
{
    LIBWRAP_EARLY_INIT( _ZN12QExposeEventC2ERK7QRegion );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QExposeEventC2ERK7QRegion );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QExposeEventC2ERK7QRegion, ( scorep_libwrap_arg_this, rgn ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QExposeEventC2ERK7QRegion );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QExposeEventC1ERK7QRegion
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QExposeEventC1ERK7QRegion )( void *scorep_libwrap_arg_this, const QRegion & rgn )
{
    LIBWRAP_EARLY_INIT( _ZN12QExposeEventC1ERK7QRegion );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QExposeEventC1ERK7QRegion );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QExposeEventC1ERK7QRegion, ( scorep_libwrap_arg_this, rgn ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QExposeEventC1ERK7QRegion );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QExposeEventD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QExposeEventD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QExposeEventD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QExposeEventD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QExposeEventD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QExposeEventD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QExposeEventD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QExposeEventD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QExposeEventD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QExposeEventD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QExposeEventD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QExposeEventD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QExposeEventD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QExposeEventD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QExposeEventD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QExposeEventD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QExposeEventD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QExposeEventD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN21QPlatformSurfaceEventC2ENS_16SurfaceEventTypeE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN21QPlatformSurfaceEventC2ENS_16SurfaceEventTypeE )( void *scorep_libwrap_arg_this, QPlatformSurfaceEvent::SurfaceEventType surfaceEventType )
{
    LIBWRAP_EARLY_INIT( _ZN21QPlatformSurfaceEventC2ENS_16SurfaceEventTypeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN21QPlatformSurfaceEventC2ENS_16SurfaceEventTypeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN21QPlatformSurfaceEventC2ENS_16SurfaceEventTypeE, ( scorep_libwrap_arg_this, surfaceEventType ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN21QPlatformSurfaceEventC2ENS_16SurfaceEventTypeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN21QPlatformSurfaceEventC1ENS_16SurfaceEventTypeE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN21QPlatformSurfaceEventC1ENS_16SurfaceEventTypeE )( void *scorep_libwrap_arg_this, QPlatformSurfaceEvent::SurfaceEventType surfaceEventType )
{
    LIBWRAP_EARLY_INIT( _ZN21QPlatformSurfaceEventC1ENS_16SurfaceEventTypeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN21QPlatformSurfaceEventC1ENS_16SurfaceEventTypeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN21QPlatformSurfaceEventC1ENS_16SurfaceEventTypeE, ( scorep_libwrap_arg_this, surfaceEventType ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN21QPlatformSurfaceEventC1ENS_16SurfaceEventTypeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN21QPlatformSurfaceEventD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN21QPlatformSurfaceEventD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN21QPlatformSurfaceEventD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN21QPlatformSurfaceEventD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN21QPlatformSurfaceEventD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN21QPlatformSurfaceEventD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN21QPlatformSurfaceEventD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN21QPlatformSurfaceEventD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN21QPlatformSurfaceEventD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN21QPlatformSurfaceEventD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN21QPlatformSurfaceEventD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN21QPlatformSurfaceEventD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN21QPlatformSurfaceEventD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN21QPlatformSurfaceEventD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN21QPlatformSurfaceEventD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN21QPlatformSurfaceEventD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN21QPlatformSurfaceEventD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN21QPlatformSurfaceEventD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QResizeEventC2ERK5QSizeS2_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QResizeEventC2ERK5QSizeS2_ )( void *scorep_libwrap_arg_this, const QSize & size, const QSize & oldSize )
{
    LIBWRAP_EARLY_INIT( _ZN12QResizeEventC2ERK5QSizeS2_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QResizeEventC2ERK5QSizeS2_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QResizeEventC2ERK5QSizeS2_, ( scorep_libwrap_arg_this, size, oldSize ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QResizeEventC2ERK5QSizeS2_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QResizeEventC1ERK5QSizeS2_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QResizeEventC1ERK5QSizeS2_ )( void *scorep_libwrap_arg_this, const QSize & size, const QSize & oldSize )
{
    LIBWRAP_EARLY_INIT( _ZN12QResizeEventC1ERK5QSizeS2_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QResizeEventC1ERK5QSizeS2_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QResizeEventC1ERK5QSizeS2_, ( scorep_libwrap_arg_this, size, oldSize ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QResizeEventC1ERK5QSizeS2_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QResizeEventD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QResizeEventD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QResizeEventD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QResizeEventD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QResizeEventD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QResizeEventD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QResizeEventD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QResizeEventD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QResizeEventD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QResizeEventD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QResizeEventD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QResizeEventD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QResizeEventD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QResizeEventD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QResizeEventD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QResizeEventD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QResizeEventD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QResizeEventD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QCloseEventC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QCloseEventC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QCloseEventC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QCloseEventC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QCloseEventC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QCloseEventC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QCloseEventC1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QCloseEventC1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QCloseEventC1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QCloseEventC1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QCloseEventC1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QCloseEventC1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QCloseEventD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QCloseEventD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QCloseEventD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QCloseEventD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QCloseEventD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QCloseEventD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QCloseEventD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QCloseEventD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QCloseEventD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QCloseEventD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QCloseEventD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QCloseEventD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QCloseEventD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QCloseEventD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QCloseEventD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QCloseEventD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QCloseEventD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QCloseEventD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QIconDragEventC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QIconDragEventC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN14QIconDragEventC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QIconDragEventC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QIconDragEventC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QIconDragEventC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QIconDragEventC1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QIconDragEventC1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN14QIconDragEventC1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QIconDragEventC1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QIconDragEventC1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QIconDragEventC1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QIconDragEventD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QIconDragEventD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN14QIconDragEventD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QIconDragEventD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QIconDragEventD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QIconDragEventD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QIconDragEventD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QIconDragEventD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN14QIconDragEventD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QIconDragEventD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QIconDragEventD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QIconDragEventD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QIconDragEventD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QIconDragEventD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN14QIconDragEventD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QIconDragEventD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QIconDragEventD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QIconDragEventD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QShowEventC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QShowEventC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN10QShowEventC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QShowEventC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QShowEventC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QShowEventC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QShowEventC1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QShowEventC1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN10QShowEventC1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QShowEventC1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QShowEventC1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QShowEventC1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QShowEventD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QShowEventD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN10QShowEventD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QShowEventD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QShowEventD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QShowEventD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QShowEventD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QShowEventD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN10QShowEventD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QShowEventD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QShowEventD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QShowEventD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QShowEventD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QShowEventD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN10QShowEventD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QShowEventD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QShowEventD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QShowEventD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QHideEventC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QHideEventC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN10QHideEventC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QHideEventC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QHideEventC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QHideEventC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QHideEventC1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QHideEventC1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN10QHideEventC1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QHideEventC1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QHideEventC1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QHideEventC1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QHideEventD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QHideEventD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN10QHideEventD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QHideEventD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QHideEventD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QHideEventD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QHideEventD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QHideEventD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN10QHideEventD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QHideEventD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QHideEventD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QHideEventD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QHideEventD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QHideEventD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN10QHideEventD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QHideEventD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QHideEventD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QHideEventD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN17QContextMenuEventC2ENS_6ReasonERK6QPointS3_6QFlagsIN2Qt16KeyboardModifierEE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QContextMenuEventC2ENS_6ReasonERK6QPointS3_6QFlagsIN2Qt16KeyboardModifierEE )( void *scorep_libwrap_arg_this, QContextMenuEvent::Reason reason, const QPoint & pos, const QPoint & globalPos, Qt::KeyboardModifiers modifiers )
{
    LIBWRAP_EARLY_INIT( _ZN17QContextMenuEventC2ENS_6ReasonERK6QPointS3_6QFlagsIN2Qt16KeyboardModifierEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QContextMenuEventC2ENS_6ReasonERK6QPointS3_6QFlagsIN2Qt16KeyboardModifierEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QContextMenuEventC2ENS_6ReasonERK6QPointS3_6QFlagsIN2Qt16KeyboardModifierEE, ( scorep_libwrap_arg_this, reason, pos, globalPos, modifiers ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QContextMenuEventC2ENS_6ReasonERK6QPointS3_6QFlagsIN2Qt16KeyboardModifierEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN17QContextMenuEventC1ENS_6ReasonERK6QPointS3_6QFlagsIN2Qt16KeyboardModifierEE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QContextMenuEventC1ENS_6ReasonERK6QPointS3_6QFlagsIN2Qt16KeyboardModifierEE )( void *scorep_libwrap_arg_this, QContextMenuEvent::Reason reason, const QPoint & pos, const QPoint & globalPos, Qt::KeyboardModifiers modifiers )
{
    LIBWRAP_EARLY_INIT( _ZN17QContextMenuEventC1ENS_6ReasonERK6QPointS3_6QFlagsIN2Qt16KeyboardModifierEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QContextMenuEventC1ENS_6ReasonERK6QPointS3_6QFlagsIN2Qt16KeyboardModifierEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QContextMenuEventC1ENS_6ReasonERK6QPointS3_6QFlagsIN2Qt16KeyboardModifierEE, ( scorep_libwrap_arg_this, reason, pos, globalPos, modifiers ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QContextMenuEventC1ENS_6ReasonERK6QPointS3_6QFlagsIN2Qt16KeyboardModifierEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN17QContextMenuEventC2ENS_6ReasonERK6QPointS3_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QContextMenuEventC2ENS_6ReasonERK6QPointS3_ )( void *scorep_libwrap_arg_this, QContextMenuEvent::Reason reason, const QPoint & pos, const QPoint & globalPos )
{
    LIBWRAP_EARLY_INIT( _ZN17QContextMenuEventC2ENS_6ReasonERK6QPointS3_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QContextMenuEventC2ENS_6ReasonERK6QPointS3_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QContextMenuEventC2ENS_6ReasonERK6QPointS3_, ( scorep_libwrap_arg_this, reason, pos, globalPos ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QContextMenuEventC2ENS_6ReasonERK6QPointS3_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN17QContextMenuEventC1ENS_6ReasonERK6QPointS3_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QContextMenuEventC1ENS_6ReasonERK6QPointS3_ )( void *scorep_libwrap_arg_this, QContextMenuEvent::Reason reason, const QPoint & pos, const QPoint & globalPos )
{
    LIBWRAP_EARLY_INIT( _ZN17QContextMenuEventC1ENS_6ReasonERK6QPointS3_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QContextMenuEventC1ENS_6ReasonERK6QPointS3_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QContextMenuEventC1ENS_6ReasonERK6QPointS3_, ( scorep_libwrap_arg_this, reason, pos, globalPos ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QContextMenuEventC1ENS_6ReasonERK6QPointS3_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN17QContextMenuEventC2ENS_6ReasonERK6QPoint
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QContextMenuEventC2ENS_6ReasonERK6QPoint )( void *scorep_libwrap_arg_this, QContextMenuEvent::Reason reason, const QPoint & pos )
{
    LIBWRAP_EARLY_INIT( _ZN17QContextMenuEventC2ENS_6ReasonERK6QPoint );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QContextMenuEventC2ENS_6ReasonERK6QPoint );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QContextMenuEventC2ENS_6ReasonERK6QPoint, ( scorep_libwrap_arg_this, reason, pos ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QContextMenuEventC2ENS_6ReasonERK6QPoint );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN17QContextMenuEventC1ENS_6ReasonERK6QPoint
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QContextMenuEventC1ENS_6ReasonERK6QPoint )( void *scorep_libwrap_arg_this, QContextMenuEvent::Reason reason, const QPoint & pos )
{
    LIBWRAP_EARLY_INIT( _ZN17QContextMenuEventC1ENS_6ReasonERK6QPoint );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QContextMenuEventC1ENS_6ReasonERK6QPoint );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QContextMenuEventC1ENS_6ReasonERK6QPoint, ( scorep_libwrap_arg_this, reason, pos ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QContextMenuEventC1ENS_6ReasonERK6QPoint );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN17QContextMenuEventD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QContextMenuEventD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN17QContextMenuEventD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QContextMenuEventD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QContextMenuEventD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QContextMenuEventD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN17QContextMenuEventD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QContextMenuEventD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN17QContextMenuEventD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QContextMenuEventD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QContextMenuEventD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QContextMenuEventD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN17QContextMenuEventD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QContextMenuEventD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN17QContextMenuEventD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QContextMenuEventD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QContextMenuEventD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QContextMenuEventD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN17QInputMethodEventC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QInputMethodEventC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN17QInputMethodEventC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QInputMethodEventC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QInputMethodEventC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QInputMethodEventC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN17QInputMethodEventC1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QInputMethodEventC1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN17QInputMethodEventC1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QInputMethodEventC1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QInputMethodEventC1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QInputMethodEventC1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN17QInputMethodEventC2ERK7QStringRK5QListINS_9AttributeEE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QInputMethodEventC2ERK7QStringRK5QListINS_9AttributeEE )( void *scorep_libwrap_arg_this, const QString & preeditText, const QList<QInputMethodEvent::Attribute> & attributes )
{
    LIBWRAP_EARLY_INIT( _ZN17QInputMethodEventC2ERK7QStringRK5QListINS_9AttributeEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QInputMethodEventC2ERK7QStringRK5QListINS_9AttributeEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QInputMethodEventC2ERK7QStringRK5QListINS_9AttributeEE, ( scorep_libwrap_arg_this, preeditText, attributes ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QInputMethodEventC2ERK7QStringRK5QListINS_9AttributeEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN17QInputMethodEventC1ERK7QStringRK5QListINS_9AttributeEE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QInputMethodEventC1ERK7QStringRK5QListINS_9AttributeEE )( void *scorep_libwrap_arg_this, const QString & preeditText, const QList<QInputMethodEvent::Attribute> & attributes )
{
    LIBWRAP_EARLY_INIT( _ZN17QInputMethodEventC1ERK7QStringRK5QListINS_9AttributeEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QInputMethodEventC1ERK7QStringRK5QListINS_9AttributeEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QInputMethodEventC1ERK7QStringRK5QListINS_9AttributeEE, ( scorep_libwrap_arg_this, preeditText, attributes ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QInputMethodEventC1ERK7QStringRK5QListINS_9AttributeEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN17QInputMethodEventD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QInputMethodEventD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN17QInputMethodEventD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QInputMethodEventD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QInputMethodEventD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QInputMethodEventD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN17QInputMethodEventD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QInputMethodEventD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN17QInputMethodEventD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QInputMethodEventD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QInputMethodEventD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QInputMethodEventD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN17QInputMethodEventD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QInputMethodEventD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN17QInputMethodEventD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QInputMethodEventD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QInputMethodEventD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QInputMethodEventD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN17QInputMethodEvent15setCommitStringERK7QStringii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QInputMethodEvent15setCommitStringERK7QStringii )( void *scorep_libwrap_arg_this, const QString & commitString, int replaceFrom, int replaceLength )
{
    LIBWRAP_EARLY_INIT( _ZN17QInputMethodEvent15setCommitStringERK7QStringii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QInputMethodEvent15setCommitStringERK7QStringii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QInputMethodEvent15setCommitStringERK7QStringii, ( scorep_libwrap_arg_this, commitString, replaceFrom, replaceLength ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QInputMethodEvent15setCommitStringERK7QStringii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN17QInputMethodEventC2ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QInputMethodEventC2ERKS_ )( void *scorep_libwrap_arg_this, const QInputMethodEvent & other )
{
    LIBWRAP_EARLY_INIT( _ZN17QInputMethodEventC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QInputMethodEventC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QInputMethodEventC2ERKS_, ( scorep_libwrap_arg_this, other ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QInputMethodEventC2ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN17QInputMethodEventC1ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QInputMethodEventC1ERKS_ )( void *scorep_libwrap_arg_this, const QInputMethodEvent & other )
{
    LIBWRAP_EARLY_INIT( _ZN17QInputMethodEventC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QInputMethodEventC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QInputMethodEventC1ERKS_, ( scorep_libwrap_arg_this, other ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QInputMethodEventC1ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN22QInputMethodQueryEventC2E6QFlagsIN2Qt16InputMethodQueryEE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN22QInputMethodQueryEventC2E6QFlagsIN2Qt16InputMethodQueryEE )( void *scorep_libwrap_arg_this, Qt::InputMethodQueries queries )
{
    LIBWRAP_EARLY_INIT( _ZN22QInputMethodQueryEventC2E6QFlagsIN2Qt16InputMethodQueryEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN22QInputMethodQueryEventC2E6QFlagsIN2Qt16InputMethodQueryEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN22QInputMethodQueryEventC2E6QFlagsIN2Qt16InputMethodQueryEE, ( scorep_libwrap_arg_this, queries ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN22QInputMethodQueryEventC2E6QFlagsIN2Qt16InputMethodQueryEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN22QInputMethodQueryEventC1E6QFlagsIN2Qt16InputMethodQueryEE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN22QInputMethodQueryEventC1E6QFlagsIN2Qt16InputMethodQueryEE )( void *scorep_libwrap_arg_this, Qt::InputMethodQueries queries )
{
    LIBWRAP_EARLY_INIT( _ZN22QInputMethodQueryEventC1E6QFlagsIN2Qt16InputMethodQueryEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN22QInputMethodQueryEventC1E6QFlagsIN2Qt16InputMethodQueryEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN22QInputMethodQueryEventC1E6QFlagsIN2Qt16InputMethodQueryEE, ( scorep_libwrap_arg_this, queries ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN22QInputMethodQueryEventC1E6QFlagsIN2Qt16InputMethodQueryEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN22QInputMethodQueryEventD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN22QInputMethodQueryEventD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN22QInputMethodQueryEventD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN22QInputMethodQueryEventD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN22QInputMethodQueryEventD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN22QInputMethodQueryEventD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN22QInputMethodQueryEventD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN22QInputMethodQueryEventD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN22QInputMethodQueryEventD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN22QInputMethodQueryEventD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN22QInputMethodQueryEventD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN22QInputMethodQueryEventD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN22QInputMethodQueryEventD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN22QInputMethodQueryEventD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN22QInputMethodQueryEventD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN22QInputMethodQueryEventD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN22QInputMethodQueryEventD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN22QInputMethodQueryEventD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN22QInputMethodQueryEvent8setValueEN2Qt16InputMethodQueryERK8QVariant
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN22QInputMethodQueryEvent8setValueEN2Qt16InputMethodQueryERK8QVariant )( void *scorep_libwrap_arg_this, Qt::InputMethodQuery query, const QVariant & value )
{
    LIBWRAP_EARLY_INIT( _ZN22QInputMethodQueryEvent8setValueEN2Qt16InputMethodQueryERK8QVariant );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN22QInputMethodQueryEvent8setValueEN2Qt16InputMethodQueryERK8QVariant );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN22QInputMethodQueryEvent8setValueEN2Qt16InputMethodQueryERK8QVariant, ( scorep_libwrap_arg_this, query, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN22QInputMethodQueryEvent8setValueEN2Qt16InputMethodQueryERK8QVariant );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK22QInputMethodQueryEvent5valueEN2Qt16InputMethodQueryE
QVariant
SCOREP_LIBWRAP_FUNC_NAME( _ZNK22QInputMethodQueryEvent5valueEN2Qt16InputMethodQueryE )( void *scorep_libwrap_arg_this, Qt::InputMethodQuery query )
{
    LIBWRAP_EARLY_INIT( _ZNK22QInputMethodQueryEvent5valueEN2Qt16InputMethodQueryE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK22QInputMethodQueryEvent5valueEN2Qt16InputMethodQueryE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QVariant scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK22QInputMethodQueryEvent5valueEN2Qt16InputMethodQueryE, ( scorep_libwrap_arg_this, query ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK22QInputMethodQueryEvent5valueEN2Qt16InputMethodQueryE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QDropEventC2ERK7QPointF6QFlagsIN2Qt10DropActionEEPK9QMimeDataS3_INS4_11MouseButtonEES3_INS4_16KeyboardModifierEEN6QEvent4TypeE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QDropEventC2ERK7QPointF6QFlagsIN2Qt10DropActionEEPK9QMimeDataS3_INS4_11MouseButtonEES3_INS4_16KeyboardModifierEEN6QEvent4TypeE )( void *scorep_libwrap_arg_this, const QPointF & pos, Qt::DropActions actions, const QMimeData * data, Qt::MouseButtons buttons, Qt::KeyboardModifiers modifiers, QEvent::Type type )
{
    LIBWRAP_EARLY_INIT( _ZN10QDropEventC2ERK7QPointF6QFlagsIN2Qt10DropActionEEPK9QMimeDataS3_INS4_11MouseButtonEES3_INS4_16KeyboardModifierEEN6QEvent4TypeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QDropEventC2ERK7QPointF6QFlagsIN2Qt10DropActionEEPK9QMimeDataS3_INS4_11MouseButtonEES3_INS4_16KeyboardModifierEEN6QEvent4TypeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QDropEventC2ERK7QPointF6QFlagsIN2Qt10DropActionEEPK9QMimeDataS3_INS4_11MouseButtonEES3_INS4_16KeyboardModifierEEN6QEvent4TypeE, ( scorep_libwrap_arg_this, pos, actions, data, buttons, modifiers, type ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QDropEventC2ERK7QPointF6QFlagsIN2Qt10DropActionEEPK9QMimeDataS3_INS4_11MouseButtonEES3_INS4_16KeyboardModifierEEN6QEvent4TypeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QDropEventC1ERK7QPointF6QFlagsIN2Qt10DropActionEEPK9QMimeDataS3_INS4_11MouseButtonEES3_INS4_16KeyboardModifierEEN6QEvent4TypeE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QDropEventC1ERK7QPointF6QFlagsIN2Qt10DropActionEEPK9QMimeDataS3_INS4_11MouseButtonEES3_INS4_16KeyboardModifierEEN6QEvent4TypeE )( void *scorep_libwrap_arg_this, const QPointF & pos, Qt::DropActions actions, const QMimeData * data, Qt::MouseButtons buttons, Qt::KeyboardModifiers modifiers, QEvent::Type type )
{
    LIBWRAP_EARLY_INIT( _ZN10QDropEventC1ERK7QPointF6QFlagsIN2Qt10DropActionEEPK9QMimeDataS3_INS4_11MouseButtonEES3_INS4_16KeyboardModifierEEN6QEvent4TypeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QDropEventC1ERK7QPointF6QFlagsIN2Qt10DropActionEEPK9QMimeDataS3_INS4_11MouseButtonEES3_INS4_16KeyboardModifierEEN6QEvent4TypeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QDropEventC1ERK7QPointF6QFlagsIN2Qt10DropActionEEPK9QMimeDataS3_INS4_11MouseButtonEES3_INS4_16KeyboardModifierEEN6QEvent4TypeE, ( scorep_libwrap_arg_this, pos, actions, data, buttons, modifiers, type ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QDropEventC1ERK7QPointF6QFlagsIN2Qt10DropActionEEPK9QMimeDataS3_INS4_11MouseButtonEES3_INS4_16KeyboardModifierEEN6QEvent4TypeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QDropEventD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QDropEventD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN10QDropEventD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QDropEventD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QDropEventD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QDropEventD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QDropEventD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QDropEventD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN10QDropEventD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QDropEventD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QDropEventD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QDropEventD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QDropEventD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QDropEventD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN10QDropEventD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QDropEventD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QDropEventD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QDropEventD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QDropEvent13setDropActionEN2Qt10DropActionE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QDropEvent13setDropActionEN2Qt10DropActionE )( void *scorep_libwrap_arg_this, Qt::DropAction action )
{
    LIBWRAP_EARLY_INIT( _ZN10QDropEvent13setDropActionEN2Qt10DropActionE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QDropEvent13setDropActionEN2Qt10DropActionE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QDropEvent13setDropActionEN2Qt10DropActionE, ( scorep_libwrap_arg_this, action ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QDropEvent13setDropActionEN2Qt10DropActionE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK10QDropEvent6sourceEv
QObject *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QDropEvent6sourceEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QDropEvent6sourceEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QDropEvent6sourceEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QObject * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QDropEvent6sourceEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QDropEvent6sourceEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QDragMoveEventC2ERK6QPoint6QFlagsIN2Qt10DropActionEEPK9QMimeDataS3_INS4_11MouseButtonEES3_INS4_16KeyboardModifierEEN6QEvent4TypeE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QDragMoveEventC2ERK6QPoint6QFlagsIN2Qt10DropActionEEPK9QMimeDataS3_INS4_11MouseButtonEES3_INS4_16KeyboardModifierEEN6QEvent4TypeE )( void *scorep_libwrap_arg_this, const QPoint & pos, Qt::DropActions actions, const QMimeData * data, Qt::MouseButtons buttons, Qt::KeyboardModifiers modifiers, QEvent::Type type )
{
    LIBWRAP_EARLY_INIT( _ZN14QDragMoveEventC2ERK6QPoint6QFlagsIN2Qt10DropActionEEPK9QMimeDataS3_INS4_11MouseButtonEES3_INS4_16KeyboardModifierEEN6QEvent4TypeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QDragMoveEventC2ERK6QPoint6QFlagsIN2Qt10DropActionEEPK9QMimeDataS3_INS4_11MouseButtonEES3_INS4_16KeyboardModifierEEN6QEvent4TypeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QDragMoveEventC2ERK6QPoint6QFlagsIN2Qt10DropActionEEPK9QMimeDataS3_INS4_11MouseButtonEES3_INS4_16KeyboardModifierEEN6QEvent4TypeE, ( scorep_libwrap_arg_this, pos, actions, data, buttons, modifiers, type ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QDragMoveEventC2ERK6QPoint6QFlagsIN2Qt10DropActionEEPK9QMimeDataS3_INS4_11MouseButtonEES3_INS4_16KeyboardModifierEEN6QEvent4TypeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QDragMoveEventC1ERK6QPoint6QFlagsIN2Qt10DropActionEEPK9QMimeDataS3_INS4_11MouseButtonEES3_INS4_16KeyboardModifierEEN6QEvent4TypeE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QDragMoveEventC1ERK6QPoint6QFlagsIN2Qt10DropActionEEPK9QMimeDataS3_INS4_11MouseButtonEES3_INS4_16KeyboardModifierEEN6QEvent4TypeE )( void *scorep_libwrap_arg_this, const QPoint & pos, Qt::DropActions actions, const QMimeData * data, Qt::MouseButtons buttons, Qt::KeyboardModifiers modifiers, QEvent::Type type )
{
    LIBWRAP_EARLY_INIT( _ZN14QDragMoveEventC1ERK6QPoint6QFlagsIN2Qt10DropActionEEPK9QMimeDataS3_INS4_11MouseButtonEES3_INS4_16KeyboardModifierEEN6QEvent4TypeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QDragMoveEventC1ERK6QPoint6QFlagsIN2Qt10DropActionEEPK9QMimeDataS3_INS4_11MouseButtonEES3_INS4_16KeyboardModifierEEN6QEvent4TypeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QDragMoveEventC1ERK6QPoint6QFlagsIN2Qt10DropActionEEPK9QMimeDataS3_INS4_11MouseButtonEES3_INS4_16KeyboardModifierEEN6QEvent4TypeE, ( scorep_libwrap_arg_this, pos, actions, data, buttons, modifiers, type ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QDragMoveEventC1ERK6QPoint6QFlagsIN2Qt10DropActionEEPK9QMimeDataS3_INS4_11MouseButtonEES3_INS4_16KeyboardModifierEEN6QEvent4TypeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QDragMoveEventD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QDragMoveEventD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN14QDragMoveEventD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QDragMoveEventD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QDragMoveEventD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QDragMoveEventD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QDragMoveEventD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QDragMoveEventD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN14QDragMoveEventD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QDragMoveEventD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QDragMoveEventD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QDragMoveEventD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QDragMoveEventD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QDragMoveEventD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN14QDragMoveEventD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QDragMoveEventD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QDragMoveEventD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QDragMoveEventD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QDragEnterEventC2ERK6QPoint6QFlagsIN2Qt10DropActionEEPK9QMimeDataS3_INS4_11MouseButtonEES3_INS4_16KeyboardModifierEE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QDragEnterEventC2ERK6QPoint6QFlagsIN2Qt10DropActionEEPK9QMimeDataS3_INS4_11MouseButtonEES3_INS4_16KeyboardModifierEE )( void *scorep_libwrap_arg_this, const QPoint & pos, Qt::DropActions actions, const QMimeData * data, Qt::MouseButtons buttons, Qt::KeyboardModifiers modifiers )
{
    LIBWRAP_EARLY_INIT( _ZN15QDragEnterEventC2ERK6QPoint6QFlagsIN2Qt10DropActionEEPK9QMimeDataS3_INS4_11MouseButtonEES3_INS4_16KeyboardModifierEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QDragEnterEventC2ERK6QPoint6QFlagsIN2Qt10DropActionEEPK9QMimeDataS3_INS4_11MouseButtonEES3_INS4_16KeyboardModifierEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QDragEnterEventC2ERK6QPoint6QFlagsIN2Qt10DropActionEEPK9QMimeDataS3_INS4_11MouseButtonEES3_INS4_16KeyboardModifierEE, ( scorep_libwrap_arg_this, pos, actions, data, buttons, modifiers ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QDragEnterEventC2ERK6QPoint6QFlagsIN2Qt10DropActionEEPK9QMimeDataS3_INS4_11MouseButtonEES3_INS4_16KeyboardModifierEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QDragEnterEventC1ERK6QPoint6QFlagsIN2Qt10DropActionEEPK9QMimeDataS3_INS4_11MouseButtonEES3_INS4_16KeyboardModifierEE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QDragEnterEventC1ERK6QPoint6QFlagsIN2Qt10DropActionEEPK9QMimeDataS3_INS4_11MouseButtonEES3_INS4_16KeyboardModifierEE )( void *scorep_libwrap_arg_this, const QPoint & pos, Qt::DropActions actions, const QMimeData * data, Qt::MouseButtons buttons, Qt::KeyboardModifiers modifiers )
{
    LIBWRAP_EARLY_INIT( _ZN15QDragEnterEventC1ERK6QPoint6QFlagsIN2Qt10DropActionEEPK9QMimeDataS3_INS4_11MouseButtonEES3_INS4_16KeyboardModifierEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QDragEnterEventC1ERK6QPoint6QFlagsIN2Qt10DropActionEEPK9QMimeDataS3_INS4_11MouseButtonEES3_INS4_16KeyboardModifierEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QDragEnterEventC1ERK6QPoint6QFlagsIN2Qt10DropActionEEPK9QMimeDataS3_INS4_11MouseButtonEES3_INS4_16KeyboardModifierEE, ( scorep_libwrap_arg_this, pos, actions, data, buttons, modifiers ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QDragEnterEventC1ERK6QPoint6QFlagsIN2Qt10DropActionEEPK9QMimeDataS3_INS4_11MouseButtonEES3_INS4_16KeyboardModifierEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QDragEnterEventD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QDragEnterEventD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN15QDragEnterEventD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QDragEnterEventD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QDragEnterEventD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QDragEnterEventD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QDragEnterEventD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QDragEnterEventD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN15QDragEnterEventD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QDragEnterEventD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QDragEnterEventD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QDragEnterEventD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QDragEnterEventD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QDragEnterEventD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN15QDragEnterEventD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QDragEnterEventD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QDragEnterEventD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QDragEnterEventD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QDragLeaveEventC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QDragLeaveEventC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN15QDragLeaveEventC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QDragLeaveEventC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QDragLeaveEventC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QDragLeaveEventC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QDragLeaveEventC1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QDragLeaveEventC1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN15QDragLeaveEventC1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QDragLeaveEventC1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QDragLeaveEventC1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QDragLeaveEventC1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QDragLeaveEventD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QDragLeaveEventD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN15QDragLeaveEventD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QDragLeaveEventD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QDragLeaveEventD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QDragLeaveEventD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QDragLeaveEventD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QDragLeaveEventD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN15QDragLeaveEventD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QDragLeaveEventD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QDragLeaveEventD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QDragLeaveEventD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QDragLeaveEventD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QDragLeaveEventD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN15QDragLeaveEventD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QDragLeaveEventD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QDragLeaveEventD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QDragLeaveEventD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QHelpEventC2EN6QEvent4TypeERK6QPointS4_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QHelpEventC2EN6QEvent4TypeERK6QPointS4_ )( void *scorep_libwrap_arg_this, QEvent::Type type, const QPoint & pos, const QPoint & globalPos )
{
    LIBWRAP_EARLY_INIT( _ZN10QHelpEventC2EN6QEvent4TypeERK6QPointS4_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QHelpEventC2EN6QEvent4TypeERK6QPointS4_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QHelpEventC2EN6QEvent4TypeERK6QPointS4_, ( scorep_libwrap_arg_this, type, pos, globalPos ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QHelpEventC2EN6QEvent4TypeERK6QPointS4_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QHelpEventC1EN6QEvent4TypeERK6QPointS4_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QHelpEventC1EN6QEvent4TypeERK6QPointS4_ )( void *scorep_libwrap_arg_this, QEvent::Type type, const QPoint & pos, const QPoint & globalPos )
{
    LIBWRAP_EARLY_INIT( _ZN10QHelpEventC1EN6QEvent4TypeERK6QPointS4_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QHelpEventC1EN6QEvent4TypeERK6QPointS4_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QHelpEventC1EN6QEvent4TypeERK6QPointS4_, ( scorep_libwrap_arg_this, type, pos, globalPos ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QHelpEventC1EN6QEvent4TypeERK6QPointS4_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QHelpEventD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QHelpEventD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN10QHelpEventD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QHelpEventD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QHelpEventD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QHelpEventD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QHelpEventD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QHelpEventD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN10QHelpEventD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QHelpEventD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QHelpEventD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QHelpEventD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QHelpEventD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QHelpEventD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN10QHelpEventD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QHelpEventD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QHelpEventD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QHelpEventD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QStatusTipEventC2ERK7QString
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QStatusTipEventC2ERK7QString )( void *scorep_libwrap_arg_this, const QString & tip )
{
    LIBWRAP_EARLY_INIT( _ZN15QStatusTipEventC2ERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QStatusTipEventC2ERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QStatusTipEventC2ERK7QString, ( scorep_libwrap_arg_this, tip ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QStatusTipEventC2ERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QStatusTipEventC1ERK7QString
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QStatusTipEventC1ERK7QString )( void *scorep_libwrap_arg_this, const QString & tip )
{
    LIBWRAP_EARLY_INIT( _ZN15QStatusTipEventC1ERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QStatusTipEventC1ERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QStatusTipEventC1ERK7QString, ( scorep_libwrap_arg_this, tip ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QStatusTipEventC1ERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QStatusTipEventD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QStatusTipEventD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN15QStatusTipEventD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QStatusTipEventD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QStatusTipEventD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QStatusTipEventD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QStatusTipEventD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QStatusTipEventD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN15QStatusTipEventD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QStatusTipEventD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QStatusTipEventD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QStatusTipEventD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QStatusTipEventD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QStatusTipEventD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN15QStatusTipEventD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QStatusTipEventD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QStatusTipEventD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QStatusTipEventD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN22QWhatsThisClickedEventC2ERK7QString
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN22QWhatsThisClickedEventC2ERK7QString )( void *scorep_libwrap_arg_this, const QString & href )
{
    LIBWRAP_EARLY_INIT( _ZN22QWhatsThisClickedEventC2ERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN22QWhatsThisClickedEventC2ERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN22QWhatsThisClickedEventC2ERK7QString, ( scorep_libwrap_arg_this, href ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN22QWhatsThisClickedEventC2ERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN22QWhatsThisClickedEventC1ERK7QString
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN22QWhatsThisClickedEventC1ERK7QString )( void *scorep_libwrap_arg_this, const QString & href )
{
    LIBWRAP_EARLY_INIT( _ZN22QWhatsThisClickedEventC1ERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN22QWhatsThisClickedEventC1ERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN22QWhatsThisClickedEventC1ERK7QString, ( scorep_libwrap_arg_this, href ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN22QWhatsThisClickedEventC1ERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN22QWhatsThisClickedEventD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN22QWhatsThisClickedEventD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN22QWhatsThisClickedEventD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN22QWhatsThisClickedEventD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN22QWhatsThisClickedEventD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN22QWhatsThisClickedEventD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN22QWhatsThisClickedEventD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN22QWhatsThisClickedEventD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN22QWhatsThisClickedEventD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN22QWhatsThisClickedEventD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN22QWhatsThisClickedEventD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN22QWhatsThisClickedEventD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN22QWhatsThisClickedEventD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN22QWhatsThisClickedEventD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN22QWhatsThisClickedEventD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN22QWhatsThisClickedEventD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN22QWhatsThisClickedEventD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN22QWhatsThisClickedEventD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QActionEventC2EiP7QActionS1_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QActionEventC2EiP7QActionS1_ )( void *scorep_libwrap_arg_this, int type, QAction * action, QAction * before )
{
    LIBWRAP_EARLY_INIT( _ZN12QActionEventC2EiP7QActionS1_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QActionEventC2EiP7QActionS1_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QActionEventC2EiP7QActionS1_, ( scorep_libwrap_arg_this, type, action, before ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QActionEventC2EiP7QActionS1_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QActionEventC1EiP7QActionS1_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QActionEventC1EiP7QActionS1_ )( void *scorep_libwrap_arg_this, int type, QAction * action, QAction * before )
{
    LIBWRAP_EARLY_INIT( _ZN12QActionEventC1EiP7QActionS1_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QActionEventC1EiP7QActionS1_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QActionEventC1EiP7QActionS1_, ( scorep_libwrap_arg_this, type, action, before ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QActionEventC1EiP7QActionS1_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QActionEventD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QActionEventD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QActionEventD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QActionEventD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QActionEventD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QActionEventD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QActionEventD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QActionEventD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QActionEventD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QActionEventD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QActionEventD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QActionEventD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QActionEventD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QActionEventD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QActionEventD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QActionEventD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QActionEventD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QActionEventD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QFileOpenEventC2ERK7QString
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QFileOpenEventC2ERK7QString )( void *scorep_libwrap_arg_this, const QString & file )
{
    LIBWRAP_EARLY_INIT( _ZN14QFileOpenEventC2ERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QFileOpenEventC2ERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QFileOpenEventC2ERK7QString, ( scorep_libwrap_arg_this, file ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QFileOpenEventC2ERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QFileOpenEventC1ERK7QString
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QFileOpenEventC1ERK7QString )( void *scorep_libwrap_arg_this, const QString & file )
{
    LIBWRAP_EARLY_INIT( _ZN14QFileOpenEventC1ERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QFileOpenEventC1ERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QFileOpenEventC1ERK7QString, ( scorep_libwrap_arg_this, file ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QFileOpenEventC1ERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QFileOpenEventC2ERK4QUrl
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QFileOpenEventC2ERK4QUrl )( void *scorep_libwrap_arg_this, const QUrl & url )
{
    LIBWRAP_EARLY_INIT( _ZN14QFileOpenEventC2ERK4QUrl );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QFileOpenEventC2ERK4QUrl );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QFileOpenEventC2ERK4QUrl, ( scorep_libwrap_arg_this, url ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QFileOpenEventC2ERK4QUrl );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QFileOpenEventC1ERK4QUrl
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QFileOpenEventC1ERK4QUrl )( void *scorep_libwrap_arg_this, const QUrl & url )
{
    LIBWRAP_EARLY_INIT( _ZN14QFileOpenEventC1ERK4QUrl );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QFileOpenEventC1ERK4QUrl );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QFileOpenEventC1ERK4QUrl, ( scorep_libwrap_arg_this, url ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QFileOpenEventC1ERK4QUrl );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QFileOpenEventD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QFileOpenEventD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN14QFileOpenEventD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QFileOpenEventD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QFileOpenEventD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QFileOpenEventD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QFileOpenEventD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QFileOpenEventD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN14QFileOpenEventD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QFileOpenEventD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QFileOpenEventD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QFileOpenEventD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QFileOpenEventD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QFileOpenEventD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN14QFileOpenEventD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QFileOpenEventD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QFileOpenEventD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QFileOpenEventD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK14QFileOpenEvent8openFileER5QFile6QFlagsIN9QIODevice12OpenModeFlagEE
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QFileOpenEvent8openFileER5QFile6QFlagsIN9QIODevice12OpenModeFlagEE )( void *scorep_libwrap_arg_this, QFile & file, QIODevice::OpenMode flags )
{
    LIBWRAP_EARLY_INIT( _ZNK14QFileOpenEvent8openFileER5QFile6QFlagsIN9QIODevice12OpenModeFlagEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QFileOpenEvent8openFileER5QFile6QFlagsIN9QIODevice12OpenModeFlagEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QFileOpenEvent8openFileER5QFile6QFlagsIN9QIODevice12OpenModeFlagEE, ( scorep_libwrap_arg_this, file, flags ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QFileOpenEvent8openFileER5QFile6QFlagsIN9QIODevice12OpenModeFlagEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN19QToolBarChangeEventC2Eb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QToolBarChangeEventC2Eb )( void *scorep_libwrap_arg_this, bool t )
{
    LIBWRAP_EARLY_INIT( _ZN19QToolBarChangeEventC2Eb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QToolBarChangeEventC2Eb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN19QToolBarChangeEventC2Eb, ( scorep_libwrap_arg_this, t ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QToolBarChangeEventC2Eb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN19QToolBarChangeEventC1Eb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QToolBarChangeEventC1Eb )( void *scorep_libwrap_arg_this, bool t )
{
    LIBWRAP_EARLY_INIT( _ZN19QToolBarChangeEventC1Eb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QToolBarChangeEventC1Eb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN19QToolBarChangeEventC1Eb, ( scorep_libwrap_arg_this, t ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QToolBarChangeEventC1Eb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN19QToolBarChangeEventD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QToolBarChangeEventD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN19QToolBarChangeEventD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QToolBarChangeEventD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN19QToolBarChangeEventD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QToolBarChangeEventD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN19QToolBarChangeEventD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QToolBarChangeEventD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN19QToolBarChangeEventD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QToolBarChangeEventD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN19QToolBarChangeEventD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QToolBarChangeEventD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN19QToolBarChangeEventD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QToolBarChangeEventD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN19QToolBarChangeEventD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QToolBarChangeEventD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN19QToolBarChangeEventD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QToolBarChangeEventD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QShortcutEventC2ERK12QKeySequenceib
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QShortcutEventC2ERK12QKeySequenceib )( void *scorep_libwrap_arg_this, const QKeySequence & key, int id, bool ambiguous )
{
    LIBWRAP_EARLY_INIT( _ZN14QShortcutEventC2ERK12QKeySequenceib );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QShortcutEventC2ERK12QKeySequenceib );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QShortcutEventC2ERK12QKeySequenceib, ( scorep_libwrap_arg_this, key, id, ambiguous ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QShortcutEventC2ERK12QKeySequenceib );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QShortcutEventC1ERK12QKeySequenceib
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QShortcutEventC1ERK12QKeySequenceib )( void *scorep_libwrap_arg_this, const QKeySequence & key, int id, bool ambiguous )
{
    LIBWRAP_EARLY_INIT( _ZN14QShortcutEventC1ERK12QKeySequenceib );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QShortcutEventC1ERK12QKeySequenceib );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QShortcutEventC1ERK12QKeySequenceib, ( scorep_libwrap_arg_this, key, id, ambiguous ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QShortcutEventC1ERK12QKeySequenceib );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QShortcutEventD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QShortcutEventD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN14QShortcutEventD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QShortcutEventD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QShortcutEventD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QShortcutEventD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QShortcutEventD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QShortcutEventD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN14QShortcutEventD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QShortcutEventD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QShortcutEventD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QShortcutEventD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QShortcutEventD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QShortcutEventD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN14QShortcutEventD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QShortcutEventD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QShortcutEventD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QShortcutEventD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN23QWindowStateChangeEventC2E6QFlagsIN2Qt11WindowStateEEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN23QWindowStateChangeEventC2E6QFlagsIN2Qt11WindowStateEEb )( void *scorep_libwrap_arg_this, Qt::WindowStates aOldState, bool isOverride )
{
    LIBWRAP_EARLY_INIT( _ZN23QWindowStateChangeEventC2E6QFlagsIN2Qt11WindowStateEEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN23QWindowStateChangeEventC2E6QFlagsIN2Qt11WindowStateEEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN23QWindowStateChangeEventC2E6QFlagsIN2Qt11WindowStateEEb, ( scorep_libwrap_arg_this, aOldState, isOverride ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN23QWindowStateChangeEventC2E6QFlagsIN2Qt11WindowStateEEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN23QWindowStateChangeEventC1E6QFlagsIN2Qt11WindowStateEEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN23QWindowStateChangeEventC1E6QFlagsIN2Qt11WindowStateEEb )( void *scorep_libwrap_arg_this, Qt::WindowStates aOldState, bool isOverride )
{
    LIBWRAP_EARLY_INIT( _ZN23QWindowStateChangeEventC1E6QFlagsIN2Qt11WindowStateEEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN23QWindowStateChangeEventC1E6QFlagsIN2Qt11WindowStateEEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN23QWindowStateChangeEventC1E6QFlagsIN2Qt11WindowStateEEb, ( scorep_libwrap_arg_this, aOldState, isOverride ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN23QWindowStateChangeEventC1E6QFlagsIN2Qt11WindowStateEEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN23QWindowStateChangeEventD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN23QWindowStateChangeEventD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN23QWindowStateChangeEventD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN23QWindowStateChangeEventD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN23QWindowStateChangeEventD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN23QWindowStateChangeEventD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN23QWindowStateChangeEventD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN23QWindowStateChangeEventD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN23QWindowStateChangeEventD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN23QWindowStateChangeEventD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN23QWindowStateChangeEventD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN23QWindowStateChangeEventD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN23QWindowStateChangeEventD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN23QWindowStateChangeEventD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN23QWindowStateChangeEventD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN23QWindowStateChangeEventD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN23QWindowStateChangeEventD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN23QWindowStateChangeEventD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK23QWindowStateChangeEvent10isOverrideEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK23QWindowStateChangeEvent10isOverrideEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK23QWindowStateChangeEvent10isOverrideEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK23QWindowStateChangeEvent10isOverrideEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK23QWindowStateChangeEvent10isOverrideEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK23QWindowStateChangeEvent10isOverrideEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _Zls6QDebugPK6QEvent
QDebug
SCOREP_LIBWRAP_FUNC_NAME( _Zls6QDebugPK6QEvent )( QDebug scorep_libwrap_arg_1, const QEvent * scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _Zls6QDebugPK6QEvent );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _Zls6QDebugPK6QEvent );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDebug scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _Zls6QDebugPK6QEvent, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _Zls6QDebugPK6QEvent );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QTouchEvent10TouchPointC2Ei
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTouchEvent10TouchPointC2Ei )( void *scorep_libwrap_arg_this, int id )
{
    LIBWRAP_EARLY_INIT( _ZN11QTouchEvent10TouchPointC2Ei );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTouchEvent10TouchPointC2Ei );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTouchEvent10TouchPointC2Ei, ( scorep_libwrap_arg_this, id ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTouchEvent10TouchPointC2Ei );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTouchEvent10TouchPointC1Ei
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTouchEvent10TouchPointC1Ei )( void *scorep_libwrap_arg_this, int id )
{
    LIBWRAP_EARLY_INIT( _ZN11QTouchEvent10TouchPointC1Ei );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTouchEvent10TouchPointC1Ei );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTouchEvent10TouchPointC1Ei, ( scorep_libwrap_arg_this, id ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTouchEvent10TouchPointC1Ei );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTouchEvent10TouchPointC2ERKS0_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTouchEvent10TouchPointC2ERKS0_ )( void *scorep_libwrap_arg_this, const QTouchEvent::TouchPoint & other )
{
    LIBWRAP_EARLY_INIT( _ZN11QTouchEvent10TouchPointC2ERKS0_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTouchEvent10TouchPointC2ERKS0_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTouchEvent10TouchPointC2ERKS0_, ( scorep_libwrap_arg_this, other ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTouchEvent10TouchPointC2ERKS0_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTouchEvent10TouchPointC1ERKS0_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTouchEvent10TouchPointC1ERKS0_ )( void *scorep_libwrap_arg_this, const QTouchEvent::TouchPoint & other )
{
    LIBWRAP_EARLY_INIT( _ZN11QTouchEvent10TouchPointC1ERKS0_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTouchEvent10TouchPointC1ERKS0_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTouchEvent10TouchPointC1ERKS0_, ( scorep_libwrap_arg_this, other ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTouchEvent10TouchPointC1ERKS0_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK11QTouchEvent10TouchPoint5stateEv
Qt::TouchPointState
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTouchEvent10TouchPoint5stateEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTouchEvent10TouchPoint5stateEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTouchEvent10TouchPoint5stateEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    Qt::TouchPointState scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTouchEvent10TouchPoint5stateEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTouchEvent10TouchPoint5stateEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTouchEvent10TouchPoint3posEv
QPointF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTouchEvent10TouchPoint3posEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTouchEvent10TouchPoint3posEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTouchEvent10TouchPoint3posEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPointF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTouchEvent10TouchPoint3posEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTouchEvent10TouchPoint3posEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTouchEvent10TouchPoint8startPosEv
QPointF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTouchEvent10TouchPoint8startPosEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTouchEvent10TouchPoint8startPosEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTouchEvent10TouchPoint8startPosEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPointF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTouchEvent10TouchPoint8startPosEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTouchEvent10TouchPoint8startPosEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTouchEvent10TouchPoint7lastPosEv
QPointF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTouchEvent10TouchPoint7lastPosEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTouchEvent10TouchPoint7lastPosEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTouchEvent10TouchPoint7lastPosEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPointF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTouchEvent10TouchPoint7lastPosEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTouchEvent10TouchPoint7lastPosEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTouchEvent10TouchPoint8scenePosEv
QPointF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTouchEvent10TouchPoint8scenePosEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTouchEvent10TouchPoint8scenePosEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTouchEvent10TouchPoint8scenePosEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPointF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTouchEvent10TouchPoint8scenePosEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTouchEvent10TouchPoint8scenePosEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTouchEvent10TouchPoint13startScenePosEv
QPointF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTouchEvent10TouchPoint13startScenePosEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTouchEvent10TouchPoint13startScenePosEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTouchEvent10TouchPoint13startScenePosEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPointF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTouchEvent10TouchPoint13startScenePosEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTouchEvent10TouchPoint13startScenePosEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTouchEvent10TouchPoint12lastScenePosEv
QPointF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTouchEvent10TouchPoint12lastScenePosEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTouchEvent10TouchPoint12lastScenePosEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTouchEvent10TouchPoint12lastScenePosEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPointF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTouchEvent10TouchPoint12lastScenePosEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTouchEvent10TouchPoint12lastScenePosEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTouchEvent10TouchPoint9screenPosEv
QPointF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTouchEvent10TouchPoint9screenPosEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTouchEvent10TouchPoint9screenPosEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTouchEvent10TouchPoint9screenPosEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPointF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTouchEvent10TouchPoint9screenPosEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTouchEvent10TouchPoint9screenPosEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTouchEvent10TouchPoint14startScreenPosEv
QPointF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTouchEvent10TouchPoint14startScreenPosEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTouchEvent10TouchPoint14startScreenPosEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTouchEvent10TouchPoint14startScreenPosEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPointF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTouchEvent10TouchPoint14startScreenPosEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTouchEvent10TouchPoint14startScreenPosEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTouchEvent10TouchPoint13lastScreenPosEv
QPointF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTouchEvent10TouchPoint13lastScreenPosEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTouchEvent10TouchPoint13lastScreenPosEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTouchEvent10TouchPoint13lastScreenPosEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPointF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTouchEvent10TouchPoint13lastScreenPosEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTouchEvent10TouchPoint13lastScreenPosEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTouchEvent10TouchPoint13normalizedPosEv
QPointF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTouchEvent10TouchPoint13normalizedPosEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTouchEvent10TouchPoint13normalizedPosEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTouchEvent10TouchPoint13normalizedPosEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPointF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTouchEvent10TouchPoint13normalizedPosEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTouchEvent10TouchPoint13normalizedPosEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTouchEvent10TouchPoint18startNormalizedPosEv
QPointF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTouchEvent10TouchPoint18startNormalizedPosEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTouchEvent10TouchPoint18startNormalizedPosEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTouchEvent10TouchPoint18startNormalizedPosEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPointF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTouchEvent10TouchPoint18startNormalizedPosEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTouchEvent10TouchPoint18startNormalizedPosEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTouchEvent10TouchPoint17lastNormalizedPosEv
QPointF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTouchEvent10TouchPoint17lastNormalizedPosEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTouchEvent10TouchPoint17lastNormalizedPosEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTouchEvent10TouchPoint17lastNormalizedPosEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPointF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTouchEvent10TouchPoint17lastNormalizedPosEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTouchEvent10TouchPoint17lastNormalizedPosEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTouchEvent10TouchPoint4rectEv
QRectF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTouchEvent10TouchPoint4rectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTouchEvent10TouchPoint4rectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTouchEvent10TouchPoint4rectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRectF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTouchEvent10TouchPoint4rectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTouchEvent10TouchPoint4rectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTouchEvent10TouchPoint9sceneRectEv
QRectF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTouchEvent10TouchPoint9sceneRectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTouchEvent10TouchPoint9sceneRectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTouchEvent10TouchPoint9sceneRectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRectF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTouchEvent10TouchPoint9sceneRectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTouchEvent10TouchPoint9sceneRectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTouchEvent10TouchPoint10screenRectEv
QRectF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTouchEvent10TouchPoint10screenRectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTouchEvent10TouchPoint10screenRectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTouchEvent10TouchPoint10screenRectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRectF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTouchEvent10TouchPoint10screenRectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTouchEvent10TouchPoint10screenRectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTouchEvent10TouchPoint8pressureEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTouchEvent10TouchPoint8pressureEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTouchEvent10TouchPoint8pressureEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTouchEvent10TouchPoint8pressureEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTouchEvent10TouchPoint8pressureEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTouchEvent10TouchPoint8pressureEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTouchEvent10TouchPoint8velocityEv
QVector2D
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTouchEvent10TouchPoint8velocityEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTouchEvent10TouchPoint8velocityEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTouchEvent10TouchPoint8velocityEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QVector2D scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTouchEvent10TouchPoint8velocityEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTouchEvent10TouchPoint8velocityEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTouchEvent10TouchPoint5flagsEv
QTouchEvent::TouchPoint::InfoFlags
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTouchEvent10TouchPoint5flagsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTouchEvent10TouchPoint5flagsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTouchEvent10TouchPoint5flagsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTouchEvent::TouchPoint::InfoFlags scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTouchEvent10TouchPoint5flagsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTouchEvent10TouchPoint5flagsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTouchEvent10TouchPoint18rawScreenPositionsEv
QVector<QPointF>
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTouchEvent10TouchPoint18rawScreenPositionsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTouchEvent10TouchPoint18rawScreenPositionsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTouchEvent10TouchPoint18rawScreenPositionsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QVector<QPointF> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTouchEvent10TouchPoint18rawScreenPositionsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTouchEvent10TouchPoint18rawScreenPositionsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QTouchEvent10TouchPoint5setIdEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTouchEvent10TouchPoint5setIdEi )( void *scorep_libwrap_arg_this, int id )
{
    LIBWRAP_EARLY_INIT( _ZN11QTouchEvent10TouchPoint5setIdEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTouchEvent10TouchPoint5setIdEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTouchEvent10TouchPoint5setIdEi, ( scorep_libwrap_arg_this, id ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTouchEvent10TouchPoint5setIdEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTouchEvent10TouchPoint8setStateE6QFlagsIN2Qt15TouchPointStateEE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTouchEvent10TouchPoint8setStateE6QFlagsIN2Qt15TouchPointStateEE )( void *scorep_libwrap_arg_this, Qt::TouchPointStates state )
{
    LIBWRAP_EARLY_INIT( _ZN11QTouchEvent10TouchPoint8setStateE6QFlagsIN2Qt15TouchPointStateEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTouchEvent10TouchPoint8setStateE6QFlagsIN2Qt15TouchPointStateEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTouchEvent10TouchPoint8setStateE6QFlagsIN2Qt15TouchPointStateEE, ( scorep_libwrap_arg_this, state ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTouchEvent10TouchPoint8setStateE6QFlagsIN2Qt15TouchPointStateEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTouchEvent10TouchPoint6setPosERK7QPointF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTouchEvent10TouchPoint6setPosERK7QPointF )( void *scorep_libwrap_arg_this, const QPointF & pos )
{
    LIBWRAP_EARLY_INIT( _ZN11QTouchEvent10TouchPoint6setPosERK7QPointF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTouchEvent10TouchPoint6setPosERK7QPointF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTouchEvent10TouchPoint6setPosERK7QPointF, ( scorep_libwrap_arg_this, pos ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTouchEvent10TouchPoint6setPosERK7QPointF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTouchEvent10TouchPoint11setScenePosERK7QPointF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTouchEvent10TouchPoint11setScenePosERK7QPointF )( void *scorep_libwrap_arg_this, const QPointF & scenePos )
{
    LIBWRAP_EARLY_INIT( _ZN11QTouchEvent10TouchPoint11setScenePosERK7QPointF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTouchEvent10TouchPoint11setScenePosERK7QPointF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTouchEvent10TouchPoint11setScenePosERK7QPointF, ( scorep_libwrap_arg_this, scenePos ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTouchEvent10TouchPoint11setScenePosERK7QPointF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTouchEvent10TouchPoint12setScreenPosERK7QPointF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTouchEvent10TouchPoint12setScreenPosERK7QPointF )( void *scorep_libwrap_arg_this, const QPointF & screenPos )
{
    LIBWRAP_EARLY_INIT( _ZN11QTouchEvent10TouchPoint12setScreenPosERK7QPointF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTouchEvent10TouchPoint12setScreenPosERK7QPointF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTouchEvent10TouchPoint12setScreenPosERK7QPointF, ( scorep_libwrap_arg_this, screenPos ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTouchEvent10TouchPoint12setScreenPosERK7QPointF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTouchEvent10TouchPoint16setNormalizedPosERK7QPointF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTouchEvent10TouchPoint16setNormalizedPosERK7QPointF )( void *scorep_libwrap_arg_this, const QPointF & normalizedPos )
{
    LIBWRAP_EARLY_INIT( _ZN11QTouchEvent10TouchPoint16setNormalizedPosERK7QPointF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTouchEvent10TouchPoint16setNormalizedPosERK7QPointF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTouchEvent10TouchPoint16setNormalizedPosERK7QPointF, ( scorep_libwrap_arg_this, normalizedPos ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTouchEvent10TouchPoint16setNormalizedPosERK7QPointF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTouchEvent10TouchPoint11setStartPosERK7QPointF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTouchEvent10TouchPoint11setStartPosERK7QPointF )( void *scorep_libwrap_arg_this, const QPointF & startPos )
{
    LIBWRAP_EARLY_INIT( _ZN11QTouchEvent10TouchPoint11setStartPosERK7QPointF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTouchEvent10TouchPoint11setStartPosERK7QPointF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTouchEvent10TouchPoint11setStartPosERK7QPointF, ( scorep_libwrap_arg_this, startPos ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTouchEvent10TouchPoint11setStartPosERK7QPointF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTouchEvent10TouchPoint16setStartScenePosERK7QPointF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTouchEvent10TouchPoint16setStartScenePosERK7QPointF )( void *scorep_libwrap_arg_this, const QPointF & startScenePos )
{
    LIBWRAP_EARLY_INIT( _ZN11QTouchEvent10TouchPoint16setStartScenePosERK7QPointF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTouchEvent10TouchPoint16setStartScenePosERK7QPointF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTouchEvent10TouchPoint16setStartScenePosERK7QPointF, ( scorep_libwrap_arg_this, startScenePos ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTouchEvent10TouchPoint16setStartScenePosERK7QPointF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTouchEvent10TouchPoint17setStartScreenPosERK7QPointF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTouchEvent10TouchPoint17setStartScreenPosERK7QPointF )( void *scorep_libwrap_arg_this, const QPointF & startScreenPos )
{
    LIBWRAP_EARLY_INIT( _ZN11QTouchEvent10TouchPoint17setStartScreenPosERK7QPointF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTouchEvent10TouchPoint17setStartScreenPosERK7QPointF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTouchEvent10TouchPoint17setStartScreenPosERK7QPointF, ( scorep_libwrap_arg_this, startScreenPos ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTouchEvent10TouchPoint17setStartScreenPosERK7QPointF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTouchEvent10TouchPoint21setStartNormalizedPosERK7QPointF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTouchEvent10TouchPoint21setStartNormalizedPosERK7QPointF )( void *scorep_libwrap_arg_this, const QPointF & startNormalizedPos )
{
    LIBWRAP_EARLY_INIT( _ZN11QTouchEvent10TouchPoint21setStartNormalizedPosERK7QPointF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTouchEvent10TouchPoint21setStartNormalizedPosERK7QPointF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTouchEvent10TouchPoint21setStartNormalizedPosERK7QPointF, ( scorep_libwrap_arg_this, startNormalizedPos ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTouchEvent10TouchPoint21setStartNormalizedPosERK7QPointF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTouchEvent10TouchPoint10setLastPosERK7QPointF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTouchEvent10TouchPoint10setLastPosERK7QPointF )( void *scorep_libwrap_arg_this, const QPointF & lastPos )
{
    LIBWRAP_EARLY_INIT( _ZN11QTouchEvent10TouchPoint10setLastPosERK7QPointF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTouchEvent10TouchPoint10setLastPosERK7QPointF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTouchEvent10TouchPoint10setLastPosERK7QPointF, ( scorep_libwrap_arg_this, lastPos ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTouchEvent10TouchPoint10setLastPosERK7QPointF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTouchEvent10TouchPoint15setLastScenePosERK7QPointF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTouchEvent10TouchPoint15setLastScenePosERK7QPointF )( void *scorep_libwrap_arg_this, const QPointF & lastScenePos )
{
    LIBWRAP_EARLY_INIT( _ZN11QTouchEvent10TouchPoint15setLastScenePosERK7QPointF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTouchEvent10TouchPoint15setLastScenePosERK7QPointF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTouchEvent10TouchPoint15setLastScenePosERK7QPointF, ( scorep_libwrap_arg_this, lastScenePos ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTouchEvent10TouchPoint15setLastScenePosERK7QPointF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTouchEvent10TouchPoint16setLastScreenPosERK7QPointF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTouchEvent10TouchPoint16setLastScreenPosERK7QPointF )( void *scorep_libwrap_arg_this, const QPointF & lastScreenPos )
{
    LIBWRAP_EARLY_INIT( _ZN11QTouchEvent10TouchPoint16setLastScreenPosERK7QPointF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTouchEvent10TouchPoint16setLastScreenPosERK7QPointF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTouchEvent10TouchPoint16setLastScreenPosERK7QPointF, ( scorep_libwrap_arg_this, lastScreenPos ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTouchEvent10TouchPoint16setLastScreenPosERK7QPointF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTouchEvent10TouchPoint20setLastNormalizedPosERK7QPointF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTouchEvent10TouchPoint20setLastNormalizedPosERK7QPointF )( void *scorep_libwrap_arg_this, const QPointF & lastNormalizedPos )
{
    LIBWRAP_EARLY_INIT( _ZN11QTouchEvent10TouchPoint20setLastNormalizedPosERK7QPointF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTouchEvent10TouchPoint20setLastNormalizedPosERK7QPointF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTouchEvent10TouchPoint20setLastNormalizedPosERK7QPointF, ( scorep_libwrap_arg_this, lastNormalizedPos ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTouchEvent10TouchPoint20setLastNormalizedPosERK7QPointF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTouchEvent10TouchPoint7setRectERK6QRectF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTouchEvent10TouchPoint7setRectERK6QRectF )( void *scorep_libwrap_arg_this, const QRectF & rect )
{
    LIBWRAP_EARLY_INIT( _ZN11QTouchEvent10TouchPoint7setRectERK6QRectF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTouchEvent10TouchPoint7setRectERK6QRectF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTouchEvent10TouchPoint7setRectERK6QRectF, ( scorep_libwrap_arg_this, rect ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTouchEvent10TouchPoint7setRectERK6QRectF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTouchEvent10TouchPoint12setSceneRectERK6QRectF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTouchEvent10TouchPoint12setSceneRectERK6QRectF )( void *scorep_libwrap_arg_this, const QRectF & sceneRect )
{
    LIBWRAP_EARLY_INIT( _ZN11QTouchEvent10TouchPoint12setSceneRectERK6QRectF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTouchEvent10TouchPoint12setSceneRectERK6QRectF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTouchEvent10TouchPoint12setSceneRectERK6QRectF, ( scorep_libwrap_arg_this, sceneRect ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTouchEvent10TouchPoint12setSceneRectERK6QRectF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTouchEvent10TouchPoint13setScreenRectERK6QRectF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTouchEvent10TouchPoint13setScreenRectERK6QRectF )( void *scorep_libwrap_arg_this, const QRectF & screenRect )
{
    LIBWRAP_EARLY_INIT( _ZN11QTouchEvent10TouchPoint13setScreenRectERK6QRectF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTouchEvent10TouchPoint13setScreenRectERK6QRectF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTouchEvent10TouchPoint13setScreenRectERK6QRectF, ( scorep_libwrap_arg_this, screenRect ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTouchEvent10TouchPoint13setScreenRectERK6QRectF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTouchEvent10TouchPoint11setPressureEd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTouchEvent10TouchPoint11setPressureEd )( void *scorep_libwrap_arg_this, qreal pressure )
{
    LIBWRAP_EARLY_INIT( _ZN11QTouchEvent10TouchPoint11setPressureEd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTouchEvent10TouchPoint11setPressureEd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTouchEvent10TouchPoint11setPressureEd, ( scorep_libwrap_arg_this, pressure ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTouchEvent10TouchPoint11setPressureEd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTouchEvent10TouchPoint11setVelocityERK9QVector2D
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTouchEvent10TouchPoint11setVelocityERK9QVector2D )( void *scorep_libwrap_arg_this, const QVector2D & v )
{
    LIBWRAP_EARLY_INIT( _ZN11QTouchEvent10TouchPoint11setVelocityERK9QVector2D );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTouchEvent10TouchPoint11setVelocityERK9QVector2D );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTouchEvent10TouchPoint11setVelocityERK9QVector2D, ( scorep_libwrap_arg_this, v ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTouchEvent10TouchPoint11setVelocityERK9QVector2D );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTouchEvent10TouchPoint8setFlagsE6QFlagsINS0_8InfoFlagEE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTouchEvent10TouchPoint8setFlagsE6QFlagsINS0_8InfoFlagEE )( void *scorep_libwrap_arg_this, QTouchEvent::TouchPoint::InfoFlags flags )
{
    LIBWRAP_EARLY_INIT( _ZN11QTouchEvent10TouchPoint8setFlagsE6QFlagsINS0_8InfoFlagEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTouchEvent10TouchPoint8setFlagsE6QFlagsINS0_8InfoFlagEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTouchEvent10TouchPoint8setFlagsE6QFlagsINS0_8InfoFlagEE, ( scorep_libwrap_arg_this, flags ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTouchEvent10TouchPoint8setFlagsE6QFlagsINS0_8InfoFlagEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTouchEvent10TouchPoint21setRawScreenPositionsERK7QVectorI7QPointFE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTouchEvent10TouchPoint21setRawScreenPositionsERK7QVectorI7QPointFE )( void *scorep_libwrap_arg_this, const QVector<QPointF> & positions )
{
    LIBWRAP_EARLY_INIT( _ZN11QTouchEvent10TouchPoint21setRawScreenPositionsERK7QVectorI7QPointFE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTouchEvent10TouchPoint21setRawScreenPositionsERK7QVectorI7QPointFE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTouchEvent10TouchPoint21setRawScreenPositionsERK7QVectorI7QPointFE, ( scorep_libwrap_arg_this, positions ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTouchEvent10TouchPoint21setRawScreenPositionsERK7QVectorI7QPointFE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTouchEventC2EN6QEvent4TypeEP12QTouchDevice6QFlagsIN2Qt16KeyboardModifierEES4_INS5_15TouchPointStateEERK5QListINS_10TouchPointEE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTouchEventC2EN6QEvent4TypeEP12QTouchDevice6QFlagsIN2Qt16KeyboardModifierEES4_INS5_15TouchPointStateEERK5QListINS_10TouchPointEE )( void *scorep_libwrap_arg_this, QEvent::Type eventType, QTouchDevice * device, Qt::KeyboardModifiers modifiers, Qt::TouchPointStates touchPointStates, const QList<QTouchEvent::TouchPoint> & touchPoints )
{
    LIBWRAP_EARLY_INIT( _ZN11QTouchEventC2EN6QEvent4TypeEP12QTouchDevice6QFlagsIN2Qt16KeyboardModifierEES4_INS5_15TouchPointStateEERK5QListINS_10TouchPointEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTouchEventC2EN6QEvent4TypeEP12QTouchDevice6QFlagsIN2Qt16KeyboardModifierEES4_INS5_15TouchPointStateEERK5QListINS_10TouchPointEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTouchEventC2EN6QEvent4TypeEP12QTouchDevice6QFlagsIN2Qt16KeyboardModifierEES4_INS5_15TouchPointStateEERK5QListINS_10TouchPointEE, ( scorep_libwrap_arg_this, eventType, device, modifiers, touchPointStates, touchPoints ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTouchEventC2EN6QEvent4TypeEP12QTouchDevice6QFlagsIN2Qt16KeyboardModifierEES4_INS5_15TouchPointStateEERK5QListINS_10TouchPointEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTouchEventC1EN6QEvent4TypeEP12QTouchDevice6QFlagsIN2Qt16KeyboardModifierEES4_INS5_15TouchPointStateEERK5QListINS_10TouchPointEE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTouchEventC1EN6QEvent4TypeEP12QTouchDevice6QFlagsIN2Qt16KeyboardModifierEES4_INS5_15TouchPointStateEERK5QListINS_10TouchPointEE )( void *scorep_libwrap_arg_this, QEvent::Type eventType, QTouchDevice * device, Qt::KeyboardModifiers modifiers, Qt::TouchPointStates touchPointStates, const QList<QTouchEvent::TouchPoint> & touchPoints )
{
    LIBWRAP_EARLY_INIT( _ZN11QTouchEventC1EN6QEvent4TypeEP12QTouchDevice6QFlagsIN2Qt16KeyboardModifierEES4_INS5_15TouchPointStateEERK5QListINS_10TouchPointEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTouchEventC1EN6QEvent4TypeEP12QTouchDevice6QFlagsIN2Qt16KeyboardModifierEES4_INS5_15TouchPointStateEERK5QListINS_10TouchPointEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTouchEventC1EN6QEvent4TypeEP12QTouchDevice6QFlagsIN2Qt16KeyboardModifierEES4_INS5_15TouchPointStateEERK5QListINS_10TouchPointEE, ( scorep_libwrap_arg_this, eventType, device, modifiers, touchPointStates, touchPoints ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTouchEventC1EN6QEvent4TypeEP12QTouchDevice6QFlagsIN2Qt16KeyboardModifierEES4_INS5_15TouchPointStateEERK5QListINS_10TouchPointEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTouchEventD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTouchEventD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QTouchEventD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTouchEventD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTouchEventD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTouchEventD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTouchEventD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTouchEventD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QTouchEventD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTouchEventD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTouchEventD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTouchEventD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTouchEventD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTouchEventD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QTouchEventD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTouchEventD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTouchEventD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTouchEventD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _Zls6QDebugRKN11QTouchEvent10TouchPointE
QDebug
SCOREP_LIBWRAP_FUNC_NAME( _Zls6QDebugRKN11QTouchEvent10TouchPointE )( QDebug scorep_libwrap_arg_1, const QTouchEvent::TouchPoint & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _Zls6QDebugRKN11QTouchEvent10TouchPointE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _Zls6QDebugRKN11QTouchEvent10TouchPointE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDebug scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _Zls6QDebugRKN11QTouchEvent10TouchPointE, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _Zls6QDebugRKN11QTouchEvent10TouchPointE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN19QScrollPrepareEventC2ERK7QPointF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QScrollPrepareEventC2ERK7QPointF )( void *scorep_libwrap_arg_this, const QPointF & startPos )
{
    LIBWRAP_EARLY_INIT( _ZN19QScrollPrepareEventC2ERK7QPointF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QScrollPrepareEventC2ERK7QPointF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN19QScrollPrepareEventC2ERK7QPointF, ( scorep_libwrap_arg_this, startPos ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QScrollPrepareEventC2ERK7QPointF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN19QScrollPrepareEventC1ERK7QPointF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QScrollPrepareEventC1ERK7QPointF )( void *scorep_libwrap_arg_this, const QPointF & startPos )
{
    LIBWRAP_EARLY_INIT( _ZN19QScrollPrepareEventC1ERK7QPointF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QScrollPrepareEventC1ERK7QPointF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN19QScrollPrepareEventC1ERK7QPointF, ( scorep_libwrap_arg_this, startPos ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QScrollPrepareEventC1ERK7QPointF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN19QScrollPrepareEventD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QScrollPrepareEventD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN19QScrollPrepareEventD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QScrollPrepareEventD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN19QScrollPrepareEventD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QScrollPrepareEventD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN19QScrollPrepareEventD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QScrollPrepareEventD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN19QScrollPrepareEventD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QScrollPrepareEventD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN19QScrollPrepareEventD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QScrollPrepareEventD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN19QScrollPrepareEventD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QScrollPrepareEventD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN19QScrollPrepareEventD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QScrollPrepareEventD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN19QScrollPrepareEventD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QScrollPrepareEventD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK19QScrollPrepareEvent8startPosEv
QPointF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK19QScrollPrepareEvent8startPosEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK19QScrollPrepareEvent8startPosEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK19QScrollPrepareEvent8startPosEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPointF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK19QScrollPrepareEvent8startPosEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK19QScrollPrepareEvent8startPosEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK19QScrollPrepareEvent12viewportSizeEv
QSizeF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK19QScrollPrepareEvent12viewportSizeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK19QScrollPrepareEvent12viewportSizeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK19QScrollPrepareEvent12viewportSizeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QSizeF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK19QScrollPrepareEvent12viewportSizeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK19QScrollPrepareEvent12viewportSizeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK19QScrollPrepareEvent15contentPosRangeEv
QRectF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK19QScrollPrepareEvent15contentPosRangeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK19QScrollPrepareEvent15contentPosRangeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK19QScrollPrepareEvent15contentPosRangeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRectF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK19QScrollPrepareEvent15contentPosRangeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK19QScrollPrepareEvent15contentPosRangeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK19QScrollPrepareEvent10contentPosEv
QPointF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK19QScrollPrepareEvent10contentPosEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK19QScrollPrepareEvent10contentPosEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK19QScrollPrepareEvent10contentPosEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPointF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK19QScrollPrepareEvent10contentPosEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK19QScrollPrepareEvent10contentPosEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN19QScrollPrepareEvent15setViewportSizeERK6QSizeF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QScrollPrepareEvent15setViewportSizeERK6QSizeF )( void *scorep_libwrap_arg_this, const QSizeF & size )
{
    LIBWRAP_EARLY_INIT( _ZN19QScrollPrepareEvent15setViewportSizeERK6QSizeF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QScrollPrepareEvent15setViewportSizeERK6QSizeF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN19QScrollPrepareEvent15setViewportSizeERK6QSizeF, ( scorep_libwrap_arg_this, size ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QScrollPrepareEvent15setViewportSizeERK6QSizeF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN19QScrollPrepareEvent18setContentPosRangeERK6QRectF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QScrollPrepareEvent18setContentPosRangeERK6QRectF )( void *scorep_libwrap_arg_this, const QRectF & rect )
{
    LIBWRAP_EARLY_INIT( _ZN19QScrollPrepareEvent18setContentPosRangeERK6QRectF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QScrollPrepareEvent18setContentPosRangeERK6QRectF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN19QScrollPrepareEvent18setContentPosRangeERK6QRectF, ( scorep_libwrap_arg_this, rect ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QScrollPrepareEvent18setContentPosRangeERK6QRectF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN19QScrollPrepareEvent13setContentPosERK7QPointF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QScrollPrepareEvent13setContentPosERK7QPointF )( void *scorep_libwrap_arg_this, const QPointF & pos )
{
    LIBWRAP_EARLY_INIT( _ZN19QScrollPrepareEvent13setContentPosERK7QPointF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QScrollPrepareEvent13setContentPosERK7QPointF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN19QScrollPrepareEvent13setContentPosERK7QPointF, ( scorep_libwrap_arg_this, pos ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QScrollPrepareEvent13setContentPosERK7QPointF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QScrollEventC2ERK7QPointFS2_NS_11ScrollStateE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QScrollEventC2ERK7QPointFS2_NS_11ScrollStateE )( void *scorep_libwrap_arg_this, const QPointF & contentPos, const QPointF & overshoot, QScrollEvent::ScrollState scrollState )
{
    LIBWRAP_EARLY_INIT( _ZN12QScrollEventC2ERK7QPointFS2_NS_11ScrollStateE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QScrollEventC2ERK7QPointFS2_NS_11ScrollStateE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QScrollEventC2ERK7QPointFS2_NS_11ScrollStateE, ( scorep_libwrap_arg_this, contentPos, overshoot, scrollState ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QScrollEventC2ERK7QPointFS2_NS_11ScrollStateE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QScrollEventC1ERK7QPointFS2_NS_11ScrollStateE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QScrollEventC1ERK7QPointFS2_NS_11ScrollStateE )( void *scorep_libwrap_arg_this, const QPointF & contentPos, const QPointF & overshoot, QScrollEvent::ScrollState scrollState )
{
    LIBWRAP_EARLY_INIT( _ZN12QScrollEventC1ERK7QPointFS2_NS_11ScrollStateE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QScrollEventC1ERK7QPointFS2_NS_11ScrollStateE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QScrollEventC1ERK7QPointFS2_NS_11ScrollStateE, ( scorep_libwrap_arg_this, contentPos, overshoot, scrollState ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QScrollEventC1ERK7QPointFS2_NS_11ScrollStateE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QScrollEventD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QScrollEventD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QScrollEventD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QScrollEventD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QScrollEventD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QScrollEventD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QScrollEventD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QScrollEventD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QScrollEventD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QScrollEventD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QScrollEventD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QScrollEventD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QScrollEventD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QScrollEventD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QScrollEventD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QScrollEventD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QScrollEventD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QScrollEventD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK12QScrollEvent10contentPosEv
QPointF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QScrollEvent10contentPosEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QScrollEvent10contentPosEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QScrollEvent10contentPosEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPointF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QScrollEvent10contentPosEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QScrollEvent10contentPosEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QScrollEvent17overshootDistanceEv
QPointF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QScrollEvent17overshootDistanceEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QScrollEvent17overshootDistanceEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QScrollEvent17overshootDistanceEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPointF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QScrollEvent17overshootDistanceEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QScrollEvent17overshootDistanceEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QScrollEvent11scrollStateEv
QScrollEvent::ScrollState
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QScrollEvent11scrollStateEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QScrollEvent11scrollStateEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QScrollEvent11scrollStateEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QScrollEvent::ScrollState scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QScrollEvent11scrollStateEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QScrollEvent11scrollStateEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN29QScreenOrientationChangeEventC2EP7QScreenN2Qt17ScreenOrientationE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN29QScreenOrientationChangeEventC2EP7QScreenN2Qt17ScreenOrientationE )( void *scorep_libwrap_arg_this, QScreen * screen, Qt::ScreenOrientation orientation )
{
    LIBWRAP_EARLY_INIT( _ZN29QScreenOrientationChangeEventC2EP7QScreenN2Qt17ScreenOrientationE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN29QScreenOrientationChangeEventC2EP7QScreenN2Qt17ScreenOrientationE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN29QScreenOrientationChangeEventC2EP7QScreenN2Qt17ScreenOrientationE, ( scorep_libwrap_arg_this, screen, orientation ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN29QScreenOrientationChangeEventC2EP7QScreenN2Qt17ScreenOrientationE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN29QScreenOrientationChangeEventC1EP7QScreenN2Qt17ScreenOrientationE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN29QScreenOrientationChangeEventC1EP7QScreenN2Qt17ScreenOrientationE )( void *scorep_libwrap_arg_this, QScreen * screen, Qt::ScreenOrientation orientation )
{
    LIBWRAP_EARLY_INIT( _ZN29QScreenOrientationChangeEventC1EP7QScreenN2Qt17ScreenOrientationE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN29QScreenOrientationChangeEventC1EP7QScreenN2Qt17ScreenOrientationE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN29QScreenOrientationChangeEventC1EP7QScreenN2Qt17ScreenOrientationE, ( scorep_libwrap_arg_this, screen, orientation ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN29QScreenOrientationChangeEventC1EP7QScreenN2Qt17ScreenOrientationE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN29QScreenOrientationChangeEventD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN29QScreenOrientationChangeEventD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN29QScreenOrientationChangeEventD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN29QScreenOrientationChangeEventD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN29QScreenOrientationChangeEventD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN29QScreenOrientationChangeEventD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN29QScreenOrientationChangeEventD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN29QScreenOrientationChangeEventD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN29QScreenOrientationChangeEventD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN29QScreenOrientationChangeEventD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN29QScreenOrientationChangeEventD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN29QScreenOrientationChangeEventD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN29QScreenOrientationChangeEventD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN29QScreenOrientationChangeEventD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN29QScreenOrientationChangeEventD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN29QScreenOrientationChangeEventD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN29QScreenOrientationChangeEventD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN29QScreenOrientationChangeEventD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK29QScreenOrientationChangeEvent6screenEv
QScreen *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK29QScreenOrientationChangeEvent6screenEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK29QScreenOrientationChangeEvent6screenEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK29QScreenOrientationChangeEvent6screenEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QScreen * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK29QScreenOrientationChangeEvent6screenEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK29QScreenOrientationChangeEvent6screenEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK29QScreenOrientationChangeEvent11orientationEv
Qt::ScreenOrientation
SCOREP_LIBWRAP_FUNC_NAME( _ZNK29QScreenOrientationChangeEvent11orientationEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK29QScreenOrientationChangeEvent11orientationEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK29QScreenOrientationChangeEvent11orientationEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    Qt::ScreenOrientation scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK29QScreenOrientationChangeEvent11orientationEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK29QScreenOrientationChangeEvent11orientationEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN28QApplicationStateChangeEventC2EN2Qt16ApplicationStateE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN28QApplicationStateChangeEventC2EN2Qt16ApplicationStateE )( void *scorep_libwrap_arg_this, Qt::ApplicationState state )
{
    LIBWRAP_EARLY_INIT( _ZN28QApplicationStateChangeEventC2EN2Qt16ApplicationStateE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN28QApplicationStateChangeEventC2EN2Qt16ApplicationStateE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN28QApplicationStateChangeEventC2EN2Qt16ApplicationStateE, ( scorep_libwrap_arg_this, state ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN28QApplicationStateChangeEventC2EN2Qt16ApplicationStateE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN28QApplicationStateChangeEventC1EN2Qt16ApplicationStateE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN28QApplicationStateChangeEventC1EN2Qt16ApplicationStateE )( void *scorep_libwrap_arg_this, Qt::ApplicationState state )
{
    LIBWRAP_EARLY_INIT( _ZN28QApplicationStateChangeEventC1EN2Qt16ApplicationStateE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN28QApplicationStateChangeEventC1EN2Qt16ApplicationStateE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN28QApplicationStateChangeEventC1EN2Qt16ApplicationStateE, ( scorep_libwrap_arg_this, state ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN28QApplicationStateChangeEventC1EN2Qt16ApplicationStateE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK28QApplicationStateChangeEvent16applicationStateEv
Qt::ApplicationState
SCOREP_LIBWRAP_FUNC_NAME( _ZNK28QApplicationStateChangeEvent16applicationStateEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK28QApplicationStateChangeEvent16applicationStateEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK28QApplicationStateChangeEvent16applicationStateEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    Qt::ApplicationState scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK28QApplicationStateChangeEvent16applicationStateEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK28QApplicationStateChangeEvent16applicationStateEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QAccessible14installFactoryEPFP20QAccessibleInterfaceRK7QStringP7QObjectE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QAccessible14installFactoryEPFP20QAccessibleInterfaceRK7QStringP7QObjectE )( QAccessible::InterfaceFactory scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN11QAccessible14installFactoryEPFP20QAccessibleInterfaceRK7QStringP7QObjectE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QAccessible14installFactoryEPFP20QAccessibleInterfaceRK7QStringP7QObjectE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QAccessible14installFactoryEPFP20QAccessibleInterfaceRK7QStringP7QObjectE, ( scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QAccessible14installFactoryEPFP20QAccessibleInterfaceRK7QStringP7QObjectE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QAccessible13removeFactoryEPFP20QAccessibleInterfaceRK7QStringP7QObjectE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QAccessible13removeFactoryEPFP20QAccessibleInterfaceRK7QStringP7QObjectE )( QAccessible::InterfaceFactory scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN11QAccessible13removeFactoryEPFP20QAccessibleInterfaceRK7QStringP7QObjectE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QAccessible13removeFactoryEPFP20QAccessibleInterfaceRK7QStringP7QObjectE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QAccessible13removeFactoryEPFP20QAccessibleInterfaceRK7QStringP7QObjectE, ( scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QAccessible13removeFactoryEPFP20QAccessibleInterfaceRK7QStringP7QObjectE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QAccessible20installUpdateHandlerEPFvP16QAccessibleEventE
QAccessible::UpdateHandler
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QAccessible20installUpdateHandlerEPFvP16QAccessibleEventE )( QAccessible::UpdateHandler scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN11QAccessible20installUpdateHandlerEPFvP16QAccessibleEventE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QAccessible20installUpdateHandlerEPFvP16QAccessibleEventE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QAccessible::UpdateHandler scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN11QAccessible20installUpdateHandlerEPFvP16QAccessibleEventE, ( scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QAccessible20installUpdateHandlerEPFvP16QAccessibleEventE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QAccessible24installRootObjectHandlerEPFvP7QObjectE
QAccessible::RootObjectHandler
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QAccessible24installRootObjectHandlerEPFvP7QObjectE )( QAccessible::RootObjectHandler scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN11QAccessible24installRootObjectHandlerEPFvP7QObjectE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QAccessible24installRootObjectHandlerEPFvP7QObjectE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QAccessible::RootObjectHandler scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN11QAccessible24installRootObjectHandlerEPFvP7QObjectE, ( scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QAccessible24installRootObjectHandlerEPFvP7QObjectE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QAccessible18ActivationObserverD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QAccessible18ActivationObserverD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QAccessible18ActivationObserverD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QAccessible18ActivationObserverD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QAccessible18ActivationObserverD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QAccessible18ActivationObserverD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QAccessible18ActivationObserverD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QAccessible18ActivationObserverD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QAccessible18ActivationObserverD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QAccessible18ActivationObserverD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QAccessible18ActivationObserverD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QAccessible18ActivationObserverD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QAccessible18ActivationObserverD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QAccessible18ActivationObserverD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QAccessible18ActivationObserverD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QAccessible18ActivationObserverD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QAccessible18ActivationObserverD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QAccessible18ActivationObserverD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QAccessible25installActivationObserverEPNS_18ActivationObserverE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QAccessible25installActivationObserverEPNS_18ActivationObserverE )( QAccessible::ActivationObserver * scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN11QAccessible25installActivationObserverEPNS_18ActivationObserverE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QAccessible25installActivationObserverEPNS_18ActivationObserverE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QAccessible25installActivationObserverEPNS_18ActivationObserverE, ( scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QAccessible25installActivationObserverEPNS_18ActivationObserverE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QAccessible24removeActivationObserverEPNS_18ActivationObserverE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QAccessible24removeActivationObserverEPNS_18ActivationObserverE )( QAccessible::ActivationObserver * scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN11QAccessible24removeActivationObserverEPNS_18ActivationObserverE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QAccessible24removeActivationObserverEPNS_18ActivationObserverE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QAccessible24removeActivationObserverEPNS_18ActivationObserverE, ( scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QAccessible24removeActivationObserverEPNS_18ActivationObserverE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QAccessible24queryAccessibleInterfaceEP7QObject
QAccessibleInterface *
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QAccessible24queryAccessibleInterfaceEP7QObject )( QObject * scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN11QAccessible24queryAccessibleInterfaceEP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QAccessible24queryAccessibleInterfaceEP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QAccessibleInterface * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN11QAccessible24queryAccessibleInterfaceEP7QObject, ( scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QAccessible24queryAccessibleInterfaceEP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QAccessible8uniqueIdEP20QAccessibleInterface
QAccessible::Id
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QAccessible8uniqueIdEP20QAccessibleInterface )( QAccessibleInterface * iface )
{
    LIBWRAP_EARLY_INIT( _ZN11QAccessible8uniqueIdEP20QAccessibleInterface );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QAccessible8uniqueIdEP20QAccessibleInterface );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QAccessible::Id scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN11QAccessible8uniqueIdEP20QAccessibleInterface, ( iface ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QAccessible8uniqueIdEP20QAccessibleInterface );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QAccessible19accessibleInterfaceEj
QAccessibleInterface *
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QAccessible19accessibleInterfaceEj )( QAccessible::Id uniqueId )
{
    LIBWRAP_EARLY_INIT( _ZN11QAccessible19accessibleInterfaceEj );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QAccessible19accessibleInterfaceEj );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QAccessibleInterface * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN11QAccessible19accessibleInterfaceEj, ( uniqueId ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QAccessible19accessibleInterfaceEj );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QAccessible27registerAccessibleInterfaceEP20QAccessibleInterface
QAccessible::Id
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QAccessible27registerAccessibleInterfaceEP20QAccessibleInterface )( QAccessibleInterface * iface )
{
    LIBWRAP_EARLY_INIT( _ZN11QAccessible27registerAccessibleInterfaceEP20QAccessibleInterface );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QAccessible27registerAccessibleInterfaceEP20QAccessibleInterface );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QAccessible::Id scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN11QAccessible27registerAccessibleInterfaceEP20QAccessibleInterface, ( iface ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QAccessible27registerAccessibleInterfaceEP20QAccessibleInterface );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QAccessible25deleteAccessibleInterfaceEj
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QAccessible25deleteAccessibleInterfaceEj )( QAccessible::Id uniqueId )
{
    LIBWRAP_EARLY_INIT( _ZN11QAccessible25deleteAccessibleInterfaceEj );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QAccessible25deleteAccessibleInterfaceEj );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QAccessible25deleteAccessibleInterfaceEj, ( uniqueId ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QAccessible25deleteAccessibleInterfaceEj );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QAccessible19updateAccessibilityEP16QAccessibleEvent
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QAccessible19updateAccessibilityEP16QAccessibleEvent )( QAccessibleEvent * event )
{
    LIBWRAP_EARLY_INIT( _ZN11QAccessible19updateAccessibilityEP16QAccessibleEvent );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QAccessible19updateAccessibilityEP16QAccessibleEvent );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QAccessible19updateAccessibilityEP16QAccessibleEvent, ( event ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QAccessible19updateAccessibilityEP16QAccessibleEvent );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QAccessible8isActiveEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QAccessible8isActiveEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN11QAccessible8isActiveEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QAccessible8isActiveEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN11QAccessible8isActiveEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QAccessible8isActiveEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QAccessible9setActiveEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QAccessible9setActiveEb )( bool active )
{
    LIBWRAP_EARLY_INIT( _ZN11QAccessible9setActiveEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QAccessible9setActiveEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QAccessible9setActiveEb, ( active ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QAccessible9setActiveEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QAccessible13setRootObjectEP7QObject
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QAccessible13setRootObjectEP7QObject )( QObject * object )
{
    LIBWRAP_EARLY_INIT( _ZN11QAccessible13setRootObjectEP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QAccessible13setRootObjectEP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QAccessible13setRootObjectEP7QObject, ( object ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QAccessible13setRootObjectEP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QAccessible7cleanupEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QAccessible7cleanupEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN11QAccessible7cleanupEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QAccessible7cleanupEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QAccessible7cleanupEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QAccessible7cleanupEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QAccessible29qAccessibleTextBoundaryHelperERK11QTextCursorNS_16TextBoundaryTypeE
QPair<int, int>
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QAccessible29qAccessibleTextBoundaryHelperERK11QTextCursorNS_16TextBoundaryTypeE )( const QTextCursor & cursor, QAccessible::TextBoundaryType boundaryType )
{
    LIBWRAP_EARLY_INIT( _ZN11QAccessible29qAccessibleTextBoundaryHelperERK11QTextCursorNS_16TextBoundaryTypeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QAccessible29qAccessibleTextBoundaryHelperERK11QTextCursorNS_16TextBoundaryTypeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPair<int, int> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN11QAccessible29qAccessibleTextBoundaryHelperERK11QTextCursorNS_16TextBoundaryTypeE, ( cursor, boundaryType ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QAccessible29qAccessibleTextBoundaryHelperERK11QTextCursorNS_16TextBoundaryTypeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK20QAccessibleInterface6windowEv
QWindow *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK20QAccessibleInterface6windowEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK20QAccessibleInterface6windowEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK20QAccessibleInterface6windowEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QWindow * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK20QAccessibleInterface6windowEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK20QAccessibleInterface6windowEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK20QAccessibleInterface9relationsE6QFlagsIN11QAccessible12RelationFlagEE
QVector<QPair<QAccessibleInterface *, QAccessible::Relation> >
SCOREP_LIBWRAP_FUNC_NAME( _ZNK20QAccessibleInterface9relationsE6QFlagsIN11QAccessible12RelationFlagEE )( void *scorep_libwrap_arg_this, QAccessible::Relation match )
{
    LIBWRAP_EARLY_INIT( _ZNK20QAccessibleInterface9relationsE6QFlagsIN11QAccessible12RelationFlagEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK20QAccessibleInterface9relationsE6QFlagsIN11QAccessible12RelationFlagEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QVector<QPair<QAccessibleInterface *, QAccessible::Relation> > scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK20QAccessibleInterface9relationsE6QFlagsIN11QAccessible12RelationFlagEE, ( scorep_libwrap_arg_this, match ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK20QAccessibleInterface9relationsE6QFlagsIN11QAccessible12RelationFlagEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK20QAccessibleInterface10focusChildEv
QAccessibleInterface *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK20QAccessibleInterface10focusChildEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK20QAccessibleInterface10focusChildEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK20QAccessibleInterface10focusChildEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QAccessibleInterface * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK20QAccessibleInterface10focusChildEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK20QAccessibleInterface10focusChildEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK20QAccessibleInterface15foregroundColorEv
QColor
SCOREP_LIBWRAP_FUNC_NAME( _ZNK20QAccessibleInterface15foregroundColorEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK20QAccessibleInterface15foregroundColorEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK20QAccessibleInterface15foregroundColorEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QColor scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK20QAccessibleInterface15foregroundColorEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK20QAccessibleInterface15foregroundColorEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK20QAccessibleInterface15backgroundColorEv
QColor
SCOREP_LIBWRAP_FUNC_NAME( _ZNK20QAccessibleInterface15backgroundColorEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK20QAccessibleInterface15backgroundColorEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK20QAccessibleInterface15backgroundColorEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QColor scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK20QAccessibleInterface15backgroundColorEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK20QAccessibleInterface15backgroundColorEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN20QAccessibleInterface12virtual_hookEiPv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QAccessibleInterface12virtual_hookEiPv )( void *scorep_libwrap_arg_this, int id, void * data )
{
    LIBWRAP_EARLY_INIT( _ZN20QAccessibleInterface12virtual_hookEiPv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QAccessibleInterface12virtual_hookEiPv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QAccessibleInterface12virtual_hookEiPv, ( scorep_libwrap_arg_this, id, data ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QAccessibleInterface12virtual_hookEiPv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN24QAccessibleTextInterfaceD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN24QAccessibleTextInterfaceD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN24QAccessibleTextInterfaceD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN24QAccessibleTextInterfaceD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN24QAccessibleTextInterfaceD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN24QAccessibleTextInterfaceD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN24QAccessibleTextInterfaceD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN24QAccessibleTextInterfaceD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN24QAccessibleTextInterfaceD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN24QAccessibleTextInterfaceD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN24QAccessibleTextInterfaceD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN24QAccessibleTextInterfaceD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN24QAccessibleTextInterfaceD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN24QAccessibleTextInterfaceD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN24QAccessibleTextInterfaceD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN24QAccessibleTextInterfaceD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN24QAccessibleTextInterfaceD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN24QAccessibleTextInterfaceD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK24QAccessibleTextInterface16textBeforeOffsetEiN11QAccessible16TextBoundaryTypeEPiS2_
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK24QAccessibleTextInterface16textBeforeOffsetEiN11QAccessible16TextBoundaryTypeEPiS2_ )( void *scorep_libwrap_arg_this, int offset, QAccessible::TextBoundaryType boundaryType, int * startOffset, int * endOffset )
{
    LIBWRAP_EARLY_INIT( _ZNK24QAccessibleTextInterface16textBeforeOffsetEiN11QAccessible16TextBoundaryTypeEPiS2_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK24QAccessibleTextInterface16textBeforeOffsetEiN11QAccessible16TextBoundaryTypeEPiS2_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK24QAccessibleTextInterface16textBeforeOffsetEiN11QAccessible16TextBoundaryTypeEPiS2_, ( scorep_libwrap_arg_this, offset, boundaryType, startOffset, endOffset ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK24QAccessibleTextInterface16textBeforeOffsetEiN11QAccessible16TextBoundaryTypeEPiS2_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK24QAccessibleTextInterface15textAfterOffsetEiN11QAccessible16TextBoundaryTypeEPiS2_
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK24QAccessibleTextInterface15textAfterOffsetEiN11QAccessible16TextBoundaryTypeEPiS2_ )( void *scorep_libwrap_arg_this, int offset, QAccessible::TextBoundaryType boundaryType, int * startOffset, int * endOffset )
{
    LIBWRAP_EARLY_INIT( _ZNK24QAccessibleTextInterface15textAfterOffsetEiN11QAccessible16TextBoundaryTypeEPiS2_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK24QAccessibleTextInterface15textAfterOffsetEiN11QAccessible16TextBoundaryTypeEPiS2_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK24QAccessibleTextInterface15textAfterOffsetEiN11QAccessible16TextBoundaryTypeEPiS2_, ( scorep_libwrap_arg_this, offset, boundaryType, startOffset, endOffset ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK24QAccessibleTextInterface15textAfterOffsetEiN11QAccessible16TextBoundaryTypeEPiS2_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK24QAccessibleTextInterface12textAtOffsetEiN11QAccessible16TextBoundaryTypeEPiS2_
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK24QAccessibleTextInterface12textAtOffsetEiN11QAccessible16TextBoundaryTypeEPiS2_ )( void *scorep_libwrap_arg_this, int offset, QAccessible::TextBoundaryType boundaryType, int * startOffset, int * endOffset )
{
    LIBWRAP_EARLY_INIT( _ZNK24QAccessibleTextInterface12textAtOffsetEiN11QAccessible16TextBoundaryTypeEPiS2_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK24QAccessibleTextInterface12textAtOffsetEiN11QAccessible16TextBoundaryTypeEPiS2_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK24QAccessibleTextInterface12textAtOffsetEiN11QAccessible16TextBoundaryTypeEPiS2_, ( scorep_libwrap_arg_this, offset, boundaryType, startOffset, endOffset ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK24QAccessibleTextInterface12textAtOffsetEiN11QAccessible16TextBoundaryTypeEPiS2_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN32QAccessibleEditableTextInterfaceD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN32QAccessibleEditableTextInterfaceD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN32QAccessibleEditableTextInterfaceD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN32QAccessibleEditableTextInterfaceD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN32QAccessibleEditableTextInterfaceD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN32QAccessibleEditableTextInterfaceD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN32QAccessibleEditableTextInterfaceD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN32QAccessibleEditableTextInterfaceD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN32QAccessibleEditableTextInterfaceD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN32QAccessibleEditableTextInterfaceD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN32QAccessibleEditableTextInterfaceD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN32QAccessibleEditableTextInterfaceD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN32QAccessibleEditableTextInterfaceD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN32QAccessibleEditableTextInterfaceD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN32QAccessibleEditableTextInterfaceD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN32QAccessibleEditableTextInterfaceD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN32QAccessibleEditableTextInterfaceD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN32QAccessibleEditableTextInterfaceD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN25QAccessibleValueInterfaceD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN25QAccessibleValueInterfaceD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN25QAccessibleValueInterfaceD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN25QAccessibleValueInterfaceD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN25QAccessibleValueInterfaceD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN25QAccessibleValueInterfaceD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN25QAccessibleValueInterfaceD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN25QAccessibleValueInterfaceD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN25QAccessibleValueInterfaceD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN25QAccessibleValueInterfaceD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN25QAccessibleValueInterfaceD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN25QAccessibleValueInterfaceD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN25QAccessibleValueInterfaceD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN25QAccessibleValueInterfaceD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN25QAccessibleValueInterfaceD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN25QAccessibleValueInterfaceD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN25QAccessibleValueInterfaceD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN25QAccessibleValueInterfaceD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN29QAccessibleTableCellInterfaceD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN29QAccessibleTableCellInterfaceD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN29QAccessibleTableCellInterfaceD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN29QAccessibleTableCellInterfaceD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN29QAccessibleTableCellInterfaceD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN29QAccessibleTableCellInterfaceD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN29QAccessibleTableCellInterfaceD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN29QAccessibleTableCellInterfaceD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN29QAccessibleTableCellInterfaceD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN29QAccessibleTableCellInterfaceD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN29QAccessibleTableCellInterfaceD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN29QAccessibleTableCellInterfaceD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN29QAccessibleTableCellInterfaceD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN29QAccessibleTableCellInterfaceD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN29QAccessibleTableCellInterfaceD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN29QAccessibleTableCellInterfaceD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN29QAccessibleTableCellInterfaceD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN29QAccessibleTableCellInterfaceD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN25QAccessibleTableInterfaceD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN25QAccessibleTableInterfaceD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN25QAccessibleTableInterfaceD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN25QAccessibleTableInterfaceD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN25QAccessibleTableInterfaceD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN25QAccessibleTableInterfaceD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN25QAccessibleTableInterfaceD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN25QAccessibleTableInterfaceD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN25QAccessibleTableInterfaceD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN25QAccessibleTableInterfaceD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN25QAccessibleTableInterfaceD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN25QAccessibleTableInterfaceD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN25QAccessibleTableInterfaceD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN25QAccessibleTableInterfaceD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN25QAccessibleTableInterfaceD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN25QAccessibleTableInterfaceD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN25QAccessibleTableInterfaceD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN25QAccessibleTableInterfaceD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN26QAccessibleActionInterfaceD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN26QAccessibleActionInterfaceD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN26QAccessibleActionInterfaceD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN26QAccessibleActionInterfaceD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN26QAccessibleActionInterfaceD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN26QAccessibleActionInterfaceD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN26QAccessibleActionInterfaceD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN26QAccessibleActionInterfaceD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN26QAccessibleActionInterfaceD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN26QAccessibleActionInterfaceD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN26QAccessibleActionInterfaceD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN26QAccessibleActionInterfaceD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN26QAccessibleActionInterfaceD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN26QAccessibleActionInterfaceD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN26QAccessibleActionInterfaceD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN26QAccessibleActionInterfaceD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN26QAccessibleActionInterfaceD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN26QAccessibleActionInterfaceD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK26QAccessibleActionInterface19localizedActionNameERK7QString
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK26QAccessibleActionInterface19localizedActionNameERK7QString )( void *scorep_libwrap_arg_this, const QString & name )
{
    LIBWRAP_EARLY_INIT( _ZNK26QAccessibleActionInterface19localizedActionNameERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK26QAccessibleActionInterface19localizedActionNameERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK26QAccessibleActionInterface19localizedActionNameERK7QString, ( scorep_libwrap_arg_this, name ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK26QAccessibleActionInterface19localizedActionNameERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK26QAccessibleActionInterface26localizedActionDescriptionERK7QString
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK26QAccessibleActionInterface26localizedActionDescriptionERK7QString )( void *scorep_libwrap_arg_this, const QString & name )
{
    LIBWRAP_EARLY_INIT( _ZNK26QAccessibleActionInterface26localizedActionDescriptionERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK26QAccessibleActionInterface26localizedActionDescriptionERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK26QAccessibleActionInterface26localizedActionDescriptionERK7QString, ( scorep_libwrap_arg_this, name ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK26QAccessibleActionInterface26localizedActionDescriptionERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN26QAccessibleActionInterface11pressActionEv
const QString &
SCOREP_LIBWRAP_FUNC_NAME( _ZN26QAccessibleActionInterface11pressActionEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN26QAccessibleActionInterface11pressActionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN26QAccessibleActionInterface11pressActionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QString & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN26QAccessibleActionInterface11pressActionEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN26QAccessibleActionInterface11pressActionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN26QAccessibleActionInterface14increaseActionEv
const QString &
SCOREP_LIBWRAP_FUNC_NAME( _ZN26QAccessibleActionInterface14increaseActionEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN26QAccessibleActionInterface14increaseActionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN26QAccessibleActionInterface14increaseActionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QString & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN26QAccessibleActionInterface14increaseActionEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN26QAccessibleActionInterface14increaseActionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN26QAccessibleActionInterface14decreaseActionEv
const QString &
SCOREP_LIBWRAP_FUNC_NAME( _ZN26QAccessibleActionInterface14decreaseActionEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN26QAccessibleActionInterface14decreaseActionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN26QAccessibleActionInterface14decreaseActionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QString & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN26QAccessibleActionInterface14decreaseActionEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN26QAccessibleActionInterface14decreaseActionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN26QAccessibleActionInterface14showMenuActionEv
const QString &
SCOREP_LIBWRAP_FUNC_NAME( _ZN26QAccessibleActionInterface14showMenuActionEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN26QAccessibleActionInterface14showMenuActionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN26QAccessibleActionInterface14showMenuActionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QString & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN26QAccessibleActionInterface14showMenuActionEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN26QAccessibleActionInterface14showMenuActionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN26QAccessibleActionInterface14setFocusActionEv
const QString &
SCOREP_LIBWRAP_FUNC_NAME( _ZN26QAccessibleActionInterface14setFocusActionEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN26QAccessibleActionInterface14setFocusActionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN26QAccessibleActionInterface14setFocusActionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QString & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN26QAccessibleActionInterface14setFocusActionEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN26QAccessibleActionInterface14setFocusActionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN26QAccessibleActionInterface12toggleActionEv
const QString &
SCOREP_LIBWRAP_FUNC_NAME( _ZN26QAccessibleActionInterface12toggleActionEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN26QAccessibleActionInterface12toggleActionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN26QAccessibleActionInterface12toggleActionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QString & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN26QAccessibleActionInterface12toggleActionEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN26QAccessibleActionInterface12toggleActionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN26QAccessibleActionInterface16scrollLeftActionEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZN26QAccessibleActionInterface16scrollLeftActionEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN26QAccessibleActionInterface16scrollLeftActionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN26QAccessibleActionInterface16scrollLeftActionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN26QAccessibleActionInterface16scrollLeftActionEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN26QAccessibleActionInterface16scrollLeftActionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN26QAccessibleActionInterface17scrollRightActionEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZN26QAccessibleActionInterface17scrollRightActionEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN26QAccessibleActionInterface17scrollRightActionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN26QAccessibleActionInterface17scrollRightActionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN26QAccessibleActionInterface17scrollRightActionEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN26QAccessibleActionInterface17scrollRightActionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN26QAccessibleActionInterface14scrollUpActionEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZN26QAccessibleActionInterface14scrollUpActionEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN26QAccessibleActionInterface14scrollUpActionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN26QAccessibleActionInterface14scrollUpActionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN26QAccessibleActionInterface14scrollUpActionEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN26QAccessibleActionInterface14scrollUpActionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN26QAccessibleActionInterface16scrollDownActionEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZN26QAccessibleActionInterface16scrollDownActionEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN26QAccessibleActionInterface16scrollDownActionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN26QAccessibleActionInterface16scrollDownActionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN26QAccessibleActionInterface16scrollDownActionEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN26QAccessibleActionInterface16scrollDownActionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN26QAccessibleActionInterface14nextPageActionEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZN26QAccessibleActionInterface14nextPageActionEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN26QAccessibleActionInterface14nextPageActionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN26QAccessibleActionInterface14nextPageActionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN26QAccessibleActionInterface14nextPageActionEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN26QAccessibleActionInterface14nextPageActionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN26QAccessibleActionInterface18previousPageActionEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZN26QAccessibleActionInterface18previousPageActionEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN26QAccessibleActionInterface18previousPageActionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN26QAccessibleActionInterface18previousPageActionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN26QAccessibleActionInterface18previousPageActionEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN26QAccessibleActionInterface18previousPageActionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN25QAccessibleImageInterfaceD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN25QAccessibleImageInterfaceD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN25QAccessibleImageInterfaceD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN25QAccessibleImageInterfaceD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN25QAccessibleImageInterfaceD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN25QAccessibleImageInterfaceD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN25QAccessibleImageInterfaceD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN25QAccessibleImageInterfaceD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN25QAccessibleImageInterfaceD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN25QAccessibleImageInterfaceD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN25QAccessibleImageInterfaceD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN25QAccessibleImageInterfaceD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN25QAccessibleImageInterfaceD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN25QAccessibleImageInterfaceD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN25QAccessibleImageInterfaceD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN25QAccessibleImageInterfaceD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN25QAccessibleImageInterfaceD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN25QAccessibleImageInterfaceD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN16QAccessibleEventD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN16QAccessibleEventD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN16QAccessibleEventD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN16QAccessibleEventD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN16QAccessibleEventD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN16QAccessibleEventD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN16QAccessibleEventD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN16QAccessibleEventD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN16QAccessibleEventD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN16QAccessibleEventD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN16QAccessibleEventD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN16QAccessibleEventD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN16QAccessibleEventD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN16QAccessibleEventD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN16QAccessibleEventD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN16QAccessibleEventD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN16QAccessibleEventD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN16QAccessibleEventD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK16QAccessibleEvent8uniqueIdEv
QAccessible::Id
SCOREP_LIBWRAP_FUNC_NAME( _ZNK16QAccessibleEvent8uniqueIdEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK16QAccessibleEvent8uniqueIdEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK16QAccessibleEvent8uniqueIdEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QAccessible::Id scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK16QAccessibleEvent8uniqueIdEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK16QAccessibleEvent8uniqueIdEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK16QAccessibleEvent19accessibleInterfaceEv
QAccessibleInterface *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK16QAccessibleEvent19accessibleInterfaceEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK16QAccessibleEvent19accessibleInterfaceEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK16QAccessibleEvent19accessibleInterfaceEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QAccessibleInterface * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK16QAccessibleEvent19accessibleInterfaceEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK16QAccessibleEvent19accessibleInterfaceEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN27QAccessibleStateChangeEventD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN27QAccessibleStateChangeEventD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN27QAccessibleStateChangeEventD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN27QAccessibleStateChangeEventD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN27QAccessibleStateChangeEventD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN27QAccessibleStateChangeEventD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN27QAccessibleStateChangeEventD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN27QAccessibleStateChangeEventD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN27QAccessibleStateChangeEventD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN27QAccessibleStateChangeEventD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN27QAccessibleStateChangeEventD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN27QAccessibleStateChangeEventD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN27QAccessibleStateChangeEventD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN27QAccessibleStateChangeEventD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN27QAccessibleStateChangeEventD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN27QAccessibleStateChangeEventD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN27QAccessibleStateChangeEventD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN27QAccessibleStateChangeEventD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN26QAccessibleTextCursorEventD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN26QAccessibleTextCursorEventD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN26QAccessibleTextCursorEventD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN26QAccessibleTextCursorEventD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN26QAccessibleTextCursorEventD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN26QAccessibleTextCursorEventD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN26QAccessibleTextCursorEventD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN26QAccessibleTextCursorEventD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN26QAccessibleTextCursorEventD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN26QAccessibleTextCursorEventD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN26QAccessibleTextCursorEventD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN26QAccessibleTextCursorEventD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN26QAccessibleTextCursorEventD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN26QAccessibleTextCursorEventD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN26QAccessibleTextCursorEventD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN26QAccessibleTextCursorEventD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN26QAccessibleTextCursorEventD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN26QAccessibleTextCursorEventD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN29QAccessibleTextSelectionEventD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN29QAccessibleTextSelectionEventD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN29QAccessibleTextSelectionEventD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN29QAccessibleTextSelectionEventD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN29QAccessibleTextSelectionEventD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN29QAccessibleTextSelectionEventD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN29QAccessibleTextSelectionEventD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN29QAccessibleTextSelectionEventD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN29QAccessibleTextSelectionEventD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN29QAccessibleTextSelectionEventD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN29QAccessibleTextSelectionEventD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN29QAccessibleTextSelectionEventD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN29QAccessibleTextSelectionEventD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN29QAccessibleTextSelectionEventD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN29QAccessibleTextSelectionEventD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN29QAccessibleTextSelectionEventD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN29QAccessibleTextSelectionEventD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN29QAccessibleTextSelectionEventD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN26QAccessibleTextInsertEventD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN26QAccessibleTextInsertEventD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN26QAccessibleTextInsertEventD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN26QAccessibleTextInsertEventD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN26QAccessibleTextInsertEventD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN26QAccessibleTextInsertEventD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN26QAccessibleTextInsertEventD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN26QAccessibleTextInsertEventD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN26QAccessibleTextInsertEventD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN26QAccessibleTextInsertEventD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN26QAccessibleTextInsertEventD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN26QAccessibleTextInsertEventD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN26QAccessibleTextInsertEventD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN26QAccessibleTextInsertEventD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN26QAccessibleTextInsertEventD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN26QAccessibleTextInsertEventD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN26QAccessibleTextInsertEventD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN26QAccessibleTextInsertEventD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN26QAccessibleTextRemoveEventD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN26QAccessibleTextRemoveEventD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN26QAccessibleTextRemoveEventD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN26QAccessibleTextRemoveEventD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN26QAccessibleTextRemoveEventD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN26QAccessibleTextRemoveEventD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN26QAccessibleTextRemoveEventD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN26QAccessibleTextRemoveEventD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN26QAccessibleTextRemoveEventD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN26QAccessibleTextRemoveEventD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN26QAccessibleTextRemoveEventD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN26QAccessibleTextRemoveEventD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN26QAccessibleTextRemoveEventD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN26QAccessibleTextRemoveEventD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN26QAccessibleTextRemoveEventD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN26QAccessibleTextRemoveEventD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN26QAccessibleTextRemoveEventD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN26QAccessibleTextRemoveEventD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN26QAccessibleTextUpdateEventD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN26QAccessibleTextUpdateEventD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN26QAccessibleTextUpdateEventD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN26QAccessibleTextUpdateEventD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN26QAccessibleTextUpdateEventD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN26QAccessibleTextUpdateEventD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN26QAccessibleTextUpdateEventD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN26QAccessibleTextUpdateEventD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN26QAccessibleTextUpdateEventD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN26QAccessibleTextUpdateEventD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN26QAccessibleTextUpdateEventD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN26QAccessibleTextUpdateEventD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN26QAccessibleTextUpdateEventD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN26QAccessibleTextUpdateEventD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN26QAccessibleTextUpdateEventD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN26QAccessibleTextUpdateEventD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN26QAccessibleTextUpdateEventD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN26QAccessibleTextUpdateEventD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN27QAccessibleValueChangeEventD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN27QAccessibleValueChangeEventD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN27QAccessibleValueChangeEventD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN27QAccessibleValueChangeEventD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN27QAccessibleValueChangeEventD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN27QAccessibleValueChangeEventD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN27QAccessibleValueChangeEventD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN27QAccessibleValueChangeEventD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN27QAccessibleValueChangeEventD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN27QAccessibleValueChangeEventD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN27QAccessibleValueChangeEventD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN27QAccessibleValueChangeEventD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN27QAccessibleValueChangeEventD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN27QAccessibleValueChangeEventD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN27QAccessibleValueChangeEventD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN27QAccessibleValueChangeEventD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN27QAccessibleValueChangeEventD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN27QAccessibleValueChangeEventD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN32QAccessibleTableModelChangeEventD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN32QAccessibleTableModelChangeEventD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN32QAccessibleTableModelChangeEventD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN32QAccessibleTableModelChangeEventD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN32QAccessibleTableModelChangeEventD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN32QAccessibleTableModelChangeEventD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN32QAccessibleTableModelChangeEventD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN32QAccessibleTableModelChangeEventD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN32QAccessibleTableModelChangeEventD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN32QAccessibleTableModelChangeEventD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN32QAccessibleTableModelChangeEventD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN32QAccessibleTableModelChangeEventD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN32QAccessibleTableModelChangeEventD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN32QAccessibleTableModelChangeEventD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN32QAccessibleTableModelChangeEventD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN32QAccessibleTableModelChangeEventD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN32QAccessibleTableModelChangeEventD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN32QAccessibleTableModelChangeEventD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _Z21qAccessibleRoleStringN11QAccessible4RoleE
const char *
SCOREP_LIBWRAP_FUNC_NAME( _Z21qAccessibleRoleStringN11QAccessible4RoleE )( QAccessible::Role role )
{
    LIBWRAP_EARLY_INIT( _Z21qAccessibleRoleStringN11QAccessible4RoleE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _Z21qAccessibleRoleStringN11QAccessible4RoleE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const char * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _Z21qAccessibleRoleStringN11QAccessible4RoleE, ( role ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _Z21qAccessibleRoleStringN11QAccessible4RoleE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _Z22qAccessibleEventStringN11QAccessible5EventE
const char *
SCOREP_LIBWRAP_FUNC_NAME( _Z22qAccessibleEventStringN11QAccessible5EventE )( QAccessible::Event event )
{
    LIBWRAP_EARLY_INIT( _Z22qAccessibleEventStringN11QAccessible5EventE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _Z22qAccessibleEventStringN11QAccessible5EventE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const char * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _Z22qAccessibleEventStringN11QAccessible5EventE, ( event ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _Z22qAccessibleEventStringN11QAccessible5EventE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _Z37qAccessibleLocalizedActionDescriptionRK7QString
QString
SCOREP_LIBWRAP_FUNC_NAME( _Z37qAccessibleLocalizedActionDescriptionRK7QString )( const QString & actionName )
{
    LIBWRAP_EARLY_INIT( _Z37qAccessibleLocalizedActionDescriptionRK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _Z37qAccessibleLocalizedActionDescriptionRK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _Z37qAccessibleLocalizedActionDescriptionRK7QString, ( actionName ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _Z37qAccessibleLocalizedActionDescriptionRK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _Zls6QDebugPK20QAccessibleInterface
QDebug
SCOREP_LIBWRAP_FUNC_NAME( _Zls6QDebugPK20QAccessibleInterface )( QDebug d, const QAccessibleInterface * iface )
{
    LIBWRAP_EARLY_INIT( _Zls6QDebugPK20QAccessibleInterface );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _Zls6QDebugPK20QAccessibleInterface );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDebug scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _Zls6QDebugPK20QAccessibleInterface, ( d, iface ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _Zls6QDebugPK20QAccessibleInterface );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _Zls6QDebugRK16QAccessibleEvent
QDebug
SCOREP_LIBWRAP_FUNC_NAME( _Zls6QDebugRK16QAccessibleEvent )( QDebug d, const QAccessibleEvent & ev )
{
    LIBWRAP_EARLY_INIT( _Zls6QDebugRK16QAccessibleEvent );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _Zls6QDebugRK16QAccessibleEvent );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDebug scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _Zls6QDebugRK16QAccessibleEvent, ( d, ev ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _Zls6QDebugRK16QAccessibleEvent );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK23QAccessibleBridgePlugin10metaObjectEv
const QMetaObject *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK23QAccessibleBridgePlugin10metaObjectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK23QAccessibleBridgePlugin10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK23QAccessibleBridgePlugin10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QMetaObject * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK23QAccessibleBridgePlugin10metaObjectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK23QAccessibleBridgePlugin10metaObjectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN23QAccessibleBridgePlugin11qt_metacastEPKc
void *
SCOREP_LIBWRAP_FUNC_NAME( _ZN23QAccessibleBridgePlugin11qt_metacastEPKc )( void *scorep_libwrap_arg_this, const char * scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN23QAccessibleBridgePlugin11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN23QAccessibleBridgePlugin11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    void * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN23QAccessibleBridgePlugin11qt_metacastEPKc, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN23QAccessibleBridgePlugin11qt_metacastEPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN23QAccessibleBridgePlugin11qt_metacallEN11QMetaObject4CallEiPPv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZN23QAccessibleBridgePlugin11qt_metacallEN11QMetaObject4CallEiPPv )( void *scorep_libwrap_arg_this, QMetaObject::Call scorep_libwrap_arg_1, int scorep_libwrap_arg_2, void ** scorep_libwrap_arg_3 )
{
    LIBWRAP_EARLY_INIT( _ZN23QAccessibleBridgePlugin11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN23QAccessibleBridgePlugin11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN23QAccessibleBridgePlugin11qt_metacallEN11QMetaObject4CallEiPPv, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, scorep_libwrap_arg_2, scorep_libwrap_arg_3 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN23QAccessibleBridgePlugin11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN23QAccessibleBridgePluginC2EP7QObject
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN23QAccessibleBridgePluginC2EP7QObject )( void *scorep_libwrap_arg_this, QObject * parent )
{
    LIBWRAP_EARLY_INIT( _ZN23QAccessibleBridgePluginC2EP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN23QAccessibleBridgePluginC2EP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN23QAccessibleBridgePluginC2EP7QObject, ( scorep_libwrap_arg_this, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN23QAccessibleBridgePluginC2EP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN23QAccessibleBridgePluginD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN23QAccessibleBridgePluginD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN23QAccessibleBridgePluginD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN23QAccessibleBridgePluginD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN23QAccessibleBridgePluginD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN23QAccessibleBridgePluginD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN23QAccessibleBridgePluginD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN23QAccessibleBridgePluginD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN23QAccessibleBridgePluginD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN23QAccessibleBridgePluginD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN23QAccessibleBridgePluginD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN23QAccessibleBridgePluginD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN23QAccessibleBridgePluginD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN23QAccessibleBridgePluginD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN23QAccessibleBridgePluginD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN23QAccessibleBridgePluginD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN23QAccessibleBridgePluginD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN23QAccessibleBridgePluginD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN17QAccessibleObjectC2EP7QObject
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QAccessibleObjectC2EP7QObject )( void *scorep_libwrap_arg_this, QObject * object )
{
    LIBWRAP_EARLY_INIT( _ZN17QAccessibleObjectC2EP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QAccessibleObjectC2EP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QAccessibleObjectC2EP7QObject, ( scorep_libwrap_arg_this, object ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QAccessibleObjectC2EP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK17QAccessibleObject7isValidEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK17QAccessibleObject7isValidEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK17QAccessibleObject7isValidEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK17QAccessibleObject7isValidEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK17QAccessibleObject7isValidEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK17QAccessibleObject7isValidEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK17QAccessibleObject6objectEv
QObject *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK17QAccessibleObject6objectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK17QAccessibleObject6objectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK17QAccessibleObject6objectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QObject * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK17QAccessibleObject6objectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK17QAccessibleObject6objectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK17QAccessibleObject4rectEv
QRect
SCOREP_LIBWRAP_FUNC_NAME( _ZNK17QAccessibleObject4rectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK17QAccessibleObject4rectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK17QAccessibleObject4rectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRect scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK17QAccessibleObject4rectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK17QAccessibleObject4rectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK17QAccessibleObject7childAtEii
QAccessibleInterface *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK17QAccessibleObject7childAtEii )( void *scorep_libwrap_arg_this, int x, int y )
{
    LIBWRAP_EARLY_INIT( _ZNK17QAccessibleObject7childAtEii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK17QAccessibleObject7childAtEii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QAccessibleInterface * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK17QAccessibleObject7childAtEii, ( scorep_libwrap_arg_this, x, y ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK17QAccessibleObject7childAtEii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN22QAccessibleApplicationC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN22QAccessibleApplicationC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN22QAccessibleApplicationC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN22QAccessibleApplicationC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN22QAccessibleApplicationC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN22QAccessibleApplicationC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK22QAccessibleApplication6windowEv
QWindow *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK22QAccessibleApplication6windowEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK22QAccessibleApplication6windowEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK22QAccessibleApplication6windowEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QWindow * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK22QAccessibleApplication6windowEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK22QAccessibleApplication6windowEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK22QAccessibleApplication10childCountEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK22QAccessibleApplication10childCountEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK22QAccessibleApplication10childCountEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK22QAccessibleApplication10childCountEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK22QAccessibleApplication10childCountEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK22QAccessibleApplication10childCountEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK22QAccessibleApplication12indexOfChildEPK20QAccessibleInterface
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK22QAccessibleApplication12indexOfChildEPK20QAccessibleInterface )( void *scorep_libwrap_arg_this, const QAccessibleInterface * scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZNK22QAccessibleApplication12indexOfChildEPK20QAccessibleInterface );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK22QAccessibleApplication12indexOfChildEPK20QAccessibleInterface );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK22QAccessibleApplication12indexOfChildEPK20QAccessibleInterface, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK22QAccessibleApplication12indexOfChildEPK20QAccessibleInterface );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK22QAccessibleApplication10focusChildEv
QAccessibleInterface *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK22QAccessibleApplication10focusChildEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK22QAccessibleApplication10focusChildEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK22QAccessibleApplication10focusChildEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QAccessibleInterface * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK22QAccessibleApplication10focusChildEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK22QAccessibleApplication10focusChildEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK22QAccessibleApplication6parentEv
QAccessibleInterface *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK22QAccessibleApplication6parentEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK22QAccessibleApplication6parentEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK22QAccessibleApplication6parentEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QAccessibleInterface * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK22QAccessibleApplication6parentEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK22QAccessibleApplication6parentEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK22QAccessibleApplication5childEi
QAccessibleInterface *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK22QAccessibleApplication5childEi )( void *scorep_libwrap_arg_this, int index )
{
    LIBWRAP_EARLY_INIT( _ZNK22QAccessibleApplication5childEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK22QAccessibleApplication5childEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QAccessibleInterface * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK22QAccessibleApplication5childEi, ( scorep_libwrap_arg_this, index ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK22QAccessibleApplication5childEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK22QAccessibleApplication4roleEv
QAccessible::Role
SCOREP_LIBWRAP_FUNC_NAME( _ZNK22QAccessibleApplication4roleEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK22QAccessibleApplication4roleEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK22QAccessibleApplication4roleEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QAccessible::Role scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK22QAccessibleApplication4roleEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK22QAccessibleApplication4roleEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK22QAccessibleApplication5stateEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK22QAccessibleApplication5stateEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK22QAccessibleApplication5stateEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK22QAccessibleApplication5stateEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK22QAccessibleApplication5stateEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK22QAccessibleApplication5stateEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK17QAccessiblePlugin10metaObjectEv
const QMetaObject *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK17QAccessiblePlugin10metaObjectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK17QAccessiblePlugin10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK17QAccessiblePlugin10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QMetaObject * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK17QAccessiblePlugin10metaObjectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK17QAccessiblePlugin10metaObjectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN17QAccessiblePlugin11qt_metacastEPKc
void *
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QAccessiblePlugin11qt_metacastEPKc )( void *scorep_libwrap_arg_this, const char * scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN17QAccessiblePlugin11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QAccessiblePlugin11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    void * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN17QAccessiblePlugin11qt_metacastEPKc, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QAccessiblePlugin11qt_metacastEPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN17QAccessiblePlugin11qt_metacallEN11QMetaObject4CallEiPPv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QAccessiblePlugin11qt_metacallEN11QMetaObject4CallEiPPv )( void *scorep_libwrap_arg_this, QMetaObject::Call scorep_libwrap_arg_1, int scorep_libwrap_arg_2, void ** scorep_libwrap_arg_3 )
{
    LIBWRAP_EARLY_INIT( _ZN17QAccessiblePlugin11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QAccessiblePlugin11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN17QAccessiblePlugin11qt_metacallEN11QMetaObject4CallEiPPv, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, scorep_libwrap_arg_2, scorep_libwrap_arg_3 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QAccessiblePlugin11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN17QAccessiblePluginC2EP7QObject
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QAccessiblePluginC2EP7QObject )( void *scorep_libwrap_arg_this, QObject * parent )
{
    LIBWRAP_EARLY_INIT( _ZN17QAccessiblePluginC2EP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QAccessiblePluginC2EP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QAccessiblePluginC2EP7QObject, ( scorep_libwrap_arg_this, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QAccessiblePluginC2EP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN17QAccessiblePluginD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QAccessiblePluginD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN17QAccessiblePluginD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QAccessiblePluginD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QAccessiblePluginD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QAccessiblePluginD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN17QAccessiblePluginD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QAccessiblePluginD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN17QAccessiblePluginD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QAccessiblePluginD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QAccessiblePluginD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QAccessiblePluginD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN17QAccessiblePluginD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QAccessiblePluginD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN17QAccessiblePluginD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QAccessiblePluginD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QAccessiblePluginD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QAccessiblePluginD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QPaintDeviceD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPaintDeviceD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QPaintDeviceD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPaintDeviceD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPaintDeviceD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPaintDeviceD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QPaintDeviceD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPaintDeviceD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QPaintDeviceD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPaintDeviceD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPaintDeviceD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPaintDeviceD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QPaintDeviceD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPaintDeviceD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QPaintDeviceD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPaintDeviceD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPaintDeviceD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPaintDeviceD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK12QPaintDevice7devTypeEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QPaintDevice7devTypeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QPaintDevice7devTypeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QPaintDevice7devTypeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QPaintDevice7devTypeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QPaintDevice7devTypeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _Z22qt_paint_device_metricPK12QPaintDeviceNS_17PaintDeviceMetricE
int
SCOREP_LIBWRAP_FUNC_NAME( _Z22qt_paint_device_metricPK12QPaintDeviceNS_17PaintDeviceMetricE )( const QPaintDevice * device, QPaintDevice::PaintDeviceMetric metric )
{
    LIBWRAP_EARLY_INIT( _Z22qt_paint_device_metricPK12QPaintDeviceNS_17PaintDeviceMetricE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _Z22qt_paint_device_metricPK12QPaintDeviceNS_17PaintDeviceMetricE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _Z22qt_paint_device_metricPK12QPaintDeviceNS_17PaintDeviceMetricE, ( device, metric ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _Z22qt_paint_device_metricPK12QPaintDeviceNS_17PaintDeviceMetricE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN8QPolygonC2EiPKi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPolygonC2EiPKi )( void *scorep_libwrap_arg_this, int nPoints, const int * points )
{
    LIBWRAP_EARLY_INIT( _ZN8QPolygonC2EiPKi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPolygonC2EiPKi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPolygonC2EiPKi, ( scorep_libwrap_arg_this, nPoints, points ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPolygonC2EiPKi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPolygonC1EiPKi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPolygonC1EiPKi )( void *scorep_libwrap_arg_this, int nPoints, const int * points )
{
    LIBWRAP_EARLY_INIT( _ZN8QPolygonC1EiPKi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPolygonC1EiPKi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPolygonC1EiPKi, ( scorep_libwrap_arg_this, nPoints, points ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPolygonC1EiPKi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPolygon9translateEii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPolygon9translateEii )( void *scorep_libwrap_arg_this, int dx, int dy )
{
    LIBWRAP_EARLY_INIT( _ZN8QPolygon9translateEii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPolygon9translateEii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPolygon9translateEii, ( scorep_libwrap_arg_this, dx, dy ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPolygon9translateEii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK8QPolygon10translatedEii
QPolygon
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QPolygon10translatedEii )( void *scorep_libwrap_arg_this, int dx, int dy )
{
    LIBWRAP_EARLY_INIT( _ZNK8QPolygon10translatedEii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QPolygon10translatedEii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPolygon scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QPolygon10translatedEii, ( scorep_libwrap_arg_this, dx, dy ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QPolygon10translatedEii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK8QPolygon12boundingRectEv
QRect
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QPolygon12boundingRectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QPolygon12boundingRectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QPolygon12boundingRectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRect scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QPolygon12boundingRectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QPolygon12boundingRectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK8QPolygon5pointEiPiS0_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QPolygon5pointEiPiS0_ )( void *scorep_libwrap_arg_this, int i, int * x, int * y )
{
    LIBWRAP_EARLY_INIT( _ZNK8QPolygon5pointEiPiS0_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QPolygon5pointEiPiS0_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QPolygon5pointEiPiS0_, ( scorep_libwrap_arg_this, i, x, y ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QPolygon5pointEiPiS0_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPolygon9setPointsEiPKi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPolygon9setPointsEiPKi )( void *scorep_libwrap_arg_this, int nPoints, const int * points )
{
    LIBWRAP_EARLY_INIT( _ZN8QPolygon9setPointsEiPKi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPolygon9setPointsEiPKi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPolygon9setPointsEiPKi, ( scorep_libwrap_arg_this, nPoints, points ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPolygon9setPointsEiPKi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPolygon9putPointsEiiPKi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPolygon9putPointsEiiPKi )( void *scorep_libwrap_arg_this, int index, int nPoints, const int * points )
{
    LIBWRAP_EARLY_INIT( _ZN8QPolygon9putPointsEiiPKi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPolygon9putPointsEiiPKi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPolygon9putPointsEiiPKi, ( scorep_libwrap_arg_this, index, nPoints, points ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPolygon9putPointsEiiPKi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPolygon9putPointsEiiRKS_i
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPolygon9putPointsEiiRKS_i )( void *scorep_libwrap_arg_this, int index, int nPoints, const QPolygon & from, int fromIndex )
{
    LIBWRAP_EARLY_INIT( _ZN8QPolygon9putPointsEiiRKS_i );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPolygon9putPointsEiiRKS_i );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPolygon9putPointsEiiRKS_i, ( scorep_libwrap_arg_this, index, nPoints, from, fromIndex ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPolygon9putPointsEiiRKS_i );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK8QPolygon13containsPointERK6QPointN2Qt8FillRuleE
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QPolygon13containsPointERK6QPointN2Qt8FillRuleE )( void *scorep_libwrap_arg_this, const QPoint & pt, Qt::FillRule fillRule )
{
    LIBWRAP_EARLY_INIT( _ZNK8QPolygon13containsPointERK6QPointN2Qt8FillRuleE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QPolygon13containsPointERK6QPointN2Qt8FillRuleE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QPolygon13containsPointERK6QPointN2Qt8FillRuleE, ( scorep_libwrap_arg_this, pt, fillRule ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QPolygon13containsPointERK6QPointN2Qt8FillRuleE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK8QPolygon6unitedERKS_
QPolygon
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QPolygon6unitedERKS_ )( void *scorep_libwrap_arg_this, const QPolygon & r )
{
    LIBWRAP_EARLY_INIT( _ZNK8QPolygon6unitedERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QPolygon6unitedERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPolygon scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QPolygon6unitedERKS_, ( scorep_libwrap_arg_this, r ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QPolygon6unitedERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK8QPolygon11intersectedERKS_
QPolygon
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QPolygon11intersectedERKS_ )( void *scorep_libwrap_arg_this, const QPolygon & r )
{
    LIBWRAP_EARLY_INIT( _ZNK8QPolygon11intersectedERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QPolygon11intersectedERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPolygon scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QPolygon11intersectedERKS_, ( scorep_libwrap_arg_this, r ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QPolygon11intersectedERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK8QPolygon10subtractedERKS_
QPolygon
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QPolygon10subtractedERKS_ )( void *scorep_libwrap_arg_this, const QPolygon & r )
{
    LIBWRAP_EARLY_INIT( _ZNK8QPolygon10subtractedERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QPolygon10subtractedERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPolygon scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QPolygon10subtractedERKS_, ( scorep_libwrap_arg_this, r ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QPolygon10subtractedERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZlsR11QDataStreamRK8QPolygon
QDataStream &
SCOREP_LIBWRAP_FUNC_NAME( _ZlsR11QDataStreamRK8QPolygon )( QDataStream & stream, const QPolygon & polygon )
{
    LIBWRAP_EARLY_INIT( _ZlsR11QDataStreamRK8QPolygon );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZlsR11QDataStreamRK8QPolygon );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDataStream & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZlsR11QDataStreamRK8QPolygon, ( stream, polygon ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZlsR11QDataStreamRK8QPolygon );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZrsR11QDataStreamR8QPolygon
QDataStream &
SCOREP_LIBWRAP_FUNC_NAME( _ZrsR11QDataStreamR8QPolygon )( QDataStream & stream, QPolygon & polygon )
{
    LIBWRAP_EARLY_INIT( _ZrsR11QDataStreamR8QPolygon );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZrsR11QDataStreamR8QPolygon );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDataStream & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZrsR11QDataStreamR8QPolygon, ( stream, polygon ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZrsR11QDataStreamR8QPolygon );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN9QPolygonFC2ERK8QPolygon
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QPolygonFC2ERK8QPolygon )( void *scorep_libwrap_arg_this, const QPolygon & a )
{
    LIBWRAP_EARLY_INIT( _ZN9QPolygonFC2ERK8QPolygon );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QPolygonFC2ERK8QPolygon );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QPolygonFC2ERK8QPolygon, ( scorep_libwrap_arg_this, a ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QPolygonFC2ERK8QPolygon );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QPolygonFC1ERK8QPolygon
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QPolygonFC1ERK8QPolygon )( void *scorep_libwrap_arg_this, const QPolygon & a )
{
    LIBWRAP_EARLY_INIT( _ZN9QPolygonFC1ERK8QPolygon );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QPolygonFC1ERK8QPolygon );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QPolygonFC1ERK8QPolygon, ( scorep_libwrap_arg_this, a ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QPolygonFC1ERK8QPolygon );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QPolygonF9translateERK7QPointF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QPolygonF9translateERK7QPointF )( void *scorep_libwrap_arg_this, const QPointF & offset )
{
    LIBWRAP_EARLY_INIT( _ZN9QPolygonF9translateERK7QPointF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QPolygonF9translateERK7QPointF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QPolygonF9translateERK7QPointF, ( scorep_libwrap_arg_this, offset ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QPolygonF9translateERK7QPointF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK9QPolygonF10translatedERK7QPointF
QPolygonF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QPolygonF10translatedERK7QPointF )( void *scorep_libwrap_arg_this, const QPointF & offset )
{
    LIBWRAP_EARLY_INIT( _ZNK9QPolygonF10translatedERK7QPointF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QPolygonF10translatedERK7QPointF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPolygonF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QPolygonF10translatedERK7QPointF, ( scorep_libwrap_arg_this, offset ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QPolygonF10translatedERK7QPointF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QPolygonF9toPolygonEv
QPolygon
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QPolygonF9toPolygonEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QPolygonF9toPolygonEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QPolygonF9toPolygonEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPolygon scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QPolygonF9toPolygonEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QPolygonF9toPolygonEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QPolygonF12boundingRectEv
QRectF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QPolygonF12boundingRectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QPolygonF12boundingRectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QPolygonF12boundingRectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRectF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QPolygonF12boundingRectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QPolygonF12boundingRectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QPolygonF13containsPointERK7QPointFN2Qt8FillRuleE
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QPolygonF13containsPointERK7QPointFN2Qt8FillRuleE )( void *scorep_libwrap_arg_this, const QPointF & pt, Qt::FillRule fillRule )
{
    LIBWRAP_EARLY_INIT( _ZNK9QPolygonF13containsPointERK7QPointFN2Qt8FillRuleE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QPolygonF13containsPointERK7QPointFN2Qt8FillRuleE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QPolygonF13containsPointERK7QPointFN2Qt8FillRuleE, ( scorep_libwrap_arg_this, pt, fillRule ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QPolygonF13containsPointERK7QPointFN2Qt8FillRuleE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QPolygonF6unitedERKS_
QPolygonF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QPolygonF6unitedERKS_ )( void *scorep_libwrap_arg_this, const QPolygonF & r )
{
    LIBWRAP_EARLY_INIT( _ZNK9QPolygonF6unitedERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QPolygonF6unitedERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPolygonF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QPolygonF6unitedERKS_, ( scorep_libwrap_arg_this, r ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QPolygonF6unitedERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QPolygonF11intersectedERKS_
QPolygonF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QPolygonF11intersectedERKS_ )( void *scorep_libwrap_arg_this, const QPolygonF & r )
{
    LIBWRAP_EARLY_INIT( _ZNK9QPolygonF11intersectedERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QPolygonF11intersectedERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPolygonF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QPolygonF11intersectedERKS_, ( scorep_libwrap_arg_this, r ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QPolygonF11intersectedERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QPolygonF10subtractedERKS_
QPolygonF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QPolygonF10subtractedERKS_ )( void *scorep_libwrap_arg_this, const QPolygonF & r )
{
    LIBWRAP_EARLY_INIT( _ZNK9QPolygonF10subtractedERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QPolygonF10subtractedERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPolygonF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QPolygonF10subtractedERKS_, ( scorep_libwrap_arg_this, r ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QPolygonF10subtractedERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZlsR11QDataStreamRK9QPolygonF
QDataStream &
SCOREP_LIBWRAP_FUNC_NAME( _ZlsR11QDataStreamRK9QPolygonF )( QDataStream & stream, const QPolygonF & array )
{
    LIBWRAP_EARLY_INIT( _ZlsR11QDataStreamRK9QPolygonF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZlsR11QDataStreamRK9QPolygonF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDataStream & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZlsR11QDataStreamRK9QPolygonF, ( stream, array ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZlsR11QDataStreamRK9QPolygonF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZrsR11QDataStreamR9QPolygonF
QDataStream &
SCOREP_LIBWRAP_FUNC_NAME( _ZrsR11QDataStreamR9QPolygonF )( QDataStream & stream, QPolygonF & array )
{
    LIBWRAP_EARLY_INIT( _ZrsR11QDataStreamR9QPolygonF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZrsR11QDataStreamR9QPolygonF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDataStream & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZrsR11QDataStreamR9QPolygonF, ( stream, array ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZrsR11QDataStreamR9QPolygonF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QMatrixC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QMatrixC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN7QMatrixC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QMatrixC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QMatrixC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QMatrixC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QMatrixC1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QMatrixC1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN7QMatrixC1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QMatrixC1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QMatrixC1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QMatrixC1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QMatrixC2Edddddd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QMatrixC2Edddddd )( void *scorep_libwrap_arg_this, qreal m11, qreal m12, qreal m21, qreal m22, qreal dx, qreal dy )
{
    LIBWRAP_EARLY_INIT( _ZN7QMatrixC2Edddddd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QMatrixC2Edddddd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QMatrixC2Edddddd, ( scorep_libwrap_arg_this, m11, m12, m21, m22, dx, dy ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QMatrixC2Edddddd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QMatrixC1Edddddd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QMatrixC1Edddddd )( void *scorep_libwrap_arg_this, qreal m11, qreal m12, qreal m21, qreal m22, qreal dx, qreal dy )
{
    LIBWRAP_EARLY_INIT( _ZN7QMatrixC1Edddddd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QMatrixC1Edddddd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QMatrixC1Edddddd, ( scorep_libwrap_arg_this, m11, m12, m21, m22, dx, dy ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QMatrixC1Edddddd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QMatrix9setMatrixEdddddd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QMatrix9setMatrixEdddddd )( void *scorep_libwrap_arg_this, qreal m11, qreal m12, qreal m21, qreal m22, qreal dx, qreal dy )
{
    LIBWRAP_EARLY_INIT( _ZN7QMatrix9setMatrixEdddddd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QMatrix9setMatrixEdddddd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QMatrix9setMatrixEdddddd, ( scorep_libwrap_arg_this, m11, m12, m21, m22, dx, dy ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QMatrix9setMatrixEdddddd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK7QMatrix3mapEiiPiS0_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QMatrix3mapEiiPiS0_ )( void *scorep_libwrap_arg_this, int x, int y, int * tx, int * ty )
{
    LIBWRAP_EARLY_INIT( _ZNK7QMatrix3mapEiiPiS0_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QMatrix3mapEiiPiS0_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QMatrix3mapEiiPiS0_, ( scorep_libwrap_arg_this, x, y, tx, ty ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QMatrix3mapEiiPiS0_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK7QMatrix3mapEddPdS0_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QMatrix3mapEddPdS0_ )( void *scorep_libwrap_arg_this, qreal x, qreal y, qreal * tx, qreal * ty )
{
    LIBWRAP_EARLY_INIT( _ZNK7QMatrix3mapEddPdS0_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QMatrix3mapEddPdS0_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QMatrix3mapEddPdS0_, ( scorep_libwrap_arg_this, x, y, tx, ty ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QMatrix3mapEddPdS0_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK7QMatrix7mapRectERK5QRect
QRect
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QMatrix7mapRectERK5QRect )( void *scorep_libwrap_arg_this, const QRect & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZNK7QMatrix7mapRectERK5QRect );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QMatrix7mapRectERK5QRect );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRect scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QMatrix7mapRectERK5QRect, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QMatrix7mapRectERK5QRect );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QMatrix7mapRectERK6QRectF
QRectF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QMatrix7mapRectERK6QRectF )( void *scorep_libwrap_arg_this, const QRectF & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZNK7QMatrix7mapRectERK6QRectF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QMatrix7mapRectERK6QRectF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRectF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QMatrix7mapRectERK6QRectF, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QMatrix7mapRectERK6QRectF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QMatrix3mapERK6QPoint
QPoint
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QMatrix3mapERK6QPoint )( void *scorep_libwrap_arg_this, const QPoint & p )
{
    LIBWRAP_EARLY_INIT( _ZNK7QMatrix3mapERK6QPoint );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QMatrix3mapERK6QPoint );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPoint scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QMatrix3mapERK6QPoint, ( scorep_libwrap_arg_this, p ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QMatrix3mapERK6QPoint );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QMatrix3mapERK7QPointF
QPointF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QMatrix3mapERK7QPointF )( void *scorep_libwrap_arg_this, const QPointF & p )
{
    LIBWRAP_EARLY_INIT( _ZNK7QMatrix3mapERK7QPointF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QMatrix3mapERK7QPointF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPointF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QMatrix3mapERK7QPointF, ( scorep_libwrap_arg_this, p ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QMatrix3mapERK7QPointF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QMatrix3mapERK5QLine
QLine
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QMatrix3mapERK5QLine )( void *scorep_libwrap_arg_this, const QLine & l )
{
    LIBWRAP_EARLY_INIT( _ZNK7QMatrix3mapERK5QLine );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QMatrix3mapERK5QLine );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QLine scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QMatrix3mapERK5QLine, ( scorep_libwrap_arg_this, l ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QMatrix3mapERK5QLine );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QMatrix3mapERK6QLineF
QLineF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QMatrix3mapERK6QLineF )( void *scorep_libwrap_arg_this, const QLineF & l )
{
    LIBWRAP_EARLY_INIT( _ZNK7QMatrix3mapERK6QLineF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QMatrix3mapERK6QLineF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QLineF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QMatrix3mapERK6QLineF, ( scorep_libwrap_arg_this, l ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QMatrix3mapERK6QLineF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QMatrix3mapERK9QPolygonF
QPolygonF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QMatrix3mapERK9QPolygonF )( void *scorep_libwrap_arg_this, const QPolygonF & a )
{
    LIBWRAP_EARLY_INIT( _ZNK7QMatrix3mapERK9QPolygonF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QMatrix3mapERK9QPolygonF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPolygonF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QMatrix3mapERK9QPolygonF, ( scorep_libwrap_arg_this, a ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QMatrix3mapERK9QPolygonF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QMatrix3mapERK8QPolygon
QPolygon
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QMatrix3mapERK8QPolygon )( void *scorep_libwrap_arg_this, const QPolygon & a )
{
    LIBWRAP_EARLY_INIT( _ZNK7QMatrix3mapERK8QPolygon );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QMatrix3mapERK8QPolygon );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPolygon scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QMatrix3mapERK8QPolygon, ( scorep_libwrap_arg_this, a ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QMatrix3mapERK8QPolygon );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QMatrix3mapERK7QRegion
QRegion
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QMatrix3mapERK7QRegion )( void *scorep_libwrap_arg_this, const QRegion & r )
{
    LIBWRAP_EARLY_INIT( _ZNK7QMatrix3mapERK7QRegion );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QMatrix3mapERK7QRegion );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRegion scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QMatrix3mapERK7QRegion, ( scorep_libwrap_arg_this, r ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QMatrix3mapERK7QRegion );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QMatrix3mapERK12QPainterPath
QPainterPath
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QMatrix3mapERK12QPainterPath )( void *scorep_libwrap_arg_this, const QPainterPath & p )
{
    LIBWRAP_EARLY_INIT( _ZNK7QMatrix3mapERK12QPainterPath );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QMatrix3mapERK12QPainterPath );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPainterPath scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QMatrix3mapERK12QPainterPath, ( scorep_libwrap_arg_this, p ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QMatrix3mapERK12QPainterPath );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QMatrix12mapToPolygonERK5QRect
QPolygon
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QMatrix12mapToPolygonERK5QRect )( void *scorep_libwrap_arg_this, const QRect & r )
{
    LIBWRAP_EARLY_INIT( _ZNK7QMatrix12mapToPolygonERK5QRect );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QMatrix12mapToPolygonERK5QRect );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPolygon scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QMatrix12mapToPolygonERK5QRect, ( scorep_libwrap_arg_this, r ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QMatrix12mapToPolygonERK5QRect );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QMatrix5resetEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QMatrix5resetEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN7QMatrix5resetEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QMatrix5resetEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QMatrix5resetEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QMatrix5resetEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QMatrix9translateEdd
QMatrix &
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QMatrix9translateEdd )( void *scorep_libwrap_arg_this, qreal dx, qreal dy )
{
    LIBWRAP_EARLY_INIT( _ZN7QMatrix9translateEdd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QMatrix9translateEdd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QMatrix & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN7QMatrix9translateEdd, ( scorep_libwrap_arg_this, dx, dy ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QMatrix9translateEdd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QMatrix5scaleEdd
QMatrix &
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QMatrix5scaleEdd )( void *scorep_libwrap_arg_this, qreal sx, qreal sy )
{
    LIBWRAP_EARLY_INIT( _ZN7QMatrix5scaleEdd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QMatrix5scaleEdd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QMatrix & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN7QMatrix5scaleEdd, ( scorep_libwrap_arg_this, sx, sy ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QMatrix5scaleEdd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QMatrix5shearEdd
QMatrix &
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QMatrix5shearEdd )( void *scorep_libwrap_arg_this, qreal sh, qreal sv )
{
    LIBWRAP_EARLY_INIT( _ZN7QMatrix5shearEdd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QMatrix5shearEdd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QMatrix & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN7QMatrix5shearEdd, ( scorep_libwrap_arg_this, sh, sv ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QMatrix5shearEdd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QMatrix6rotateEd
QMatrix &
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QMatrix6rotateEd )( void *scorep_libwrap_arg_this, qreal a )
{
    LIBWRAP_EARLY_INIT( _ZN7QMatrix6rotateEd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QMatrix6rotateEd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QMatrix & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN7QMatrix6rotateEd, ( scorep_libwrap_arg_this, a ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QMatrix6rotateEd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QMatrix8invertedEPb
QMatrix
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QMatrix8invertedEPb )( void *scorep_libwrap_arg_this, bool * invertible )
{
    LIBWRAP_EARLY_INIT( _ZNK7QMatrix8invertedEPb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QMatrix8invertedEPb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QMatrix scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QMatrix8invertedEPb, ( scorep_libwrap_arg_this, invertible ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QMatrix8invertedEPb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QMatrixeqERKS_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QMatrixeqERKS_ )( void *scorep_libwrap_arg_this, const QMatrix & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZNK7QMatrixeqERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QMatrixeqERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QMatrixeqERKS_, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QMatrixeqERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QMatrixneERKS_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QMatrixneERKS_ )( void *scorep_libwrap_arg_this, const QMatrix & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZNK7QMatrixneERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QMatrixneERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QMatrixneERKS_, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QMatrixneERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QMatrixmLERKS_
QMatrix &
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QMatrixmLERKS_ )( void *scorep_libwrap_arg_this, const QMatrix & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN7QMatrixmLERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QMatrixmLERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QMatrix & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN7QMatrixmLERKS_, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QMatrixmLERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QMatrixmlERKS_
QMatrix
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QMatrixmlERKS_ )( void *scorep_libwrap_arg_this, const QMatrix & o )
{
    LIBWRAP_EARLY_INIT( _ZNK7QMatrixmlERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QMatrixmlERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QMatrix scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QMatrixmlERKS_, ( scorep_libwrap_arg_this, o ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QMatrixmlERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZmlRK12QPainterPathRK7QMatrix
QPainterPath
SCOREP_LIBWRAP_FUNC_NAME( _ZmlRK12QPainterPathRK7QMatrix )( const QPainterPath & p, const QMatrix & m )
{
    LIBWRAP_EARLY_INIT( _ZmlRK12QPainterPathRK7QMatrix );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZmlRK12QPainterPathRK7QMatrix );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPainterPath scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZmlRK12QPainterPathRK7QMatrix, ( p, m ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZmlRK12QPainterPathRK7QMatrix );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZlsR11QDataStreamRK7QMatrix
QDataStream &
SCOREP_LIBWRAP_FUNC_NAME( _ZlsR11QDataStreamRK7QMatrix )( QDataStream & scorep_libwrap_arg_1, const QMatrix & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _ZlsR11QDataStreamRK7QMatrix );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZlsR11QDataStreamRK7QMatrix );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDataStream & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZlsR11QDataStreamRK7QMatrix, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZlsR11QDataStreamRK7QMatrix );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZrsR11QDataStreamR7QMatrix
QDataStream &
SCOREP_LIBWRAP_FUNC_NAME( _ZrsR11QDataStreamR7QMatrix )( QDataStream & scorep_libwrap_arg_1, QMatrix & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _ZrsR11QDataStreamR7QMatrix );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZrsR11QDataStreamR7QMatrix );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDataStream & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZrsR11QDataStreamR7QMatrix, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZrsR11QDataStreamR7QMatrix );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _Zls6QDebugRK7QMatrix
QDebug
SCOREP_LIBWRAP_FUNC_NAME( _Zls6QDebugRK7QMatrix )( QDebug scorep_libwrap_arg_1, const QMatrix & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _Zls6QDebugRK7QMatrix );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _Zls6QDebugRK7QMatrix );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDebug scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _Zls6QDebugRK7QMatrix, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _Zls6QDebugRK7QMatrix );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QPainterPathC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPainterPathC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QPainterPathC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPainterPathC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPainterPathC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPainterPathC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QPainterPathC1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPainterPathC1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QPainterPathC1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPainterPathC1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPainterPathC1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPainterPathC1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QPainterPathC2ERK7QPointF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPainterPathC2ERK7QPointF )( void *scorep_libwrap_arg_this, const QPointF & startPoint )
{
    LIBWRAP_EARLY_INIT( _ZN12QPainterPathC2ERK7QPointF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPainterPathC2ERK7QPointF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPainterPathC2ERK7QPointF, ( scorep_libwrap_arg_this, startPoint ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPainterPathC2ERK7QPointF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QPainterPathC1ERK7QPointF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPainterPathC1ERK7QPointF )( void *scorep_libwrap_arg_this, const QPointF & startPoint )
{
    LIBWRAP_EARLY_INIT( _ZN12QPainterPathC1ERK7QPointF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPainterPathC1ERK7QPointF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPainterPathC1ERK7QPointF, ( scorep_libwrap_arg_this, startPoint ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPainterPathC1ERK7QPointF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QPainterPathC2ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPainterPathC2ERKS_ )( void *scorep_libwrap_arg_this, const QPainterPath & other )
{
    LIBWRAP_EARLY_INIT( _ZN12QPainterPathC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPainterPathC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPainterPathC2ERKS_, ( scorep_libwrap_arg_this, other ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPainterPathC2ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QPainterPathC1ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPainterPathC1ERKS_ )( void *scorep_libwrap_arg_this, const QPainterPath & other )
{
    LIBWRAP_EARLY_INIT( _ZN12QPainterPathC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPainterPathC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPainterPathC1ERKS_, ( scorep_libwrap_arg_this, other ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPainterPathC1ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QPainterPathaSERKS_
QPainterPath &
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPainterPathaSERKS_ )( void *scorep_libwrap_arg_this, const QPainterPath & other )
{
    LIBWRAP_EARLY_INIT( _ZN12QPainterPathaSERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPainterPathaSERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPainterPath & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPainterPathaSERKS_, ( scorep_libwrap_arg_this, other ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPainterPathaSERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QPainterPath6moveToERK7QPointF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPainterPath6moveToERK7QPointF )( void *scorep_libwrap_arg_this, const QPointF & p )
{
    LIBWRAP_EARLY_INIT( _ZN12QPainterPath6moveToERK7QPointF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPainterPath6moveToERK7QPointF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPainterPath6moveToERK7QPointF, ( scorep_libwrap_arg_this, p ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPainterPath6moveToERK7QPointF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QPainterPath6lineToERK7QPointF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPainterPath6lineToERK7QPointF )( void *scorep_libwrap_arg_this, const QPointF & p )
{
    LIBWRAP_EARLY_INIT( _ZN12QPainterPath6lineToERK7QPointF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPainterPath6lineToERK7QPointF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPainterPath6lineToERK7QPointF, ( scorep_libwrap_arg_this, p ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPainterPath6lineToERK7QPointF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QPainterPath9arcMoveToERK6QRectFd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPainterPath9arcMoveToERK6QRectFd )( void *scorep_libwrap_arg_this, const QRectF & rect, qreal angle )
{
    LIBWRAP_EARLY_INIT( _ZN12QPainterPath9arcMoveToERK6QRectFd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPainterPath9arcMoveToERK6QRectFd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPainterPath9arcMoveToERK6QRectFd, ( scorep_libwrap_arg_this, rect, angle ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPainterPath9arcMoveToERK6QRectFd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QPainterPath5arcToERK6QRectFdd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPainterPath5arcToERK6QRectFdd )( void *scorep_libwrap_arg_this, const QRectF & rect, qreal startAngle, qreal arcLength )
{
    LIBWRAP_EARLY_INIT( _ZN12QPainterPath5arcToERK6QRectFdd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPainterPath5arcToERK6QRectFdd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPainterPath5arcToERK6QRectFdd, ( scorep_libwrap_arg_this, rect, startAngle, arcLength ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPainterPath5arcToERK6QRectFdd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QPainterPath7cubicToERK7QPointFS2_S2_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPainterPath7cubicToERK7QPointFS2_S2_ )( void *scorep_libwrap_arg_this, const QPointF & ctrlPt1, const QPointF & ctrlPt2, const QPointF & endPt )
{
    LIBWRAP_EARLY_INIT( _ZN12QPainterPath7cubicToERK7QPointFS2_S2_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPainterPath7cubicToERK7QPointFS2_S2_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPainterPath7cubicToERK7QPointFS2_S2_, ( scorep_libwrap_arg_this, ctrlPt1, ctrlPt2, endPt ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPainterPath7cubicToERK7QPointFS2_S2_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QPainterPath6quadToERK7QPointFS2_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPainterPath6quadToERK7QPointFS2_ )( void *scorep_libwrap_arg_this, const QPointF & ctrlPt, const QPointF & endPt )
{
    LIBWRAP_EARLY_INIT( _ZN12QPainterPath6quadToERK7QPointFS2_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPainterPath6quadToERK7QPointFS2_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPainterPath6quadToERK7QPointFS2_, ( scorep_libwrap_arg_this, ctrlPt, endPt ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPainterPath6quadToERK7QPointFS2_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK12QPainterPath15currentPositionEv
QPointF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QPainterPath15currentPositionEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QPainterPath15currentPositionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QPainterPath15currentPositionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPointF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QPainterPath15currentPositionEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QPainterPath15currentPositionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QPainterPath7addRectERK6QRectF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPainterPath7addRectERK6QRectF )( void *scorep_libwrap_arg_this, const QRectF & rect )
{
    LIBWRAP_EARLY_INIT( _ZN12QPainterPath7addRectERK6QRectF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPainterPath7addRectERK6QRectF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPainterPath7addRectERK6QRectF, ( scorep_libwrap_arg_this, rect ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPainterPath7addRectERK6QRectF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QPainterPath10addEllipseERK6QRectF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPainterPath10addEllipseERK6QRectF )( void *scorep_libwrap_arg_this, const QRectF & rect )
{
    LIBWRAP_EARLY_INIT( _ZN12QPainterPath10addEllipseERK6QRectF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPainterPath10addEllipseERK6QRectF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPainterPath10addEllipseERK6QRectF, ( scorep_libwrap_arg_this, rect ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPainterPath10addEllipseERK6QRectF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QPainterPath10addPolygonERK9QPolygonF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPainterPath10addPolygonERK9QPolygonF )( void *scorep_libwrap_arg_this, const QPolygonF & polygon )
{
    LIBWRAP_EARLY_INIT( _ZN12QPainterPath10addPolygonERK9QPolygonF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPainterPath10addPolygonERK9QPolygonF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPainterPath10addPolygonERK9QPolygonF, ( scorep_libwrap_arg_this, polygon ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPainterPath10addPolygonERK9QPolygonF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QPainterPath7addTextERK7QPointFRK5QFontRK7QString
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPainterPath7addTextERK7QPointFRK5QFontRK7QString )( void *scorep_libwrap_arg_this, const QPointF & point, const QFont & f, const QString & text )
{
    LIBWRAP_EARLY_INIT( _ZN12QPainterPath7addTextERK7QPointFRK5QFontRK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPainterPath7addTextERK7QPointFRK5QFontRK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPainterPath7addTextERK7QPointFRK5QFontRK7QString, ( scorep_libwrap_arg_this, point, f, text ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPainterPath7addTextERK7QPointFRK5QFontRK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QPainterPath7addPathERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPainterPath7addPathERKS_ )( void *scorep_libwrap_arg_this, const QPainterPath & path )
{
    LIBWRAP_EARLY_INIT( _ZN12QPainterPath7addPathERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPainterPath7addPathERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPainterPath7addPathERKS_, ( scorep_libwrap_arg_this, path ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPainterPath7addPathERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QPainterPath9addRegionERK7QRegion
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPainterPath9addRegionERK7QRegion )( void *scorep_libwrap_arg_this, const QRegion & region )
{
    LIBWRAP_EARLY_INIT( _ZN12QPainterPath9addRegionERK7QRegion );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPainterPath9addRegionERK7QRegion );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPainterPath9addRegionERK7QRegion, ( scorep_libwrap_arg_this, region ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPainterPath9addRegionERK7QRegion );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QPainterPath14addRoundedRectERK6QRectFddN2Qt8SizeModeE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPainterPath14addRoundedRectERK6QRectFddN2Qt8SizeModeE )( void *scorep_libwrap_arg_this, const QRectF & rect, qreal xRadius, qreal yRadius, Qt::SizeMode mode )
{
    LIBWRAP_EARLY_INIT( _ZN12QPainterPath14addRoundedRectERK6QRectFddN2Qt8SizeModeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPainterPath14addRoundedRectERK6QRectFddN2Qt8SizeModeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPainterPath14addRoundedRectERK6QRectFddN2Qt8SizeModeE, ( scorep_libwrap_arg_this, rect, xRadius, yRadius, mode ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPainterPath14addRoundedRectERK6QRectFddN2Qt8SizeModeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QPainterPath12addRoundRectERK6QRectFii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPainterPath12addRoundRectERK6QRectFii )( void *scorep_libwrap_arg_this, const QRectF & rect, int xRnd, int yRnd )
{
    LIBWRAP_EARLY_INIT( _ZN12QPainterPath12addRoundRectERK6QRectFii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPainterPath12addRoundRectERK6QRectFii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPainterPath12addRoundRectERK6QRectFii, ( scorep_libwrap_arg_this, rect, xRnd, yRnd ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPainterPath12addRoundRectERK6QRectFii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QPainterPath11connectPathERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPainterPath11connectPathERKS_ )( void *scorep_libwrap_arg_this, const QPainterPath & path )
{
    LIBWRAP_EARLY_INIT( _ZN12QPainterPath11connectPathERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPainterPath11connectPathERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPainterPath11connectPathERKS_, ( scorep_libwrap_arg_this, path ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPainterPath11connectPathERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK12QPainterPath8containsERK7QPointF
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QPainterPath8containsERK7QPointF )( void *scorep_libwrap_arg_this, const QPointF & pt )
{
    LIBWRAP_EARLY_INIT( _ZNK12QPainterPath8containsERK7QPointF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QPainterPath8containsERK7QPointF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QPainterPath8containsERK7QPointF, ( scorep_libwrap_arg_this, pt ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QPainterPath8containsERK7QPointF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QPainterPath8containsERK6QRectF
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QPainterPath8containsERK6QRectF )( void *scorep_libwrap_arg_this, const QRectF & rect )
{
    LIBWRAP_EARLY_INIT( _ZNK12QPainterPath8containsERK6QRectF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QPainterPath8containsERK6QRectF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QPainterPath8containsERK6QRectF, ( scorep_libwrap_arg_this, rect ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QPainterPath8containsERK6QRectF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QPainterPath10intersectsERK6QRectF
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QPainterPath10intersectsERK6QRectF )( void *scorep_libwrap_arg_this, const QRectF & rect )
{
    LIBWRAP_EARLY_INIT( _ZNK12QPainterPath10intersectsERK6QRectF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QPainterPath10intersectsERK6QRectF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QPainterPath10intersectsERK6QRectF, ( scorep_libwrap_arg_this, rect ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QPainterPath10intersectsERK6QRectF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QPainterPath9translateEdd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPainterPath9translateEdd )( void *scorep_libwrap_arg_this, qreal dx, qreal dy )
{
    LIBWRAP_EARLY_INIT( _ZN12QPainterPath9translateEdd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPainterPath9translateEdd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPainterPath9translateEdd, ( scorep_libwrap_arg_this, dx, dy ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPainterPath9translateEdd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK12QPainterPath10translatedEdd
QPainterPath
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QPainterPath10translatedEdd )( void *scorep_libwrap_arg_this, qreal dx, qreal dy )
{
    LIBWRAP_EARLY_INIT( _ZNK12QPainterPath10translatedEdd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QPainterPath10translatedEdd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPainterPath scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QPainterPath10translatedEdd, ( scorep_libwrap_arg_this, dx, dy ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QPainterPath10translatedEdd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QPainterPath12boundingRectEv
QRectF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QPainterPath12boundingRectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QPainterPath12boundingRectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QPainterPath12boundingRectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRectF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QPainterPath12boundingRectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QPainterPath12boundingRectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QPainterPath16controlPointRectEv
QRectF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QPainterPath16controlPointRectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QPainterPath16controlPointRectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QPainterPath16controlPointRectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRectF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QPainterPath16controlPointRectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QPainterPath16controlPointRectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QPainterPath8fillRuleEv
Qt::FillRule
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QPainterPath8fillRuleEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QPainterPath8fillRuleEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QPainterPath8fillRuleEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    Qt::FillRule scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QPainterPath8fillRuleEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QPainterPath8fillRuleEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QPainterPath11setFillRuleEN2Qt8FillRuleE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPainterPath11setFillRuleEN2Qt8FillRuleE )( void *scorep_libwrap_arg_this, Qt::FillRule fillRule )
{
    LIBWRAP_EARLY_INIT( _ZN12QPainterPath11setFillRuleEN2Qt8FillRuleE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPainterPath11setFillRuleEN2Qt8FillRuleE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPainterPath11setFillRuleEN2Qt8FillRuleE, ( scorep_libwrap_arg_this, fillRule ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPainterPath11setFillRuleEN2Qt8FillRuleE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK12QPainterPath7isEmptyEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QPainterPath7isEmptyEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QPainterPath7isEmptyEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QPainterPath7isEmptyEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QPainterPath7isEmptyEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QPainterPath7isEmptyEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QPainterPath10toReversedEv
QPainterPath
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QPainterPath10toReversedEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QPainterPath10toReversedEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QPainterPath10toReversedEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPainterPath scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QPainterPath10toReversedEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QPainterPath10toReversedEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QPainterPath17toSubpathPolygonsERK7QMatrix
QList<QPolygonF>
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QPainterPath17toSubpathPolygonsERK7QMatrix )( void *scorep_libwrap_arg_this, const QMatrix & matrix )
{
    LIBWRAP_EARLY_INIT( _ZNK12QPainterPath17toSubpathPolygonsERK7QMatrix );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QPainterPath17toSubpathPolygonsERK7QMatrix );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QList<QPolygonF> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QPainterPath17toSubpathPolygonsERK7QMatrix, ( scorep_libwrap_arg_this, matrix ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QPainterPath17toSubpathPolygonsERK7QMatrix );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QPainterPath14toFillPolygonsERK7QMatrix
QList<QPolygonF>
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QPainterPath14toFillPolygonsERK7QMatrix )( void *scorep_libwrap_arg_this, const QMatrix & matrix )
{
    LIBWRAP_EARLY_INIT( _ZNK12QPainterPath14toFillPolygonsERK7QMatrix );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QPainterPath14toFillPolygonsERK7QMatrix );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QList<QPolygonF> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QPainterPath14toFillPolygonsERK7QMatrix, ( scorep_libwrap_arg_this, matrix ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QPainterPath14toFillPolygonsERK7QMatrix );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QPainterPath13toFillPolygonERK7QMatrix
QPolygonF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QPainterPath13toFillPolygonERK7QMatrix )( void *scorep_libwrap_arg_this, const QMatrix & matrix )
{
    LIBWRAP_EARLY_INIT( _ZNK12QPainterPath13toFillPolygonERK7QMatrix );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QPainterPath13toFillPolygonERK7QMatrix );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPolygonF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QPainterPath13toFillPolygonERK7QMatrix, ( scorep_libwrap_arg_this, matrix ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QPainterPath13toFillPolygonERK7QMatrix );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QPainterPath17toSubpathPolygonsERK10QTransform
QList<QPolygonF>
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QPainterPath17toSubpathPolygonsERK10QTransform )( void *scorep_libwrap_arg_this, const QTransform & matrix )
{
    LIBWRAP_EARLY_INIT( _ZNK12QPainterPath17toSubpathPolygonsERK10QTransform );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QPainterPath17toSubpathPolygonsERK10QTransform );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QList<QPolygonF> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QPainterPath17toSubpathPolygonsERK10QTransform, ( scorep_libwrap_arg_this, matrix ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QPainterPath17toSubpathPolygonsERK10QTransform );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QPainterPath14toFillPolygonsERK10QTransform
QList<QPolygonF>
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QPainterPath14toFillPolygonsERK10QTransform )( void *scorep_libwrap_arg_this, const QTransform & matrix )
{
    LIBWRAP_EARLY_INIT( _ZNK12QPainterPath14toFillPolygonsERK10QTransform );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QPainterPath14toFillPolygonsERK10QTransform );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QList<QPolygonF> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QPainterPath14toFillPolygonsERK10QTransform, ( scorep_libwrap_arg_this, matrix ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QPainterPath14toFillPolygonsERK10QTransform );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QPainterPath13toFillPolygonERK10QTransform
QPolygonF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QPainterPath13toFillPolygonERK10QTransform )( void *scorep_libwrap_arg_this, const QTransform & matrix )
{
    LIBWRAP_EARLY_INIT( _ZNK12QPainterPath13toFillPolygonERK10QTransform );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QPainterPath13toFillPolygonERK10QTransform );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPolygonF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QPainterPath13toFillPolygonERK10QTransform, ( scorep_libwrap_arg_this, matrix ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QPainterPath13toFillPolygonERK10QTransform );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QPainterPath12elementCountEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QPainterPath12elementCountEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QPainterPath12elementCountEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QPainterPath12elementCountEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QPainterPath12elementCountEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QPainterPath12elementCountEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QPainterPath9elementAtEi
QPainterPath::Element
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QPainterPath9elementAtEi )( void *scorep_libwrap_arg_this, int i )
{
    LIBWRAP_EARLY_INIT( _ZNK12QPainterPath9elementAtEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QPainterPath9elementAtEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPainterPath::Element scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QPainterPath9elementAtEi, ( scorep_libwrap_arg_this, i ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QPainterPath9elementAtEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QPainterPath20setElementPositionAtEidd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPainterPath20setElementPositionAtEidd )( void *scorep_libwrap_arg_this, int i, qreal x, qreal y )
{
    LIBWRAP_EARLY_INIT( _ZN12QPainterPath20setElementPositionAtEidd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPainterPath20setElementPositionAtEidd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPainterPath20setElementPositionAtEidd, ( scorep_libwrap_arg_this, i, x, y ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPainterPath20setElementPositionAtEidd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK12QPainterPath6lengthEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QPainterPath6lengthEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QPainterPath6lengthEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QPainterPath6lengthEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QPainterPath6lengthEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QPainterPath6lengthEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QPainterPath15percentAtLengthEd
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QPainterPath15percentAtLengthEd )( void *scorep_libwrap_arg_this, qreal t )
{
    LIBWRAP_EARLY_INIT( _ZNK12QPainterPath15percentAtLengthEd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QPainterPath15percentAtLengthEd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QPainterPath15percentAtLengthEd, ( scorep_libwrap_arg_this, t ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QPainterPath15percentAtLengthEd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QPainterPath14pointAtPercentEd
QPointF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QPainterPath14pointAtPercentEd )( void *scorep_libwrap_arg_this, qreal t )
{
    LIBWRAP_EARLY_INIT( _ZNK12QPainterPath14pointAtPercentEd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QPainterPath14pointAtPercentEd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPointF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QPainterPath14pointAtPercentEd, ( scorep_libwrap_arg_this, t ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QPainterPath14pointAtPercentEd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QPainterPath14angleAtPercentEd
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QPainterPath14angleAtPercentEd )( void *scorep_libwrap_arg_this, qreal t )
{
    LIBWRAP_EARLY_INIT( _ZNK12QPainterPath14angleAtPercentEd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QPainterPath14angleAtPercentEd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QPainterPath14angleAtPercentEd, ( scorep_libwrap_arg_this, t ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QPainterPath14angleAtPercentEd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QPainterPath14slopeAtPercentEd
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QPainterPath14slopeAtPercentEd )( void *scorep_libwrap_arg_this, qreal t )
{
    LIBWRAP_EARLY_INIT( _ZNK12QPainterPath14slopeAtPercentEd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QPainterPath14slopeAtPercentEd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QPainterPath14slopeAtPercentEd, ( scorep_libwrap_arg_this, t ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QPainterPath14slopeAtPercentEd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QPainterPath10intersectsERKS_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QPainterPath10intersectsERKS_ )( void *scorep_libwrap_arg_this, const QPainterPath & p )
{
    LIBWRAP_EARLY_INIT( _ZNK12QPainterPath10intersectsERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QPainterPath10intersectsERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QPainterPath10intersectsERKS_, ( scorep_libwrap_arg_this, p ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QPainterPath10intersectsERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QPainterPath8containsERKS_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QPainterPath8containsERKS_ )( void *scorep_libwrap_arg_this, const QPainterPath & p )
{
    LIBWRAP_EARLY_INIT( _ZNK12QPainterPath8containsERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QPainterPath8containsERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QPainterPath8containsERKS_, ( scorep_libwrap_arg_this, p ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QPainterPath8containsERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QPainterPath6unitedERKS_
QPainterPath
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QPainterPath6unitedERKS_ )( void *scorep_libwrap_arg_this, const QPainterPath & r )
{
    LIBWRAP_EARLY_INIT( _ZNK12QPainterPath6unitedERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QPainterPath6unitedERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPainterPath scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QPainterPath6unitedERKS_, ( scorep_libwrap_arg_this, r ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QPainterPath6unitedERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QPainterPath11intersectedERKS_
QPainterPath
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QPainterPath11intersectedERKS_ )( void *scorep_libwrap_arg_this, const QPainterPath & r )
{
    LIBWRAP_EARLY_INIT( _ZNK12QPainterPath11intersectedERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QPainterPath11intersectedERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPainterPath scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QPainterPath11intersectedERKS_, ( scorep_libwrap_arg_this, r ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QPainterPath11intersectedERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QPainterPath10subtractedERKS_
QPainterPath
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QPainterPath10subtractedERKS_ )( void *scorep_libwrap_arg_this, const QPainterPath & r )
{
    LIBWRAP_EARLY_INIT( _ZNK12QPainterPath10subtractedERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QPainterPath10subtractedERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPainterPath scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QPainterPath10subtractedERKS_, ( scorep_libwrap_arg_this, r ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QPainterPath10subtractedERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QPainterPath18subtractedInvertedERKS_
QPainterPath
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QPainterPath18subtractedInvertedERKS_ )( void *scorep_libwrap_arg_this, const QPainterPath & r )
{
    LIBWRAP_EARLY_INIT( _ZNK12QPainterPath18subtractedInvertedERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QPainterPath18subtractedInvertedERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPainterPath scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QPainterPath18subtractedInvertedERKS_, ( scorep_libwrap_arg_this, r ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QPainterPath18subtractedInvertedERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QPainterPath10simplifiedEv
QPainterPath
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QPainterPath10simplifiedEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QPainterPath10simplifiedEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QPainterPath10simplifiedEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPainterPath scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QPainterPath10simplifiedEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QPainterPath10simplifiedEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QPainterPatheqERKS_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QPainterPatheqERKS_ )( void *scorep_libwrap_arg_this, const QPainterPath & other )
{
    LIBWRAP_EARLY_INIT( _ZNK12QPainterPatheqERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QPainterPatheqERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QPainterPatheqERKS_, ( scorep_libwrap_arg_this, other ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QPainterPatheqERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QPainterPathneERKS_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QPainterPathneERKS_ )( void *scorep_libwrap_arg_this, const QPainterPath & other )
{
    LIBWRAP_EARLY_INIT( _ZNK12QPainterPathneERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QPainterPathneERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QPainterPathneERKS_, ( scorep_libwrap_arg_this, other ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QPainterPathneERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QPainterPathanERKS_
QPainterPath
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QPainterPathanERKS_ )( void *scorep_libwrap_arg_this, const QPainterPath & other )
{
    LIBWRAP_EARLY_INIT( _ZNK12QPainterPathanERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QPainterPathanERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPainterPath scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QPainterPathanERKS_, ( scorep_libwrap_arg_this, other ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QPainterPathanERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QPainterPathorERKS_
QPainterPath
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QPainterPathorERKS_ )( void *scorep_libwrap_arg_this, const QPainterPath & other )
{
    LIBWRAP_EARLY_INIT( _ZNK12QPainterPathorERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QPainterPathorERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPainterPath scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QPainterPathorERKS_, ( scorep_libwrap_arg_this, other ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QPainterPathorERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QPainterPathplERKS_
QPainterPath
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QPainterPathplERKS_ )( void *scorep_libwrap_arg_this, const QPainterPath & other )
{
    LIBWRAP_EARLY_INIT( _ZNK12QPainterPathplERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QPainterPathplERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPainterPath scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QPainterPathplERKS_, ( scorep_libwrap_arg_this, other ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QPainterPathplERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QPainterPathmiERKS_
QPainterPath
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QPainterPathmiERKS_ )( void *scorep_libwrap_arg_this, const QPainterPath & other )
{
    LIBWRAP_EARLY_INIT( _ZNK12QPainterPathmiERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QPainterPathmiERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPainterPath scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QPainterPathmiERKS_, ( scorep_libwrap_arg_this, other ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QPainterPathmiERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QPainterPathaNERKS_
QPainterPath &
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPainterPathaNERKS_ )( void *scorep_libwrap_arg_this, const QPainterPath & other )
{
    LIBWRAP_EARLY_INIT( _ZN12QPainterPathaNERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPainterPathaNERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPainterPath & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPainterPathaNERKS_, ( scorep_libwrap_arg_this, other ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPainterPathaNERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QPainterPathoRERKS_
QPainterPath &
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPainterPathoRERKS_ )( void *scorep_libwrap_arg_this, const QPainterPath & other )
{
    LIBWRAP_EARLY_INIT( _ZN12QPainterPathoRERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPainterPathoRERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPainterPath & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPainterPathoRERKS_, ( scorep_libwrap_arg_this, other ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPainterPathoRERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QPainterPathpLERKS_
QPainterPath &
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPainterPathpLERKS_ )( void *scorep_libwrap_arg_this, const QPainterPath & other )
{
    LIBWRAP_EARLY_INIT( _ZN12QPainterPathpLERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPainterPathpLERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPainterPath & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPainterPathpLERKS_, ( scorep_libwrap_arg_this, other ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPainterPathpLERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QPainterPathmIERKS_
QPainterPath &
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPainterPathmIERKS_ )( void *scorep_libwrap_arg_this, const QPainterPath & other )
{
    LIBWRAP_EARLY_INIT( _ZN12QPainterPathmIERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPainterPathmIERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPainterPath & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPainterPathmIERKS_, ( scorep_libwrap_arg_this, other ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPainterPathmIERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _Z19qtVectorPathForPathRK12QPainterPath
const QVectorPath &
SCOREP_LIBWRAP_FUNC_NAME( _Z19qtVectorPathForPathRK12QPainterPath )( const QPainterPath & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _Z19qtVectorPathForPathRK12QPainterPath );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _Z19qtVectorPathForPathRK12QPainterPath );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QVectorPath & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _Z19qtVectorPathForPathRK12QPainterPath, ( scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _Z19qtVectorPathForPathRK12QPainterPath );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZlsR11QDataStreamRK12QPainterPath
QDataStream &
SCOREP_LIBWRAP_FUNC_NAME( _ZlsR11QDataStreamRK12QPainterPath )( QDataStream & scorep_libwrap_arg_1, const QPainterPath & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _ZlsR11QDataStreamRK12QPainterPath );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZlsR11QDataStreamRK12QPainterPath );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDataStream & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZlsR11QDataStreamRK12QPainterPath, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZlsR11QDataStreamRK12QPainterPath );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZrsR11QDataStreamR12QPainterPath
QDataStream &
SCOREP_LIBWRAP_FUNC_NAME( _ZrsR11QDataStreamR12QPainterPath )( QDataStream & scorep_libwrap_arg_1, QPainterPath & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _ZrsR11QDataStreamR12QPainterPath );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZrsR11QDataStreamR12QPainterPath );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDataStream & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZrsR11QDataStreamR12QPainterPath, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZrsR11QDataStreamR12QPainterPath );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN19QPainterPathStrokerC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QPainterPathStrokerC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN19QPainterPathStrokerC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QPainterPathStrokerC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN19QPainterPathStrokerC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QPainterPathStrokerC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN19QPainterPathStrokerC1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QPainterPathStrokerC1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN19QPainterPathStrokerC1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QPainterPathStrokerC1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN19QPainterPathStrokerC1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QPainterPathStrokerC1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN19QPainterPathStrokerC2ERK4QPen
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QPainterPathStrokerC2ERK4QPen )( void *scorep_libwrap_arg_this, const QPen & pen )
{
    LIBWRAP_EARLY_INIT( _ZN19QPainterPathStrokerC2ERK4QPen );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QPainterPathStrokerC2ERK4QPen );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN19QPainterPathStrokerC2ERK4QPen, ( scorep_libwrap_arg_this, pen ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QPainterPathStrokerC2ERK4QPen );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN19QPainterPathStrokerC1ERK4QPen
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QPainterPathStrokerC1ERK4QPen )( void *scorep_libwrap_arg_this, const QPen & pen )
{
    LIBWRAP_EARLY_INIT( _ZN19QPainterPathStrokerC1ERK4QPen );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QPainterPathStrokerC1ERK4QPen );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN19QPainterPathStrokerC1ERK4QPen, ( scorep_libwrap_arg_this, pen ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QPainterPathStrokerC1ERK4QPen );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN19QPainterPathStrokerD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QPainterPathStrokerD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN19QPainterPathStrokerD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QPainterPathStrokerD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN19QPainterPathStrokerD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QPainterPathStrokerD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN19QPainterPathStrokerD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QPainterPathStrokerD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN19QPainterPathStrokerD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QPainterPathStrokerD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN19QPainterPathStrokerD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QPainterPathStrokerD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN19QPainterPathStroker8setWidthEd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QPainterPathStroker8setWidthEd )( void *scorep_libwrap_arg_this, qreal width )
{
    LIBWRAP_EARLY_INIT( _ZN19QPainterPathStroker8setWidthEd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QPainterPathStroker8setWidthEd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN19QPainterPathStroker8setWidthEd, ( scorep_libwrap_arg_this, width ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QPainterPathStroker8setWidthEd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK19QPainterPathStroker5widthEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK19QPainterPathStroker5widthEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK19QPainterPathStroker5widthEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK19QPainterPathStroker5widthEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK19QPainterPathStroker5widthEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK19QPainterPathStroker5widthEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN19QPainterPathStroker11setCapStyleEN2Qt11PenCapStyleE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QPainterPathStroker11setCapStyleEN2Qt11PenCapStyleE )( void *scorep_libwrap_arg_this, Qt::PenCapStyle style )
{
    LIBWRAP_EARLY_INIT( _ZN19QPainterPathStroker11setCapStyleEN2Qt11PenCapStyleE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QPainterPathStroker11setCapStyleEN2Qt11PenCapStyleE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN19QPainterPathStroker11setCapStyleEN2Qt11PenCapStyleE, ( scorep_libwrap_arg_this, style ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QPainterPathStroker11setCapStyleEN2Qt11PenCapStyleE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK19QPainterPathStroker8capStyleEv
Qt::PenCapStyle
SCOREP_LIBWRAP_FUNC_NAME( _ZNK19QPainterPathStroker8capStyleEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK19QPainterPathStroker8capStyleEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK19QPainterPathStroker8capStyleEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    Qt::PenCapStyle scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK19QPainterPathStroker8capStyleEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK19QPainterPathStroker8capStyleEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN19QPainterPathStroker12setJoinStyleEN2Qt12PenJoinStyleE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QPainterPathStroker12setJoinStyleEN2Qt12PenJoinStyleE )( void *scorep_libwrap_arg_this, Qt::PenJoinStyle style )
{
    LIBWRAP_EARLY_INIT( _ZN19QPainterPathStroker12setJoinStyleEN2Qt12PenJoinStyleE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QPainterPathStroker12setJoinStyleEN2Qt12PenJoinStyleE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN19QPainterPathStroker12setJoinStyleEN2Qt12PenJoinStyleE, ( scorep_libwrap_arg_this, style ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QPainterPathStroker12setJoinStyleEN2Qt12PenJoinStyleE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK19QPainterPathStroker9joinStyleEv
Qt::PenJoinStyle
SCOREP_LIBWRAP_FUNC_NAME( _ZNK19QPainterPathStroker9joinStyleEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK19QPainterPathStroker9joinStyleEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK19QPainterPathStroker9joinStyleEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    Qt::PenJoinStyle scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK19QPainterPathStroker9joinStyleEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK19QPainterPathStroker9joinStyleEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN19QPainterPathStroker13setMiterLimitEd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QPainterPathStroker13setMiterLimitEd )( void *scorep_libwrap_arg_this, qreal length )
{
    LIBWRAP_EARLY_INIT( _ZN19QPainterPathStroker13setMiterLimitEd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QPainterPathStroker13setMiterLimitEd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN19QPainterPathStroker13setMiterLimitEd, ( scorep_libwrap_arg_this, length ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QPainterPathStroker13setMiterLimitEd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK19QPainterPathStroker10miterLimitEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK19QPainterPathStroker10miterLimitEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK19QPainterPathStroker10miterLimitEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK19QPainterPathStroker10miterLimitEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK19QPainterPathStroker10miterLimitEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK19QPainterPathStroker10miterLimitEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN19QPainterPathStroker17setCurveThresholdEd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QPainterPathStroker17setCurveThresholdEd )( void *scorep_libwrap_arg_this, qreal threshold )
{
    LIBWRAP_EARLY_INIT( _ZN19QPainterPathStroker17setCurveThresholdEd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QPainterPathStroker17setCurveThresholdEd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN19QPainterPathStroker17setCurveThresholdEd, ( scorep_libwrap_arg_this, threshold ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QPainterPathStroker17setCurveThresholdEd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK19QPainterPathStroker14curveThresholdEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK19QPainterPathStroker14curveThresholdEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK19QPainterPathStroker14curveThresholdEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK19QPainterPathStroker14curveThresholdEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK19QPainterPathStroker14curveThresholdEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK19QPainterPathStroker14curveThresholdEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN19QPainterPathStroker14setDashPatternEN2Qt8PenStyleE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QPainterPathStroker14setDashPatternEN2Qt8PenStyleE )( void *scorep_libwrap_arg_this, Qt::PenStyle scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN19QPainterPathStroker14setDashPatternEN2Qt8PenStyleE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QPainterPathStroker14setDashPatternEN2Qt8PenStyleE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN19QPainterPathStroker14setDashPatternEN2Qt8PenStyleE, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QPainterPathStroker14setDashPatternEN2Qt8PenStyleE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN19QPainterPathStroker14setDashPatternERK7QVectorIdE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QPainterPathStroker14setDashPatternERK7QVectorIdE )( void *scorep_libwrap_arg_this, const QVector<qreal> & dashPattern )
{
    LIBWRAP_EARLY_INIT( _ZN19QPainterPathStroker14setDashPatternERK7QVectorIdE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QPainterPathStroker14setDashPatternERK7QVectorIdE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN19QPainterPathStroker14setDashPatternERK7QVectorIdE, ( scorep_libwrap_arg_this, dashPattern ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QPainterPathStroker14setDashPatternERK7QVectorIdE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK19QPainterPathStroker11dashPatternEv
QVector<qreal>
SCOREP_LIBWRAP_FUNC_NAME( _ZNK19QPainterPathStroker11dashPatternEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK19QPainterPathStroker11dashPatternEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK19QPainterPathStroker11dashPatternEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QVector<qreal> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK19QPainterPathStroker11dashPatternEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK19QPainterPathStroker11dashPatternEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN19QPainterPathStroker13setDashOffsetEd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QPainterPathStroker13setDashOffsetEd )( void *scorep_libwrap_arg_this, qreal offset )
{
    LIBWRAP_EARLY_INIT( _ZN19QPainterPathStroker13setDashOffsetEd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QPainterPathStroker13setDashOffsetEd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN19QPainterPathStroker13setDashOffsetEd, ( scorep_libwrap_arg_this, offset ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QPainterPathStroker13setDashOffsetEd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK19QPainterPathStroker10dashOffsetEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK19QPainterPathStroker10dashOffsetEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK19QPainterPathStroker10dashOffsetEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK19QPainterPathStroker10dashOffsetEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK19QPainterPathStroker10dashOffsetEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK19QPainterPathStroker10dashOffsetEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK19QPainterPathStroker12createStrokeERK12QPainterPath
QPainterPath
SCOREP_LIBWRAP_FUNC_NAME( _ZNK19QPainterPathStroker12createStrokeERK12QPainterPath )( void *scorep_libwrap_arg_this, const QPainterPath & path )
{
    LIBWRAP_EARLY_INIT( _ZNK19QPainterPathStroker12createStrokeERK12QPainterPath );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK19QPainterPathStroker12createStrokeERK12QPainterPath );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPainterPath scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK19QPainterPathStroker12createStrokeERK12QPainterPath, ( scorep_libwrap_arg_this, path ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK19QPainterPathStroker12createStrokeERK12QPainterPath );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _Zls6QDebugRK12QPainterPath
QDebug
SCOREP_LIBWRAP_FUNC_NAME( _Zls6QDebugRK12QPainterPath )( QDebug scorep_libwrap_arg_1, const QPainterPath & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _Zls6QDebugRK12QPainterPath );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _Zls6QDebugRK12QPainterPath );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDebug scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _Zls6QDebugRK12QPainterPath, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _Zls6QDebugRK12QPainterPath );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QTransformC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTransformC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN10QTransformC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTransformC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTransformC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTransformC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QTransformC1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTransformC1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN10QTransformC1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTransformC1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTransformC1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTransformC1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QTransformC2Eddddddddd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTransformC2Eddddddddd )( void *scorep_libwrap_arg_this, qreal h11, qreal h12, qreal h13, qreal h21, qreal h22, qreal h23, qreal h31, qreal h32, qreal h33 )
{
    LIBWRAP_EARLY_INIT( _ZN10QTransformC2Eddddddddd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTransformC2Eddddddddd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTransformC2Eddddddddd, ( scorep_libwrap_arg_this, h11, h12, h13, h21, h22, h23, h31, h32, h33 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTransformC2Eddddddddd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QTransformC1Eddddddddd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTransformC1Eddddddddd )( void *scorep_libwrap_arg_this, qreal h11, qreal h12, qreal h13, qreal h21, qreal h22, qreal h23, qreal h31, qreal h32, qreal h33 )
{
    LIBWRAP_EARLY_INIT( _ZN10QTransformC1Eddddddddd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTransformC1Eddddddddd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTransformC1Eddddddddd, ( scorep_libwrap_arg_this, h11, h12, h13, h21, h22, h23, h31, h32, h33 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTransformC1Eddddddddd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QTransformC2Edddddd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTransformC2Edddddd )( void *scorep_libwrap_arg_this, qreal h11, qreal h12, qreal h21, qreal h22, qreal dx, qreal dy )
{
    LIBWRAP_EARLY_INIT( _ZN10QTransformC2Edddddd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTransformC2Edddddd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTransformC2Edddddd, ( scorep_libwrap_arg_this, h11, h12, h21, h22, dx, dy ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTransformC2Edddddd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QTransformC1Edddddd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTransformC1Edddddd )( void *scorep_libwrap_arg_this, qreal h11, qreal h12, qreal h21, qreal h22, qreal dx, qreal dy )
{
    LIBWRAP_EARLY_INIT( _ZN10QTransformC1Edddddd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTransformC1Edddddd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTransformC1Edddddd, ( scorep_libwrap_arg_this, h11, h12, h21, h22, dx, dy ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTransformC1Edddddd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QTransformC2ERK7QMatrix
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTransformC2ERK7QMatrix )( void *scorep_libwrap_arg_this, const QMatrix & mtx )
{
    LIBWRAP_EARLY_INIT( _ZN10QTransformC2ERK7QMatrix );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTransformC2ERK7QMatrix );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTransformC2ERK7QMatrix, ( scorep_libwrap_arg_this, mtx ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTransformC2ERK7QMatrix );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QTransformC1ERK7QMatrix
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTransformC1ERK7QMatrix )( void *scorep_libwrap_arg_this, const QMatrix & mtx )
{
    LIBWRAP_EARLY_INIT( _ZN10QTransformC1ERK7QMatrix );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTransformC1ERK7QMatrix );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTransformC1ERK7QMatrix, ( scorep_libwrap_arg_this, mtx ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTransformC1ERK7QMatrix );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK10QTransform4typeEv
QTransform::TransformationType
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTransform4typeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTransform4typeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTransform4typeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTransform::TransformationType scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTransform4typeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTransform4typeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QTransform9setMatrixEddddddddd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTransform9setMatrixEddddddddd )( void *scorep_libwrap_arg_this, qreal m11, qreal m12, qreal m13, qreal m21, qreal m22, qreal m23, qreal m31, qreal m32, qreal m33 )
{
    LIBWRAP_EARLY_INIT( _ZN10QTransform9setMatrixEddddddddd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTransform9setMatrixEddddddddd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTransform9setMatrixEddddddddd, ( scorep_libwrap_arg_this, m11, m12, m13, m21, m22, m23, m31, m32, m33 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTransform9setMatrixEddddddddd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK10QTransform8invertedEPb
QTransform
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTransform8invertedEPb )( void *scorep_libwrap_arg_this, bool * invertible )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTransform8invertedEPb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTransform8invertedEPb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTransform scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTransform8invertedEPb, ( scorep_libwrap_arg_this, invertible ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTransform8invertedEPb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QTransform7adjointEv
QTransform
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTransform7adjointEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTransform7adjointEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTransform7adjointEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTransform scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTransform7adjointEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTransform7adjointEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QTransform10transposedEv
QTransform
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTransform10transposedEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTransform10transposedEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTransform10transposedEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTransform scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTransform10transposedEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTransform10transposedEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QTransform9translateEdd
QTransform &
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTransform9translateEdd )( void *scorep_libwrap_arg_this, qreal dx, qreal dy )
{
    LIBWRAP_EARLY_INIT( _ZN10QTransform9translateEdd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTransform9translateEdd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTransform & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTransform9translateEdd, ( scorep_libwrap_arg_this, dx, dy ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTransform9translateEdd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QTransform5scaleEdd
QTransform &
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTransform5scaleEdd )( void *scorep_libwrap_arg_this, qreal sx, qreal sy )
{
    LIBWRAP_EARLY_INIT( _ZN10QTransform5scaleEdd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTransform5scaleEdd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTransform & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTransform5scaleEdd, ( scorep_libwrap_arg_this, sx, sy ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTransform5scaleEdd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QTransform5shearEdd
QTransform &
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTransform5shearEdd )( void *scorep_libwrap_arg_this, qreal sh, qreal sv )
{
    LIBWRAP_EARLY_INIT( _ZN10QTransform5shearEdd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTransform5shearEdd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTransform & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTransform5shearEdd, ( scorep_libwrap_arg_this, sh, sv ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTransform5shearEdd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QTransform6rotateEdN2Qt4AxisE
QTransform &
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTransform6rotateEdN2Qt4AxisE )( void *scorep_libwrap_arg_this, qreal a, Qt::Axis axis )
{
    LIBWRAP_EARLY_INIT( _ZN10QTransform6rotateEdN2Qt4AxisE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTransform6rotateEdN2Qt4AxisE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTransform & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTransform6rotateEdN2Qt4AxisE, ( scorep_libwrap_arg_this, a, axis ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTransform6rotateEdN2Qt4AxisE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QTransform13rotateRadiansEdN2Qt4AxisE
QTransform &
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTransform13rotateRadiansEdN2Qt4AxisE )( void *scorep_libwrap_arg_this, qreal a, Qt::Axis axis )
{
    LIBWRAP_EARLY_INIT( _ZN10QTransform13rotateRadiansEdN2Qt4AxisE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTransform13rotateRadiansEdN2Qt4AxisE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTransform & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTransform13rotateRadiansEdN2Qt4AxisE, ( scorep_libwrap_arg_this, a, axis ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTransform13rotateRadiansEdN2Qt4AxisE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QTransform12squareToQuadERK9QPolygonFRS_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTransform12squareToQuadERK9QPolygonFRS_ )( const QPolygonF & square, QTransform & result )
{
    LIBWRAP_EARLY_INIT( _ZN10QTransform12squareToQuadERK9QPolygonFRS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTransform12squareToQuadERK9QPolygonFRS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTransform12squareToQuadERK9QPolygonFRS_, ( square, result ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTransform12squareToQuadERK9QPolygonFRS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QTransform12quadToSquareERK9QPolygonFRS_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTransform12quadToSquareERK9QPolygonFRS_ )( const QPolygonF & quad, QTransform & result )
{
    LIBWRAP_EARLY_INIT( _ZN10QTransform12quadToSquareERK9QPolygonFRS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTransform12quadToSquareERK9QPolygonFRS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTransform12quadToSquareERK9QPolygonFRS_, ( quad, result ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTransform12quadToSquareERK9QPolygonFRS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QTransform10quadToQuadERK9QPolygonFS2_RS_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTransform10quadToQuadERK9QPolygonFS2_RS_ )( const QPolygonF & one, const QPolygonF & two, QTransform & result )
{
    LIBWRAP_EARLY_INIT( _ZN10QTransform10quadToQuadERK9QPolygonFS2_RS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTransform10quadToQuadERK9QPolygonFS2_RS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTransform10quadToQuadERK9QPolygonFS2_RS_, ( one, two, result ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTransform10quadToQuadERK9QPolygonFS2_RS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QTransformeqERKS_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTransformeqERKS_ )( void *scorep_libwrap_arg_this, const QTransform & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTransformeqERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTransformeqERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTransformeqERKS_, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTransformeqERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QTransformneERKS_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTransformneERKS_ )( void *scorep_libwrap_arg_this, const QTransform & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTransformneERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTransformneERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTransformneERKS_, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTransformneERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QTransformmLERKS_
QTransform &
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTransformmLERKS_ )( void *scorep_libwrap_arg_this, const QTransform & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN10QTransformmLERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTransformmLERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTransform & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTransformmLERKS_, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTransformmLERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QTransformmlERKS_
QTransform
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTransformmlERKS_ )( void *scorep_libwrap_arg_this, const QTransform & o )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTransformmlERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTransformmlERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTransform scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTransformmlERKS_, ( scorep_libwrap_arg_this, o ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTransformmlERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QTransform5resetEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTransform5resetEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN10QTransform5resetEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTransform5resetEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTransform5resetEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTransform5resetEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK10QTransform3mapERK6QPoint
QPoint
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTransform3mapERK6QPoint )( void *scorep_libwrap_arg_this, const QPoint & p )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTransform3mapERK6QPoint );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTransform3mapERK6QPoint );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPoint scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTransform3mapERK6QPoint, ( scorep_libwrap_arg_this, p ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTransform3mapERK6QPoint );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QTransform3mapERK7QPointF
QPointF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTransform3mapERK7QPointF )( void *scorep_libwrap_arg_this, const QPointF & p )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTransform3mapERK7QPointF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTransform3mapERK7QPointF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPointF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTransform3mapERK7QPointF, ( scorep_libwrap_arg_this, p ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTransform3mapERK7QPointF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QTransform3mapERK5QLine
QLine
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTransform3mapERK5QLine )( void *scorep_libwrap_arg_this, const QLine & l )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTransform3mapERK5QLine );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTransform3mapERK5QLine );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QLine scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTransform3mapERK5QLine, ( scorep_libwrap_arg_this, l ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTransform3mapERK5QLine );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QTransform3mapERK6QLineF
QLineF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTransform3mapERK6QLineF )( void *scorep_libwrap_arg_this, const QLineF & l )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTransform3mapERK6QLineF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTransform3mapERK6QLineF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QLineF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTransform3mapERK6QLineF, ( scorep_libwrap_arg_this, l ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTransform3mapERK6QLineF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QTransform3mapERK9QPolygonF
QPolygonF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTransform3mapERK9QPolygonF )( void *scorep_libwrap_arg_this, const QPolygonF & a )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTransform3mapERK9QPolygonF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTransform3mapERK9QPolygonF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPolygonF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTransform3mapERK9QPolygonF, ( scorep_libwrap_arg_this, a ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTransform3mapERK9QPolygonF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QTransform3mapERK8QPolygon
QPolygon
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTransform3mapERK8QPolygon )( void *scorep_libwrap_arg_this, const QPolygon & a )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTransform3mapERK8QPolygon );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTransform3mapERK8QPolygon );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPolygon scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTransform3mapERK8QPolygon, ( scorep_libwrap_arg_this, a ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTransform3mapERK8QPolygon );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QTransform3mapERK7QRegion
QRegion
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTransform3mapERK7QRegion )( void *scorep_libwrap_arg_this, const QRegion & r )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTransform3mapERK7QRegion );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTransform3mapERK7QRegion );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRegion scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTransform3mapERK7QRegion, ( scorep_libwrap_arg_this, r ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTransform3mapERK7QRegion );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QTransform3mapERK12QPainterPath
QPainterPath
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTransform3mapERK12QPainterPath )( void *scorep_libwrap_arg_this, const QPainterPath & p )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTransform3mapERK12QPainterPath );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTransform3mapERK12QPainterPath );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPainterPath scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTransform3mapERK12QPainterPath, ( scorep_libwrap_arg_this, p ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTransform3mapERK12QPainterPath );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QTransform12mapToPolygonERK5QRect
QPolygon
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTransform12mapToPolygonERK5QRect )( void *scorep_libwrap_arg_this, const QRect & r )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTransform12mapToPolygonERK5QRect );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTransform12mapToPolygonERK5QRect );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPolygon scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTransform12mapToPolygonERK5QRect, ( scorep_libwrap_arg_this, r ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTransform12mapToPolygonERK5QRect );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QTransform7mapRectERK5QRect
QRect
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTransform7mapRectERK5QRect )( void *scorep_libwrap_arg_this, const QRect & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTransform7mapRectERK5QRect );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTransform7mapRectERK5QRect );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRect scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTransform7mapRectERK5QRect, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTransform7mapRectERK5QRect );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QTransform7mapRectERK6QRectF
QRectF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTransform7mapRectERK6QRectF )( void *scorep_libwrap_arg_this, const QRectF & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTransform7mapRectERK6QRectF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTransform7mapRectERK6QRectF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRectF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTransform7mapRectERK6QRectF, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTransform7mapRectERK6QRectF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QTransform3mapEiiPiS0_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTransform3mapEiiPiS0_ )( void *scorep_libwrap_arg_this, int x, int y, int * tx, int * ty )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTransform3mapEiiPiS0_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTransform3mapEiiPiS0_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTransform3mapEiiPiS0_, ( scorep_libwrap_arg_this, x, y, tx, ty ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTransform3mapEiiPiS0_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK10QTransform3mapEddPdS0_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTransform3mapEddPdS0_ )( void *scorep_libwrap_arg_this, qreal x, qreal y, qreal * tx, qreal * ty )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTransform3mapEddPdS0_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTransform3mapEddPdS0_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTransform3mapEddPdS0_, ( scorep_libwrap_arg_this, x, y, tx, ty ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTransform3mapEddPdS0_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK10QTransform8toAffineEv
const QMatrix &
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTransform8toAffineEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTransform8toAffineEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTransform8toAffineEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QMatrix & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTransform8toAffineEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTransform8toAffineEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QTransform13fromTranslateEdd
QTransform
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTransform13fromTranslateEdd )( qreal dx, qreal dy )
{
    LIBWRAP_EARLY_INIT( _ZN10QTransform13fromTranslateEdd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTransform13fromTranslateEdd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTransform scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTransform13fromTranslateEdd, ( dx, dy ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTransform13fromTranslateEdd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QTransform9fromScaleEdd
QTransform
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTransform9fromScaleEdd )( qreal dx, qreal dy )
{
    LIBWRAP_EARLY_INIT( _ZN10QTransform9fromScaleEdd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTransform9fromScaleEdd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTransform scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTransform9fromScaleEdd, ( dx, dy ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTransform9fromScaleEdd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZlsR11QDataStreamRK10QTransform
QDataStream &
SCOREP_LIBWRAP_FUNC_NAME( _ZlsR11QDataStreamRK10QTransform )( QDataStream & scorep_libwrap_arg_1, const QTransform & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _ZlsR11QDataStreamRK10QTransform );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZlsR11QDataStreamRK10QTransform );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDataStream & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZlsR11QDataStreamRK10QTransform, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZlsR11QDataStreamRK10QTransform );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZrsR11QDataStreamR10QTransform
QDataStream &
SCOREP_LIBWRAP_FUNC_NAME( _ZrsR11QDataStreamR10QTransform )( QDataStream & scorep_libwrap_arg_1, QTransform & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _ZrsR11QDataStreamR10QTransform );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZrsR11QDataStreamR10QTransform );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDataStream & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZrsR11QDataStreamR10QTransform, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZrsR11QDataStreamR10QTransform );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _Zls6QDebugRK10QTransform
QDebug
SCOREP_LIBWRAP_FUNC_NAME( _Zls6QDebugRK10QTransform )( QDebug scorep_libwrap_arg_1, const QTransform & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _Zls6QDebugRK10QTransform );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _Zls6QDebugRK10QTransform );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDebug scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _Zls6QDebugRK10QTransform, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _Zls6QDebugRK10QTransform );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QImageC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QImageC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN6QImageC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QImageC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QImageC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QImageC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QImageC1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QImageC1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN6QImageC1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QImageC1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QImageC1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QImageC1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QImageC2ERK5QSizeNS_6FormatE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QImageC2ERK5QSizeNS_6FormatE )( void *scorep_libwrap_arg_this, const QSize & size, QImage::Format format )
{
    LIBWRAP_EARLY_INIT( _ZN6QImageC2ERK5QSizeNS_6FormatE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QImageC2ERK5QSizeNS_6FormatE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QImageC2ERK5QSizeNS_6FormatE, ( scorep_libwrap_arg_this, size, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QImageC2ERK5QSizeNS_6FormatE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QImageC1ERK5QSizeNS_6FormatE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QImageC1ERK5QSizeNS_6FormatE )( void *scorep_libwrap_arg_this, const QSize & size, QImage::Format format )
{
    LIBWRAP_EARLY_INIT( _ZN6QImageC1ERK5QSizeNS_6FormatE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QImageC1ERK5QSizeNS_6FormatE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QImageC1ERK5QSizeNS_6FormatE, ( scorep_libwrap_arg_this, size, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QImageC1ERK5QSizeNS_6FormatE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QImageC2EiiNS_6FormatE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QImageC2EiiNS_6FormatE )( void *scorep_libwrap_arg_this, int width, int height, QImage::Format format )
{
    LIBWRAP_EARLY_INIT( _ZN6QImageC2EiiNS_6FormatE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QImageC2EiiNS_6FormatE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QImageC2EiiNS_6FormatE, ( scorep_libwrap_arg_this, width, height, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QImageC2EiiNS_6FormatE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QImageC1EiiNS_6FormatE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QImageC1EiiNS_6FormatE )( void *scorep_libwrap_arg_this, int width, int height, QImage::Format format )
{
    LIBWRAP_EARLY_INIT( _ZN6QImageC1EiiNS_6FormatE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QImageC1EiiNS_6FormatE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QImageC1EiiNS_6FormatE, ( scorep_libwrap_arg_this, width, height, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QImageC1EiiNS_6FormatE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QImageC2EPhiiNS_6FormatEPFvPvES2_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QImageC2EPhiiNS_6FormatEPFvPvES2_ )( void *scorep_libwrap_arg_this, uchar * data, int width, int height, QImage::Format format, QImageCleanupFunction cleanupFunction, void * cleanupInfo )
{
    LIBWRAP_EARLY_INIT( _ZN6QImageC2EPhiiNS_6FormatEPFvPvES2_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QImageC2EPhiiNS_6FormatEPFvPvES2_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QImageC2EPhiiNS_6FormatEPFvPvES2_, ( scorep_libwrap_arg_this, data, width, height, format, cleanupFunction, cleanupInfo ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QImageC2EPhiiNS_6FormatEPFvPvES2_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QImageC1EPhiiNS_6FormatEPFvPvES2_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QImageC1EPhiiNS_6FormatEPFvPvES2_ )( void *scorep_libwrap_arg_this, uchar * data, int width, int height, QImage::Format format, QImageCleanupFunction cleanupFunction, void * cleanupInfo )
{
    LIBWRAP_EARLY_INIT( _ZN6QImageC1EPhiiNS_6FormatEPFvPvES2_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QImageC1EPhiiNS_6FormatEPFvPvES2_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QImageC1EPhiiNS_6FormatEPFvPvES2_, ( scorep_libwrap_arg_this, data, width, height, format, cleanupFunction, cleanupInfo ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QImageC1EPhiiNS_6FormatEPFvPvES2_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QImageC2EPKhiiNS_6FormatEPFvPvES3_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QImageC2EPKhiiNS_6FormatEPFvPvES3_ )( void *scorep_libwrap_arg_this, const uchar * data, int width, int height, QImage::Format format, QImageCleanupFunction cleanupFunction, void * cleanupInfo )
{
    LIBWRAP_EARLY_INIT( _ZN6QImageC2EPKhiiNS_6FormatEPFvPvES3_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QImageC2EPKhiiNS_6FormatEPFvPvES3_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QImageC2EPKhiiNS_6FormatEPFvPvES3_, ( scorep_libwrap_arg_this, data, width, height, format, cleanupFunction, cleanupInfo ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QImageC2EPKhiiNS_6FormatEPFvPvES3_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QImageC1EPKhiiNS_6FormatEPFvPvES3_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QImageC1EPKhiiNS_6FormatEPFvPvES3_ )( void *scorep_libwrap_arg_this, const uchar * data, int width, int height, QImage::Format format, QImageCleanupFunction cleanupFunction, void * cleanupInfo )
{
    LIBWRAP_EARLY_INIT( _ZN6QImageC1EPKhiiNS_6FormatEPFvPvES3_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QImageC1EPKhiiNS_6FormatEPFvPvES3_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QImageC1EPKhiiNS_6FormatEPFvPvES3_, ( scorep_libwrap_arg_this, data, width, height, format, cleanupFunction, cleanupInfo ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QImageC1EPKhiiNS_6FormatEPFvPvES3_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QImageC2EPhiiiNS_6FormatEPFvPvES2_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QImageC2EPhiiiNS_6FormatEPFvPvES2_ )( void *scorep_libwrap_arg_this, uchar * data, int width, int height, int bytesPerLine, QImage::Format format, QImageCleanupFunction cleanupFunction, void * cleanupInfo )
{
    LIBWRAP_EARLY_INIT( _ZN6QImageC2EPhiiiNS_6FormatEPFvPvES2_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QImageC2EPhiiiNS_6FormatEPFvPvES2_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QImageC2EPhiiiNS_6FormatEPFvPvES2_, ( scorep_libwrap_arg_this, data, width, height, bytesPerLine, format, cleanupFunction, cleanupInfo ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QImageC2EPhiiiNS_6FormatEPFvPvES2_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QImageC1EPhiiiNS_6FormatEPFvPvES2_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QImageC1EPhiiiNS_6FormatEPFvPvES2_ )( void *scorep_libwrap_arg_this, uchar * data, int width, int height, int bytesPerLine, QImage::Format format, QImageCleanupFunction cleanupFunction, void * cleanupInfo )
{
    LIBWRAP_EARLY_INIT( _ZN6QImageC1EPhiiiNS_6FormatEPFvPvES2_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QImageC1EPhiiiNS_6FormatEPFvPvES2_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QImageC1EPhiiiNS_6FormatEPFvPvES2_, ( scorep_libwrap_arg_this, data, width, height, bytesPerLine, format, cleanupFunction, cleanupInfo ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QImageC1EPhiiiNS_6FormatEPFvPvES2_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QImageC2EPKhiiiNS_6FormatEPFvPvES3_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QImageC2EPKhiiiNS_6FormatEPFvPvES3_ )( void *scorep_libwrap_arg_this, const uchar * data, int width, int height, int bytesPerLine, QImage::Format format, QImageCleanupFunction cleanupFunction, void * cleanupInfo )
{
    LIBWRAP_EARLY_INIT( _ZN6QImageC2EPKhiiiNS_6FormatEPFvPvES3_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QImageC2EPKhiiiNS_6FormatEPFvPvES3_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QImageC2EPKhiiiNS_6FormatEPFvPvES3_, ( scorep_libwrap_arg_this, data, width, height, bytesPerLine, format, cleanupFunction, cleanupInfo ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QImageC2EPKhiiiNS_6FormatEPFvPvES3_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QImageC1EPKhiiiNS_6FormatEPFvPvES3_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QImageC1EPKhiiiNS_6FormatEPFvPvES3_ )( void *scorep_libwrap_arg_this, const uchar * data, int width, int height, int bytesPerLine, QImage::Format format, QImageCleanupFunction cleanupFunction, void * cleanupInfo )
{
    LIBWRAP_EARLY_INIT( _ZN6QImageC1EPKhiiiNS_6FormatEPFvPvES3_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QImageC1EPKhiiiNS_6FormatEPFvPvES3_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QImageC1EPKhiiiNS_6FormatEPFvPvES3_, ( scorep_libwrap_arg_this, data, width, height, bytesPerLine, format, cleanupFunction, cleanupInfo ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QImageC1EPKhiiiNS_6FormatEPFvPvES3_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QImageC2EPKPKc
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QImageC2EPKPKc )( void *scorep_libwrap_arg_this, const char *const xpm[] )
{
    LIBWRAP_EARLY_INIT( _ZN6QImageC2EPKPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QImageC2EPKPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QImageC2EPKPKc, ( scorep_libwrap_arg_this, xpm ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QImageC2EPKPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QImageC1EPKPKc
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QImageC1EPKPKc )( void *scorep_libwrap_arg_this, const char *const xpm[] )
{
    LIBWRAP_EARLY_INIT( _ZN6QImageC1EPKPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QImageC1EPKPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QImageC1EPKPKc, ( scorep_libwrap_arg_this, xpm ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QImageC1EPKPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QImageC2ERK7QStringPKc
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QImageC2ERK7QStringPKc )( void *scorep_libwrap_arg_this, const QString & fileName, const char * format )
{
    LIBWRAP_EARLY_INIT( _ZN6QImageC2ERK7QStringPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QImageC2ERK7QStringPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QImageC2ERK7QStringPKc, ( scorep_libwrap_arg_this, fileName, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QImageC2ERK7QStringPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QImageC1ERK7QStringPKc
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QImageC1ERK7QStringPKc )( void *scorep_libwrap_arg_this, const QString & fileName, const char * format )
{
    LIBWRAP_EARLY_INIT( _ZN6QImageC1ERK7QStringPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QImageC1ERK7QStringPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QImageC1ERK7QStringPKc, ( scorep_libwrap_arg_this, fileName, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QImageC1ERK7QStringPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QImageC2ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QImageC2ERKS_ )( void *scorep_libwrap_arg_this, const QImage & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN6QImageC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QImageC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QImageC2ERKS_, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QImageC2ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QImageC1ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QImageC1ERKS_ )( void *scorep_libwrap_arg_this, const QImage & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN6QImageC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QImageC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QImageC1ERKS_, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QImageC1ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QImageaSERKS_
QImage &
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QImageaSERKS_ )( void *scorep_libwrap_arg_this, const QImage & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN6QImageaSERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QImageaSERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QImage & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN6QImageaSERKS_, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QImageaSERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QImage7devTypeEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QImage7devTypeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QImage7devTypeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QImage7devTypeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QImage7devTypeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QImage7devTypeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QImageeqERKS_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QImageeqERKS_ )( void *scorep_libwrap_arg_this, const QImage & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZNK6QImageeqERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QImageeqERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QImageeqERKS_, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QImageeqERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QImageneERKS_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QImageneERKS_ )( void *scorep_libwrap_arg_this, const QImage & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZNK6QImageneERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QImageneERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QImageneERKS_, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QImageneERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QImage6detachEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QImage6detachEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN6QImage6detachEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QImage6detachEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QImage6detachEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QImage6detachEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK6QImage10isDetachedEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QImage10isDetachedEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QImage10isDetachedEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QImage10isDetachedEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QImage10isDetachedEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QImage10isDetachedEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QImage4copyERK5QRect
QImage
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QImage4copyERK5QRect )( void *scorep_libwrap_arg_this, const QRect & rect )
{
    LIBWRAP_EARLY_INIT( _ZNK6QImage4copyERK5QRect );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QImage4copyERK5QRect );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QImage scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QImage4copyERK5QRect, ( scorep_libwrap_arg_this, rect ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QImage4copyERK5QRect );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QImage6formatEv
QImage::Format
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QImage6formatEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QImage6formatEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QImage6formatEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QImage::Format scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QImage6formatEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QImage6formatEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QImage15convertToFormatENS_6FormatERK7QVectorIjE6QFlagsIN2Qt19ImageConversionFlagEE
QImage
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QImage15convertToFormatENS_6FormatERK7QVectorIjE6QFlagsIN2Qt19ImageConversionFlagEE )( void *scorep_libwrap_arg_this, QImage::Format f, const QVector<QRgb> & colorTable, Qt::ImageConversionFlags flags )
{
    LIBWRAP_EARLY_INIT( _ZNK6QImage15convertToFormatENS_6FormatERK7QVectorIjE6QFlagsIN2Qt19ImageConversionFlagEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QImage15convertToFormatENS_6FormatERK7QVectorIjE6QFlagsIN2Qt19ImageConversionFlagEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QImage scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QImage15convertToFormatENS_6FormatERK7QVectorIjE6QFlagsIN2Qt19ImageConversionFlagEE, ( scorep_libwrap_arg_this, f, colorTable, flags ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QImage15convertToFormatENS_6FormatERK7QVectorIjE6QFlagsIN2Qt19ImageConversionFlagEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QImage5widthEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QImage5widthEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QImage5widthEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QImage5widthEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QImage5widthEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QImage5widthEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QImage6heightEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QImage6heightEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QImage6heightEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QImage6heightEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QImage6heightEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QImage6heightEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QImage4sizeEv
QSize
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QImage4sizeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QImage4sizeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QImage4sizeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QSize scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QImage4sizeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QImage4sizeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QImage4rectEv
QRect
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QImage4rectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QImage4rectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QImage4rectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRect scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QImage4rectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QImage4rectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QImage5depthEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QImage5depthEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QImage5depthEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QImage5depthEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QImage5depthEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QImage5depthEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QImage10colorCountEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QImage10colorCountEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QImage10colorCountEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QImage10colorCountEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QImage10colorCountEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QImage10colorCountEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QImage13bitPlaneCountEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QImage13bitPlaneCountEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QImage13bitPlaneCountEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QImage13bitPlaneCountEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QImage13bitPlaneCountEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QImage13bitPlaneCountEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QImage5colorEi
QRgb
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QImage5colorEi )( void *scorep_libwrap_arg_this, int i )
{
    LIBWRAP_EARLY_INIT( _ZNK6QImage5colorEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QImage5colorEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRgb scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QImage5colorEi, ( scorep_libwrap_arg_this, i ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QImage5colorEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QImage8setColorEij
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QImage8setColorEij )( void *scorep_libwrap_arg_this, int i, QRgb c )
{
    LIBWRAP_EARLY_INIT( _ZN6QImage8setColorEij );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QImage8setColorEij );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QImage8setColorEij, ( scorep_libwrap_arg_this, i, c ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QImage8setColorEij );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QImage13setColorCountEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QImage13setColorCountEi )( void *scorep_libwrap_arg_this, int scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN6QImage13setColorCountEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QImage13setColorCountEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QImage13setColorCountEi, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QImage13setColorCountEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK6QImage7allGrayEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QImage7allGrayEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QImage7allGrayEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QImage7allGrayEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QImage7allGrayEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QImage7allGrayEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QImage11isGrayscaleEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QImage11isGrayscaleEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QImage11isGrayscaleEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QImage11isGrayscaleEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QImage11isGrayscaleEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QImage11isGrayscaleEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QImage4bitsEv
uchar *
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QImage4bitsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN6QImage4bitsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QImage4bitsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    uchar * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN6QImage4bitsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QImage4bitsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QImage4bitsEv
const uchar *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QImage4bitsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QImage4bitsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QImage4bitsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const uchar * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QImage4bitsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QImage4bitsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QImage9constBitsEv
const uchar *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QImage9constBitsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QImage9constBitsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QImage9constBitsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const uchar * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QImage9constBitsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QImage9constBitsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QImage9byteCountEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QImage9byteCountEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QImage9byteCountEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QImage9byteCountEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QImage9byteCountEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QImage9byteCountEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QImage8scanLineEi
uchar *
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QImage8scanLineEi )( void *scorep_libwrap_arg_this, int scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN6QImage8scanLineEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QImage8scanLineEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    uchar * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN6QImage8scanLineEi, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QImage8scanLineEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QImage8scanLineEi
const uchar *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QImage8scanLineEi )( void *scorep_libwrap_arg_this, int scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZNK6QImage8scanLineEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QImage8scanLineEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const uchar * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QImage8scanLineEi, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QImage8scanLineEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QImage13constScanLineEi
const uchar *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QImage13constScanLineEi )( void *scorep_libwrap_arg_this, int scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZNK6QImage13constScanLineEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QImage13constScanLineEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const uchar * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QImage13constScanLineEi, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QImage13constScanLineEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QImage12bytesPerLineEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QImage12bytesPerLineEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QImage12bytesPerLineEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QImage12bytesPerLineEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QImage12bytesPerLineEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QImage12bytesPerLineEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QImage5validEii
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QImage5validEii )( void *scorep_libwrap_arg_this, int x, int y )
{
    LIBWRAP_EARLY_INIT( _ZNK6QImage5validEii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QImage5validEii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QImage5validEii, ( scorep_libwrap_arg_this, x, y ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QImage5validEii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QImage10pixelIndexEii
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QImage10pixelIndexEii )( void *scorep_libwrap_arg_this, int x, int y )
{
    LIBWRAP_EARLY_INIT( _ZNK6QImage10pixelIndexEii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QImage10pixelIndexEii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QImage10pixelIndexEii, ( scorep_libwrap_arg_this, x, y ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QImage10pixelIndexEii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QImage5pixelEii
QRgb
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QImage5pixelEii )( void *scorep_libwrap_arg_this, int x, int y )
{
    LIBWRAP_EARLY_INIT( _ZNK6QImage5pixelEii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QImage5pixelEii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRgb scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QImage5pixelEii, ( scorep_libwrap_arg_this, x, y ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QImage5pixelEii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QImage8setPixelEiij
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QImage8setPixelEiij )( void *scorep_libwrap_arg_this, int x, int y, uint index_or_rgb )
{
    LIBWRAP_EARLY_INIT( _ZN6QImage8setPixelEiij );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QImage8setPixelEiij );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QImage8setPixelEiij, ( scorep_libwrap_arg_this, x, y, index_or_rgb ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QImage8setPixelEiij );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK6QImage10pixelColorEii
QColor
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QImage10pixelColorEii )( void *scorep_libwrap_arg_this, int x, int y )
{
    LIBWRAP_EARLY_INIT( _ZNK6QImage10pixelColorEii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QImage10pixelColorEii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QColor scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QImage10pixelColorEii, ( scorep_libwrap_arg_this, x, y ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QImage10pixelColorEii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QImage13setPixelColorEiiRK6QColor
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QImage13setPixelColorEiiRK6QColor )( void *scorep_libwrap_arg_this, int x, int y, const QColor & c )
{
    LIBWRAP_EARLY_INIT( _ZN6QImage13setPixelColorEiiRK6QColor );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QImage13setPixelColorEiiRK6QColor );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QImage13setPixelColorEiiRK6QColor, ( scorep_libwrap_arg_this, x, y, c ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QImage13setPixelColorEiiRK6QColor );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK6QImage10colorTableEv
QVector<QRgb>
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QImage10colorTableEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QImage10colorTableEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QImage10colorTableEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QVector<QRgb> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QImage10colorTableEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QImage10colorTableEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QImage13setColorTableE7QVectorIjE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QImage13setColorTableE7QVectorIjE )( void *scorep_libwrap_arg_this, const QVector<QRgb> colors )
{
    LIBWRAP_EARLY_INIT( _ZN6QImage13setColorTableE7QVectorIjE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QImage13setColorTableE7QVectorIjE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QImage13setColorTableE7QVectorIjE, ( scorep_libwrap_arg_this, colors ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QImage13setColorTableE7QVectorIjE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK6QImage16devicePixelRatioEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QImage16devicePixelRatioEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QImage16devicePixelRatioEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QImage16devicePixelRatioEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QImage16devicePixelRatioEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QImage16devicePixelRatioEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QImage19setDevicePixelRatioEd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QImage19setDevicePixelRatioEd )( void *scorep_libwrap_arg_this, qreal scaleFactor )
{
    LIBWRAP_EARLY_INIT( _ZN6QImage19setDevicePixelRatioEd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QImage19setDevicePixelRatioEd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QImage19setDevicePixelRatioEd, ( scorep_libwrap_arg_this, scaleFactor ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QImage19setDevicePixelRatioEd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QImage4fillEj
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QImage4fillEj )( void *scorep_libwrap_arg_this, uint pixel )
{
    LIBWRAP_EARLY_INIT( _ZN6QImage4fillEj );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QImage4fillEj );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QImage4fillEj, ( scorep_libwrap_arg_this, pixel ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QImage4fillEj );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QImage4fillERK6QColor
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QImage4fillERK6QColor )( void *scorep_libwrap_arg_this, const QColor & color )
{
    LIBWRAP_EARLY_INIT( _ZN6QImage4fillERK6QColor );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QImage4fillERK6QColor );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QImage4fillERK6QColor, ( scorep_libwrap_arg_this, color ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QImage4fillERK6QColor );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QImage4fillEN2Qt11GlobalColorE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QImage4fillEN2Qt11GlobalColorE )( void *scorep_libwrap_arg_this, Qt::GlobalColor color )
{
    LIBWRAP_EARLY_INIT( _ZN6QImage4fillEN2Qt11GlobalColorE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QImage4fillEN2Qt11GlobalColorE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QImage4fillEN2Qt11GlobalColorE, ( scorep_libwrap_arg_this, color ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QImage4fillEN2Qt11GlobalColorE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK6QImage15hasAlphaChannelEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QImage15hasAlphaChannelEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QImage15hasAlphaChannelEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QImage15hasAlphaChannelEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QImage15hasAlphaChannelEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QImage15hasAlphaChannelEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QImage15setAlphaChannelERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QImage15setAlphaChannelERKS_ )( void *scorep_libwrap_arg_this, const QImage & alphaChannel )
{
    LIBWRAP_EARLY_INIT( _ZN6QImage15setAlphaChannelERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QImage15setAlphaChannelERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QImage15setAlphaChannelERKS_, ( scorep_libwrap_arg_this, alphaChannel ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QImage15setAlphaChannelERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK6QImage12alphaChannelEv
QImage
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QImage12alphaChannelEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QImage12alphaChannelEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QImage12alphaChannelEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QImage scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QImage12alphaChannelEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QImage12alphaChannelEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QImage15createAlphaMaskE6QFlagsIN2Qt19ImageConversionFlagEE
QImage
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QImage15createAlphaMaskE6QFlagsIN2Qt19ImageConversionFlagEE )( void *scorep_libwrap_arg_this, Qt::ImageConversionFlags flags )
{
    LIBWRAP_EARLY_INIT( _ZNK6QImage15createAlphaMaskE6QFlagsIN2Qt19ImageConversionFlagEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QImage15createAlphaMaskE6QFlagsIN2Qt19ImageConversionFlagEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QImage scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QImage15createAlphaMaskE6QFlagsIN2Qt19ImageConversionFlagEE, ( scorep_libwrap_arg_this, flags ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QImage15createAlphaMaskE6QFlagsIN2Qt19ImageConversionFlagEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QImage19createHeuristicMaskEb
QImage
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QImage19createHeuristicMaskEb )( void *scorep_libwrap_arg_this, bool clipTight )
{
    LIBWRAP_EARLY_INIT( _ZNK6QImage19createHeuristicMaskEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QImage19createHeuristicMaskEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QImage scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QImage19createHeuristicMaskEb, ( scorep_libwrap_arg_this, clipTight ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QImage19createHeuristicMaskEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QImage19createMaskFromColorEjN2Qt8MaskModeE
QImage
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QImage19createMaskFromColorEjN2Qt8MaskModeE )( void *scorep_libwrap_arg_this, QRgb color, Qt::MaskMode mode )
{
    LIBWRAP_EARLY_INIT( _ZNK6QImage19createMaskFromColorEjN2Qt8MaskModeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QImage19createMaskFromColorEjN2Qt8MaskModeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QImage scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QImage19createMaskFromColorEjN2Qt8MaskModeE, ( scorep_libwrap_arg_this, color, mode ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QImage19createMaskFromColorEjN2Qt8MaskModeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QImage6scaledERK5QSizeN2Qt15AspectRatioModeENS3_18TransformationModeE
QImage
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QImage6scaledERK5QSizeN2Qt15AspectRatioModeENS3_18TransformationModeE )( void *scorep_libwrap_arg_this, const QSize & s, Qt::AspectRatioMode aspectMode, Qt::TransformationMode mode )
{
    LIBWRAP_EARLY_INIT( _ZNK6QImage6scaledERK5QSizeN2Qt15AspectRatioModeENS3_18TransformationModeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QImage6scaledERK5QSizeN2Qt15AspectRatioModeENS3_18TransformationModeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QImage scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QImage6scaledERK5QSizeN2Qt15AspectRatioModeENS3_18TransformationModeE, ( scorep_libwrap_arg_this, s, aspectMode, mode ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QImage6scaledERK5QSizeN2Qt15AspectRatioModeENS3_18TransformationModeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QImage13scaledToWidthEiN2Qt18TransformationModeE
QImage
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QImage13scaledToWidthEiN2Qt18TransformationModeE )( void *scorep_libwrap_arg_this, int w, Qt::TransformationMode mode )
{
    LIBWRAP_EARLY_INIT( _ZNK6QImage13scaledToWidthEiN2Qt18TransformationModeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QImage13scaledToWidthEiN2Qt18TransformationModeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QImage scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QImage13scaledToWidthEiN2Qt18TransformationModeE, ( scorep_libwrap_arg_this, w, mode ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QImage13scaledToWidthEiN2Qt18TransformationModeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QImage14scaledToHeightEiN2Qt18TransformationModeE
QImage
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QImage14scaledToHeightEiN2Qt18TransformationModeE )( void *scorep_libwrap_arg_this, int h, Qt::TransformationMode mode )
{
    LIBWRAP_EARLY_INIT( _ZNK6QImage14scaledToHeightEiN2Qt18TransformationModeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QImage14scaledToHeightEiN2Qt18TransformationModeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QImage scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QImage14scaledToHeightEiN2Qt18TransformationModeE, ( scorep_libwrap_arg_this, h, mode ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QImage14scaledToHeightEiN2Qt18TransformationModeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QImage11transformedERK7QMatrixN2Qt18TransformationModeE
QImage
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QImage11transformedERK7QMatrixN2Qt18TransformationModeE )( void *scorep_libwrap_arg_this, const QMatrix & matrix, Qt::TransformationMode mode )
{
    LIBWRAP_EARLY_INIT( _ZNK6QImage11transformedERK7QMatrixN2Qt18TransformationModeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QImage11transformedERK7QMatrixN2Qt18TransformationModeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QImage scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QImage11transformedERK7QMatrixN2Qt18TransformationModeE, ( scorep_libwrap_arg_this, matrix, mode ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QImage11transformedERK7QMatrixN2Qt18TransformationModeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QImage10trueMatrixERK7QMatrixii
QMatrix
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QImage10trueMatrixERK7QMatrixii )( const QMatrix & scorep_libwrap_arg_1, int w, int h )
{
    LIBWRAP_EARLY_INIT( _ZN6QImage10trueMatrixERK7QMatrixii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QImage10trueMatrixERK7QMatrixii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QMatrix scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN6QImage10trueMatrixERK7QMatrixii, ( scorep_libwrap_arg_1, w, h ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QImage10trueMatrixERK7QMatrixii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QImage11transformedERK10QTransformN2Qt18TransformationModeE
QImage
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QImage11transformedERK10QTransformN2Qt18TransformationModeE )( void *scorep_libwrap_arg_this, const QTransform & matrix, Qt::TransformationMode mode )
{
    LIBWRAP_EARLY_INIT( _ZNK6QImage11transformedERK10QTransformN2Qt18TransformationModeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QImage11transformedERK10QTransformN2Qt18TransformationModeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QImage scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QImage11transformedERK10QTransformN2Qt18TransformationModeE, ( scorep_libwrap_arg_this, matrix, mode ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QImage11transformedERK10QTransformN2Qt18TransformationModeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QImage10trueMatrixERK10QTransformii
QTransform
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QImage10trueMatrixERK10QTransformii )( const QTransform & scorep_libwrap_arg_1, int w, int h )
{
    LIBWRAP_EARLY_INIT( _ZN6QImage10trueMatrixERK10QTransformii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QImage10trueMatrixERK10QTransformii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTransform scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN6QImage10trueMatrixERK10QTransformii, ( scorep_libwrap_arg_1, w, h ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QImage10trueMatrixERK10QTransformii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QImage12invertPixelsENS_10InvertModeE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QImage12invertPixelsENS_10InvertModeE )( void *scorep_libwrap_arg_this, QImage::InvertMode scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN6QImage12invertPixelsENS_10InvertModeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QImage12invertPixelsENS_10InvertModeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QImage12invertPixelsENS_10InvertModeE, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QImage12invertPixelsENS_10InvertModeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QImage4loadEP9QIODevicePKc
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QImage4loadEP9QIODevicePKc )( void *scorep_libwrap_arg_this, QIODevice * device, const char * format )
{
    LIBWRAP_EARLY_INIT( _ZN6QImage4loadEP9QIODevicePKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QImage4loadEP9QIODevicePKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN6QImage4loadEP9QIODevicePKc, ( scorep_libwrap_arg_this, device, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QImage4loadEP9QIODevicePKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QImage4loadERK7QStringPKc
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QImage4loadERK7QStringPKc )( void *scorep_libwrap_arg_this, const QString & fileName, const char * format )
{
    LIBWRAP_EARLY_INIT( _ZN6QImage4loadERK7QStringPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QImage4loadERK7QStringPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN6QImage4loadERK7QStringPKc, ( scorep_libwrap_arg_this, fileName, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QImage4loadERK7QStringPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QImage12loadFromDataEPKhiPKc
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QImage12loadFromDataEPKhiPKc )( void *scorep_libwrap_arg_this, const uchar * buf, int len, const char * format )
{
    LIBWRAP_EARLY_INIT( _ZN6QImage12loadFromDataEPKhiPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QImage12loadFromDataEPKhiPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN6QImage12loadFromDataEPKhiPKc, ( scorep_libwrap_arg_this, buf, len, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QImage12loadFromDataEPKhiPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QImage4saveERK7QStringPKci
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QImage4saveERK7QStringPKci )( void *scorep_libwrap_arg_this, const QString & fileName, const char * format, int quality )
{
    LIBWRAP_EARLY_INIT( _ZNK6QImage4saveERK7QStringPKci );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QImage4saveERK7QStringPKci );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QImage4saveERK7QStringPKci, ( scorep_libwrap_arg_this, fileName, format, quality ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QImage4saveERK7QStringPKci );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QImage4saveEP9QIODevicePKci
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QImage4saveEP9QIODevicePKci )( void *scorep_libwrap_arg_this, QIODevice * device, const char * format, int quality )
{
    LIBWRAP_EARLY_INIT( _ZNK6QImage4saveEP9QIODevicePKci );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QImage4saveEP9QIODevicePKci );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QImage4saveEP9QIODevicePKci, ( scorep_libwrap_arg_this, device, format, quality ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QImage4saveEP9QIODevicePKci );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QImage8fromDataEPKhiPKc
QImage
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QImage8fromDataEPKhiPKc )( const uchar * data, int size, const char * format )
{
    LIBWRAP_EARLY_INIT( _ZN6QImage8fromDataEPKhiPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QImage8fromDataEPKhiPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QImage scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN6QImage8fromDataEPKhiPKc, ( data, size, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QImage8fromDataEPKhiPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QImage8cacheKeyEv
qint64
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QImage8cacheKeyEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QImage8cacheKeyEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QImage8cacheKeyEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qint64 scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QImage8cacheKeyEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QImage8cacheKeyEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QImage11paintEngineEv
QPaintEngine *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QImage11paintEngineEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QImage11paintEngineEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QImage11paintEngineEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPaintEngine * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QImage11paintEngineEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QImage11paintEngineEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QImage13dotsPerMeterXEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QImage13dotsPerMeterXEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QImage13dotsPerMeterXEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QImage13dotsPerMeterXEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QImage13dotsPerMeterXEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QImage13dotsPerMeterXEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QImage13dotsPerMeterYEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QImage13dotsPerMeterYEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QImage13dotsPerMeterYEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QImage13dotsPerMeterYEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QImage13dotsPerMeterYEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QImage13dotsPerMeterYEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QImage16setDotsPerMeterXEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QImage16setDotsPerMeterXEi )( void *scorep_libwrap_arg_this, int scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN6QImage16setDotsPerMeterXEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QImage16setDotsPerMeterXEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QImage16setDotsPerMeterXEi, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QImage16setDotsPerMeterXEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QImage16setDotsPerMeterYEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QImage16setDotsPerMeterYEi )( void *scorep_libwrap_arg_this, int scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN6QImage16setDotsPerMeterYEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QImage16setDotsPerMeterYEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QImage16setDotsPerMeterYEi, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QImage16setDotsPerMeterYEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK6QImage6offsetEv
QPoint
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QImage6offsetEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QImage6offsetEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QImage6offsetEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPoint scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QImage6offsetEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QImage6offsetEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QImage9setOffsetERK6QPoint
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QImage9setOffsetERK6QPoint )( void *scorep_libwrap_arg_this, const QPoint & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN6QImage9setOffsetERK6QPoint );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QImage9setOffsetERK6QPoint );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QImage9setOffsetERK6QPoint, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QImage9setOffsetERK6QPoint );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK6QImage8textKeysEv
QStringList
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QImage8textKeysEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QImage8textKeysEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QImage8textKeysEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QStringList scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QImage8textKeysEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QImage8textKeysEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QImage4textERK7QString
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QImage4textERK7QString )( void *scorep_libwrap_arg_this, const QString & key )
{
    LIBWRAP_EARLY_INIT( _ZNK6QImage4textERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QImage4textERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QImage4textERK7QString, ( scorep_libwrap_arg_this, key ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QImage4textERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QImage7setTextERK7QStringS2_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QImage7setTextERK7QStringS2_ )( void *scorep_libwrap_arg_this, const QString & key, const QString & value )
{
    LIBWRAP_EARLY_INIT( _ZN6QImage7setTextERK7QStringS2_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QImage7setTextERK7QStringS2_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QImage7setTextERK7QStringS2_, ( scorep_libwrap_arg_this, key, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QImage7setTextERK7QStringS2_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK6QImage11pixelFormatEv
QPixelFormat
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QImage11pixelFormatEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QImage11pixelFormatEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QImage11pixelFormatEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPixelFormat scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QImage11pixelFormatEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QImage11pixelFormatEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QImage13toPixelFormatENS_6FormatE
QPixelFormat
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QImage13toPixelFormatENS_6FormatE )( QImage::Format format )
{
    LIBWRAP_EARLY_INIT( _ZN6QImage13toPixelFormatENS_6FormatE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QImage13toPixelFormatENS_6FormatE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPixelFormat scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN6QImage13toPixelFormatENS_6FormatE, ( format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QImage13toPixelFormatENS_6FormatE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QImage13toImageFormatE12QPixelFormat
QImage::Format
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QImage13toImageFormatE12QPixelFormat )( QPixelFormat format )
{
    LIBWRAP_EARLY_INIT( _ZN6QImage13toImageFormatE12QPixelFormat );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QImage13toImageFormatE12QPixelFormat );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QImage::Format scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN6QImage13toImageFormatE12QPixelFormat, ( format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QImage13toImageFormatE12QPixelFormat );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZrsR11QDataStreamR6QImage
QDataStream &
SCOREP_LIBWRAP_FUNC_NAME( _ZrsR11QDataStreamR6QImage )( QDataStream & scorep_libwrap_arg_1, QImage & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _ZrsR11QDataStreamR6QImage );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZrsR11QDataStreamR6QImage );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDataStream & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZrsR11QDataStreamR6QImage, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZrsR11QDataStreamR6QImage );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _Zls6QDebugRK6QImage
QDebug
SCOREP_LIBWRAP_FUNC_NAME( _Zls6QDebugRK6QImage )( QDebug scorep_libwrap_arg_1, const QImage & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _Zls6QDebugRK6QImage );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _Zls6QDebugRK6QImage );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDebug scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _Zls6QDebugRK6QImage, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _Zls6QDebugRK6QImage );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QPixmapC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QPixmapC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN7QPixmapC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QPixmapC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QPixmapC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QPixmapC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QPixmapC1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QPixmapC1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN7QPixmapC1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QPixmapC1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QPixmapC1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QPixmapC1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QPixmapC2EP15QPlatformPixmap
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QPixmapC2EP15QPlatformPixmap )( void *scorep_libwrap_arg_this, QPlatformPixmap * data )
{
    LIBWRAP_EARLY_INIT( _ZN7QPixmapC2EP15QPlatformPixmap );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QPixmapC2EP15QPlatformPixmap );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QPixmapC2EP15QPlatformPixmap, ( scorep_libwrap_arg_this, data ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QPixmapC2EP15QPlatformPixmap );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QPixmapC1EP15QPlatformPixmap
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QPixmapC1EP15QPlatformPixmap )( void *scorep_libwrap_arg_this, QPlatformPixmap * data )
{
    LIBWRAP_EARLY_INIT( _ZN7QPixmapC1EP15QPlatformPixmap );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QPixmapC1EP15QPlatformPixmap );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QPixmapC1EP15QPlatformPixmap, ( scorep_libwrap_arg_this, data ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QPixmapC1EP15QPlatformPixmap );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QPixmapC2Eii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QPixmapC2Eii )( void *scorep_libwrap_arg_this, int w, int h )
{
    LIBWRAP_EARLY_INIT( _ZN7QPixmapC2Eii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QPixmapC2Eii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QPixmapC2Eii, ( scorep_libwrap_arg_this, w, h ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QPixmapC2Eii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QPixmapC1Eii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QPixmapC1Eii )( void *scorep_libwrap_arg_this, int w, int h )
{
    LIBWRAP_EARLY_INIT( _ZN7QPixmapC1Eii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QPixmapC1Eii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QPixmapC1Eii, ( scorep_libwrap_arg_this, w, h ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QPixmapC1Eii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QPixmapC2ERK5QSize
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QPixmapC2ERK5QSize )( void *scorep_libwrap_arg_this, const QSize & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN7QPixmapC2ERK5QSize );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QPixmapC2ERK5QSize );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QPixmapC2ERK5QSize, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QPixmapC2ERK5QSize );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QPixmapC1ERK5QSize
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QPixmapC1ERK5QSize )( void *scorep_libwrap_arg_this, const QSize & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN7QPixmapC1ERK5QSize );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QPixmapC1ERK5QSize );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QPixmapC1ERK5QSize, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QPixmapC1ERK5QSize );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QPixmapC2ERK7QStringPKc6QFlagsIN2Qt19ImageConversionFlagEE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QPixmapC2ERK7QStringPKc6QFlagsIN2Qt19ImageConversionFlagEE )( void *scorep_libwrap_arg_this, const QString & fileName, const char * format, Qt::ImageConversionFlags flags )
{
    LIBWRAP_EARLY_INIT( _ZN7QPixmapC2ERK7QStringPKc6QFlagsIN2Qt19ImageConversionFlagEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QPixmapC2ERK7QStringPKc6QFlagsIN2Qt19ImageConversionFlagEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QPixmapC2ERK7QStringPKc6QFlagsIN2Qt19ImageConversionFlagEE, ( scorep_libwrap_arg_this, fileName, format, flags ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QPixmapC2ERK7QStringPKc6QFlagsIN2Qt19ImageConversionFlagEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QPixmapC1ERK7QStringPKc6QFlagsIN2Qt19ImageConversionFlagEE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QPixmapC1ERK7QStringPKc6QFlagsIN2Qt19ImageConversionFlagEE )( void *scorep_libwrap_arg_this, const QString & fileName, const char * format, Qt::ImageConversionFlags flags )
{
    LIBWRAP_EARLY_INIT( _ZN7QPixmapC1ERK7QStringPKc6QFlagsIN2Qt19ImageConversionFlagEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QPixmapC1ERK7QStringPKc6QFlagsIN2Qt19ImageConversionFlagEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QPixmapC1ERK7QStringPKc6QFlagsIN2Qt19ImageConversionFlagEE, ( scorep_libwrap_arg_this, fileName, format, flags ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QPixmapC1ERK7QStringPKc6QFlagsIN2Qt19ImageConversionFlagEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QPixmapC2EPKPKc
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QPixmapC2EPKPKc )( void *scorep_libwrap_arg_this, const char *const xpm[] )
{
    LIBWRAP_EARLY_INIT( _ZN7QPixmapC2EPKPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QPixmapC2EPKPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QPixmapC2EPKPKc, ( scorep_libwrap_arg_this, xpm ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QPixmapC2EPKPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QPixmapC1EPKPKc
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QPixmapC1EPKPKc )( void *scorep_libwrap_arg_this, const char *const xpm[] )
{
    LIBWRAP_EARLY_INIT( _ZN7QPixmapC1EPKPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QPixmapC1EPKPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QPixmapC1EPKPKc, ( scorep_libwrap_arg_this, xpm ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QPixmapC1EPKPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QPixmapC2ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QPixmapC2ERKS_ )( void *scorep_libwrap_arg_this, const QPixmap & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN7QPixmapC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QPixmapC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QPixmapC2ERKS_, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QPixmapC2ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QPixmapC1ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QPixmapC1ERKS_ )( void *scorep_libwrap_arg_this, const QPixmap & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN7QPixmapC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QPixmapC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QPixmapC1ERKS_, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QPixmapC1ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QPixmapD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QPixmapD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN7QPixmapD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QPixmapD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QPixmapD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QPixmapD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QPixmapD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QPixmapD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN7QPixmapD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QPixmapD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QPixmapD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QPixmapD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QPixmapD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QPixmapD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN7QPixmapD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QPixmapD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QPixmapD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QPixmapD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QPixmapaSERKS_
QPixmap &
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QPixmapaSERKS_ )( void *scorep_libwrap_arg_this, const QPixmap & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN7QPixmapaSERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QPixmapaSERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPixmap & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN7QPixmapaSERKS_, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QPixmapaSERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QPixmap6isNullEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QPixmap6isNullEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QPixmap6isNullEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QPixmap6isNullEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QPixmap6isNullEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QPixmap6isNullEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QPixmap7devTypeEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QPixmap7devTypeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QPixmap7devTypeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QPixmap7devTypeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QPixmap7devTypeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QPixmap7devTypeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QPixmap5widthEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QPixmap5widthEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QPixmap5widthEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QPixmap5widthEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QPixmap5widthEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QPixmap5widthEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QPixmap6heightEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QPixmap6heightEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QPixmap6heightEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QPixmap6heightEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QPixmap6heightEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QPixmap6heightEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QPixmap4sizeEv
QSize
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QPixmap4sizeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QPixmap4sizeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QPixmap4sizeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QSize scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QPixmap4sizeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QPixmap4sizeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QPixmap4rectEv
QRect
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QPixmap4rectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QPixmap4rectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QPixmap4rectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRect scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QPixmap4rectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QPixmap4rectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QPixmap5depthEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QPixmap5depthEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QPixmap5depthEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QPixmap5depthEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QPixmap5depthEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QPixmap5depthEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QPixmap12defaultDepthEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QPixmap12defaultDepthEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN7QPixmap12defaultDepthEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QPixmap12defaultDepthEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN7QPixmap12defaultDepthEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QPixmap12defaultDepthEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QPixmap4fillERK6QColor
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QPixmap4fillERK6QColor )( void *scorep_libwrap_arg_this, const QColor & fillColor )
{
    LIBWRAP_EARLY_INIT( _ZN7QPixmap4fillERK6QColor );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QPixmap4fillERK6QColor );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QPixmap4fillERK6QColor, ( scorep_libwrap_arg_this, fillColor ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QPixmap4fillERK6QColor );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QPixmap4fillEPK12QPaintDeviceRK6QPoint
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QPixmap4fillEPK12QPaintDeviceRK6QPoint )( void *scorep_libwrap_arg_this, const QPaintDevice * device, const QPoint & ofs )
{
    LIBWRAP_EARLY_INIT( _ZN7QPixmap4fillEPK12QPaintDeviceRK6QPoint );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QPixmap4fillEPK12QPaintDeviceRK6QPoint );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QPixmap4fillEPK12QPaintDeviceRK6QPoint, ( scorep_libwrap_arg_this, device, ofs ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QPixmap4fillEPK12QPaintDeviceRK6QPoint );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK7QPixmap4maskEv
QBitmap
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QPixmap4maskEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QPixmap4maskEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QPixmap4maskEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QBitmap scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QPixmap4maskEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QPixmap4maskEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QPixmap7setMaskERK7QBitmap
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QPixmap7setMaskERK7QBitmap )( void *scorep_libwrap_arg_this, const QBitmap & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN7QPixmap7setMaskERK7QBitmap );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QPixmap7setMaskERK7QBitmap );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QPixmap7setMaskERK7QBitmap, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QPixmap7setMaskERK7QBitmap );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK7QPixmap16devicePixelRatioEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QPixmap16devicePixelRatioEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QPixmap16devicePixelRatioEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QPixmap16devicePixelRatioEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QPixmap16devicePixelRatioEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QPixmap16devicePixelRatioEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QPixmap19setDevicePixelRatioEd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QPixmap19setDevicePixelRatioEd )( void *scorep_libwrap_arg_this, qreal scaleFactor )
{
    LIBWRAP_EARLY_INIT( _ZN7QPixmap19setDevicePixelRatioEd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QPixmap19setDevicePixelRatioEd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QPixmap19setDevicePixelRatioEd, ( scorep_libwrap_arg_this, scaleFactor ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QPixmap19setDevicePixelRatioEd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK7QPixmap8hasAlphaEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QPixmap8hasAlphaEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QPixmap8hasAlphaEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QPixmap8hasAlphaEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QPixmap8hasAlphaEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QPixmap8hasAlphaEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QPixmap15hasAlphaChannelEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QPixmap15hasAlphaChannelEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QPixmap15hasAlphaChannelEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QPixmap15hasAlphaChannelEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QPixmap15hasAlphaChannelEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QPixmap15hasAlphaChannelEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QPixmap19createHeuristicMaskEb
QBitmap
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QPixmap19createHeuristicMaskEb )( void *scorep_libwrap_arg_this, bool clipTight )
{
    LIBWRAP_EARLY_INIT( _ZNK7QPixmap19createHeuristicMaskEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QPixmap19createHeuristicMaskEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QBitmap scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QPixmap19createHeuristicMaskEb, ( scorep_libwrap_arg_this, clipTight ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QPixmap19createHeuristicMaskEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QPixmap19createMaskFromColorERK6QColorN2Qt8MaskModeE
QBitmap
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QPixmap19createMaskFromColorERK6QColorN2Qt8MaskModeE )( void *scorep_libwrap_arg_this, const QColor & maskColor, Qt::MaskMode mode )
{
    LIBWRAP_EARLY_INIT( _ZNK7QPixmap19createMaskFromColorERK6QColorN2Qt8MaskModeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QPixmap19createMaskFromColorERK6QColorN2Qt8MaskModeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QBitmap scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QPixmap19createMaskFromColorERK6QColorN2Qt8MaskModeE, ( scorep_libwrap_arg_this, maskColor, mode ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QPixmap19createMaskFromColorERK6QColorN2Qt8MaskModeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QPixmap10grabWindowEyiiii
QPixmap
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QPixmap10grabWindowEyiiii )( WId scorep_libwrap_arg_1, int x, int y, int w, int h )
{
    LIBWRAP_EARLY_INIT( _ZN7QPixmap10grabWindowEyiiii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QPixmap10grabWindowEyiiii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPixmap scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN7QPixmap10grabWindowEyiiii, ( scorep_libwrap_arg_1, x, y, w, h ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QPixmap10grabWindowEyiiii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QPixmap10grabWidgetEP7QObjectRK5QRect
QPixmap
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QPixmap10grabWidgetEP7QObjectRK5QRect )( QObject * widget, const QRect & rect )
{
    LIBWRAP_EARLY_INIT( _ZN7QPixmap10grabWidgetEP7QObjectRK5QRect );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QPixmap10grabWidgetEP7QObjectRK5QRect );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPixmap scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN7QPixmap10grabWidgetEP7QObjectRK5QRect, ( widget, rect ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QPixmap10grabWidgetEP7QObjectRK5QRect );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QPixmap6scaledERK5QSizeN2Qt15AspectRatioModeENS3_18TransformationModeE
QPixmap
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QPixmap6scaledERK5QSizeN2Qt15AspectRatioModeENS3_18TransformationModeE )( void *scorep_libwrap_arg_this, const QSize & s, Qt::AspectRatioMode aspectMode, Qt::TransformationMode mode )
{
    LIBWRAP_EARLY_INIT( _ZNK7QPixmap6scaledERK5QSizeN2Qt15AspectRatioModeENS3_18TransformationModeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QPixmap6scaledERK5QSizeN2Qt15AspectRatioModeENS3_18TransformationModeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPixmap scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QPixmap6scaledERK5QSizeN2Qt15AspectRatioModeENS3_18TransformationModeE, ( scorep_libwrap_arg_this, s, aspectMode, mode ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QPixmap6scaledERK5QSizeN2Qt15AspectRatioModeENS3_18TransformationModeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QPixmap13scaledToWidthEiN2Qt18TransformationModeE
QPixmap
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QPixmap13scaledToWidthEiN2Qt18TransformationModeE )( void *scorep_libwrap_arg_this, int w, Qt::TransformationMode mode )
{
    LIBWRAP_EARLY_INIT( _ZNK7QPixmap13scaledToWidthEiN2Qt18TransformationModeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QPixmap13scaledToWidthEiN2Qt18TransformationModeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPixmap scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QPixmap13scaledToWidthEiN2Qt18TransformationModeE, ( scorep_libwrap_arg_this, w, mode ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QPixmap13scaledToWidthEiN2Qt18TransformationModeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QPixmap14scaledToHeightEiN2Qt18TransformationModeE
QPixmap
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QPixmap14scaledToHeightEiN2Qt18TransformationModeE )( void *scorep_libwrap_arg_this, int h, Qt::TransformationMode mode )
{
    LIBWRAP_EARLY_INIT( _ZNK7QPixmap14scaledToHeightEiN2Qt18TransformationModeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QPixmap14scaledToHeightEiN2Qt18TransformationModeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPixmap scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QPixmap14scaledToHeightEiN2Qt18TransformationModeE, ( scorep_libwrap_arg_this, h, mode ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QPixmap14scaledToHeightEiN2Qt18TransformationModeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QPixmap11transformedERK7QMatrixN2Qt18TransformationModeE
QPixmap
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QPixmap11transformedERK7QMatrixN2Qt18TransformationModeE )( void *scorep_libwrap_arg_this, const QMatrix & scorep_libwrap_arg_1, Qt::TransformationMode mode )
{
    LIBWRAP_EARLY_INIT( _ZNK7QPixmap11transformedERK7QMatrixN2Qt18TransformationModeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QPixmap11transformedERK7QMatrixN2Qt18TransformationModeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPixmap scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QPixmap11transformedERK7QMatrixN2Qt18TransformationModeE, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, mode ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QPixmap11transformedERK7QMatrixN2Qt18TransformationModeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QPixmap10trueMatrixERK7QMatrixii
QMatrix
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QPixmap10trueMatrixERK7QMatrixii )( const QMatrix & m, int w, int h )
{
    LIBWRAP_EARLY_INIT( _ZN7QPixmap10trueMatrixERK7QMatrixii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QPixmap10trueMatrixERK7QMatrixii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QMatrix scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN7QPixmap10trueMatrixERK7QMatrixii, ( m, w, h ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QPixmap10trueMatrixERK7QMatrixii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QPixmap11transformedERK10QTransformN2Qt18TransformationModeE
QPixmap
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QPixmap11transformedERK10QTransformN2Qt18TransformationModeE )( void *scorep_libwrap_arg_this, const QTransform & scorep_libwrap_arg_1, Qt::TransformationMode mode )
{
    LIBWRAP_EARLY_INIT( _ZNK7QPixmap11transformedERK10QTransformN2Qt18TransformationModeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QPixmap11transformedERK10QTransformN2Qt18TransformationModeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPixmap scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QPixmap11transformedERK10QTransformN2Qt18TransformationModeE, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, mode ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QPixmap11transformedERK10QTransformN2Qt18TransformationModeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QPixmap10trueMatrixERK10QTransformii
QTransform
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QPixmap10trueMatrixERK10QTransformii )( const QTransform & m, int w, int h )
{
    LIBWRAP_EARLY_INIT( _ZN7QPixmap10trueMatrixERK10QTransformii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QPixmap10trueMatrixERK10QTransformii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTransform scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN7QPixmap10trueMatrixERK10QTransformii, ( m, w, h ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QPixmap10trueMatrixERK10QTransformii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QPixmap7toImageEv
QImage
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QPixmap7toImageEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QPixmap7toImageEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QPixmap7toImageEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QImage scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QPixmap7toImageEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QPixmap7toImageEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QPixmap9fromImageERK6QImage6QFlagsIN2Qt19ImageConversionFlagEE
QPixmap
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QPixmap9fromImageERK6QImage6QFlagsIN2Qt19ImageConversionFlagEE )( const QImage & image, Qt::ImageConversionFlags flags )
{
    LIBWRAP_EARLY_INIT( _ZN7QPixmap9fromImageERK6QImage6QFlagsIN2Qt19ImageConversionFlagEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QPixmap9fromImageERK6QImage6QFlagsIN2Qt19ImageConversionFlagEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPixmap scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN7QPixmap9fromImageERK6QImage6QFlagsIN2Qt19ImageConversionFlagEE, ( image, flags ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QPixmap9fromImageERK6QImage6QFlagsIN2Qt19ImageConversionFlagEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QPixmap15fromImageReaderEP12QImageReader6QFlagsIN2Qt19ImageConversionFlagEE
QPixmap
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QPixmap15fromImageReaderEP12QImageReader6QFlagsIN2Qt19ImageConversionFlagEE )( QImageReader * imageReader, Qt::ImageConversionFlags flags )
{
    LIBWRAP_EARLY_INIT( _ZN7QPixmap15fromImageReaderEP12QImageReader6QFlagsIN2Qt19ImageConversionFlagEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QPixmap15fromImageReaderEP12QImageReader6QFlagsIN2Qt19ImageConversionFlagEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPixmap scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN7QPixmap15fromImageReaderEP12QImageReader6QFlagsIN2Qt19ImageConversionFlagEE, ( imageReader, flags ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QPixmap15fromImageReaderEP12QImageReader6QFlagsIN2Qt19ImageConversionFlagEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QPixmap4loadERK7QStringPKc6QFlagsIN2Qt19ImageConversionFlagEE
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QPixmap4loadERK7QStringPKc6QFlagsIN2Qt19ImageConversionFlagEE )( void *scorep_libwrap_arg_this, const QString & fileName, const char * format, Qt::ImageConversionFlags flags )
{
    LIBWRAP_EARLY_INIT( _ZN7QPixmap4loadERK7QStringPKc6QFlagsIN2Qt19ImageConversionFlagEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QPixmap4loadERK7QStringPKc6QFlagsIN2Qt19ImageConversionFlagEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN7QPixmap4loadERK7QStringPKc6QFlagsIN2Qt19ImageConversionFlagEE, ( scorep_libwrap_arg_this, fileName, format, flags ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QPixmap4loadERK7QStringPKc6QFlagsIN2Qt19ImageConversionFlagEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QPixmap12loadFromDataEPKhjPKc6QFlagsIN2Qt19ImageConversionFlagEE
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QPixmap12loadFromDataEPKhjPKc6QFlagsIN2Qt19ImageConversionFlagEE )( void *scorep_libwrap_arg_this, const uchar * buf, uint len, const char * format, Qt::ImageConversionFlags flags )
{
    LIBWRAP_EARLY_INIT( _ZN7QPixmap12loadFromDataEPKhjPKc6QFlagsIN2Qt19ImageConversionFlagEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QPixmap12loadFromDataEPKhjPKc6QFlagsIN2Qt19ImageConversionFlagEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN7QPixmap12loadFromDataEPKhjPKc6QFlagsIN2Qt19ImageConversionFlagEE, ( scorep_libwrap_arg_this, buf, len, format, flags ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QPixmap12loadFromDataEPKhjPKc6QFlagsIN2Qt19ImageConversionFlagEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QPixmap4saveERK7QStringPKci
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QPixmap4saveERK7QStringPKci )( void *scorep_libwrap_arg_this, const QString & fileName, const char * format, int quality )
{
    LIBWRAP_EARLY_INIT( _ZNK7QPixmap4saveERK7QStringPKci );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QPixmap4saveERK7QStringPKci );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QPixmap4saveERK7QStringPKci, ( scorep_libwrap_arg_this, fileName, format, quality ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QPixmap4saveERK7QStringPKci );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QPixmap4saveEP9QIODevicePKci
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QPixmap4saveEP9QIODevicePKci )( void *scorep_libwrap_arg_this, QIODevice * device, const char * format, int quality )
{
    LIBWRAP_EARLY_INIT( _ZNK7QPixmap4saveEP9QIODevicePKci );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QPixmap4saveEP9QIODevicePKci );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QPixmap4saveEP9QIODevicePKci, ( scorep_libwrap_arg_this, device, format, quality ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QPixmap4saveEP9QIODevicePKci );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QPixmap16convertFromImageERK6QImage6QFlagsIN2Qt19ImageConversionFlagEE
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QPixmap16convertFromImageERK6QImage6QFlagsIN2Qt19ImageConversionFlagEE )( void *scorep_libwrap_arg_this, const QImage & img, Qt::ImageConversionFlags flags )
{
    LIBWRAP_EARLY_INIT( _ZN7QPixmap16convertFromImageERK6QImage6QFlagsIN2Qt19ImageConversionFlagEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QPixmap16convertFromImageERK6QImage6QFlagsIN2Qt19ImageConversionFlagEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN7QPixmap16convertFromImageERK6QImage6QFlagsIN2Qt19ImageConversionFlagEE, ( scorep_libwrap_arg_this, img, flags ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QPixmap16convertFromImageERK6QImage6QFlagsIN2Qt19ImageConversionFlagEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QPixmap4copyERK5QRect
QPixmap
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QPixmap4copyERK5QRect )( void *scorep_libwrap_arg_this, const QRect & rect )
{
    LIBWRAP_EARLY_INIT( _ZNK7QPixmap4copyERK5QRect );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QPixmap4copyERK5QRect );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPixmap scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QPixmap4copyERK5QRect, ( scorep_libwrap_arg_this, rect ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QPixmap4copyERK5QRect );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QPixmap6scrollEiiRK5QRectP7QRegion
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QPixmap6scrollEiiRK5QRectP7QRegion )( void *scorep_libwrap_arg_this, int dx, int dy, const QRect & rect, QRegion * exposed )
{
    LIBWRAP_EARLY_INIT( _ZN7QPixmap6scrollEiiRK5QRectP7QRegion );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QPixmap6scrollEiiRK5QRectP7QRegion );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QPixmap6scrollEiiRK5QRectP7QRegion, ( scorep_libwrap_arg_this, dx, dy, rect, exposed ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QPixmap6scrollEiiRK5QRectP7QRegion );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK7QPixmap8cacheKeyEv
qint64
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QPixmap8cacheKeyEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QPixmap8cacheKeyEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QPixmap8cacheKeyEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qint64 scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QPixmap8cacheKeyEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QPixmap8cacheKeyEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QPixmap10isDetachedEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QPixmap10isDetachedEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QPixmap10isDetachedEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QPixmap10isDetachedEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QPixmap10isDetachedEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QPixmap10isDetachedEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QPixmap6detachEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QPixmap6detachEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN7QPixmap6detachEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QPixmap6detachEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QPixmap6detachEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QPixmap6detachEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK7QPixmap9isQBitmapEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QPixmap9isQBitmapEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QPixmap9isQBitmapEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QPixmap9isQBitmapEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QPixmap9isQBitmapEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QPixmap9isQBitmapEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QPixmap11paintEngineEv
QPaintEngine *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QPixmap11paintEngineEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QPixmap11paintEngineEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QPixmap11paintEngineEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPaintEngine * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QPixmap11paintEngineEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QPixmap11paintEngineEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZrsR11QDataStreamR7QPixmap
QDataStream &
SCOREP_LIBWRAP_FUNC_NAME( _ZrsR11QDataStreamR7QPixmap )( QDataStream & scorep_libwrap_arg_1, QPixmap & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _ZrsR11QDataStreamR7QPixmap );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZrsR11QDataStreamR7QPixmap );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDataStream & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZrsR11QDataStreamR7QPixmap, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZrsR11QDataStreamR7QPixmap );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QPixmap6handleEv
QPlatformPixmap *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QPixmap6handleEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QPixmap6handleEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QPixmap6handleEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPlatformPixmap * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QPixmap6handleEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QPixmap6handleEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _Zls6QDebugRK7QPixmap
QDebug
SCOREP_LIBWRAP_FUNC_NAME( _Zls6QDebugRK7QPixmap )( QDebug scorep_libwrap_arg_1, const QPixmap & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _Zls6QDebugRK7QPixmap );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _Zls6QDebugRK7QPixmap );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDebug scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _Zls6QDebugRK7QPixmap, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _Zls6QDebugRK7QPixmap );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QBitmapC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QBitmapC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN7QBitmapC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QBitmapC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QBitmapC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QBitmapC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QBitmapC1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QBitmapC1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN7QBitmapC1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QBitmapC1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QBitmapC1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QBitmapC1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QBitmapC2ERK7QPixmap
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QBitmapC2ERK7QPixmap )( void *scorep_libwrap_arg_this, const QPixmap & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN7QBitmapC2ERK7QPixmap );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QBitmapC2ERK7QPixmap );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QBitmapC2ERK7QPixmap, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QBitmapC2ERK7QPixmap );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QBitmapC1ERK7QPixmap
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QBitmapC1ERK7QPixmap )( void *scorep_libwrap_arg_this, const QPixmap & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN7QBitmapC1ERK7QPixmap );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QBitmapC1ERK7QPixmap );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QBitmapC1ERK7QPixmap, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QBitmapC1ERK7QPixmap );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QBitmapC2Eii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QBitmapC2Eii )( void *scorep_libwrap_arg_this, int w, int h )
{
    LIBWRAP_EARLY_INIT( _ZN7QBitmapC2Eii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QBitmapC2Eii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QBitmapC2Eii, ( scorep_libwrap_arg_this, w, h ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QBitmapC2Eii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QBitmapC1Eii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QBitmapC1Eii )( void *scorep_libwrap_arg_this, int w, int h )
{
    LIBWRAP_EARLY_INIT( _ZN7QBitmapC1Eii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QBitmapC1Eii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QBitmapC1Eii, ( scorep_libwrap_arg_this, w, h ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QBitmapC1Eii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QBitmapC2ERK5QSize
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QBitmapC2ERK5QSize )( void *scorep_libwrap_arg_this, const QSize & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN7QBitmapC2ERK5QSize );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QBitmapC2ERK5QSize );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QBitmapC2ERK5QSize, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QBitmapC2ERK5QSize );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QBitmapC1ERK5QSize
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QBitmapC1ERK5QSize )( void *scorep_libwrap_arg_this, const QSize & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN7QBitmapC1ERK5QSize );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QBitmapC1ERK5QSize );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QBitmapC1ERK5QSize, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QBitmapC1ERK5QSize );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QBitmapC2ERK7QStringPKc
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QBitmapC2ERK7QStringPKc )( void *scorep_libwrap_arg_this, const QString & fileName, const char * format )
{
    LIBWRAP_EARLY_INIT( _ZN7QBitmapC2ERK7QStringPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QBitmapC2ERK7QStringPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QBitmapC2ERK7QStringPKc, ( scorep_libwrap_arg_this, fileName, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QBitmapC2ERK7QStringPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QBitmapC1ERK7QStringPKc
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QBitmapC1ERK7QStringPKc )( void *scorep_libwrap_arg_this, const QString & fileName, const char * format )
{
    LIBWRAP_EARLY_INIT( _ZN7QBitmapC1ERK7QStringPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QBitmapC1ERK7QStringPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QBitmapC1ERK7QStringPKc, ( scorep_libwrap_arg_this, fileName, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QBitmapC1ERK7QStringPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QBitmapaSERK7QPixmap
QBitmap &
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QBitmapaSERK7QPixmap )( void *scorep_libwrap_arg_this, const QPixmap & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN7QBitmapaSERK7QPixmap );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QBitmapaSERK7QPixmap );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QBitmap & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN7QBitmapaSERK7QPixmap, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QBitmapaSERK7QPixmap );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QBitmap9fromImageERK6QImage6QFlagsIN2Qt19ImageConversionFlagEE
QBitmap
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QBitmap9fromImageERK6QImage6QFlagsIN2Qt19ImageConversionFlagEE )( const QImage & image, Qt::ImageConversionFlags flags )
{
    LIBWRAP_EARLY_INIT( _ZN7QBitmap9fromImageERK6QImage6QFlagsIN2Qt19ImageConversionFlagEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QBitmap9fromImageERK6QImage6QFlagsIN2Qt19ImageConversionFlagEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QBitmap scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN7QBitmap9fromImageERK6QImage6QFlagsIN2Qt19ImageConversionFlagEE, ( image, flags ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QBitmap9fromImageERK6QImage6QFlagsIN2Qt19ImageConversionFlagEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QBitmap8fromDataERK5QSizePKhN6QImage6FormatE
QBitmap
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QBitmap8fromDataERK5QSizePKhN6QImage6FormatE )( const QSize & size, const uchar * bits, QImage::Format monoFormat )
{
    LIBWRAP_EARLY_INIT( _ZN7QBitmap8fromDataERK5QSizePKhN6QImage6FormatE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QBitmap8fromDataERK5QSizePKhN6QImage6FormatE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QBitmap scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN7QBitmap8fromDataERK5QSizePKhN6QImage6FormatE, ( size, bits, monoFormat ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QBitmap8fromDataERK5QSizePKhN6QImage6FormatE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QBitmap11transformedERK7QMatrix
QBitmap
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QBitmap11transformedERK7QMatrix )( void *scorep_libwrap_arg_this, const QMatrix & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZNK7QBitmap11transformedERK7QMatrix );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QBitmap11transformedERK7QMatrix );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QBitmap scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QBitmap11transformedERK7QMatrix, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QBitmap11transformedERK7QMatrix );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QBitmap11transformedERK10QTransform
QBitmap
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QBitmap11transformedERK10QTransform )( void *scorep_libwrap_arg_this, const QTransform & matrix )
{
    LIBWRAP_EARLY_INIT( _ZNK7QBitmap11transformedERK10QTransform );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QBitmap11transformedERK10QTransform );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QBitmap scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QBitmap11transformedERK10QTransform, ( scorep_libwrap_arg_this, matrix ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QBitmap11transformedERK10QTransform );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN5QIconC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QIconC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN5QIconC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QIconC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QIconC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QIconC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN5QIconC1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QIconC1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN5QIconC1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QIconC1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QIconC1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QIconC1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN5QIconC2ERK7QPixmap
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QIconC2ERK7QPixmap )( void *scorep_libwrap_arg_this, const QPixmap & pixmap )
{
    LIBWRAP_EARLY_INIT( _ZN5QIconC2ERK7QPixmap );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QIconC2ERK7QPixmap );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QIconC2ERK7QPixmap, ( scorep_libwrap_arg_this, pixmap ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QIconC2ERK7QPixmap );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN5QIconC1ERK7QPixmap
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QIconC1ERK7QPixmap )( void *scorep_libwrap_arg_this, const QPixmap & pixmap )
{
    LIBWRAP_EARLY_INIT( _ZN5QIconC1ERK7QPixmap );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QIconC1ERK7QPixmap );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QIconC1ERK7QPixmap, ( scorep_libwrap_arg_this, pixmap ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QIconC1ERK7QPixmap );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN5QIconC2ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QIconC2ERKS_ )( void *scorep_libwrap_arg_this, const QIcon & other )
{
    LIBWRAP_EARLY_INIT( _ZN5QIconC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QIconC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QIconC2ERKS_, ( scorep_libwrap_arg_this, other ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QIconC2ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN5QIconC1ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QIconC1ERKS_ )( void *scorep_libwrap_arg_this, const QIcon & other )
{
    LIBWRAP_EARLY_INIT( _ZN5QIconC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QIconC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QIconC1ERKS_, ( scorep_libwrap_arg_this, other ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QIconC1ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN5QIconC2EP11QIconEngine
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QIconC2EP11QIconEngine )( void *scorep_libwrap_arg_this, QIconEngine * engine )
{
    LIBWRAP_EARLY_INIT( _ZN5QIconC2EP11QIconEngine );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QIconC2EP11QIconEngine );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QIconC2EP11QIconEngine, ( scorep_libwrap_arg_this, engine ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QIconC2EP11QIconEngine );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN5QIconC1EP11QIconEngine
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QIconC1EP11QIconEngine )( void *scorep_libwrap_arg_this, QIconEngine * engine )
{
    LIBWRAP_EARLY_INIT( _ZN5QIconC1EP11QIconEngine );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QIconC1EP11QIconEngine );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QIconC1EP11QIconEngine, ( scorep_libwrap_arg_this, engine ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QIconC1EP11QIconEngine );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN5QIconD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QIconD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN5QIconD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QIconD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QIconD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QIconD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN5QIconD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QIconD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN5QIconD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QIconD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QIconD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QIconD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN5QIconaSERKS_
QIcon &
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QIconaSERKS_ )( void *scorep_libwrap_arg_this, const QIcon & other )
{
    LIBWRAP_EARLY_INIT( _ZN5QIconaSERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QIconaSERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QIcon & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN5QIconaSERKS_, ( scorep_libwrap_arg_this, other ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QIconaSERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK5QIcon6pixmapERK5QSizeNS_4ModeENS_5StateE
QPixmap
SCOREP_LIBWRAP_FUNC_NAME( _ZNK5QIcon6pixmapERK5QSizeNS_4ModeENS_5StateE )( void *scorep_libwrap_arg_this, const QSize & size, QIcon::Mode mode, QIcon::State state )
{
    LIBWRAP_EARLY_INIT( _ZNK5QIcon6pixmapERK5QSizeNS_4ModeENS_5StateE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK5QIcon6pixmapERK5QSizeNS_4ModeENS_5StateE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPixmap scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK5QIcon6pixmapERK5QSizeNS_4ModeENS_5StateE, ( scorep_libwrap_arg_this, size, mode, state ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK5QIcon6pixmapERK5QSizeNS_4ModeENS_5StateE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK5QIcon6pixmapEP7QWindowRK5QSizeNS_4ModeENS_5StateE
QPixmap
SCOREP_LIBWRAP_FUNC_NAME( _ZNK5QIcon6pixmapEP7QWindowRK5QSizeNS_4ModeENS_5StateE )( void *scorep_libwrap_arg_this, QWindow * window, const QSize & size, QIcon::Mode mode, QIcon::State state )
{
    LIBWRAP_EARLY_INIT( _ZNK5QIcon6pixmapEP7QWindowRK5QSizeNS_4ModeENS_5StateE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK5QIcon6pixmapEP7QWindowRK5QSizeNS_4ModeENS_5StateE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPixmap scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK5QIcon6pixmapEP7QWindowRK5QSizeNS_4ModeENS_5StateE, ( scorep_libwrap_arg_this, window, size, mode, state ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK5QIcon6pixmapEP7QWindowRK5QSizeNS_4ModeENS_5StateE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK5QIcon10actualSizeERK5QSizeNS_4ModeENS_5StateE
QSize
SCOREP_LIBWRAP_FUNC_NAME( _ZNK5QIcon10actualSizeERK5QSizeNS_4ModeENS_5StateE )( void *scorep_libwrap_arg_this, const QSize & size, QIcon::Mode mode, QIcon::State state )
{
    LIBWRAP_EARLY_INIT( _ZNK5QIcon10actualSizeERK5QSizeNS_4ModeENS_5StateE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK5QIcon10actualSizeERK5QSizeNS_4ModeENS_5StateE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QSize scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK5QIcon10actualSizeERK5QSizeNS_4ModeENS_5StateE, ( scorep_libwrap_arg_this, size, mode, state ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK5QIcon10actualSizeERK5QSizeNS_4ModeENS_5StateE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK5QIcon10actualSizeEP7QWindowRK5QSizeNS_4ModeENS_5StateE
QSize
SCOREP_LIBWRAP_FUNC_NAME( _ZNK5QIcon10actualSizeEP7QWindowRK5QSizeNS_4ModeENS_5StateE )( void *scorep_libwrap_arg_this, QWindow * window, const QSize & size, QIcon::Mode mode, QIcon::State state )
{
    LIBWRAP_EARLY_INIT( _ZNK5QIcon10actualSizeEP7QWindowRK5QSizeNS_4ModeENS_5StateE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK5QIcon10actualSizeEP7QWindowRK5QSizeNS_4ModeENS_5StateE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QSize scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK5QIcon10actualSizeEP7QWindowRK5QSizeNS_4ModeENS_5StateE, ( scorep_libwrap_arg_this, window, size, mode, state ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK5QIcon10actualSizeEP7QWindowRK5QSizeNS_4ModeENS_5StateE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK5QIcon4nameEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK5QIcon4nameEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK5QIcon4nameEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK5QIcon4nameEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK5QIcon4nameEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK5QIcon4nameEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK5QIcon5paintEP8QPainterRK5QRect6QFlagsIN2Qt13AlignmentFlagEENS_4ModeENS_5StateE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZNK5QIcon5paintEP8QPainterRK5QRect6QFlagsIN2Qt13AlignmentFlagEENS_4ModeENS_5StateE )( void *scorep_libwrap_arg_this, QPainter * painter, const QRect & rect, Qt::Alignment alignment, QIcon::Mode mode, QIcon::State state )
{
    LIBWRAP_EARLY_INIT( _ZNK5QIcon5paintEP8QPainterRK5QRect6QFlagsIN2Qt13AlignmentFlagEENS_4ModeENS_5StateE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK5QIcon5paintEP8QPainterRK5QRect6QFlagsIN2Qt13AlignmentFlagEENS_4ModeENS_5StateE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZNK5QIcon5paintEP8QPainterRK5QRect6QFlagsIN2Qt13AlignmentFlagEENS_4ModeENS_5StateE, ( scorep_libwrap_arg_this, painter, rect, alignment, mode, state ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK5QIcon5paintEP8QPainterRK5QRect6QFlagsIN2Qt13AlignmentFlagEENS_4ModeENS_5StateE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK5QIcon6isNullEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK5QIcon6isNullEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK5QIcon6isNullEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK5QIcon6isNullEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK5QIcon6isNullEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK5QIcon6isNullEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK5QIcon10isDetachedEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK5QIcon10isDetachedEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK5QIcon10isDetachedEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK5QIcon10isDetachedEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK5QIcon10isDetachedEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK5QIcon10isDetachedEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN5QIcon6detachEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QIcon6detachEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN5QIcon6detachEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QIcon6detachEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QIcon6detachEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QIcon6detachEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK5QIcon8cacheKeyEv
qint64
SCOREP_LIBWRAP_FUNC_NAME( _ZNK5QIcon8cacheKeyEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK5QIcon8cacheKeyEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK5QIcon8cacheKeyEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qint64 scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK5QIcon8cacheKeyEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK5QIcon8cacheKeyEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN5QIcon9addPixmapERK7QPixmapNS_4ModeENS_5StateE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QIcon9addPixmapERK7QPixmapNS_4ModeENS_5StateE )( void *scorep_libwrap_arg_this, const QPixmap & pixmap, QIcon::Mode mode, QIcon::State state )
{
    LIBWRAP_EARLY_INIT( _ZN5QIcon9addPixmapERK7QPixmapNS_4ModeENS_5StateE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QIcon9addPixmapERK7QPixmapNS_4ModeENS_5StateE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QIcon9addPixmapERK7QPixmapNS_4ModeENS_5StateE, ( scorep_libwrap_arg_this, pixmap, mode, state ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QIcon9addPixmapERK7QPixmapNS_4ModeENS_5StateE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN5QIcon7addFileERK7QStringRK5QSizeNS_4ModeENS_5StateE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QIcon7addFileERK7QStringRK5QSizeNS_4ModeENS_5StateE )( void *scorep_libwrap_arg_this, const QString & fileName, const QSize & size, QIcon::Mode mode, QIcon::State state )
{
    LIBWRAP_EARLY_INIT( _ZN5QIcon7addFileERK7QStringRK5QSizeNS_4ModeENS_5StateE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QIcon7addFileERK7QStringRK5QSizeNS_4ModeENS_5StateE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QIcon7addFileERK7QStringRK5QSizeNS_4ModeENS_5StateE, ( scorep_libwrap_arg_this, fileName, size, mode, state ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QIcon7addFileERK7QStringRK5QSizeNS_4ModeENS_5StateE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK5QIcon14availableSizesENS_4ModeENS_5StateE
QList<QSize>
SCOREP_LIBWRAP_FUNC_NAME( _ZNK5QIcon14availableSizesENS_4ModeENS_5StateE )( void *scorep_libwrap_arg_this, QIcon::Mode mode, QIcon::State state )
{
    LIBWRAP_EARLY_INIT( _ZNK5QIcon14availableSizesENS_4ModeENS_5StateE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK5QIcon14availableSizesENS_4ModeENS_5StateE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QList<QSize> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK5QIcon14availableSizesENS_4ModeENS_5StateE, ( scorep_libwrap_arg_this, mode, state ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK5QIcon14availableSizesENS_4ModeENS_5StateE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN5QIcon9setIsMaskEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QIcon9setIsMaskEb )( void *scorep_libwrap_arg_this, bool isMask )
{
    LIBWRAP_EARLY_INIT( _ZN5QIcon9setIsMaskEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QIcon9setIsMaskEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QIcon9setIsMaskEb, ( scorep_libwrap_arg_this, isMask ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QIcon9setIsMaskEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK5QIcon6isMaskEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK5QIcon6isMaskEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK5QIcon6isMaskEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK5QIcon6isMaskEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK5QIcon6isMaskEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK5QIcon6isMaskEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN5QIcon9fromThemeERK7QString
QIcon
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QIcon9fromThemeERK7QString )( const QString & name )
{
    LIBWRAP_EARLY_INIT( _ZN5QIcon9fromThemeERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QIcon9fromThemeERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QIcon scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN5QIcon9fromThemeERK7QString, ( name ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QIcon9fromThemeERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN5QIcon9fromThemeERK7QStringRKS_
QIcon
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QIcon9fromThemeERK7QStringRKS_ )( const QString & name, const QIcon & fallback )
{
    LIBWRAP_EARLY_INIT( _ZN5QIcon9fromThemeERK7QStringRKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QIcon9fromThemeERK7QStringRKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QIcon scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN5QIcon9fromThemeERK7QStringRKS_, ( name, fallback ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QIcon9fromThemeERK7QStringRKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN5QIcon12hasThemeIconERK7QString
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QIcon12hasThemeIconERK7QString )( const QString & name )
{
    LIBWRAP_EARLY_INIT( _ZN5QIcon12hasThemeIconERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QIcon12hasThemeIconERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN5QIcon12hasThemeIconERK7QString, ( name ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QIcon12hasThemeIconERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN5QIcon16themeSearchPathsEv
QStringList
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QIcon16themeSearchPathsEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN5QIcon16themeSearchPathsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QIcon16themeSearchPathsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QStringList scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN5QIcon16themeSearchPathsEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QIcon16themeSearchPathsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN5QIcon19setThemeSearchPathsERK11QStringList
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QIcon19setThemeSearchPathsERK11QStringList )( const QStringList & searchpath )
{
    LIBWRAP_EARLY_INIT( _ZN5QIcon19setThemeSearchPathsERK11QStringList );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QIcon19setThemeSearchPathsERK11QStringList );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QIcon19setThemeSearchPathsERK11QStringList, ( searchpath ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QIcon19setThemeSearchPathsERK11QStringList );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN5QIcon9themeNameEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QIcon9themeNameEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN5QIcon9themeNameEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QIcon9themeNameEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN5QIcon9themeNameEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QIcon9themeNameEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN5QIcon12setThemeNameERK7QString
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QIcon12setThemeNameERK7QString )( const QString & path )
{
    LIBWRAP_EARLY_INIT( _ZN5QIcon12setThemeNameERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QIcon12setThemeNameERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QIcon12setThemeNameERK7QString, ( path ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QIcon12setThemeNameERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZlsR11QDataStreamRK5QIcon
QDataStream &
SCOREP_LIBWRAP_FUNC_NAME( _ZlsR11QDataStreamRK5QIcon )( QDataStream & scorep_libwrap_arg_1, const QIcon & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _ZlsR11QDataStreamRK5QIcon );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZlsR11QDataStreamRK5QIcon );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDataStream & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZlsR11QDataStreamRK5QIcon, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZlsR11QDataStreamRK5QIcon );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZrsR11QDataStreamR5QIcon
QDataStream &
SCOREP_LIBWRAP_FUNC_NAME( _ZrsR11QDataStreamR5QIcon )( QDataStream & scorep_libwrap_arg_1, QIcon & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _ZrsR11QDataStreamR5QIcon );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZrsR11QDataStreamR5QIcon );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDataStream & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZrsR11QDataStreamR5QIcon, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZrsR11QDataStreamR5QIcon );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _Zls6QDebugRK5QIcon
QDebug
SCOREP_LIBWRAP_FUNC_NAME( _Zls6QDebugRK5QIcon )( QDebug dbg, const QIcon & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _Zls6QDebugRK5QIcon );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _Zls6QDebugRK5QIcon );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDebug scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _Zls6QDebugRK5QIcon, ( dbg, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _Zls6QDebugRK5QIcon );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _Z15qt_findAtNxFileRK7QStringdPd
QString
SCOREP_LIBWRAP_FUNC_NAME( _Z15qt_findAtNxFileRK7QStringdPd )( const QString & baseFileName, qreal targetDevicePixelRatio, qreal * sourceDevicePixelRatio )
{
    LIBWRAP_EARLY_INIT( _Z15qt_findAtNxFileRK7QStringdPd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _Z15qt_findAtNxFileRK7QStringdPd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _Z15qt_findAtNxFileRK7QStringdPd, ( baseFileName, targetDevicePixelRatio, sourceDevicePixelRatio ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _Z15qt_findAtNxFileRK7QStringdPd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QIconEngineC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QIconEngineC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QIconEngineC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QIconEngineC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QIconEngineC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QIconEngineC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QIconEngineD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QIconEngineD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QIconEngineD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QIconEngineD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QIconEngineD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QIconEngineD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QIconEngineD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QIconEngineD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QIconEngineD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QIconEngineD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QIconEngineD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QIconEngineD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QIconEngineD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QIconEngineD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QIconEngineD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QIconEngineD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QIconEngineD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QIconEngineD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QIconEngine10actualSizeERK5QSizeN5QIcon4ModeENS3_5StateE
QSize
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QIconEngine10actualSizeERK5QSizeN5QIcon4ModeENS3_5StateE )( void *scorep_libwrap_arg_this, const QSize & size, QIcon::Mode mode, QIcon::State state )
{
    LIBWRAP_EARLY_INIT( _ZN11QIconEngine10actualSizeERK5QSizeN5QIcon4ModeENS3_5StateE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QIconEngine10actualSizeERK5QSizeN5QIcon4ModeENS3_5StateE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QSize scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN11QIconEngine10actualSizeERK5QSizeN5QIcon4ModeENS3_5StateE, ( scorep_libwrap_arg_this, size, mode, state ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QIconEngine10actualSizeERK5QSizeN5QIcon4ModeENS3_5StateE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QIconEngine6pixmapERK5QSizeN5QIcon4ModeENS3_5StateE
QPixmap
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QIconEngine6pixmapERK5QSizeN5QIcon4ModeENS3_5StateE )( void *scorep_libwrap_arg_this, const QSize & size, QIcon::Mode mode, QIcon::State state )
{
    LIBWRAP_EARLY_INIT( _ZN11QIconEngine6pixmapERK5QSizeN5QIcon4ModeENS3_5StateE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QIconEngine6pixmapERK5QSizeN5QIcon4ModeENS3_5StateE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPixmap scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN11QIconEngine6pixmapERK5QSizeN5QIcon4ModeENS3_5StateE, ( scorep_libwrap_arg_this, size, mode, state ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QIconEngine6pixmapERK5QSizeN5QIcon4ModeENS3_5StateE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QIconEngine9addPixmapERK7QPixmapN5QIcon4ModeENS3_5StateE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QIconEngine9addPixmapERK7QPixmapN5QIcon4ModeENS3_5StateE )( void *scorep_libwrap_arg_this, const QPixmap & pixmap, QIcon::Mode mode, QIcon::State state )
{
    LIBWRAP_EARLY_INIT( _ZN11QIconEngine9addPixmapERK7QPixmapN5QIcon4ModeENS3_5StateE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QIconEngine9addPixmapERK7QPixmapN5QIcon4ModeENS3_5StateE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QIconEngine9addPixmapERK7QPixmapN5QIcon4ModeENS3_5StateE, ( scorep_libwrap_arg_this, pixmap, mode, state ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QIconEngine9addPixmapERK7QPixmapN5QIcon4ModeENS3_5StateE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QIconEngine7addFileERK7QStringRK5QSizeN5QIcon4ModeENS6_5StateE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QIconEngine7addFileERK7QStringRK5QSizeN5QIcon4ModeENS6_5StateE )( void *scorep_libwrap_arg_this, const QString & fileName, const QSize & size, QIcon::Mode mode, QIcon::State state )
{
    LIBWRAP_EARLY_INIT( _ZN11QIconEngine7addFileERK7QStringRK5QSizeN5QIcon4ModeENS6_5StateE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QIconEngine7addFileERK7QStringRK5QSizeN5QIcon4ModeENS6_5StateE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QIconEngine7addFileERK7QStringRK5QSizeN5QIcon4ModeENS6_5StateE, ( scorep_libwrap_arg_this, fileName, size, mode, state ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QIconEngine7addFileERK7QStringRK5QSizeN5QIcon4ModeENS6_5StateE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK11QIconEngine3keyEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QIconEngine3keyEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QIconEngine3keyEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QIconEngine3keyEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QIconEngine3keyEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QIconEngine3keyEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QIconEngine4readER11QDataStream
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QIconEngine4readER11QDataStream )( void *scorep_libwrap_arg_this, QDataStream & in )
{
    LIBWRAP_EARLY_INIT( _ZN11QIconEngine4readER11QDataStream );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QIconEngine4readER11QDataStream );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN11QIconEngine4readER11QDataStream, ( scorep_libwrap_arg_this, in ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QIconEngine4readER11QDataStream );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QIconEngine5writeER11QDataStream
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QIconEngine5writeER11QDataStream )( void *scorep_libwrap_arg_this, QDataStream & out )
{
    LIBWRAP_EARLY_INIT( _ZNK11QIconEngine5writeER11QDataStream );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QIconEngine5writeER11QDataStream );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QIconEngine5writeER11QDataStream, ( scorep_libwrap_arg_this, out ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QIconEngine5writeER11QDataStream );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QIconEngine14availableSizesEN5QIcon4ModeENS0_5StateE
QList<QSize>
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QIconEngine14availableSizesEN5QIcon4ModeENS0_5StateE )( void *scorep_libwrap_arg_this, QIcon::Mode mode, QIcon::State state )
{
    LIBWRAP_EARLY_INIT( _ZNK11QIconEngine14availableSizesEN5QIcon4ModeENS0_5StateE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QIconEngine14availableSizesEN5QIcon4ModeENS0_5StateE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QList<QSize> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QIconEngine14availableSizesEN5QIcon4ModeENS0_5StateE, ( scorep_libwrap_arg_this, mode, state ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QIconEngine14availableSizesEN5QIcon4ModeENS0_5StateE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QIconEngine8iconNameEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QIconEngine8iconNameEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QIconEngine8iconNameEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QIconEngine8iconNameEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QIconEngine8iconNameEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QIconEngine8iconNameEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QIconEngine6isNullEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QIconEngine6isNullEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QIconEngine6isNullEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QIconEngine6isNullEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QIconEngine6isNullEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QIconEngine6isNullEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QIconEngine12virtual_hookEiPv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QIconEngine12virtual_hookEiPv )( void *scorep_libwrap_arg_this, int id, void * data )
{
    LIBWRAP_EARLY_INIT( _ZN11QIconEngine12virtual_hookEiPv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QIconEngine12virtual_hookEiPv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QIconEngine12virtual_hookEiPv, ( scorep_libwrap_arg_this, id, data ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QIconEngine12virtual_hookEiPv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK17QIconEnginePlugin10metaObjectEv
const QMetaObject *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK17QIconEnginePlugin10metaObjectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK17QIconEnginePlugin10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK17QIconEnginePlugin10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QMetaObject * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK17QIconEnginePlugin10metaObjectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK17QIconEnginePlugin10metaObjectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN17QIconEnginePlugin11qt_metacastEPKc
void *
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QIconEnginePlugin11qt_metacastEPKc )( void *scorep_libwrap_arg_this, const char * scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN17QIconEnginePlugin11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QIconEnginePlugin11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    void * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN17QIconEnginePlugin11qt_metacastEPKc, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QIconEnginePlugin11qt_metacastEPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN17QIconEnginePlugin11qt_metacallEN11QMetaObject4CallEiPPv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QIconEnginePlugin11qt_metacallEN11QMetaObject4CallEiPPv )( void *scorep_libwrap_arg_this, QMetaObject::Call scorep_libwrap_arg_1, int scorep_libwrap_arg_2, void ** scorep_libwrap_arg_3 )
{
    LIBWRAP_EARLY_INIT( _ZN17QIconEnginePlugin11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QIconEnginePlugin11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN17QIconEnginePlugin11qt_metacallEN11QMetaObject4CallEiPPv, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, scorep_libwrap_arg_2, scorep_libwrap_arg_3 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QIconEnginePlugin11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN17QIconEnginePluginC2EP7QObject
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QIconEnginePluginC2EP7QObject )( void *scorep_libwrap_arg_this, QObject * parent )
{
    LIBWRAP_EARLY_INIT( _ZN17QIconEnginePluginC2EP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QIconEnginePluginC2EP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QIconEnginePluginC2EP7QObject, ( scorep_libwrap_arg_this, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QIconEnginePluginC2EP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN17QIconEnginePluginD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QIconEnginePluginD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN17QIconEnginePluginD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QIconEnginePluginD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QIconEnginePluginD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QIconEnginePluginD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN17QIconEnginePluginD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QIconEnginePluginD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN17QIconEnginePluginD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QIconEnginePluginD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QIconEnginePluginD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QIconEnginePluginD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN17QIconEnginePluginD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QIconEnginePluginD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN17QIconEnginePluginD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QIconEnginePluginD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QIconEnginePluginD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QIconEnginePluginD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QImageIOHandlerC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QImageIOHandlerC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN15QImageIOHandlerC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QImageIOHandlerC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QImageIOHandlerC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QImageIOHandlerC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QImageIOHandlerD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QImageIOHandlerD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN15QImageIOHandlerD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QImageIOHandlerD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QImageIOHandlerD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QImageIOHandlerD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QImageIOHandlerD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QImageIOHandlerD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN15QImageIOHandlerD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QImageIOHandlerD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QImageIOHandlerD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QImageIOHandlerD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QImageIOHandlerD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QImageIOHandlerD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN15QImageIOHandlerD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QImageIOHandlerD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QImageIOHandlerD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QImageIOHandlerD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QImageIOHandler9setDeviceEP9QIODevice
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QImageIOHandler9setDeviceEP9QIODevice )( void *scorep_libwrap_arg_this, QIODevice * device )
{
    LIBWRAP_EARLY_INIT( _ZN15QImageIOHandler9setDeviceEP9QIODevice );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QImageIOHandler9setDeviceEP9QIODevice );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QImageIOHandler9setDeviceEP9QIODevice, ( scorep_libwrap_arg_this, device ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QImageIOHandler9setDeviceEP9QIODevice );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK15QImageIOHandler6deviceEv
QIODevice *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK15QImageIOHandler6deviceEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK15QImageIOHandler6deviceEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK15QImageIOHandler6deviceEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QIODevice * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK15QImageIOHandler6deviceEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK15QImageIOHandler6deviceEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QImageIOHandler9setFormatERK10QByteArray
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QImageIOHandler9setFormatERK10QByteArray )( void *scorep_libwrap_arg_this, const QByteArray & format )
{
    LIBWRAP_EARLY_INIT( _ZN15QImageIOHandler9setFormatERK10QByteArray );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QImageIOHandler9setFormatERK10QByteArray );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QImageIOHandler9setFormatERK10QByteArray, ( scorep_libwrap_arg_this, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QImageIOHandler9setFormatERK10QByteArray );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK15QImageIOHandler9setFormatERK10QByteArray
void
SCOREP_LIBWRAP_FUNC_NAME( _ZNK15QImageIOHandler9setFormatERK10QByteArray )( void *scorep_libwrap_arg_this, const QByteArray & format )
{
    LIBWRAP_EARLY_INIT( _ZNK15QImageIOHandler9setFormatERK10QByteArray );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK15QImageIOHandler9setFormatERK10QByteArray );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZNK15QImageIOHandler9setFormatERK10QByteArray, ( scorep_libwrap_arg_this, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK15QImageIOHandler9setFormatERK10QByteArray );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK15QImageIOHandler6formatEv
QByteArray
SCOREP_LIBWRAP_FUNC_NAME( _ZNK15QImageIOHandler6formatEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK15QImageIOHandler6formatEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK15QImageIOHandler6formatEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QByteArray scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK15QImageIOHandler6formatEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK15QImageIOHandler6formatEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK15QImageIOHandler4nameEv
QByteArray
SCOREP_LIBWRAP_FUNC_NAME( _ZNK15QImageIOHandler4nameEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK15QImageIOHandler4nameEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK15QImageIOHandler4nameEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QByteArray scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK15QImageIOHandler4nameEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK15QImageIOHandler4nameEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QImageIOHandler5writeERK6QImage
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QImageIOHandler5writeERK6QImage )( void *scorep_libwrap_arg_this, const QImage & image )
{
    LIBWRAP_EARLY_INIT( _ZN15QImageIOHandler5writeERK6QImage );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QImageIOHandler5writeERK6QImage );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN15QImageIOHandler5writeERK6QImage, ( scorep_libwrap_arg_this, image ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QImageIOHandler5writeERK6QImage );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK15QImageIOHandler6optionENS_11ImageOptionE
QVariant
SCOREP_LIBWRAP_FUNC_NAME( _ZNK15QImageIOHandler6optionENS_11ImageOptionE )( void *scorep_libwrap_arg_this, QImageIOHandler::ImageOption option )
{
    LIBWRAP_EARLY_INIT( _ZNK15QImageIOHandler6optionENS_11ImageOptionE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK15QImageIOHandler6optionENS_11ImageOptionE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QVariant scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK15QImageIOHandler6optionENS_11ImageOptionE, ( scorep_libwrap_arg_this, option ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK15QImageIOHandler6optionENS_11ImageOptionE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QImageIOHandler9setOptionENS_11ImageOptionERK8QVariant
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QImageIOHandler9setOptionENS_11ImageOptionERK8QVariant )( void *scorep_libwrap_arg_this, QImageIOHandler::ImageOption option, const QVariant & value )
{
    LIBWRAP_EARLY_INIT( _ZN15QImageIOHandler9setOptionENS_11ImageOptionERK8QVariant );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QImageIOHandler9setOptionENS_11ImageOptionERK8QVariant );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QImageIOHandler9setOptionENS_11ImageOptionERK8QVariant, ( scorep_libwrap_arg_this, option, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QImageIOHandler9setOptionENS_11ImageOptionERK8QVariant );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK15QImageIOHandler14supportsOptionENS_11ImageOptionE
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK15QImageIOHandler14supportsOptionENS_11ImageOptionE )( void *scorep_libwrap_arg_this, QImageIOHandler::ImageOption option )
{
    LIBWRAP_EARLY_INIT( _ZNK15QImageIOHandler14supportsOptionENS_11ImageOptionE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK15QImageIOHandler14supportsOptionENS_11ImageOptionE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK15QImageIOHandler14supportsOptionENS_11ImageOptionE, ( scorep_libwrap_arg_this, option ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK15QImageIOHandler14supportsOptionENS_11ImageOptionE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QImageIOHandler15jumpToNextImageEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QImageIOHandler15jumpToNextImageEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN15QImageIOHandler15jumpToNextImageEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QImageIOHandler15jumpToNextImageEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN15QImageIOHandler15jumpToNextImageEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QImageIOHandler15jumpToNextImageEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QImageIOHandler11jumpToImageEi
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QImageIOHandler11jumpToImageEi )( void *scorep_libwrap_arg_this, int imageNumber )
{
    LIBWRAP_EARLY_INIT( _ZN15QImageIOHandler11jumpToImageEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QImageIOHandler11jumpToImageEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN15QImageIOHandler11jumpToImageEi, ( scorep_libwrap_arg_this, imageNumber ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QImageIOHandler11jumpToImageEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK15QImageIOHandler9loopCountEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK15QImageIOHandler9loopCountEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK15QImageIOHandler9loopCountEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK15QImageIOHandler9loopCountEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK15QImageIOHandler9loopCountEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK15QImageIOHandler9loopCountEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK15QImageIOHandler10imageCountEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK15QImageIOHandler10imageCountEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK15QImageIOHandler10imageCountEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK15QImageIOHandler10imageCountEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK15QImageIOHandler10imageCountEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK15QImageIOHandler10imageCountEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK15QImageIOHandler14nextImageDelayEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK15QImageIOHandler14nextImageDelayEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK15QImageIOHandler14nextImageDelayEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK15QImageIOHandler14nextImageDelayEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK15QImageIOHandler14nextImageDelayEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK15QImageIOHandler14nextImageDelayEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK15QImageIOHandler18currentImageNumberEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK15QImageIOHandler18currentImageNumberEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK15QImageIOHandler18currentImageNumberEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK15QImageIOHandler18currentImageNumberEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK15QImageIOHandler18currentImageNumberEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK15QImageIOHandler18currentImageNumberEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK15QImageIOHandler16currentImageRectEv
QRect
SCOREP_LIBWRAP_FUNC_NAME( _ZNK15QImageIOHandler16currentImageRectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK15QImageIOHandler16currentImageRectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK15QImageIOHandler16currentImageRectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRect scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK15QImageIOHandler16currentImageRectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK15QImageIOHandler16currentImageRectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK14QImageIOPlugin10metaObjectEv
const QMetaObject *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QImageIOPlugin10metaObjectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QImageIOPlugin10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QImageIOPlugin10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QMetaObject * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QImageIOPlugin10metaObjectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QImageIOPlugin10metaObjectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QImageIOPlugin11qt_metacastEPKc
void *
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QImageIOPlugin11qt_metacastEPKc )( void *scorep_libwrap_arg_this, const char * scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN14QImageIOPlugin11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QImageIOPlugin11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    void * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN14QImageIOPlugin11qt_metacastEPKc, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QImageIOPlugin11qt_metacastEPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QImageIOPlugin11qt_metacallEN11QMetaObject4CallEiPPv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QImageIOPlugin11qt_metacallEN11QMetaObject4CallEiPPv )( void *scorep_libwrap_arg_this, QMetaObject::Call scorep_libwrap_arg_1, int scorep_libwrap_arg_2, void ** scorep_libwrap_arg_3 )
{
    LIBWRAP_EARLY_INIT( _ZN14QImageIOPlugin11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QImageIOPlugin11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN14QImageIOPlugin11qt_metacallEN11QMetaObject4CallEiPPv, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, scorep_libwrap_arg_2, scorep_libwrap_arg_3 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QImageIOPlugin11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QImageIOPluginC2EP7QObject
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QImageIOPluginC2EP7QObject )( void *scorep_libwrap_arg_this, QObject * parent )
{
    LIBWRAP_EARLY_INIT( _ZN14QImageIOPluginC2EP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QImageIOPluginC2EP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QImageIOPluginC2EP7QObject, ( scorep_libwrap_arg_this, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QImageIOPluginC2EP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QImageIOPluginD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QImageIOPluginD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN14QImageIOPluginD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QImageIOPluginD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QImageIOPluginD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QImageIOPluginD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QImageIOPluginD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QImageIOPluginD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN14QImageIOPluginD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QImageIOPluginD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QImageIOPluginD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QImageIOPluginD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QImageIOPluginD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QImageIOPluginD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN14QImageIOPluginD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QImageIOPluginD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QImageIOPluginD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QImageIOPluginD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QImageReaderC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QImageReaderC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QImageReaderC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QImageReaderC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QImageReaderC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QImageReaderC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QImageReaderC1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QImageReaderC1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QImageReaderC1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QImageReaderC1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QImageReaderC1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QImageReaderC1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QImageReaderC2EP9QIODeviceRK10QByteArray
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QImageReaderC2EP9QIODeviceRK10QByteArray )( void *scorep_libwrap_arg_this, QIODevice * device, const QByteArray & format )
{
    LIBWRAP_EARLY_INIT( _ZN12QImageReaderC2EP9QIODeviceRK10QByteArray );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QImageReaderC2EP9QIODeviceRK10QByteArray );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QImageReaderC2EP9QIODeviceRK10QByteArray, ( scorep_libwrap_arg_this, device, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QImageReaderC2EP9QIODeviceRK10QByteArray );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QImageReaderC1EP9QIODeviceRK10QByteArray
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QImageReaderC1EP9QIODeviceRK10QByteArray )( void *scorep_libwrap_arg_this, QIODevice * device, const QByteArray & format )
{
    LIBWRAP_EARLY_INIT( _ZN12QImageReaderC1EP9QIODeviceRK10QByteArray );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QImageReaderC1EP9QIODeviceRK10QByteArray );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QImageReaderC1EP9QIODeviceRK10QByteArray, ( scorep_libwrap_arg_this, device, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QImageReaderC1EP9QIODeviceRK10QByteArray );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QImageReaderC2ERK7QStringRK10QByteArray
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QImageReaderC2ERK7QStringRK10QByteArray )( void *scorep_libwrap_arg_this, const QString & fileName, const QByteArray & format )
{
    LIBWRAP_EARLY_INIT( _ZN12QImageReaderC2ERK7QStringRK10QByteArray );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QImageReaderC2ERK7QStringRK10QByteArray );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QImageReaderC2ERK7QStringRK10QByteArray, ( scorep_libwrap_arg_this, fileName, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QImageReaderC2ERK7QStringRK10QByteArray );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QImageReaderC1ERK7QStringRK10QByteArray
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QImageReaderC1ERK7QStringRK10QByteArray )( void *scorep_libwrap_arg_this, const QString & fileName, const QByteArray & format )
{
    LIBWRAP_EARLY_INIT( _ZN12QImageReaderC1ERK7QStringRK10QByteArray );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QImageReaderC1ERK7QStringRK10QByteArray );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QImageReaderC1ERK7QStringRK10QByteArray, ( scorep_libwrap_arg_this, fileName, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QImageReaderC1ERK7QStringRK10QByteArray );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QImageReaderD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QImageReaderD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QImageReaderD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QImageReaderD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QImageReaderD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QImageReaderD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QImageReaderD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QImageReaderD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QImageReaderD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QImageReaderD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QImageReaderD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QImageReaderD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QImageReader9setFormatERK10QByteArray
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QImageReader9setFormatERK10QByteArray )( void *scorep_libwrap_arg_this, const QByteArray & format )
{
    LIBWRAP_EARLY_INIT( _ZN12QImageReader9setFormatERK10QByteArray );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QImageReader9setFormatERK10QByteArray );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QImageReader9setFormatERK10QByteArray, ( scorep_libwrap_arg_this, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QImageReader9setFormatERK10QByteArray );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK12QImageReader6formatEv
QByteArray
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QImageReader6formatEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QImageReader6formatEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QImageReader6formatEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QByteArray scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QImageReader6formatEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QImageReader6formatEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QImageReader24setAutoDetectImageFormatEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QImageReader24setAutoDetectImageFormatEb )( void *scorep_libwrap_arg_this, bool enabled )
{
    LIBWRAP_EARLY_INIT( _ZN12QImageReader24setAutoDetectImageFormatEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QImageReader24setAutoDetectImageFormatEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QImageReader24setAutoDetectImageFormatEb, ( scorep_libwrap_arg_this, enabled ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QImageReader24setAutoDetectImageFormatEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK12QImageReader21autoDetectImageFormatEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QImageReader21autoDetectImageFormatEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QImageReader21autoDetectImageFormatEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QImageReader21autoDetectImageFormatEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QImageReader21autoDetectImageFormatEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QImageReader21autoDetectImageFormatEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QImageReader26setDecideFormatFromContentEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QImageReader26setDecideFormatFromContentEb )( void *scorep_libwrap_arg_this, bool ignored )
{
    LIBWRAP_EARLY_INIT( _ZN12QImageReader26setDecideFormatFromContentEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QImageReader26setDecideFormatFromContentEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QImageReader26setDecideFormatFromContentEb, ( scorep_libwrap_arg_this, ignored ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QImageReader26setDecideFormatFromContentEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK12QImageReader23decideFormatFromContentEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QImageReader23decideFormatFromContentEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QImageReader23decideFormatFromContentEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QImageReader23decideFormatFromContentEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QImageReader23decideFormatFromContentEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QImageReader23decideFormatFromContentEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QImageReader9setDeviceEP9QIODevice
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QImageReader9setDeviceEP9QIODevice )( void *scorep_libwrap_arg_this, QIODevice * device )
{
    LIBWRAP_EARLY_INIT( _ZN12QImageReader9setDeviceEP9QIODevice );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QImageReader9setDeviceEP9QIODevice );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QImageReader9setDeviceEP9QIODevice, ( scorep_libwrap_arg_this, device ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QImageReader9setDeviceEP9QIODevice );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK12QImageReader6deviceEv
QIODevice *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QImageReader6deviceEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QImageReader6deviceEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QImageReader6deviceEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QIODevice * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QImageReader6deviceEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QImageReader6deviceEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QImageReader11setFileNameERK7QString
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QImageReader11setFileNameERK7QString )( void *scorep_libwrap_arg_this, const QString & fileName )
{
    LIBWRAP_EARLY_INIT( _ZN12QImageReader11setFileNameERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QImageReader11setFileNameERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QImageReader11setFileNameERK7QString, ( scorep_libwrap_arg_this, fileName ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QImageReader11setFileNameERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK12QImageReader8fileNameEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QImageReader8fileNameEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QImageReader8fileNameEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QImageReader8fileNameEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QImageReader8fileNameEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QImageReader8fileNameEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QImageReader4sizeEv
QSize
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QImageReader4sizeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QImageReader4sizeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QImageReader4sizeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QSize scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QImageReader4sizeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QImageReader4sizeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QImageReader11imageFormatEv
QImage::Format
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QImageReader11imageFormatEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QImageReader11imageFormatEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QImageReader11imageFormatEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QImage::Format scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QImageReader11imageFormatEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QImageReader11imageFormatEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QImageReader8textKeysEv
QStringList
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QImageReader8textKeysEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QImageReader8textKeysEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QImageReader8textKeysEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QStringList scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QImageReader8textKeysEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QImageReader8textKeysEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QImageReader4textERK7QString
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QImageReader4textERK7QString )( void *scorep_libwrap_arg_this, const QString & key )
{
    LIBWRAP_EARLY_INIT( _ZNK12QImageReader4textERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QImageReader4textERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QImageReader4textERK7QString, ( scorep_libwrap_arg_this, key ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QImageReader4textERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QImageReader11setClipRectERK5QRect
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QImageReader11setClipRectERK5QRect )( void *scorep_libwrap_arg_this, const QRect & rect )
{
    LIBWRAP_EARLY_INIT( _ZN12QImageReader11setClipRectERK5QRect );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QImageReader11setClipRectERK5QRect );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QImageReader11setClipRectERK5QRect, ( scorep_libwrap_arg_this, rect ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QImageReader11setClipRectERK5QRect );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK12QImageReader8clipRectEv
QRect
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QImageReader8clipRectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QImageReader8clipRectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QImageReader8clipRectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRect scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QImageReader8clipRectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QImageReader8clipRectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QImageReader13setScaledSizeERK5QSize
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QImageReader13setScaledSizeERK5QSize )( void *scorep_libwrap_arg_this, const QSize & size )
{
    LIBWRAP_EARLY_INIT( _ZN12QImageReader13setScaledSizeERK5QSize );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QImageReader13setScaledSizeERK5QSize );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QImageReader13setScaledSizeERK5QSize, ( scorep_libwrap_arg_this, size ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QImageReader13setScaledSizeERK5QSize );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK12QImageReader10scaledSizeEv
QSize
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QImageReader10scaledSizeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QImageReader10scaledSizeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QImageReader10scaledSizeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QSize scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QImageReader10scaledSizeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QImageReader10scaledSizeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QImageReader10setQualityEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QImageReader10setQualityEi )( void *scorep_libwrap_arg_this, int quality )
{
    LIBWRAP_EARLY_INIT( _ZN12QImageReader10setQualityEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QImageReader10setQualityEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QImageReader10setQualityEi, ( scorep_libwrap_arg_this, quality ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QImageReader10setQualityEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK12QImageReader7qualityEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QImageReader7qualityEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QImageReader7qualityEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QImageReader7qualityEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QImageReader7qualityEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QImageReader7qualityEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QImageReader17setScaledClipRectERK5QRect
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QImageReader17setScaledClipRectERK5QRect )( void *scorep_libwrap_arg_this, const QRect & rect )
{
    LIBWRAP_EARLY_INIT( _ZN12QImageReader17setScaledClipRectERK5QRect );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QImageReader17setScaledClipRectERK5QRect );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QImageReader17setScaledClipRectERK5QRect, ( scorep_libwrap_arg_this, rect ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QImageReader17setScaledClipRectERK5QRect );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK12QImageReader14scaledClipRectEv
QRect
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QImageReader14scaledClipRectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QImageReader14scaledClipRectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QImageReader14scaledClipRectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRect scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QImageReader14scaledClipRectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QImageReader14scaledClipRectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QImageReader18setBackgroundColorERK6QColor
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QImageReader18setBackgroundColorERK6QColor )( void *scorep_libwrap_arg_this, const QColor & color )
{
    LIBWRAP_EARLY_INIT( _ZN12QImageReader18setBackgroundColorERK6QColor );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QImageReader18setBackgroundColorERK6QColor );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QImageReader18setBackgroundColorERK6QColor, ( scorep_libwrap_arg_this, color ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QImageReader18setBackgroundColorERK6QColor );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK12QImageReader15backgroundColorEv
QColor
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QImageReader15backgroundColorEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QImageReader15backgroundColorEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QImageReader15backgroundColorEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QColor scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QImageReader15backgroundColorEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QImageReader15backgroundColorEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QImageReader17supportsAnimationEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QImageReader17supportsAnimationEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QImageReader17supportsAnimationEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QImageReader17supportsAnimationEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QImageReader17supportsAnimationEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QImageReader17supportsAnimationEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QImageReader14transformationEv
QImageIOHandler::Transformations
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QImageReader14transformationEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QImageReader14transformationEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QImageReader14transformationEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QImageIOHandler::Transformations scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QImageReader14transformationEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QImageReader14transformationEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QImageReader16setAutoTransformEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QImageReader16setAutoTransformEb )( void *scorep_libwrap_arg_this, bool enabled )
{
    LIBWRAP_EARLY_INIT( _ZN12QImageReader16setAutoTransformEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QImageReader16setAutoTransformEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QImageReader16setAutoTransformEb, ( scorep_libwrap_arg_this, enabled ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QImageReader16setAutoTransformEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK12QImageReader13autoTransformEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QImageReader13autoTransformEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QImageReader13autoTransformEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QImageReader13autoTransformEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QImageReader13autoTransformEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QImageReader13autoTransformEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QImageReader8setGammaEf
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QImageReader8setGammaEf )( void *scorep_libwrap_arg_this, float gamma )
{
    LIBWRAP_EARLY_INIT( _ZN12QImageReader8setGammaEf );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QImageReader8setGammaEf );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QImageReader8setGammaEf, ( scorep_libwrap_arg_this, gamma ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QImageReader8setGammaEf );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK12QImageReader5gammaEv
float
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QImageReader5gammaEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QImageReader5gammaEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QImageReader5gammaEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    float scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QImageReader5gammaEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QImageReader5gammaEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QImageReader7subTypeEv
QByteArray
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QImageReader7subTypeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QImageReader7subTypeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QImageReader7subTypeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QByteArray scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QImageReader7subTypeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QImageReader7subTypeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QImageReader17supportedSubTypesEv
QList<QByteArray>
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QImageReader17supportedSubTypesEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QImageReader17supportedSubTypesEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QImageReader17supportedSubTypesEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QList<QByteArray> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QImageReader17supportedSubTypesEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QImageReader17supportedSubTypesEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QImageReader7canReadEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QImageReader7canReadEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QImageReader7canReadEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QImageReader7canReadEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QImageReader7canReadEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QImageReader7canReadEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QImageReader4readEv
QImage
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QImageReader4readEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QImageReader4readEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QImageReader4readEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QImage scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN12QImageReader4readEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QImageReader4readEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QImageReader4readEP6QImage
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QImageReader4readEP6QImage )( void *scorep_libwrap_arg_this, QImage * image )
{
    LIBWRAP_EARLY_INIT( _ZN12QImageReader4readEP6QImage );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QImageReader4readEP6QImage );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN12QImageReader4readEP6QImage, ( scorep_libwrap_arg_this, image ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QImageReader4readEP6QImage );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QImageReader15jumpToNextImageEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QImageReader15jumpToNextImageEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QImageReader15jumpToNextImageEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QImageReader15jumpToNextImageEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN12QImageReader15jumpToNextImageEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QImageReader15jumpToNextImageEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QImageReader11jumpToImageEi
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QImageReader11jumpToImageEi )( void *scorep_libwrap_arg_this, int imageNumber )
{
    LIBWRAP_EARLY_INIT( _ZN12QImageReader11jumpToImageEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QImageReader11jumpToImageEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN12QImageReader11jumpToImageEi, ( scorep_libwrap_arg_this, imageNumber ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QImageReader11jumpToImageEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QImageReader9loopCountEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QImageReader9loopCountEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QImageReader9loopCountEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QImageReader9loopCountEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QImageReader9loopCountEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QImageReader9loopCountEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QImageReader10imageCountEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QImageReader10imageCountEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QImageReader10imageCountEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QImageReader10imageCountEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QImageReader10imageCountEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QImageReader10imageCountEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QImageReader14nextImageDelayEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QImageReader14nextImageDelayEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QImageReader14nextImageDelayEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QImageReader14nextImageDelayEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QImageReader14nextImageDelayEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QImageReader14nextImageDelayEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QImageReader18currentImageNumberEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QImageReader18currentImageNumberEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QImageReader18currentImageNumberEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QImageReader18currentImageNumberEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QImageReader18currentImageNumberEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QImageReader18currentImageNumberEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QImageReader16currentImageRectEv
QRect
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QImageReader16currentImageRectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QImageReader16currentImageRectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QImageReader16currentImageRectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRect scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QImageReader16currentImageRectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QImageReader16currentImageRectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QImageReader5errorEv
QImageReader::ImageReaderError
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QImageReader5errorEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QImageReader5errorEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QImageReader5errorEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QImageReader::ImageReaderError scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QImageReader5errorEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QImageReader5errorEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QImageReader11errorStringEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QImageReader11errorStringEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QImageReader11errorStringEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QImageReader11errorStringEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QImageReader11errorStringEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QImageReader11errorStringEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QImageReader14supportsOptionEN15QImageIOHandler11ImageOptionE
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QImageReader14supportsOptionEN15QImageIOHandler11ImageOptionE )( void *scorep_libwrap_arg_this, QImageIOHandler::ImageOption option )
{
    LIBWRAP_EARLY_INIT( _ZNK12QImageReader14supportsOptionEN15QImageIOHandler11ImageOptionE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QImageReader14supportsOptionEN15QImageIOHandler11ImageOptionE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QImageReader14supportsOptionEN15QImageIOHandler11ImageOptionE, ( scorep_libwrap_arg_this, option ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QImageReader14supportsOptionEN15QImageIOHandler11ImageOptionE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QImageReader11imageFormatERK7QString
QByteArray
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QImageReader11imageFormatERK7QString )( const QString & fileName )
{
    LIBWRAP_EARLY_INIT( _ZN12QImageReader11imageFormatERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QImageReader11imageFormatERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QByteArray scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN12QImageReader11imageFormatERK7QString, ( fileName ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QImageReader11imageFormatERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QImageReader11imageFormatEP9QIODevice
QByteArray
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QImageReader11imageFormatEP9QIODevice )( QIODevice * device )
{
    LIBWRAP_EARLY_INIT( _ZN12QImageReader11imageFormatEP9QIODevice );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QImageReader11imageFormatEP9QIODevice );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QByteArray scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN12QImageReader11imageFormatEP9QIODevice, ( device ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QImageReader11imageFormatEP9QIODevice );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QImageReader21supportedImageFormatsEv
QList<QByteArray>
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QImageReader21supportedImageFormatsEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN12QImageReader21supportedImageFormatsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QImageReader21supportedImageFormatsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QList<QByteArray> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN12QImageReader21supportedImageFormatsEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QImageReader21supportedImageFormatsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QImageReader18supportedMimeTypesEv
QList<QByteArray>
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QImageReader18supportedMimeTypesEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN12QImageReader18supportedMimeTypesEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QImageReader18supportedMimeTypesEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QList<QByteArray> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN12QImageReader18supportedMimeTypesEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QImageReader18supportedMimeTypesEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QImageWriterC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QImageWriterC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QImageWriterC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QImageWriterC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QImageWriterC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QImageWriterC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QImageWriterC1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QImageWriterC1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QImageWriterC1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QImageWriterC1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QImageWriterC1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QImageWriterC1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QImageWriterC2EP9QIODeviceRK10QByteArray
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QImageWriterC2EP9QIODeviceRK10QByteArray )( void *scorep_libwrap_arg_this, QIODevice * device, const QByteArray & format )
{
    LIBWRAP_EARLY_INIT( _ZN12QImageWriterC2EP9QIODeviceRK10QByteArray );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QImageWriterC2EP9QIODeviceRK10QByteArray );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QImageWriterC2EP9QIODeviceRK10QByteArray, ( scorep_libwrap_arg_this, device, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QImageWriterC2EP9QIODeviceRK10QByteArray );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QImageWriterC1EP9QIODeviceRK10QByteArray
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QImageWriterC1EP9QIODeviceRK10QByteArray )( void *scorep_libwrap_arg_this, QIODevice * device, const QByteArray & format )
{
    LIBWRAP_EARLY_INIT( _ZN12QImageWriterC1EP9QIODeviceRK10QByteArray );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QImageWriterC1EP9QIODeviceRK10QByteArray );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QImageWriterC1EP9QIODeviceRK10QByteArray, ( scorep_libwrap_arg_this, device, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QImageWriterC1EP9QIODeviceRK10QByteArray );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QImageWriterC2ERK7QStringRK10QByteArray
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QImageWriterC2ERK7QStringRK10QByteArray )( void *scorep_libwrap_arg_this, const QString & fileName, const QByteArray & format )
{
    LIBWRAP_EARLY_INIT( _ZN12QImageWriterC2ERK7QStringRK10QByteArray );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QImageWriterC2ERK7QStringRK10QByteArray );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QImageWriterC2ERK7QStringRK10QByteArray, ( scorep_libwrap_arg_this, fileName, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QImageWriterC2ERK7QStringRK10QByteArray );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QImageWriterC1ERK7QStringRK10QByteArray
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QImageWriterC1ERK7QStringRK10QByteArray )( void *scorep_libwrap_arg_this, const QString & fileName, const QByteArray & format )
{
    LIBWRAP_EARLY_INIT( _ZN12QImageWriterC1ERK7QStringRK10QByteArray );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QImageWriterC1ERK7QStringRK10QByteArray );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QImageWriterC1ERK7QStringRK10QByteArray, ( scorep_libwrap_arg_this, fileName, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QImageWriterC1ERK7QStringRK10QByteArray );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QImageWriterD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QImageWriterD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QImageWriterD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QImageWriterD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QImageWriterD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QImageWriterD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QImageWriterD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QImageWriterD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QImageWriterD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QImageWriterD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QImageWriterD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QImageWriterD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QImageWriter9setFormatERK10QByteArray
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QImageWriter9setFormatERK10QByteArray )( void *scorep_libwrap_arg_this, const QByteArray & format )
{
    LIBWRAP_EARLY_INIT( _ZN12QImageWriter9setFormatERK10QByteArray );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QImageWriter9setFormatERK10QByteArray );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QImageWriter9setFormatERK10QByteArray, ( scorep_libwrap_arg_this, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QImageWriter9setFormatERK10QByteArray );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK12QImageWriter6formatEv
QByteArray
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QImageWriter6formatEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QImageWriter6formatEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QImageWriter6formatEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QByteArray scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QImageWriter6formatEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QImageWriter6formatEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QImageWriter9setDeviceEP9QIODevice
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QImageWriter9setDeviceEP9QIODevice )( void *scorep_libwrap_arg_this, QIODevice * device )
{
    LIBWRAP_EARLY_INIT( _ZN12QImageWriter9setDeviceEP9QIODevice );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QImageWriter9setDeviceEP9QIODevice );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QImageWriter9setDeviceEP9QIODevice, ( scorep_libwrap_arg_this, device ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QImageWriter9setDeviceEP9QIODevice );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK12QImageWriter6deviceEv
QIODevice *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QImageWriter6deviceEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QImageWriter6deviceEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QImageWriter6deviceEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QIODevice * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QImageWriter6deviceEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QImageWriter6deviceEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QImageWriter11setFileNameERK7QString
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QImageWriter11setFileNameERK7QString )( void *scorep_libwrap_arg_this, const QString & fileName )
{
    LIBWRAP_EARLY_INIT( _ZN12QImageWriter11setFileNameERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QImageWriter11setFileNameERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QImageWriter11setFileNameERK7QString, ( scorep_libwrap_arg_this, fileName ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QImageWriter11setFileNameERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK12QImageWriter8fileNameEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QImageWriter8fileNameEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QImageWriter8fileNameEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QImageWriter8fileNameEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QImageWriter8fileNameEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QImageWriter8fileNameEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QImageWriter10setQualityEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QImageWriter10setQualityEi )( void *scorep_libwrap_arg_this, int quality )
{
    LIBWRAP_EARLY_INIT( _ZN12QImageWriter10setQualityEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QImageWriter10setQualityEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QImageWriter10setQualityEi, ( scorep_libwrap_arg_this, quality ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QImageWriter10setQualityEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK12QImageWriter7qualityEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QImageWriter7qualityEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QImageWriter7qualityEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QImageWriter7qualityEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QImageWriter7qualityEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QImageWriter7qualityEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QImageWriter14setCompressionEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QImageWriter14setCompressionEi )( void *scorep_libwrap_arg_this, int compression )
{
    LIBWRAP_EARLY_INIT( _ZN12QImageWriter14setCompressionEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QImageWriter14setCompressionEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QImageWriter14setCompressionEi, ( scorep_libwrap_arg_this, compression ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QImageWriter14setCompressionEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK12QImageWriter11compressionEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QImageWriter11compressionEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QImageWriter11compressionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QImageWriter11compressionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QImageWriter11compressionEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QImageWriter11compressionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QImageWriter8setGammaEf
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QImageWriter8setGammaEf )( void *scorep_libwrap_arg_this, float gamma )
{
    LIBWRAP_EARLY_INIT( _ZN12QImageWriter8setGammaEf );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QImageWriter8setGammaEf );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QImageWriter8setGammaEf, ( scorep_libwrap_arg_this, gamma ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QImageWriter8setGammaEf );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK12QImageWriter5gammaEv
float
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QImageWriter5gammaEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QImageWriter5gammaEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QImageWriter5gammaEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    float scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QImageWriter5gammaEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QImageWriter5gammaEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QImageWriter10setSubTypeERK10QByteArray
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QImageWriter10setSubTypeERK10QByteArray )( void *scorep_libwrap_arg_this, const QByteArray & type )
{
    LIBWRAP_EARLY_INIT( _ZN12QImageWriter10setSubTypeERK10QByteArray );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QImageWriter10setSubTypeERK10QByteArray );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QImageWriter10setSubTypeERK10QByteArray, ( scorep_libwrap_arg_this, type ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QImageWriter10setSubTypeERK10QByteArray );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK12QImageWriter7subTypeEv
QByteArray
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QImageWriter7subTypeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QImageWriter7subTypeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QImageWriter7subTypeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QByteArray scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QImageWriter7subTypeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QImageWriter7subTypeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QImageWriter17supportedSubTypesEv
QList<QByteArray>
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QImageWriter17supportedSubTypesEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QImageWriter17supportedSubTypesEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QImageWriter17supportedSubTypesEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QList<QByteArray> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QImageWriter17supportedSubTypesEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QImageWriter17supportedSubTypesEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QImageWriter17setOptimizedWriteEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QImageWriter17setOptimizedWriteEb )( void *scorep_libwrap_arg_this, bool optimize )
{
    LIBWRAP_EARLY_INIT( _ZN12QImageWriter17setOptimizedWriteEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QImageWriter17setOptimizedWriteEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QImageWriter17setOptimizedWriteEb, ( scorep_libwrap_arg_this, optimize ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QImageWriter17setOptimizedWriteEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK12QImageWriter14optimizedWriteEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QImageWriter14optimizedWriteEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QImageWriter14optimizedWriteEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QImageWriter14optimizedWriteEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QImageWriter14optimizedWriteEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QImageWriter14optimizedWriteEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QImageWriter23setProgressiveScanWriteEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QImageWriter23setProgressiveScanWriteEb )( void *scorep_libwrap_arg_this, bool progressive )
{
    LIBWRAP_EARLY_INIT( _ZN12QImageWriter23setProgressiveScanWriteEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QImageWriter23setProgressiveScanWriteEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QImageWriter23setProgressiveScanWriteEb, ( scorep_libwrap_arg_this, progressive ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QImageWriter23setProgressiveScanWriteEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK12QImageWriter20progressiveScanWriteEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QImageWriter20progressiveScanWriteEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QImageWriter20progressiveScanWriteEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QImageWriter20progressiveScanWriteEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QImageWriter20progressiveScanWriteEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QImageWriter20progressiveScanWriteEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QImageWriter14transformationEv
QImageIOHandler::Transformations
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QImageWriter14transformationEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QImageWriter14transformationEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QImageWriter14transformationEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QImageIOHandler::Transformations scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QImageWriter14transformationEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QImageWriter14transformationEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QImageWriter17setTransformationE6QFlagsIN15QImageIOHandler14TransformationEE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QImageWriter17setTransformationE6QFlagsIN15QImageIOHandler14TransformationEE )( void *scorep_libwrap_arg_this, QImageIOHandler::Transformations orientation )
{
    LIBWRAP_EARLY_INIT( _ZN12QImageWriter17setTransformationE6QFlagsIN15QImageIOHandler14TransformationEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QImageWriter17setTransformationE6QFlagsIN15QImageIOHandler14TransformationEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QImageWriter17setTransformationE6QFlagsIN15QImageIOHandler14TransformationEE, ( scorep_libwrap_arg_this, orientation ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QImageWriter17setTransformationE6QFlagsIN15QImageIOHandler14TransformationEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QImageWriter14setDescriptionERK7QString
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QImageWriter14setDescriptionERK7QString )( void *scorep_libwrap_arg_this, const QString & description )
{
    LIBWRAP_EARLY_INIT( _ZN12QImageWriter14setDescriptionERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QImageWriter14setDescriptionERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QImageWriter14setDescriptionERK7QString, ( scorep_libwrap_arg_this, description ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QImageWriter14setDescriptionERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK12QImageWriter11descriptionEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QImageWriter11descriptionEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QImageWriter11descriptionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QImageWriter11descriptionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QImageWriter11descriptionEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QImageWriter11descriptionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QImageWriter7setTextERK7QStringS2_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QImageWriter7setTextERK7QStringS2_ )( void *scorep_libwrap_arg_this, const QString & key, const QString & text )
{
    LIBWRAP_EARLY_INIT( _ZN12QImageWriter7setTextERK7QStringS2_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QImageWriter7setTextERK7QStringS2_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QImageWriter7setTextERK7QStringS2_, ( scorep_libwrap_arg_this, key, text ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QImageWriter7setTextERK7QStringS2_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK12QImageWriter8canWriteEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QImageWriter8canWriteEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QImageWriter8canWriteEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QImageWriter8canWriteEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QImageWriter8canWriteEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QImageWriter8canWriteEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QImageWriter5writeERK6QImage
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QImageWriter5writeERK6QImage )( void *scorep_libwrap_arg_this, const QImage & image )
{
    LIBWRAP_EARLY_INIT( _ZN12QImageWriter5writeERK6QImage );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QImageWriter5writeERK6QImage );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN12QImageWriter5writeERK6QImage, ( scorep_libwrap_arg_this, image ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QImageWriter5writeERK6QImage );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QImageWriter5errorEv
QImageWriter::ImageWriterError
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QImageWriter5errorEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QImageWriter5errorEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QImageWriter5errorEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QImageWriter::ImageWriterError scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QImageWriter5errorEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QImageWriter5errorEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QImageWriter11errorStringEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QImageWriter11errorStringEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QImageWriter11errorStringEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QImageWriter11errorStringEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QImageWriter11errorStringEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QImageWriter11errorStringEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QImageWriter14supportsOptionEN15QImageIOHandler11ImageOptionE
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QImageWriter14supportsOptionEN15QImageIOHandler11ImageOptionE )( void *scorep_libwrap_arg_this, QImageIOHandler::ImageOption option )
{
    LIBWRAP_EARLY_INIT( _ZNK12QImageWriter14supportsOptionEN15QImageIOHandler11ImageOptionE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QImageWriter14supportsOptionEN15QImageIOHandler11ImageOptionE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QImageWriter14supportsOptionEN15QImageIOHandler11ImageOptionE, ( scorep_libwrap_arg_this, option ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QImageWriter14supportsOptionEN15QImageIOHandler11ImageOptionE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QImageWriter21supportedImageFormatsEv
QList<QByteArray>
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QImageWriter21supportedImageFormatsEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN12QImageWriter21supportedImageFormatsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QImageWriter21supportedImageFormatsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QList<QByteArray> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN12QImageWriter21supportedImageFormatsEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QImageWriter21supportedImageFormatsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QImageWriter18supportedMimeTypesEv
QList<QByteArray>
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QImageWriter18supportedMimeTypesEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN12QImageWriter18supportedMimeTypesEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QImageWriter18supportedMimeTypesEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QList<QByteArray> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN12QImageWriter18supportedMimeTypesEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QImageWriter18supportedMimeTypesEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QMovie10metaObjectEv
const QMetaObject *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QMovie10metaObjectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QMovie10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QMovie10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QMetaObject * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QMovie10metaObjectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QMovie10metaObjectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QMovie11qt_metacastEPKc
void *
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QMovie11qt_metacastEPKc )( void *scorep_libwrap_arg_this, const char * scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN6QMovie11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QMovie11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    void * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN6QMovie11qt_metacastEPKc, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QMovie11qt_metacastEPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QMovie11qt_metacallEN11QMetaObject4CallEiPPv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QMovie11qt_metacallEN11QMetaObject4CallEiPPv )( void *scorep_libwrap_arg_this, QMetaObject::Call scorep_libwrap_arg_1, int scorep_libwrap_arg_2, void ** scorep_libwrap_arg_3 )
{
    LIBWRAP_EARLY_INIT( _ZN6QMovie11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QMovie11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN6QMovie11qt_metacallEN11QMetaObject4CallEiPPv, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, scorep_libwrap_arg_2, scorep_libwrap_arg_3 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QMovie11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QMovieC2EP9QIODeviceRK10QByteArrayP7QObject
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QMovieC2EP9QIODeviceRK10QByteArrayP7QObject )( void *scorep_libwrap_arg_this, QIODevice * device, const QByteArray & format, QObject * parent )
{
    LIBWRAP_EARLY_INIT( _ZN6QMovieC2EP9QIODeviceRK10QByteArrayP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QMovieC2EP9QIODeviceRK10QByteArrayP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QMovieC2EP9QIODeviceRK10QByteArrayP7QObject, ( scorep_libwrap_arg_this, device, format, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QMovieC2EP9QIODeviceRK10QByteArrayP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QMovieC1EP9QIODeviceRK10QByteArrayP7QObject
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QMovieC1EP9QIODeviceRK10QByteArrayP7QObject )( void *scorep_libwrap_arg_this, QIODevice * device, const QByteArray & format, QObject * parent )
{
    LIBWRAP_EARLY_INIT( _ZN6QMovieC1EP9QIODeviceRK10QByteArrayP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QMovieC1EP9QIODeviceRK10QByteArrayP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QMovieC1EP9QIODeviceRK10QByteArrayP7QObject, ( scorep_libwrap_arg_this, device, format, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QMovieC1EP9QIODeviceRK10QByteArrayP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QMovieC2ERK7QStringRK10QByteArrayP7QObject
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QMovieC2ERK7QStringRK10QByteArrayP7QObject )( void *scorep_libwrap_arg_this, const QString & fileName, const QByteArray & format, QObject * parent )
{
    LIBWRAP_EARLY_INIT( _ZN6QMovieC2ERK7QStringRK10QByteArrayP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QMovieC2ERK7QStringRK10QByteArrayP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QMovieC2ERK7QStringRK10QByteArrayP7QObject, ( scorep_libwrap_arg_this, fileName, format, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QMovieC2ERK7QStringRK10QByteArrayP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QMovieC1ERK7QStringRK10QByteArrayP7QObject
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QMovieC1ERK7QStringRK10QByteArrayP7QObject )( void *scorep_libwrap_arg_this, const QString & fileName, const QByteArray & format, QObject * parent )
{
    LIBWRAP_EARLY_INIT( _ZN6QMovieC1ERK7QStringRK10QByteArrayP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QMovieC1ERK7QStringRK10QByteArrayP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QMovieC1ERK7QStringRK10QByteArrayP7QObject, ( scorep_libwrap_arg_this, fileName, format, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QMovieC1ERK7QStringRK10QByteArrayP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QMovieD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QMovieD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN6QMovieD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QMovieD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QMovieD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QMovieD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QMovieD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QMovieD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN6QMovieD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QMovieD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QMovieD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QMovieD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QMovieD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QMovieD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN6QMovieD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QMovieD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QMovieD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QMovieD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QMovie16supportedFormatsEv
QList<QByteArray>
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QMovie16supportedFormatsEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN6QMovie16supportedFormatsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QMovie16supportedFormatsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QList<QByteArray> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN6QMovie16supportedFormatsEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QMovie16supportedFormatsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QMovie9setDeviceEP9QIODevice
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QMovie9setDeviceEP9QIODevice )( void *scorep_libwrap_arg_this, QIODevice * device )
{
    LIBWRAP_EARLY_INIT( _ZN6QMovie9setDeviceEP9QIODevice );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QMovie9setDeviceEP9QIODevice );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QMovie9setDeviceEP9QIODevice, ( scorep_libwrap_arg_this, device ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QMovie9setDeviceEP9QIODevice );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK6QMovie6deviceEv
QIODevice *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QMovie6deviceEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QMovie6deviceEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QMovie6deviceEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QIODevice * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QMovie6deviceEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QMovie6deviceEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QMovie11setFileNameERK7QString
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QMovie11setFileNameERK7QString )( void *scorep_libwrap_arg_this, const QString & fileName )
{
    LIBWRAP_EARLY_INIT( _ZN6QMovie11setFileNameERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QMovie11setFileNameERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QMovie11setFileNameERK7QString, ( scorep_libwrap_arg_this, fileName ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QMovie11setFileNameERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK6QMovie8fileNameEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QMovie8fileNameEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QMovie8fileNameEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QMovie8fileNameEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QMovie8fileNameEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QMovie8fileNameEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QMovie9setFormatERK10QByteArray
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QMovie9setFormatERK10QByteArray )( void *scorep_libwrap_arg_this, const QByteArray & format )
{
    LIBWRAP_EARLY_INIT( _ZN6QMovie9setFormatERK10QByteArray );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QMovie9setFormatERK10QByteArray );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QMovie9setFormatERK10QByteArray, ( scorep_libwrap_arg_this, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QMovie9setFormatERK10QByteArray );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK6QMovie6formatEv
QByteArray
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QMovie6formatEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QMovie6formatEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QMovie6formatEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QByteArray scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QMovie6formatEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QMovie6formatEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QMovie18setBackgroundColorERK6QColor
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QMovie18setBackgroundColorERK6QColor )( void *scorep_libwrap_arg_this, const QColor & color )
{
    LIBWRAP_EARLY_INIT( _ZN6QMovie18setBackgroundColorERK6QColor );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QMovie18setBackgroundColorERK6QColor );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QMovie18setBackgroundColorERK6QColor, ( scorep_libwrap_arg_this, color ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QMovie18setBackgroundColorERK6QColor );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK6QMovie15backgroundColorEv
QColor
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QMovie15backgroundColorEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QMovie15backgroundColorEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QMovie15backgroundColorEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QColor scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QMovie15backgroundColorEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QMovie15backgroundColorEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QMovie5stateEv
QMovie::MovieState
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QMovie5stateEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QMovie5stateEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QMovie5stateEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QMovie::MovieState scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QMovie5stateEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QMovie5stateEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QMovie9frameRectEv
QRect
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QMovie9frameRectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QMovie9frameRectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QMovie9frameRectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRect scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QMovie9frameRectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QMovie9frameRectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QMovie12currentImageEv
QImage
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QMovie12currentImageEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QMovie12currentImageEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QMovie12currentImageEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QImage scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QMovie12currentImageEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QMovie12currentImageEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QMovie13currentPixmapEv
QPixmap
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QMovie13currentPixmapEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QMovie13currentPixmapEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QMovie13currentPixmapEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPixmap scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QMovie13currentPixmapEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QMovie13currentPixmapEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QMovie7isValidEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QMovie7isValidEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QMovie7isValidEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QMovie7isValidEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QMovie7isValidEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QMovie7isValidEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QMovie11jumpToFrameEi
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QMovie11jumpToFrameEi )( void *scorep_libwrap_arg_this, int frameNumber )
{
    LIBWRAP_EARLY_INIT( _ZN6QMovie11jumpToFrameEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QMovie11jumpToFrameEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN6QMovie11jumpToFrameEi, ( scorep_libwrap_arg_this, frameNumber ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QMovie11jumpToFrameEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QMovie9loopCountEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QMovie9loopCountEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QMovie9loopCountEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QMovie9loopCountEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QMovie9loopCountEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QMovie9loopCountEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QMovie10frameCountEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QMovie10frameCountEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QMovie10frameCountEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QMovie10frameCountEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QMovie10frameCountEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QMovie10frameCountEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QMovie14nextFrameDelayEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QMovie14nextFrameDelayEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QMovie14nextFrameDelayEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QMovie14nextFrameDelayEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QMovie14nextFrameDelayEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QMovie14nextFrameDelayEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QMovie18currentFrameNumberEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QMovie18currentFrameNumberEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QMovie18currentFrameNumberEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QMovie18currentFrameNumberEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QMovie18currentFrameNumberEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QMovie18currentFrameNumberEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QMovie5speedEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QMovie5speedEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QMovie5speedEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QMovie5speedEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QMovie5speedEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QMovie5speedEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QMovie10scaledSizeEv
QSize
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QMovie10scaledSizeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN6QMovie10scaledSizeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QMovie10scaledSizeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QSize scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN6QMovie10scaledSizeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QMovie10scaledSizeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QMovie13setScaledSizeERK5QSize
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QMovie13setScaledSizeERK5QSize )( void *scorep_libwrap_arg_this, const QSize & size )
{
    LIBWRAP_EARLY_INIT( _ZN6QMovie13setScaledSizeERK5QSize );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QMovie13setScaledSizeERK5QSize );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QMovie13setScaledSizeERK5QSize, ( scorep_libwrap_arg_this, size ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QMovie13setScaledSizeERK5QSize );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK6QMovie9cacheModeEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QMovie9cacheModeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QMovie9cacheModeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QMovie9cacheModeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QMovie9cacheModeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QMovie9cacheModeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QMovie7startedEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QMovie7startedEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN6QMovie7startedEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QMovie7startedEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QMovie7startedEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QMovie7startedEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QMovie7resizedERK5QSize
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QMovie7resizedERK5QSize )( void *scorep_libwrap_arg_this, const QSize & size )
{
    LIBWRAP_EARLY_INIT( _ZN6QMovie7resizedERK5QSize );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QMovie7resizedERK5QSize );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QMovie7resizedERK5QSize, ( scorep_libwrap_arg_this, size ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QMovie7resizedERK5QSize );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QMovie7updatedERK5QRect
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QMovie7updatedERK5QRect )( void *scorep_libwrap_arg_this, const QRect & rect )
{
    LIBWRAP_EARLY_INIT( _ZN6QMovie7updatedERK5QRect );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QMovie7updatedERK5QRect );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QMovie7updatedERK5QRect, ( scorep_libwrap_arg_this, rect ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QMovie7updatedERK5QRect );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QMovie12stateChangedENS_10MovieStateE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QMovie12stateChangedENS_10MovieStateE )( void *scorep_libwrap_arg_this, QMovie::MovieState state )
{
    LIBWRAP_EARLY_INIT( _ZN6QMovie12stateChangedENS_10MovieStateE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QMovie12stateChangedENS_10MovieStateE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QMovie12stateChangedENS_10MovieStateE, ( scorep_libwrap_arg_this, state ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QMovie12stateChangedENS_10MovieStateE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QMovie5errorEN12QImageReader16ImageReaderErrorE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QMovie5errorEN12QImageReader16ImageReaderErrorE )( void *scorep_libwrap_arg_this, QImageReader::ImageReaderError error )
{
    LIBWRAP_EARLY_INIT( _ZN6QMovie5errorEN12QImageReader16ImageReaderErrorE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QMovie5errorEN12QImageReader16ImageReaderErrorE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QMovie5errorEN12QImageReader16ImageReaderErrorE, ( scorep_libwrap_arg_this, error ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QMovie5errorEN12QImageReader16ImageReaderErrorE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QMovie8finishedEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QMovie8finishedEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN6QMovie8finishedEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QMovie8finishedEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QMovie8finishedEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QMovie8finishedEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QMovie12frameChangedEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QMovie12frameChangedEi )( void *scorep_libwrap_arg_this, int frameNumber )
{
    LIBWRAP_EARLY_INIT( _ZN6QMovie12frameChangedEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QMovie12frameChangedEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QMovie12frameChangedEi, ( scorep_libwrap_arg_this, frameNumber ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QMovie12frameChangedEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QMovie5startEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QMovie5startEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN6QMovie5startEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QMovie5startEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QMovie5startEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QMovie5startEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QMovie15jumpToNextFrameEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QMovie15jumpToNextFrameEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN6QMovie15jumpToNextFrameEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QMovie15jumpToNextFrameEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN6QMovie15jumpToNextFrameEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QMovie15jumpToNextFrameEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QMovie9setPausedEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QMovie9setPausedEb )( void *scorep_libwrap_arg_this, bool paused )
{
    LIBWRAP_EARLY_INIT( _ZN6QMovie9setPausedEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QMovie9setPausedEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QMovie9setPausedEb, ( scorep_libwrap_arg_this, paused ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QMovie9setPausedEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QMovie4stopEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QMovie4stopEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN6QMovie4stopEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QMovie4stopEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QMovie4stopEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QMovie4stopEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QMovie8setSpeedEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QMovie8setSpeedEi )( void *scorep_libwrap_arg_this, int percentSpeed )
{
    LIBWRAP_EARLY_INIT( _ZN6QMovie8setSpeedEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QMovie8setSpeedEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QMovie8setSpeedEi, ( scorep_libwrap_arg_this, percentSpeed ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QMovie8setSpeedEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPictureC2Ei
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPictureC2Ei )( void *scorep_libwrap_arg_this, int formatVersion )
{
    LIBWRAP_EARLY_INIT( _ZN8QPictureC2Ei );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPictureC2Ei );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPictureC2Ei, ( scorep_libwrap_arg_this, formatVersion ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPictureC2Ei );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPictureC1Ei
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPictureC1Ei )( void *scorep_libwrap_arg_this, int formatVersion )
{
    LIBWRAP_EARLY_INIT( _ZN8QPictureC1Ei );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPictureC1Ei );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPictureC1Ei, ( scorep_libwrap_arg_this, formatVersion ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPictureC1Ei );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPictureC2ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPictureC2ERKS_ )( void *scorep_libwrap_arg_this, const QPicture & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN8QPictureC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPictureC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPictureC2ERKS_, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPictureC2ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPictureC1ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPictureC1ERKS_ )( void *scorep_libwrap_arg_this, const QPicture & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN8QPictureC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPictureC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPictureC1ERKS_, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPictureC1ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPictureD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPictureD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN8QPictureD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPictureD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPictureD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPictureD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPictureD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPictureD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN8QPictureD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPictureD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPictureD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPictureD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPictureD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPictureD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN8QPictureD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPictureD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPictureD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPictureD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK8QPicture6isNullEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QPicture6isNullEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QPicture6isNullEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QPicture6isNullEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QPicture6isNullEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QPicture6isNullEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK8QPicture7devTypeEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QPicture7devTypeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QPicture7devTypeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QPicture7devTypeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QPicture7devTypeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QPicture7devTypeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK8QPicture4sizeEv
uint
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QPicture4sizeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QPicture4sizeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QPicture4sizeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    uint scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QPicture4sizeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QPicture4sizeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK8QPicture4dataEv
const char *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QPicture4dataEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QPicture4dataEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QPicture4dataEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const char * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QPicture4dataEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QPicture4dataEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN8QPicture7setDataEPKcj
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPicture7setDataEPKcj )( void *scorep_libwrap_arg_this, const char * data, uint size )
{
    LIBWRAP_EARLY_INIT( _ZN8QPicture7setDataEPKcj );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPicture7setDataEPKcj );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPicture7setDataEPKcj, ( scorep_libwrap_arg_this, data, size ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPicture7setDataEPKcj );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPicture4playEP8QPainter
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPicture4playEP8QPainter )( void *scorep_libwrap_arg_this, QPainter * p )
{
    LIBWRAP_EARLY_INIT( _ZN8QPicture4playEP8QPainter );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPicture4playEP8QPainter );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPicture4playEP8QPainter, ( scorep_libwrap_arg_this, p ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPicture4playEP8QPainter );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN8QPicture4loadEP9QIODevicePKc
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPicture4loadEP9QIODevicePKc )( void *scorep_libwrap_arg_this, QIODevice * dev, const char * format )
{
    LIBWRAP_EARLY_INIT( _ZN8QPicture4loadEP9QIODevicePKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPicture4loadEP9QIODevicePKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPicture4loadEP9QIODevicePKc, ( scorep_libwrap_arg_this, dev, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPicture4loadEP9QIODevicePKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN8QPicture4loadERK7QStringPKc
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPicture4loadERK7QStringPKc )( void *scorep_libwrap_arg_this, const QString & fileName, const char * format )
{
    LIBWRAP_EARLY_INIT( _ZN8QPicture4loadERK7QStringPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPicture4loadERK7QStringPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPicture4loadERK7QStringPKc, ( scorep_libwrap_arg_this, fileName, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPicture4loadERK7QStringPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN8QPicture4saveEP9QIODevicePKc
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPicture4saveEP9QIODevicePKc )( void *scorep_libwrap_arg_this, QIODevice * dev, const char * format )
{
    LIBWRAP_EARLY_INIT( _ZN8QPicture4saveEP9QIODevicePKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPicture4saveEP9QIODevicePKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPicture4saveEP9QIODevicePKc, ( scorep_libwrap_arg_this, dev, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPicture4saveEP9QIODevicePKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN8QPicture4saveERK7QStringPKc
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPicture4saveERK7QStringPKc )( void *scorep_libwrap_arg_this, const QString & fileName, const char * format )
{
    LIBWRAP_EARLY_INIT( _ZN8QPicture4saveERK7QStringPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPicture4saveERK7QStringPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPicture4saveERK7QStringPKc, ( scorep_libwrap_arg_this, fileName, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPicture4saveERK7QStringPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK8QPicture12boundingRectEv
QRect
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QPicture12boundingRectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QPicture12boundingRectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QPicture12boundingRectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRect scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QPicture12boundingRectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QPicture12boundingRectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN8QPicture15setBoundingRectERK5QRect
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPicture15setBoundingRectERK5QRect )( void *scorep_libwrap_arg_this, const QRect & r )
{
    LIBWRAP_EARLY_INIT( _ZN8QPicture15setBoundingRectERK5QRect );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPicture15setBoundingRectERK5QRect );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPicture15setBoundingRectERK5QRect, ( scorep_libwrap_arg_this, r ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPicture15setBoundingRectERK5QRect );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPictureaSERKS_
QPicture &
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPictureaSERKS_ )( void *scorep_libwrap_arg_this, const QPicture & p )
{
    LIBWRAP_EARLY_INIT( _ZN8QPictureaSERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPictureaSERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPicture & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPictureaSERKS_, ( scorep_libwrap_arg_this, p ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPictureaSERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK8QPicture10isDetachedEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QPicture10isDetachedEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QPicture10isDetachedEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QPicture10isDetachedEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QPicture10isDetachedEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QPicture10isDetachedEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZlsR11QDataStreamRK8QPicture
QDataStream &
SCOREP_LIBWRAP_FUNC_NAME( _ZlsR11QDataStreamRK8QPicture )( QDataStream & in, const QPicture & p )
{
    LIBWRAP_EARLY_INIT( _ZlsR11QDataStreamRK8QPicture );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZlsR11QDataStreamRK8QPicture );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDataStream & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZlsR11QDataStreamRK8QPicture, ( in, p ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZlsR11QDataStreamRK8QPicture );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZrsR11QDataStreamR8QPicture
QDataStream &
SCOREP_LIBWRAP_FUNC_NAME( _ZrsR11QDataStreamR8QPicture )( QDataStream & in, QPicture & p )
{
    LIBWRAP_EARLY_INIT( _ZrsR11QDataStreamR8QPicture );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZrsR11QDataStreamR8QPicture );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDataStream & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZrsR11QDataStreamR8QPicture, ( in, p ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZrsR11QDataStreamR8QPicture );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN8QPicture13pictureFormatERK7QString
const char *
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPicture13pictureFormatERK7QString )( const QString & fileName )
{
    LIBWRAP_EARLY_INIT( _ZN8QPicture13pictureFormatERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPicture13pictureFormatERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const char * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPicture13pictureFormatERK7QString, ( fileName ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPicture13pictureFormatERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN8QPicture12inputFormatsEv
QList<QByteArray>
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPicture12inputFormatsEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN8QPicture12inputFormatsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPicture12inputFormatsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QList<QByteArray> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPicture12inputFormatsEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPicture12inputFormatsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN8QPicture13outputFormatsEv
QList<QByteArray>
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPicture13outputFormatsEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN8QPicture13outputFormatsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPicture13outputFormatsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QList<QByteArray> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPicture13outputFormatsEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPicture13outputFormatsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN8QPicture15inputFormatListEv
QStringList
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPicture15inputFormatListEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN8QPicture15inputFormatListEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPicture15inputFormatListEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QStringList scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPicture15inputFormatListEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPicture15inputFormatListEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN8QPicture16outputFormatListEv
QStringList
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPicture16outputFormatListEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN8QPicture16outputFormatListEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPicture16outputFormatListEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QStringList scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPicture16outputFormatListEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPicture16outputFormatListEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK8QPicture11paintEngineEv
QPaintEngine *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QPicture11paintEngineEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QPicture11paintEngineEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QPicture11paintEngineEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPaintEngine * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QPicture11paintEngineEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QPicture11paintEngineEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QPictureIOC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QPictureIOC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN10QPictureIOC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QPictureIOC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QPictureIOC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QPictureIOC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QPictureIOC1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QPictureIOC1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN10QPictureIOC1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QPictureIOC1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QPictureIOC1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QPictureIOC1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QPictureIOC2EP9QIODevicePKc
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QPictureIOC2EP9QIODevicePKc )( void *scorep_libwrap_arg_this, QIODevice * ioDevice, const char * format )
{
    LIBWRAP_EARLY_INIT( _ZN10QPictureIOC2EP9QIODevicePKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QPictureIOC2EP9QIODevicePKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QPictureIOC2EP9QIODevicePKc, ( scorep_libwrap_arg_this, ioDevice, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QPictureIOC2EP9QIODevicePKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QPictureIOC1EP9QIODevicePKc
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QPictureIOC1EP9QIODevicePKc )( void *scorep_libwrap_arg_this, QIODevice * ioDevice, const char * format )
{
    LIBWRAP_EARLY_INIT( _ZN10QPictureIOC1EP9QIODevicePKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QPictureIOC1EP9QIODevicePKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QPictureIOC1EP9QIODevicePKc, ( scorep_libwrap_arg_this, ioDevice, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QPictureIOC1EP9QIODevicePKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QPictureIOC2ERK7QStringPKc
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QPictureIOC2ERK7QStringPKc )( void *scorep_libwrap_arg_this, const QString & fileName, const char * format )
{
    LIBWRAP_EARLY_INIT( _ZN10QPictureIOC2ERK7QStringPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QPictureIOC2ERK7QStringPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QPictureIOC2ERK7QStringPKc, ( scorep_libwrap_arg_this, fileName, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QPictureIOC2ERK7QStringPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QPictureIOC1ERK7QStringPKc
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QPictureIOC1ERK7QStringPKc )( void *scorep_libwrap_arg_this, const QString & fileName, const char * format )
{
    LIBWRAP_EARLY_INIT( _ZN10QPictureIOC1ERK7QStringPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QPictureIOC1ERK7QStringPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QPictureIOC1ERK7QStringPKc, ( scorep_libwrap_arg_this, fileName, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QPictureIOC1ERK7QStringPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QPictureIOD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QPictureIOD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN10QPictureIOD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QPictureIOD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QPictureIOD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QPictureIOD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QPictureIOD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QPictureIOD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN10QPictureIOD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QPictureIOD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QPictureIOD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QPictureIOD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK10QPictureIO7pictureEv
const QPicture &
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QPictureIO7pictureEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QPictureIO7pictureEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QPictureIO7pictureEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QPicture & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QPictureIO7pictureEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QPictureIO7pictureEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QPictureIO6statusEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QPictureIO6statusEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QPictureIO6statusEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QPictureIO6statusEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QPictureIO6statusEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QPictureIO6statusEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QPictureIO6formatEv
const char *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QPictureIO6formatEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QPictureIO6formatEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QPictureIO6formatEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const char * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QPictureIO6formatEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QPictureIO6formatEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QPictureIO8ioDeviceEv
QIODevice *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QPictureIO8ioDeviceEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QPictureIO8ioDeviceEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QPictureIO8ioDeviceEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QIODevice * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QPictureIO8ioDeviceEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QPictureIO8ioDeviceEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QPictureIO8fileNameEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QPictureIO8fileNameEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QPictureIO8fileNameEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QPictureIO8fileNameEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QPictureIO8fileNameEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QPictureIO8fileNameEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QPictureIO7qualityEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QPictureIO7qualityEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QPictureIO7qualityEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QPictureIO7qualityEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QPictureIO7qualityEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QPictureIO7qualityEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QPictureIO11descriptionEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QPictureIO11descriptionEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QPictureIO11descriptionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QPictureIO11descriptionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QPictureIO11descriptionEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QPictureIO11descriptionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QPictureIO10parametersEv
const char *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QPictureIO10parametersEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QPictureIO10parametersEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QPictureIO10parametersEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const char * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QPictureIO10parametersEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QPictureIO10parametersEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QPictureIO5gammaEv
float
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QPictureIO5gammaEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QPictureIO5gammaEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QPictureIO5gammaEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    float scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QPictureIO5gammaEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QPictureIO5gammaEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QPictureIO10setPictureERK8QPicture
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QPictureIO10setPictureERK8QPicture )( void *scorep_libwrap_arg_this, const QPicture & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN10QPictureIO10setPictureERK8QPicture );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QPictureIO10setPictureERK8QPicture );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QPictureIO10setPictureERK8QPicture, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QPictureIO10setPictureERK8QPicture );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QPictureIO9setStatusEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QPictureIO9setStatusEi )( void *scorep_libwrap_arg_this, int scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN10QPictureIO9setStatusEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QPictureIO9setStatusEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QPictureIO9setStatusEi, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QPictureIO9setStatusEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QPictureIO9setFormatEPKc
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QPictureIO9setFormatEPKc )( void *scorep_libwrap_arg_this, const char * scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN10QPictureIO9setFormatEPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QPictureIO9setFormatEPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QPictureIO9setFormatEPKc, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QPictureIO9setFormatEPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QPictureIO11setIODeviceEP9QIODevice
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QPictureIO11setIODeviceEP9QIODevice )( void *scorep_libwrap_arg_this, QIODevice * scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN10QPictureIO11setIODeviceEP9QIODevice );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QPictureIO11setIODeviceEP9QIODevice );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QPictureIO11setIODeviceEP9QIODevice, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QPictureIO11setIODeviceEP9QIODevice );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QPictureIO11setFileNameERK7QString
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QPictureIO11setFileNameERK7QString )( void *scorep_libwrap_arg_this, const QString & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN10QPictureIO11setFileNameERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QPictureIO11setFileNameERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QPictureIO11setFileNameERK7QString, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QPictureIO11setFileNameERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QPictureIO10setQualityEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QPictureIO10setQualityEi )( void *scorep_libwrap_arg_this, int scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN10QPictureIO10setQualityEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QPictureIO10setQualityEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QPictureIO10setQualityEi, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QPictureIO10setQualityEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QPictureIO14setDescriptionERK7QString
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QPictureIO14setDescriptionERK7QString )( void *scorep_libwrap_arg_this, const QString & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN10QPictureIO14setDescriptionERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QPictureIO14setDescriptionERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QPictureIO14setDescriptionERK7QString, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QPictureIO14setDescriptionERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QPictureIO13setParametersEPKc
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QPictureIO13setParametersEPKc )( void *scorep_libwrap_arg_this, const char * scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN10QPictureIO13setParametersEPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QPictureIO13setParametersEPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QPictureIO13setParametersEPKc, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QPictureIO13setParametersEPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QPictureIO8setGammaEf
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QPictureIO8setGammaEf )( void *scorep_libwrap_arg_this, float scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN10QPictureIO8setGammaEf );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QPictureIO8setGammaEf );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QPictureIO8setGammaEf, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QPictureIO8setGammaEf );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QPictureIO4readEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QPictureIO4readEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN10QPictureIO4readEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QPictureIO4readEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN10QPictureIO4readEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QPictureIO4readEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QPictureIO5writeEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QPictureIO5writeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN10QPictureIO5writeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QPictureIO5writeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN10QPictureIO5writeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QPictureIO5writeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QPictureIO13pictureFormatERK7QString
QByteArray
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QPictureIO13pictureFormatERK7QString )( const QString & fileName )
{
    LIBWRAP_EARLY_INIT( _ZN10QPictureIO13pictureFormatERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QPictureIO13pictureFormatERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QByteArray scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN10QPictureIO13pictureFormatERK7QString, ( fileName ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QPictureIO13pictureFormatERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QPictureIO13pictureFormatEP9QIODevice
QByteArray
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QPictureIO13pictureFormatEP9QIODevice )( QIODevice * scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN10QPictureIO13pictureFormatEP9QIODevice );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QPictureIO13pictureFormatEP9QIODevice );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QByteArray scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN10QPictureIO13pictureFormatEP9QIODevice, ( scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QPictureIO13pictureFormatEP9QIODevice );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QPictureIO12inputFormatsEv
QList<QByteArray>
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QPictureIO12inputFormatsEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN10QPictureIO12inputFormatsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QPictureIO12inputFormatsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QList<QByteArray> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN10QPictureIO12inputFormatsEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QPictureIO12inputFormatsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QPictureIO13outputFormatsEv
QList<QByteArray>
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QPictureIO13outputFormatsEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN10QPictureIO13outputFormatsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QPictureIO13outputFormatsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QList<QByteArray> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN10QPictureIO13outputFormatsEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QPictureIO13outputFormatsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QPictureIO15defineIOHandlerEPKcS1_S1_PFvPS_ES4_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QPictureIO15defineIOHandlerEPKcS1_S1_PFvPS_ES4_ )( const char * format, const char * header, const char * flags, picture_io_handler read_picture, picture_io_handler write_picture )
{
    LIBWRAP_EARLY_INIT( _ZN10QPictureIO15defineIOHandlerEPKcS1_S1_PFvPS_ES4_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QPictureIO15defineIOHandlerEPKcS1_S1_PFvPS_ES4_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QPictureIO15defineIOHandlerEPKcS1_S1_PFvPS_ES4_, ( format, header, flags, read_picture, write_picture ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QPictureIO15defineIOHandlerEPKcS1_S1_PFvPS_ES4_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK20QPictureFormatPlugin10metaObjectEv
const QMetaObject *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK20QPictureFormatPlugin10metaObjectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK20QPictureFormatPlugin10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK20QPictureFormatPlugin10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QMetaObject * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK20QPictureFormatPlugin10metaObjectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK20QPictureFormatPlugin10metaObjectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN20QPictureFormatPlugin11qt_metacastEPKc
void *
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QPictureFormatPlugin11qt_metacastEPKc )( void *scorep_libwrap_arg_this, const char * scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN20QPictureFormatPlugin11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QPictureFormatPlugin11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    void * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN20QPictureFormatPlugin11qt_metacastEPKc, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QPictureFormatPlugin11qt_metacastEPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN20QPictureFormatPlugin11qt_metacallEN11QMetaObject4CallEiPPv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QPictureFormatPlugin11qt_metacallEN11QMetaObject4CallEiPPv )( void *scorep_libwrap_arg_this, QMetaObject::Call scorep_libwrap_arg_1, int scorep_libwrap_arg_2, void ** scorep_libwrap_arg_3 )
{
    LIBWRAP_EARLY_INIT( _ZN20QPictureFormatPlugin11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QPictureFormatPlugin11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN20QPictureFormatPlugin11qt_metacallEN11QMetaObject4CallEiPPv, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, scorep_libwrap_arg_2, scorep_libwrap_arg_3 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QPictureFormatPlugin11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN20QPictureFormatPluginC2EP7QObject
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QPictureFormatPluginC2EP7QObject )( void *scorep_libwrap_arg_this, QObject * parent )
{
    LIBWRAP_EARLY_INIT( _ZN20QPictureFormatPluginC2EP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QPictureFormatPluginC2EP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QPictureFormatPluginC2EP7QObject, ( scorep_libwrap_arg_this, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QPictureFormatPluginC2EP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QPictureFormatPluginD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QPictureFormatPluginD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN20QPictureFormatPluginD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QPictureFormatPluginD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QPictureFormatPluginD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QPictureFormatPluginD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QPictureFormatPluginD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QPictureFormatPluginD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN20QPictureFormatPluginD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QPictureFormatPluginD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QPictureFormatPluginD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QPictureFormatPluginD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QPictureFormatPluginD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QPictureFormatPluginD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN20QPictureFormatPluginD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QPictureFormatPluginD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QPictureFormatPluginD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QPictureFormatPluginD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QPictureFormatPlugin11loadPictureERK7QStringS2_P8QPicture
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QPictureFormatPlugin11loadPictureERK7QStringS2_P8QPicture )( void *scorep_libwrap_arg_this, const QString & format, const QString & filename, QPicture * pic )
{
    LIBWRAP_EARLY_INIT( _ZN20QPictureFormatPlugin11loadPictureERK7QStringS2_P8QPicture );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QPictureFormatPlugin11loadPictureERK7QStringS2_P8QPicture );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN20QPictureFormatPlugin11loadPictureERK7QStringS2_P8QPicture, ( scorep_libwrap_arg_this, format, filename, pic ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QPictureFormatPlugin11loadPictureERK7QStringS2_P8QPicture );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN20QPictureFormatPlugin11savePictureERK7QStringS2_RK8QPicture
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QPictureFormatPlugin11savePictureERK7QStringS2_RK8QPicture )( void *scorep_libwrap_arg_this, const QString & format, const QString & filename, const QPicture & pic )
{
    LIBWRAP_EARLY_INIT( _ZN20QPictureFormatPlugin11savePictureERK7QStringS2_RK8QPicture );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QPictureFormatPlugin11savePictureERK7QStringS2_RK8QPicture );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN20QPictureFormatPlugin11savePictureERK7QStringS2_RK8QPicture, ( scorep_libwrap_arg_this, format, filename, pic ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QPictureFormatPlugin11savePictureERK7QStringS2_RK8QPicture );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QPixmapCache3KeyC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPixmapCache3KeyC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QPixmapCache3KeyC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPixmapCache3KeyC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPixmapCache3KeyC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPixmapCache3KeyC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QPixmapCache3KeyC1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPixmapCache3KeyC1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QPixmapCache3KeyC1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPixmapCache3KeyC1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPixmapCache3KeyC1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPixmapCache3KeyC1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QPixmapCache3KeyC2ERKS0_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPixmapCache3KeyC2ERKS0_ )( void *scorep_libwrap_arg_this, const QPixmapCache::Key & other )
{
    LIBWRAP_EARLY_INIT( _ZN12QPixmapCache3KeyC2ERKS0_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPixmapCache3KeyC2ERKS0_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPixmapCache3KeyC2ERKS0_, ( scorep_libwrap_arg_this, other ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPixmapCache3KeyC2ERKS0_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QPixmapCache3KeyC1ERKS0_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPixmapCache3KeyC1ERKS0_ )( void *scorep_libwrap_arg_this, const QPixmapCache::Key & other )
{
    LIBWRAP_EARLY_INIT( _ZN12QPixmapCache3KeyC1ERKS0_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPixmapCache3KeyC1ERKS0_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPixmapCache3KeyC1ERKS0_, ( scorep_libwrap_arg_this, other ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPixmapCache3KeyC1ERKS0_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK12QPixmapCache3KeyeqERKS0_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QPixmapCache3KeyeqERKS0_ )( void *scorep_libwrap_arg_this, const QPixmapCache::Key & key )
{
    LIBWRAP_EARLY_INIT( _ZNK12QPixmapCache3KeyeqERKS0_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QPixmapCache3KeyeqERKS0_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QPixmapCache3KeyeqERKS0_, ( scorep_libwrap_arg_this, key ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QPixmapCache3KeyeqERKS0_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QPixmapCache3KeyaSERKS0_
QPixmapCache::Key &
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPixmapCache3KeyaSERKS0_ )( void *scorep_libwrap_arg_this, const QPixmapCache::Key & other )
{
    LIBWRAP_EARLY_INIT( _ZN12QPixmapCache3KeyaSERKS0_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPixmapCache3KeyaSERKS0_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPixmapCache::Key & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPixmapCache3KeyaSERKS0_, ( scorep_libwrap_arg_this, other ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPixmapCache3KeyaSERKS0_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QPixmapCache10cacheLimitEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPixmapCache10cacheLimitEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN12QPixmapCache10cacheLimitEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPixmapCache10cacheLimitEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPixmapCache10cacheLimitEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPixmapCache10cacheLimitEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QPixmapCache13setCacheLimitEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPixmapCache13setCacheLimitEi )( int scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN12QPixmapCache13setCacheLimitEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPixmapCache13setCacheLimitEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPixmapCache13setCacheLimitEi, ( scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPixmapCache13setCacheLimitEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QPixmapCache4findERK7QString
QPixmap *
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPixmapCache4findERK7QString )( const QString & key )
{
    LIBWRAP_EARLY_INIT( _ZN12QPixmapCache4findERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPixmapCache4findERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPixmap * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPixmapCache4findERK7QString, ( key ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPixmapCache4findERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QPixmapCache4findERK7QStringR7QPixmap
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPixmapCache4findERK7QStringR7QPixmap )( const QString & key, QPixmap & pixmap )
{
    LIBWRAP_EARLY_INIT( _ZN12QPixmapCache4findERK7QStringR7QPixmap );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPixmapCache4findERK7QStringR7QPixmap );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPixmapCache4findERK7QStringR7QPixmap, ( key, pixmap ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPixmapCache4findERK7QStringR7QPixmap );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QPixmapCache4findERK7QStringP7QPixmap
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPixmapCache4findERK7QStringP7QPixmap )( const QString & key, QPixmap * pixmap )
{
    LIBWRAP_EARLY_INIT( _ZN12QPixmapCache4findERK7QStringP7QPixmap );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPixmapCache4findERK7QStringP7QPixmap );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPixmapCache4findERK7QStringP7QPixmap, ( key, pixmap ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPixmapCache4findERK7QStringP7QPixmap );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QPixmapCache4findERKNS_3KeyEP7QPixmap
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPixmapCache4findERKNS_3KeyEP7QPixmap )( const QPixmapCache::Key & key, QPixmap * pixmap )
{
    LIBWRAP_EARLY_INIT( _ZN12QPixmapCache4findERKNS_3KeyEP7QPixmap );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPixmapCache4findERKNS_3KeyEP7QPixmap );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPixmapCache4findERKNS_3KeyEP7QPixmap, ( key, pixmap ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPixmapCache4findERKNS_3KeyEP7QPixmap );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QPixmapCache6insertERK7QStringRK7QPixmap
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPixmapCache6insertERK7QStringRK7QPixmap )( const QString & key, const QPixmap & pixmap )
{
    LIBWRAP_EARLY_INIT( _ZN12QPixmapCache6insertERK7QStringRK7QPixmap );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPixmapCache6insertERK7QStringRK7QPixmap );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPixmapCache6insertERK7QStringRK7QPixmap, ( key, pixmap ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPixmapCache6insertERK7QStringRK7QPixmap );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QPixmapCache6insertERK7QPixmap
QPixmapCache::Key
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPixmapCache6insertERK7QPixmap )( const QPixmap & pixmap )
{
    LIBWRAP_EARLY_INIT( _ZN12QPixmapCache6insertERK7QPixmap );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPixmapCache6insertERK7QPixmap );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPixmapCache::Key scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPixmapCache6insertERK7QPixmap, ( pixmap ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPixmapCache6insertERK7QPixmap );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QPixmapCache7replaceERKNS_3KeyERK7QPixmap
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPixmapCache7replaceERKNS_3KeyERK7QPixmap )( const QPixmapCache::Key & key, const QPixmap & pixmap )
{
    LIBWRAP_EARLY_INIT( _ZN12QPixmapCache7replaceERKNS_3KeyERK7QPixmap );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPixmapCache7replaceERKNS_3KeyERK7QPixmap );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPixmapCache7replaceERKNS_3KeyERK7QPixmap, ( key, pixmap ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPixmapCache7replaceERKNS_3KeyERK7QPixmap );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QPixmapCache6removeERK7QString
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPixmapCache6removeERK7QString )( const QString & key )
{
    LIBWRAP_EARLY_INIT( _ZN12QPixmapCache6removeERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPixmapCache6removeERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPixmapCache6removeERK7QString, ( key ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPixmapCache6removeERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QPixmapCache6removeERKNS_3KeyE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPixmapCache6removeERKNS_3KeyE )( const QPixmapCache::Key & key )
{
    LIBWRAP_EARLY_INIT( _ZN12QPixmapCache6removeERKNS_3KeyE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPixmapCache6removeERKNS_3KeyE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPixmapCache6removeERKNS_3KeyE, ( key ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPixmapCache6removeERKNS_3KeyE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QPixmapCache5clearEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPixmapCache5clearEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN12QPixmapCache5clearEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPixmapCache5clearEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPixmapCache5clearEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPixmapCache5clearEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QBrushC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QBrushC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN6QBrushC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QBrushC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QBrushC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QBrushC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QBrushC1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QBrushC1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN6QBrushC1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QBrushC1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QBrushC1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QBrushC1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QBrushC2EN2Qt10BrushStyleE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QBrushC2EN2Qt10BrushStyleE )( void *scorep_libwrap_arg_this, Qt::BrushStyle bs )
{
    LIBWRAP_EARLY_INIT( _ZN6QBrushC2EN2Qt10BrushStyleE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QBrushC2EN2Qt10BrushStyleE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QBrushC2EN2Qt10BrushStyleE, ( scorep_libwrap_arg_this, bs ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QBrushC2EN2Qt10BrushStyleE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QBrushC1EN2Qt10BrushStyleE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QBrushC1EN2Qt10BrushStyleE )( void *scorep_libwrap_arg_this, Qt::BrushStyle bs )
{
    LIBWRAP_EARLY_INIT( _ZN6QBrushC1EN2Qt10BrushStyleE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QBrushC1EN2Qt10BrushStyleE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QBrushC1EN2Qt10BrushStyleE, ( scorep_libwrap_arg_this, bs ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QBrushC1EN2Qt10BrushStyleE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QBrushC2ERK6QColorN2Qt10BrushStyleE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QBrushC2ERK6QColorN2Qt10BrushStyleE )( void *scorep_libwrap_arg_this, const QColor & color, Qt::BrushStyle bs )
{
    LIBWRAP_EARLY_INIT( _ZN6QBrushC2ERK6QColorN2Qt10BrushStyleE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QBrushC2ERK6QColorN2Qt10BrushStyleE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QBrushC2ERK6QColorN2Qt10BrushStyleE, ( scorep_libwrap_arg_this, color, bs ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QBrushC2ERK6QColorN2Qt10BrushStyleE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QBrushC1ERK6QColorN2Qt10BrushStyleE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QBrushC1ERK6QColorN2Qt10BrushStyleE )( void *scorep_libwrap_arg_this, const QColor & color, Qt::BrushStyle bs )
{
    LIBWRAP_EARLY_INIT( _ZN6QBrushC1ERK6QColorN2Qt10BrushStyleE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QBrushC1ERK6QColorN2Qt10BrushStyleE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QBrushC1ERK6QColorN2Qt10BrushStyleE, ( scorep_libwrap_arg_this, color, bs ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QBrushC1ERK6QColorN2Qt10BrushStyleE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QBrushC2EN2Qt11GlobalColorENS0_10BrushStyleE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QBrushC2EN2Qt11GlobalColorENS0_10BrushStyleE )( void *scorep_libwrap_arg_this, Qt::GlobalColor color, Qt::BrushStyle bs )
{
    LIBWRAP_EARLY_INIT( _ZN6QBrushC2EN2Qt11GlobalColorENS0_10BrushStyleE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QBrushC2EN2Qt11GlobalColorENS0_10BrushStyleE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QBrushC2EN2Qt11GlobalColorENS0_10BrushStyleE, ( scorep_libwrap_arg_this, color, bs ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QBrushC2EN2Qt11GlobalColorENS0_10BrushStyleE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QBrushC1EN2Qt11GlobalColorENS0_10BrushStyleE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QBrushC1EN2Qt11GlobalColorENS0_10BrushStyleE )( void *scorep_libwrap_arg_this, Qt::GlobalColor color, Qt::BrushStyle bs )
{
    LIBWRAP_EARLY_INIT( _ZN6QBrushC1EN2Qt11GlobalColorENS0_10BrushStyleE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QBrushC1EN2Qt11GlobalColorENS0_10BrushStyleE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QBrushC1EN2Qt11GlobalColorENS0_10BrushStyleE, ( scorep_libwrap_arg_this, color, bs ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QBrushC1EN2Qt11GlobalColorENS0_10BrushStyleE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QBrushC2ERK6QColorRK7QPixmap
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QBrushC2ERK6QColorRK7QPixmap )( void *scorep_libwrap_arg_this, const QColor & color, const QPixmap & pixmap )
{
    LIBWRAP_EARLY_INIT( _ZN6QBrushC2ERK6QColorRK7QPixmap );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QBrushC2ERK6QColorRK7QPixmap );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QBrushC2ERK6QColorRK7QPixmap, ( scorep_libwrap_arg_this, color, pixmap ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QBrushC2ERK6QColorRK7QPixmap );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QBrushC1ERK6QColorRK7QPixmap
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QBrushC1ERK6QColorRK7QPixmap )( void *scorep_libwrap_arg_this, const QColor & color, const QPixmap & pixmap )
{
    LIBWRAP_EARLY_INIT( _ZN6QBrushC1ERK6QColorRK7QPixmap );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QBrushC1ERK6QColorRK7QPixmap );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QBrushC1ERK6QColorRK7QPixmap, ( scorep_libwrap_arg_this, color, pixmap ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QBrushC1ERK6QColorRK7QPixmap );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QBrushC2EN2Qt11GlobalColorERK7QPixmap
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QBrushC2EN2Qt11GlobalColorERK7QPixmap )( void *scorep_libwrap_arg_this, Qt::GlobalColor color, const QPixmap & pixmap )
{
    LIBWRAP_EARLY_INIT( _ZN6QBrushC2EN2Qt11GlobalColorERK7QPixmap );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QBrushC2EN2Qt11GlobalColorERK7QPixmap );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QBrushC2EN2Qt11GlobalColorERK7QPixmap, ( scorep_libwrap_arg_this, color, pixmap ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QBrushC2EN2Qt11GlobalColorERK7QPixmap );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QBrushC1EN2Qt11GlobalColorERK7QPixmap
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QBrushC1EN2Qt11GlobalColorERK7QPixmap )( void *scorep_libwrap_arg_this, Qt::GlobalColor color, const QPixmap & pixmap )
{
    LIBWRAP_EARLY_INIT( _ZN6QBrushC1EN2Qt11GlobalColorERK7QPixmap );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QBrushC1EN2Qt11GlobalColorERK7QPixmap );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QBrushC1EN2Qt11GlobalColorERK7QPixmap, ( scorep_libwrap_arg_this, color, pixmap ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QBrushC1EN2Qt11GlobalColorERK7QPixmap );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QBrushC2ERK7QPixmap
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QBrushC2ERK7QPixmap )( void *scorep_libwrap_arg_this, const QPixmap & pixmap )
{
    LIBWRAP_EARLY_INIT( _ZN6QBrushC2ERK7QPixmap );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QBrushC2ERK7QPixmap );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QBrushC2ERK7QPixmap, ( scorep_libwrap_arg_this, pixmap ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QBrushC2ERK7QPixmap );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QBrushC1ERK7QPixmap
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QBrushC1ERK7QPixmap )( void *scorep_libwrap_arg_this, const QPixmap & pixmap )
{
    LIBWRAP_EARLY_INIT( _ZN6QBrushC1ERK7QPixmap );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QBrushC1ERK7QPixmap );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QBrushC1ERK7QPixmap, ( scorep_libwrap_arg_this, pixmap ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QBrushC1ERK7QPixmap );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QBrushC2ERK6QImage
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QBrushC2ERK6QImage )( void *scorep_libwrap_arg_this, const QImage & image )
{
    LIBWRAP_EARLY_INIT( _ZN6QBrushC2ERK6QImage );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QBrushC2ERK6QImage );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QBrushC2ERK6QImage, ( scorep_libwrap_arg_this, image ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QBrushC2ERK6QImage );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QBrushC1ERK6QImage
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QBrushC1ERK6QImage )( void *scorep_libwrap_arg_this, const QImage & image )
{
    LIBWRAP_EARLY_INIT( _ZN6QBrushC1ERK6QImage );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QBrushC1ERK6QImage );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QBrushC1ERK6QImage, ( scorep_libwrap_arg_this, image ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QBrushC1ERK6QImage );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QBrushC2ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QBrushC2ERKS_ )( void *scorep_libwrap_arg_this, const QBrush & brush )
{
    LIBWRAP_EARLY_INIT( _ZN6QBrushC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QBrushC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QBrushC2ERKS_, ( scorep_libwrap_arg_this, brush ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QBrushC2ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QBrushC1ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QBrushC1ERKS_ )( void *scorep_libwrap_arg_this, const QBrush & brush )
{
    LIBWRAP_EARLY_INIT( _ZN6QBrushC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QBrushC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QBrushC1ERKS_, ( scorep_libwrap_arg_this, brush ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QBrushC1ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QBrushC2ERK9QGradient
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QBrushC2ERK9QGradient )( void *scorep_libwrap_arg_this, const QGradient & gradient )
{
    LIBWRAP_EARLY_INIT( _ZN6QBrushC2ERK9QGradient );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QBrushC2ERK9QGradient );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QBrushC2ERK9QGradient, ( scorep_libwrap_arg_this, gradient ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QBrushC2ERK9QGradient );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QBrushC1ERK9QGradient
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QBrushC1ERK9QGradient )( void *scorep_libwrap_arg_this, const QGradient & gradient )
{
    LIBWRAP_EARLY_INIT( _ZN6QBrushC1ERK9QGradient );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QBrushC1ERK9QGradient );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QBrushC1ERK9QGradient, ( scorep_libwrap_arg_this, gradient ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QBrushC1ERK9QGradient );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QBrushD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QBrushD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN6QBrushD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QBrushD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QBrushD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QBrushD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QBrushD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QBrushD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN6QBrushD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QBrushD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QBrushD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QBrushD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QBrushaSERKS_
QBrush &
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QBrushaSERKS_ )( void *scorep_libwrap_arg_this, const QBrush & brush )
{
    LIBWRAP_EARLY_INIT( _ZN6QBrushaSERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QBrushaSERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QBrush & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN6QBrushaSERKS_, ( scorep_libwrap_arg_this, brush ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QBrushaSERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QBrush8setStyleEN2Qt10BrushStyleE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QBrush8setStyleEN2Qt10BrushStyleE )( void *scorep_libwrap_arg_this, Qt::BrushStyle scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN6QBrush8setStyleEN2Qt10BrushStyleE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QBrush8setStyleEN2Qt10BrushStyleE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QBrush8setStyleEN2Qt10BrushStyleE, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QBrush8setStyleEN2Qt10BrushStyleE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QBrush9setMatrixERK7QMatrix
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QBrush9setMatrixERK7QMatrix )( void *scorep_libwrap_arg_this, const QMatrix & mat )
{
    LIBWRAP_EARLY_INIT( _ZN6QBrush9setMatrixERK7QMatrix );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QBrush9setMatrixERK7QMatrix );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QBrush9setMatrixERK7QMatrix, ( scorep_libwrap_arg_this, mat ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QBrush9setMatrixERK7QMatrix );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QBrush12setTransformERK10QTransform
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QBrush12setTransformERK10QTransform )( void *scorep_libwrap_arg_this, const QTransform & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN6QBrush12setTransformERK10QTransform );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QBrush12setTransformERK10QTransform );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QBrush12setTransformERK10QTransform, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QBrush12setTransformERK10QTransform );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK6QBrush7textureEv
QPixmap
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QBrush7textureEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QBrush7textureEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QBrush7textureEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPixmap scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QBrush7textureEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QBrush7textureEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QBrush10setTextureERK7QPixmap
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QBrush10setTextureERK7QPixmap )( void *scorep_libwrap_arg_this, const QPixmap & pixmap )
{
    LIBWRAP_EARLY_INIT( _ZN6QBrush10setTextureERK7QPixmap );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QBrush10setTextureERK7QPixmap );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QBrush10setTextureERK7QPixmap, ( scorep_libwrap_arg_this, pixmap ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QBrush10setTextureERK7QPixmap );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK6QBrush12textureImageEv
QImage
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QBrush12textureImageEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QBrush12textureImageEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QBrush12textureImageEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QImage scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QBrush12textureImageEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QBrush12textureImageEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN6QBrush15setTextureImageERK6QImage
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QBrush15setTextureImageERK6QImage )( void *scorep_libwrap_arg_this, const QImage & image )
{
    LIBWRAP_EARLY_INIT( _ZN6QBrush15setTextureImageERK6QImage );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QBrush15setTextureImageERK6QImage );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QBrush15setTextureImageERK6QImage, ( scorep_libwrap_arg_this, image ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QBrush15setTextureImageERK6QImage );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN6QBrush8setColorERK6QColor
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN6QBrush8setColorERK6QColor )( void *scorep_libwrap_arg_this, const QColor & color )
{
    LIBWRAP_EARLY_INIT( _ZN6QBrush8setColorERK6QColor );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN6QBrush8setColorERK6QColor );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN6QBrush8setColorERK6QColor, ( scorep_libwrap_arg_this, color ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN6QBrush8setColorERK6QColor );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK6QBrush8gradientEv
const QGradient *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QBrush8gradientEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QBrush8gradientEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QBrush8gradientEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QGradient * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QBrush8gradientEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QBrush8gradientEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QBrush8isOpaqueEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QBrush8isOpaqueEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK6QBrush8isOpaqueEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QBrush8isOpaqueEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QBrush8isOpaqueEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QBrush8isOpaqueEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK6QBrusheqERKS_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK6QBrusheqERKS_ )( void *scorep_libwrap_arg_this, const QBrush & b )
{
    LIBWRAP_EARLY_INIT( _ZNK6QBrusheqERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK6QBrusheqERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK6QBrusheqERKS_, ( scorep_libwrap_arg_this, b ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK6QBrusheqERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _Z17qHasPixmapTextureRK6QBrush
bool
SCOREP_LIBWRAP_FUNC_NAME( _Z17qHasPixmapTextureRK6QBrush )( const QBrush & brush )
{
    LIBWRAP_EARLY_INIT( _Z17qHasPixmapTextureRK6QBrush );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _Z17qHasPixmapTextureRK6QBrush );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _Z17qHasPixmapTextureRK6QBrush, ( brush ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _Z17qHasPixmapTextureRK6QBrush );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZrsR11QDataStreamR6QBrush
QDataStream &
SCOREP_LIBWRAP_FUNC_NAME( _ZrsR11QDataStreamR6QBrush )( QDataStream & scorep_libwrap_arg_1, QBrush & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _ZrsR11QDataStreamR6QBrush );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZrsR11QDataStreamR6QBrush );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDataStream & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZrsR11QDataStreamR6QBrush, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZrsR11QDataStreamR6QBrush );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _Zls6QDebugRK6QBrush
QDebug
SCOREP_LIBWRAP_FUNC_NAME( _Zls6QDebugRK6QBrush )( QDebug scorep_libwrap_arg_1, const QBrush & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _Zls6QDebugRK6QBrush );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _Zls6QDebugRK6QBrush );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDebug scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _Zls6QDebugRK6QBrush, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _Zls6QDebugRK6QBrush );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN9QGradientC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QGradientC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN9QGradientC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QGradientC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QGradientC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QGradientC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QGradientC1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QGradientC1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN9QGradientC1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QGradientC1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QGradientC1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QGradientC1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QGradient10setColorAtEdRK6QColor
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QGradient10setColorAtEdRK6QColor )( void *scorep_libwrap_arg_this, qreal pos, const QColor & color )
{
    LIBWRAP_EARLY_INIT( _ZN9QGradient10setColorAtEdRK6QColor );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QGradient10setColorAtEdRK6QColor );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QGradient10setColorAtEdRK6QColor, ( scorep_libwrap_arg_this, pos, color ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QGradient10setColorAtEdRK6QColor );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QGradient8setStopsERK7QVectorI5QPairId6QColorEE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QGradient8setStopsERK7QVectorI5QPairId6QColorEE )( void *scorep_libwrap_arg_this, const QGradientStops & stops )
{
    LIBWRAP_EARLY_INIT( _ZN9QGradient8setStopsERK7QVectorI5QPairId6QColorEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QGradient8setStopsERK7QVectorI5QPairId6QColorEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QGradient8setStopsERK7QVectorI5QPairId6QColorEE, ( scorep_libwrap_arg_this, stops ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QGradient8setStopsERK7QVectorI5QPairId6QColorEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK9QGradient5stopsEv
QGradientStops
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QGradient5stopsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QGradient5stopsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QGradient5stopsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QGradientStops scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QGradient5stopsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QGradient5stopsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QGradient14coordinateModeEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QGradient14coordinateModeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QGradient14coordinateModeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QGradient14coordinateModeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QGradient14coordinateModeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QGradient14coordinateModeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QGradient17interpolationModeEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QGradient17interpolationModeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QGradient17interpolationModeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QGradient17interpolationModeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QGradient17interpolationModeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QGradient17interpolationModeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QGradienteqERKS_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QGradienteqERKS_ )( void *scorep_libwrap_arg_this, const QGradient & gradient )
{
    LIBWRAP_EARLY_INIT( _ZNK9QGradienteqERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QGradienteqERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QGradienteqERKS_, ( scorep_libwrap_arg_this, gradient ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QGradienteqERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QLinearGradientC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QLinearGradientC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN15QLinearGradientC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QLinearGradientC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QLinearGradientC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QLinearGradientC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QLinearGradientC1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QLinearGradientC1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN15QLinearGradientC1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QLinearGradientC1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QLinearGradientC1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QLinearGradientC1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QLinearGradientC2ERK7QPointFS2_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QLinearGradientC2ERK7QPointFS2_ )( void *scorep_libwrap_arg_this, const QPointF & start, const QPointF & finalStop )
{
    LIBWRAP_EARLY_INIT( _ZN15QLinearGradientC2ERK7QPointFS2_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QLinearGradientC2ERK7QPointFS2_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QLinearGradientC2ERK7QPointFS2_, ( scorep_libwrap_arg_this, start, finalStop ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QLinearGradientC2ERK7QPointFS2_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QLinearGradientC1ERK7QPointFS2_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QLinearGradientC1ERK7QPointFS2_ )( void *scorep_libwrap_arg_this, const QPointF & start, const QPointF & finalStop )
{
    LIBWRAP_EARLY_INIT( _ZN15QLinearGradientC1ERK7QPointFS2_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QLinearGradientC1ERK7QPointFS2_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QLinearGradientC1ERK7QPointFS2_, ( scorep_libwrap_arg_this, start, finalStop ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QLinearGradientC1ERK7QPointFS2_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QLinearGradientC2Edddd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QLinearGradientC2Edddd )( void *scorep_libwrap_arg_this, qreal xStart, qreal yStart, qreal xFinalStop, qreal yFinalStop )
{
    LIBWRAP_EARLY_INIT( _ZN15QLinearGradientC2Edddd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QLinearGradientC2Edddd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QLinearGradientC2Edddd, ( scorep_libwrap_arg_this, xStart, yStart, xFinalStop, yFinalStop ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QLinearGradientC2Edddd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QLinearGradientC1Edddd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QLinearGradientC1Edddd )( void *scorep_libwrap_arg_this, qreal xStart, qreal yStart, qreal xFinalStop, qreal yFinalStop )
{
    LIBWRAP_EARLY_INIT( _ZN15QLinearGradientC1Edddd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QLinearGradientC1Edddd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QLinearGradientC1Edddd, ( scorep_libwrap_arg_this, xStart, yStart, xFinalStop, yFinalStop ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QLinearGradientC1Edddd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK15QLinearGradient5startEv
QPointF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK15QLinearGradient5startEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK15QLinearGradient5startEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK15QLinearGradient5startEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPointF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK15QLinearGradient5startEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK15QLinearGradient5startEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QLinearGradient8setStartERK7QPointF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QLinearGradient8setStartERK7QPointF )( void *scorep_libwrap_arg_this, const QPointF & start )
{
    LIBWRAP_EARLY_INIT( _ZN15QLinearGradient8setStartERK7QPointF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QLinearGradient8setStartERK7QPointF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QLinearGradient8setStartERK7QPointF, ( scorep_libwrap_arg_this, start ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QLinearGradient8setStartERK7QPointF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK15QLinearGradient9finalStopEv
QPointF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK15QLinearGradient9finalStopEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK15QLinearGradient9finalStopEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK15QLinearGradient9finalStopEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPointF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK15QLinearGradient9finalStopEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK15QLinearGradient9finalStopEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QLinearGradient12setFinalStopERK7QPointF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QLinearGradient12setFinalStopERK7QPointF )( void *scorep_libwrap_arg_this, const QPointF & stop )
{
    LIBWRAP_EARLY_INIT( _ZN15QLinearGradient12setFinalStopERK7QPointF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QLinearGradient12setFinalStopERK7QPointF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QLinearGradient12setFinalStopERK7QPointF, ( scorep_libwrap_arg_this, stop ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QLinearGradient12setFinalStopERK7QPointF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QRadialGradientC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QRadialGradientC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN15QRadialGradientC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QRadialGradientC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QRadialGradientC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QRadialGradientC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QRadialGradientC1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QRadialGradientC1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN15QRadialGradientC1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QRadialGradientC1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QRadialGradientC1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QRadialGradientC1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QRadialGradientC2ERK7QPointFdS2_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QRadialGradientC2ERK7QPointFdS2_ )( void *scorep_libwrap_arg_this, const QPointF & center, qreal radius, const QPointF & focalPoint )
{
    LIBWRAP_EARLY_INIT( _ZN15QRadialGradientC2ERK7QPointFdS2_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QRadialGradientC2ERK7QPointFdS2_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QRadialGradientC2ERK7QPointFdS2_, ( scorep_libwrap_arg_this, center, radius, focalPoint ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QRadialGradientC2ERK7QPointFdS2_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QRadialGradientC1ERK7QPointFdS2_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QRadialGradientC1ERK7QPointFdS2_ )( void *scorep_libwrap_arg_this, const QPointF & center, qreal radius, const QPointF & focalPoint )
{
    LIBWRAP_EARLY_INIT( _ZN15QRadialGradientC1ERK7QPointFdS2_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QRadialGradientC1ERK7QPointFdS2_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QRadialGradientC1ERK7QPointFdS2_, ( scorep_libwrap_arg_this, center, radius, focalPoint ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QRadialGradientC1ERK7QPointFdS2_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QRadialGradientC2Eddddd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QRadialGradientC2Eddddd )( void *scorep_libwrap_arg_this, qreal cx, qreal cy, qreal radius, qreal fx, qreal fy )
{
    LIBWRAP_EARLY_INIT( _ZN15QRadialGradientC2Eddddd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QRadialGradientC2Eddddd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QRadialGradientC2Eddddd, ( scorep_libwrap_arg_this, cx, cy, radius, fx, fy ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QRadialGradientC2Eddddd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QRadialGradientC1Eddddd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QRadialGradientC1Eddddd )( void *scorep_libwrap_arg_this, qreal cx, qreal cy, qreal radius, qreal fx, qreal fy )
{
    LIBWRAP_EARLY_INIT( _ZN15QRadialGradientC1Eddddd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QRadialGradientC1Eddddd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QRadialGradientC1Eddddd, ( scorep_libwrap_arg_this, cx, cy, radius, fx, fy ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QRadialGradientC1Eddddd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QRadialGradientC2ERK7QPointFd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QRadialGradientC2ERK7QPointFd )( void *scorep_libwrap_arg_this, const QPointF & center, qreal radius )
{
    LIBWRAP_EARLY_INIT( _ZN15QRadialGradientC2ERK7QPointFd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QRadialGradientC2ERK7QPointFd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QRadialGradientC2ERK7QPointFd, ( scorep_libwrap_arg_this, center, radius ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QRadialGradientC2ERK7QPointFd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QRadialGradientC1ERK7QPointFd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QRadialGradientC1ERK7QPointFd )( void *scorep_libwrap_arg_this, const QPointF & center, qreal radius )
{
    LIBWRAP_EARLY_INIT( _ZN15QRadialGradientC1ERK7QPointFd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QRadialGradientC1ERK7QPointFd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QRadialGradientC1ERK7QPointFd, ( scorep_libwrap_arg_this, center, radius ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QRadialGradientC1ERK7QPointFd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QRadialGradientC2Eddd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QRadialGradientC2Eddd )( void *scorep_libwrap_arg_this, qreal cx, qreal cy, qreal radius )
{
    LIBWRAP_EARLY_INIT( _ZN15QRadialGradientC2Eddd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QRadialGradientC2Eddd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QRadialGradientC2Eddd, ( scorep_libwrap_arg_this, cx, cy, radius ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QRadialGradientC2Eddd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QRadialGradientC1Eddd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QRadialGradientC1Eddd )( void *scorep_libwrap_arg_this, qreal cx, qreal cy, qreal radius )
{
    LIBWRAP_EARLY_INIT( _ZN15QRadialGradientC1Eddd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QRadialGradientC1Eddd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QRadialGradientC1Eddd, ( scorep_libwrap_arg_this, cx, cy, radius ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QRadialGradientC1Eddd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QRadialGradientC2ERK7QPointFdS2_d
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QRadialGradientC2ERK7QPointFdS2_d )( void *scorep_libwrap_arg_this, const QPointF & center, qreal centerRadius, const QPointF & focalPoint, qreal focalRadius )
{
    LIBWRAP_EARLY_INIT( _ZN15QRadialGradientC2ERK7QPointFdS2_d );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QRadialGradientC2ERK7QPointFdS2_d );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QRadialGradientC2ERK7QPointFdS2_d, ( scorep_libwrap_arg_this, center, centerRadius, focalPoint, focalRadius ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QRadialGradientC2ERK7QPointFdS2_d );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QRadialGradientC1ERK7QPointFdS2_d
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QRadialGradientC1ERK7QPointFdS2_d )( void *scorep_libwrap_arg_this, const QPointF & center, qreal centerRadius, const QPointF & focalPoint, qreal focalRadius )
{
    LIBWRAP_EARLY_INIT( _ZN15QRadialGradientC1ERK7QPointFdS2_d );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QRadialGradientC1ERK7QPointFdS2_d );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QRadialGradientC1ERK7QPointFdS2_d, ( scorep_libwrap_arg_this, center, centerRadius, focalPoint, focalRadius ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QRadialGradientC1ERK7QPointFdS2_d );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QRadialGradientC2Edddddd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QRadialGradientC2Edddddd )( void *scorep_libwrap_arg_this, qreal cx, qreal cy, qreal centerRadius, qreal fx, qreal fy, qreal focalRadius )
{
    LIBWRAP_EARLY_INIT( _ZN15QRadialGradientC2Edddddd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QRadialGradientC2Edddddd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QRadialGradientC2Edddddd, ( scorep_libwrap_arg_this, cx, cy, centerRadius, fx, fy, focalRadius ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QRadialGradientC2Edddddd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QRadialGradientC1Edddddd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QRadialGradientC1Edddddd )( void *scorep_libwrap_arg_this, qreal cx, qreal cy, qreal centerRadius, qreal fx, qreal fy, qreal focalRadius )
{
    LIBWRAP_EARLY_INIT( _ZN15QRadialGradientC1Edddddd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QRadialGradientC1Edddddd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QRadialGradientC1Edddddd, ( scorep_libwrap_arg_this, cx, cy, centerRadius, fx, fy, focalRadius ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QRadialGradientC1Edddddd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK15QRadialGradient6centerEv
QPointF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK15QRadialGradient6centerEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK15QRadialGradient6centerEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK15QRadialGradient6centerEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPointF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK15QRadialGradient6centerEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK15QRadialGradient6centerEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QRadialGradient9setCenterERK7QPointF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QRadialGradient9setCenterERK7QPointF )( void *scorep_libwrap_arg_this, const QPointF & center )
{
    LIBWRAP_EARLY_INIT( _ZN15QRadialGradient9setCenterERK7QPointF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QRadialGradient9setCenterERK7QPointF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QRadialGradient9setCenterERK7QPointF, ( scorep_libwrap_arg_this, center ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QRadialGradient9setCenterERK7QPointF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK15QRadialGradient10focalPointEv
QPointF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK15QRadialGradient10focalPointEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK15QRadialGradient10focalPointEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK15QRadialGradient10focalPointEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPointF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK15QRadialGradient10focalPointEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK15QRadialGradient10focalPointEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QRadialGradient13setFocalPointERK7QPointF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QRadialGradient13setFocalPointERK7QPointF )( void *scorep_libwrap_arg_this, const QPointF & focalPoint )
{
    LIBWRAP_EARLY_INIT( _ZN15QRadialGradient13setFocalPointERK7QPointF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QRadialGradient13setFocalPointERK7QPointF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QRadialGradient13setFocalPointERK7QPointF, ( scorep_libwrap_arg_this, focalPoint ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QRadialGradient13setFocalPointERK7QPointF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK15QRadialGradient6radiusEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK15QRadialGradient6radiusEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK15QRadialGradient6radiusEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK15QRadialGradient6radiusEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK15QRadialGradient6radiusEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK15QRadialGradient6radiusEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QRadialGradient9setRadiusEd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QRadialGradient9setRadiusEd )( void *scorep_libwrap_arg_this, qreal radius )
{
    LIBWRAP_EARLY_INIT( _ZN15QRadialGradient9setRadiusEd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QRadialGradient9setRadiusEd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QRadialGradient9setRadiusEd, ( scorep_libwrap_arg_this, radius ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QRadialGradient9setRadiusEd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK15QRadialGradient12centerRadiusEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK15QRadialGradient12centerRadiusEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK15QRadialGradient12centerRadiusEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK15QRadialGradient12centerRadiusEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK15QRadialGradient12centerRadiusEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK15QRadialGradient12centerRadiusEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QRadialGradient15setCenterRadiusEd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QRadialGradient15setCenterRadiusEd )( void *scorep_libwrap_arg_this, qreal radius )
{
    LIBWRAP_EARLY_INIT( _ZN15QRadialGradient15setCenterRadiusEd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QRadialGradient15setCenterRadiusEd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QRadialGradient15setCenterRadiusEd, ( scorep_libwrap_arg_this, radius ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QRadialGradient15setCenterRadiusEd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK15QRadialGradient11focalRadiusEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK15QRadialGradient11focalRadiusEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK15QRadialGradient11focalRadiusEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK15QRadialGradient11focalRadiusEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK15QRadialGradient11focalRadiusEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK15QRadialGradient11focalRadiusEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QRadialGradient14setFocalRadiusEd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QRadialGradient14setFocalRadiusEd )( void *scorep_libwrap_arg_this, qreal radius )
{
    LIBWRAP_EARLY_INIT( _ZN15QRadialGradient14setFocalRadiusEd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QRadialGradient14setFocalRadiusEd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QRadialGradient14setFocalRadiusEd, ( scorep_libwrap_arg_this, radius ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QRadialGradient14setFocalRadiusEd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN16QConicalGradientC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN16QConicalGradientC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN16QConicalGradientC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN16QConicalGradientC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN16QConicalGradientC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN16QConicalGradientC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN16QConicalGradientC1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN16QConicalGradientC1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN16QConicalGradientC1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN16QConicalGradientC1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN16QConicalGradientC1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN16QConicalGradientC1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN16QConicalGradientC2ERK7QPointFd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN16QConicalGradientC2ERK7QPointFd )( void *scorep_libwrap_arg_this, const QPointF & center, qreal startAngle )
{
    LIBWRAP_EARLY_INIT( _ZN16QConicalGradientC2ERK7QPointFd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN16QConicalGradientC2ERK7QPointFd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN16QConicalGradientC2ERK7QPointFd, ( scorep_libwrap_arg_this, center, startAngle ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN16QConicalGradientC2ERK7QPointFd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN16QConicalGradientC1ERK7QPointFd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN16QConicalGradientC1ERK7QPointFd )( void *scorep_libwrap_arg_this, const QPointF & center, qreal startAngle )
{
    LIBWRAP_EARLY_INIT( _ZN16QConicalGradientC1ERK7QPointFd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN16QConicalGradientC1ERK7QPointFd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN16QConicalGradientC1ERK7QPointFd, ( scorep_libwrap_arg_this, center, startAngle ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN16QConicalGradientC1ERK7QPointFd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN16QConicalGradientC2Eddd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN16QConicalGradientC2Eddd )( void *scorep_libwrap_arg_this, qreal cx, qreal cy, qreal startAngle )
{
    LIBWRAP_EARLY_INIT( _ZN16QConicalGradientC2Eddd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN16QConicalGradientC2Eddd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN16QConicalGradientC2Eddd, ( scorep_libwrap_arg_this, cx, cy, startAngle ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN16QConicalGradientC2Eddd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN16QConicalGradientC1Eddd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN16QConicalGradientC1Eddd )( void *scorep_libwrap_arg_this, qreal cx, qreal cy, qreal startAngle )
{
    LIBWRAP_EARLY_INIT( _ZN16QConicalGradientC1Eddd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN16QConicalGradientC1Eddd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN16QConicalGradientC1Eddd, ( scorep_libwrap_arg_this, cx, cy, startAngle ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN16QConicalGradientC1Eddd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK16QConicalGradient6centerEv
QPointF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK16QConicalGradient6centerEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK16QConicalGradient6centerEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK16QConicalGradient6centerEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPointF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK16QConicalGradient6centerEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK16QConicalGradient6centerEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN16QConicalGradient9setCenterERK7QPointF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN16QConicalGradient9setCenterERK7QPointF )( void *scorep_libwrap_arg_this, const QPointF & center )
{
    LIBWRAP_EARLY_INIT( _ZN16QConicalGradient9setCenterERK7QPointF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN16QConicalGradient9setCenterERK7QPointF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN16QConicalGradient9setCenterERK7QPointF, ( scorep_libwrap_arg_this, center ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN16QConicalGradient9setCenterERK7QPointF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK16QConicalGradient5angleEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK16QConicalGradient5angleEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK16QConicalGradient5angleEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK16QConicalGradient5angleEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK16QConicalGradient5angleEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK16QConicalGradient5angleEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN16QConicalGradient8setAngleEd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN16QConicalGradient8setAngleEd )( void *scorep_libwrap_arg_this, qreal angle )
{
    LIBWRAP_EARLY_INIT( _ZN16QConicalGradient8setAngleEd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN16QConicalGradient8setAngleEd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN16QConicalGradient8setAngleEd, ( scorep_libwrap_arg_this, angle ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN16QConicalGradient8setAngleEd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN5QFontC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QFontC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN5QFontC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QFontC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QFontC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QFontC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN5QFontC1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QFontC1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN5QFontC1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QFontC1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QFontC1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QFontC1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN5QFontC2ERK7QStringiib
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QFontC2ERK7QStringiib )( void *scorep_libwrap_arg_this, const QString & family, int pointSize, int weight, bool italic )
{
    LIBWRAP_EARLY_INIT( _ZN5QFontC2ERK7QStringiib );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QFontC2ERK7QStringiib );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QFontC2ERK7QStringiib, ( scorep_libwrap_arg_this, family, pointSize, weight, italic ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QFontC2ERK7QStringiib );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN5QFontC1ERK7QStringiib
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QFontC1ERK7QStringiib )( void *scorep_libwrap_arg_this, const QString & family, int pointSize, int weight, bool italic )
{
    LIBWRAP_EARLY_INIT( _ZN5QFontC1ERK7QStringiib );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QFontC1ERK7QStringiib );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QFontC1ERK7QStringiib, ( scorep_libwrap_arg_this, family, pointSize, weight, italic ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QFontC1ERK7QStringiib );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN5QFontC2ERKS_P12QPaintDevice
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QFontC2ERKS_P12QPaintDevice )( void *scorep_libwrap_arg_this, const QFont & scorep_libwrap_arg_1, QPaintDevice * pd )
{
    LIBWRAP_EARLY_INIT( _ZN5QFontC2ERKS_P12QPaintDevice );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QFontC2ERKS_P12QPaintDevice );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QFontC2ERKS_P12QPaintDevice, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, pd ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QFontC2ERKS_P12QPaintDevice );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN5QFontC1ERKS_P12QPaintDevice
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QFontC1ERKS_P12QPaintDevice )( void *scorep_libwrap_arg_this, const QFont & scorep_libwrap_arg_1, QPaintDevice * pd )
{
    LIBWRAP_EARLY_INIT( _ZN5QFontC1ERKS_P12QPaintDevice );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QFontC1ERKS_P12QPaintDevice );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QFontC1ERKS_P12QPaintDevice, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, pd ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QFontC1ERKS_P12QPaintDevice );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN5QFontC2ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QFontC2ERKS_ )( void *scorep_libwrap_arg_this, const QFont & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN5QFontC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QFontC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QFontC2ERKS_, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QFontC2ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN5QFontC1ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QFontC1ERKS_ )( void *scorep_libwrap_arg_this, const QFont & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN5QFontC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QFontC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QFontC1ERKS_, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QFontC1ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN5QFontD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QFontD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN5QFontD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QFontD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QFontD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QFontD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN5QFontD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QFontD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN5QFontD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QFontD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QFontD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QFontD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK5QFont6familyEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK5QFont6familyEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK5QFont6familyEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK5QFont6familyEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK5QFont6familyEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK5QFont6familyEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN5QFont9setFamilyERK7QString
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QFont9setFamilyERK7QString )( void *scorep_libwrap_arg_this, const QString & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN5QFont9setFamilyERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QFont9setFamilyERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QFont9setFamilyERK7QString, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QFont9setFamilyERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK5QFont9styleNameEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK5QFont9styleNameEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK5QFont9styleNameEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK5QFont9styleNameEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK5QFont9styleNameEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK5QFont9styleNameEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN5QFont12setStyleNameERK7QString
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QFont12setStyleNameERK7QString )( void *scorep_libwrap_arg_this, const QString & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN5QFont12setStyleNameERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QFont12setStyleNameERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QFont12setStyleNameERK7QString, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QFont12setStyleNameERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK5QFont9pointSizeEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK5QFont9pointSizeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK5QFont9pointSizeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK5QFont9pointSizeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK5QFont9pointSizeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK5QFont9pointSizeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN5QFont12setPointSizeEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QFont12setPointSizeEi )( void *scorep_libwrap_arg_this, int scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN5QFont12setPointSizeEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QFont12setPointSizeEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QFont12setPointSizeEi, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QFont12setPointSizeEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK5QFont10pointSizeFEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK5QFont10pointSizeFEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK5QFont10pointSizeFEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK5QFont10pointSizeFEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK5QFont10pointSizeFEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK5QFont10pointSizeFEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN5QFont13setPointSizeFEd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QFont13setPointSizeFEd )( void *scorep_libwrap_arg_this, qreal scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN5QFont13setPointSizeFEd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QFont13setPointSizeFEd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QFont13setPointSizeFEd, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QFont13setPointSizeFEd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK5QFont9pixelSizeEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK5QFont9pixelSizeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK5QFont9pixelSizeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK5QFont9pixelSizeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK5QFont9pixelSizeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK5QFont9pixelSizeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN5QFont12setPixelSizeEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QFont12setPixelSizeEi )( void *scorep_libwrap_arg_this, int scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN5QFont12setPixelSizeEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QFont12setPixelSizeEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QFont12setPixelSizeEi, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QFont12setPixelSizeEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK5QFont6weightEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK5QFont6weightEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK5QFont6weightEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK5QFont6weightEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK5QFont6weightEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK5QFont6weightEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN5QFont9setWeightEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QFont9setWeightEi )( void *scorep_libwrap_arg_this, int scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN5QFont9setWeightEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QFont9setWeightEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QFont9setWeightEi, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QFont9setWeightEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN5QFont8setStyleENS_5StyleE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QFont8setStyleENS_5StyleE )( void *scorep_libwrap_arg_this, QFont::Style style )
{
    LIBWRAP_EARLY_INIT( _ZN5QFont8setStyleENS_5StyleE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QFont8setStyleENS_5StyleE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QFont8setStyleENS_5StyleE, ( scorep_libwrap_arg_this, style ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QFont8setStyleENS_5StyleE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK5QFont5styleEv
QFont::Style
SCOREP_LIBWRAP_FUNC_NAME( _ZNK5QFont5styleEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK5QFont5styleEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK5QFont5styleEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QFont::Style scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK5QFont5styleEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK5QFont5styleEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK5QFont9underlineEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK5QFont9underlineEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK5QFont9underlineEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK5QFont9underlineEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK5QFont9underlineEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK5QFont9underlineEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN5QFont12setUnderlineEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QFont12setUnderlineEb )( void *scorep_libwrap_arg_this, bool scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN5QFont12setUnderlineEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QFont12setUnderlineEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QFont12setUnderlineEb, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QFont12setUnderlineEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK5QFont8overlineEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK5QFont8overlineEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK5QFont8overlineEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK5QFont8overlineEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK5QFont8overlineEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK5QFont8overlineEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN5QFont11setOverlineEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QFont11setOverlineEb )( void *scorep_libwrap_arg_this, bool scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN5QFont11setOverlineEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QFont11setOverlineEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QFont11setOverlineEb, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QFont11setOverlineEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK5QFont9strikeOutEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK5QFont9strikeOutEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK5QFont9strikeOutEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK5QFont9strikeOutEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK5QFont9strikeOutEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK5QFont9strikeOutEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN5QFont12setStrikeOutEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QFont12setStrikeOutEb )( void *scorep_libwrap_arg_this, bool scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN5QFont12setStrikeOutEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QFont12setStrikeOutEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QFont12setStrikeOutEb, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QFont12setStrikeOutEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK5QFont10fixedPitchEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK5QFont10fixedPitchEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK5QFont10fixedPitchEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK5QFont10fixedPitchEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK5QFont10fixedPitchEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK5QFont10fixedPitchEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN5QFont13setFixedPitchEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QFont13setFixedPitchEb )( void *scorep_libwrap_arg_this, bool scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN5QFont13setFixedPitchEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QFont13setFixedPitchEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QFont13setFixedPitchEb, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QFont13setFixedPitchEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK5QFont7kerningEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK5QFont7kerningEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK5QFont7kerningEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK5QFont7kerningEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK5QFont7kerningEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK5QFont7kerningEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN5QFont10setKerningEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QFont10setKerningEb )( void *scorep_libwrap_arg_this, bool scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN5QFont10setKerningEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QFont10setKerningEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QFont10setKerningEb, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QFont10setKerningEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK5QFont9styleHintEv
QFont::StyleHint
SCOREP_LIBWRAP_FUNC_NAME( _ZNK5QFont9styleHintEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK5QFont9styleHintEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK5QFont9styleHintEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QFont::StyleHint scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK5QFont9styleHintEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK5QFont9styleHintEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK5QFont13styleStrategyEv
QFont::StyleStrategy
SCOREP_LIBWRAP_FUNC_NAME( _ZNK5QFont13styleStrategyEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK5QFont13styleStrategyEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK5QFont13styleStrategyEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QFont::StyleStrategy scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK5QFont13styleStrategyEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK5QFont13styleStrategyEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN5QFont12setStyleHintENS_9StyleHintENS_13StyleStrategyE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QFont12setStyleHintENS_9StyleHintENS_13StyleStrategyE )( void *scorep_libwrap_arg_this, QFont::StyleHint scorep_libwrap_arg_1, QFont::StyleStrategy scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _ZN5QFont12setStyleHintENS_9StyleHintENS_13StyleStrategyE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QFont12setStyleHintENS_9StyleHintENS_13StyleStrategyE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QFont12setStyleHintENS_9StyleHintENS_13StyleStrategyE, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QFont12setStyleHintENS_9StyleHintENS_13StyleStrategyE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN5QFont16setStyleStrategyENS_13StyleStrategyE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QFont16setStyleStrategyENS_13StyleStrategyE )( void *scorep_libwrap_arg_this, QFont::StyleStrategy s )
{
    LIBWRAP_EARLY_INIT( _ZN5QFont16setStyleStrategyENS_13StyleStrategyE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QFont16setStyleStrategyENS_13StyleStrategyE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QFont16setStyleStrategyENS_13StyleStrategyE, ( scorep_libwrap_arg_this, s ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QFont16setStyleStrategyENS_13StyleStrategyE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK5QFont7stretchEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK5QFont7stretchEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK5QFont7stretchEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK5QFont7stretchEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK5QFont7stretchEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK5QFont7stretchEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN5QFont10setStretchEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QFont10setStretchEi )( void *scorep_libwrap_arg_this, int scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN5QFont10setStretchEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QFont10setStretchEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QFont10setStretchEi, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QFont10setStretchEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK5QFont13letterSpacingEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK5QFont13letterSpacingEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK5QFont13letterSpacingEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK5QFont13letterSpacingEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK5QFont13letterSpacingEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK5QFont13letterSpacingEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK5QFont17letterSpacingTypeEv
QFont::SpacingType
SCOREP_LIBWRAP_FUNC_NAME( _ZNK5QFont17letterSpacingTypeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK5QFont17letterSpacingTypeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK5QFont17letterSpacingTypeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QFont::SpacingType scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK5QFont17letterSpacingTypeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK5QFont17letterSpacingTypeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN5QFont16setLetterSpacingENS_11SpacingTypeEd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QFont16setLetterSpacingENS_11SpacingTypeEd )( void *scorep_libwrap_arg_this, QFont::SpacingType type, qreal spacing )
{
    LIBWRAP_EARLY_INIT( _ZN5QFont16setLetterSpacingENS_11SpacingTypeEd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QFont16setLetterSpacingENS_11SpacingTypeEd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QFont16setLetterSpacingENS_11SpacingTypeEd, ( scorep_libwrap_arg_this, type, spacing ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QFont16setLetterSpacingENS_11SpacingTypeEd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK5QFont11wordSpacingEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK5QFont11wordSpacingEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK5QFont11wordSpacingEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK5QFont11wordSpacingEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK5QFont11wordSpacingEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK5QFont11wordSpacingEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN5QFont14setWordSpacingEd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QFont14setWordSpacingEd )( void *scorep_libwrap_arg_this, qreal spacing )
{
    LIBWRAP_EARLY_INIT( _ZN5QFont14setWordSpacingEd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QFont14setWordSpacingEd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QFont14setWordSpacingEd, ( scorep_libwrap_arg_this, spacing ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QFont14setWordSpacingEd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN5QFont17setCapitalizationENS_14CapitalizationE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QFont17setCapitalizationENS_14CapitalizationE )( void *scorep_libwrap_arg_this, QFont::Capitalization scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN5QFont17setCapitalizationENS_14CapitalizationE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QFont17setCapitalizationENS_14CapitalizationE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QFont17setCapitalizationENS_14CapitalizationE, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QFont17setCapitalizationENS_14CapitalizationE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK5QFont14capitalizationEv
QFont::Capitalization
SCOREP_LIBWRAP_FUNC_NAME( _ZNK5QFont14capitalizationEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK5QFont14capitalizationEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK5QFont14capitalizationEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QFont::Capitalization scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK5QFont14capitalizationEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK5QFont14capitalizationEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK5QFont17hintingPreferenceEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK5QFont17hintingPreferenceEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK5QFont17hintingPreferenceEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK5QFont17hintingPreferenceEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK5QFont17hintingPreferenceEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK5QFont17hintingPreferenceEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK5QFont7rawModeEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK5QFont7rawModeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK5QFont7rawModeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK5QFont7rawModeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK5QFont7rawModeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK5QFont7rawModeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN5QFont10setRawModeEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QFont10setRawModeEb )( void *scorep_libwrap_arg_this, bool scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN5QFont10setRawModeEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QFont10setRawModeEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QFont10setRawModeEb, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QFont10setRawModeEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK5QFont10exactMatchEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK5QFont10exactMatchEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK5QFont10exactMatchEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK5QFont10exactMatchEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK5QFont10exactMatchEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK5QFont10exactMatchEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN5QFontaSERKS_
QFont &
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QFontaSERKS_ )( void *scorep_libwrap_arg_this, const QFont & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN5QFontaSERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QFontaSERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QFont & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN5QFontaSERKS_, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QFontaSERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK5QFonteqERKS_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK5QFonteqERKS_ )( void *scorep_libwrap_arg_this, const QFont & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZNK5QFonteqERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK5QFonteqERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK5QFonteqERKS_, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK5QFonteqERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK5QFontneERKS_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK5QFontneERKS_ )( void *scorep_libwrap_arg_this, const QFont & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZNK5QFontneERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK5QFontneERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK5QFontneERKS_, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK5QFontneERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK5QFontltERKS_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK5QFontltERKS_ )( void *scorep_libwrap_arg_this, const QFont & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZNK5QFontltERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK5QFontltERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK5QFontltERKS_, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK5QFontltERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK5QFont8isCopyOfERKS_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK5QFont8isCopyOfERKS_ )( void *scorep_libwrap_arg_this, const QFont & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZNK5QFont8isCopyOfERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK5QFont8isCopyOfERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK5QFont8isCopyOfERKS_, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK5QFont8isCopyOfERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK5QFont7rawNameEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK5QFont7rawNameEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK5QFont7rawNameEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK5QFont7rawNameEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK5QFont7rawNameEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK5QFont7rawNameEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK5QFont3keyEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK5QFont3keyEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK5QFont3keyEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK5QFont3keyEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK5QFont3keyEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK5QFont3keyEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK5QFont8toStringEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK5QFont8toStringEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK5QFont8toStringEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK5QFont8toStringEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK5QFont8toStringEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK5QFont8toStringEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN5QFont10fromStringERK7QString
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QFont10fromStringERK7QString )( void *scorep_libwrap_arg_this, const QString & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN5QFont10fromStringERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QFont10fromStringERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN5QFont10fromStringERK7QString, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QFont10fromStringERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN5QFont10substituteERK7QString
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QFont10substituteERK7QString )( const QString & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN5QFont10substituteERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QFont10substituteERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN5QFont10substituteERK7QString, ( scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QFont10substituteERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN5QFont11substitutesERK7QString
QStringList
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QFont11substitutesERK7QString )( const QString & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN5QFont11substitutesERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QFont11substitutesERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QStringList scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN5QFont11substitutesERK7QString, ( scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QFont11substitutesERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN5QFont13substitutionsEv
QStringList
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QFont13substitutionsEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN5QFont13substitutionsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QFont13substitutionsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QStringList scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN5QFont13substitutionsEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QFont13substitutionsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN5QFont18insertSubstitutionERK7QStringS2_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QFont18insertSubstitutionERK7QStringS2_ )( const QString & scorep_libwrap_arg_1, const QString & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _ZN5QFont18insertSubstitutionERK7QStringS2_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QFont18insertSubstitutionERK7QStringS2_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QFont18insertSubstitutionERK7QStringS2_, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QFont18insertSubstitutionERK7QStringS2_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN5QFont19insertSubstitutionsERK7QStringRK11QStringList
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QFont19insertSubstitutionsERK7QStringRK11QStringList )( const QString & scorep_libwrap_arg_1, const QStringList & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _ZN5QFont19insertSubstitutionsERK7QStringRK11QStringList );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QFont19insertSubstitutionsERK7QStringRK11QStringList );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QFont19insertSubstitutionsERK7QStringRK11QStringList, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QFont19insertSubstitutionsERK7QStringRK11QStringList );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN5QFont19removeSubstitutionsERK7QString
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QFont19removeSubstitutionsERK7QString )( const QString & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN5QFont19removeSubstitutionsERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QFont19removeSubstitutionsERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QFont19removeSubstitutionsERK7QString, ( scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QFont19removeSubstitutionsERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN5QFont10initializeEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QFont10initializeEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN5QFont10initializeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QFont10initializeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QFont10initializeEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QFont10initializeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN5QFont7cleanupEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QFont7cleanupEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN5QFont7cleanupEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QFont7cleanupEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QFont7cleanupEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QFont7cleanupEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN5QFont15cacheStatisticsEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QFont15cacheStatisticsEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN5QFont15cacheStatisticsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QFont15cacheStatisticsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QFont15cacheStatisticsEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QFont15cacheStatisticsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK5QFont13defaultFamilyEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK5QFont13defaultFamilyEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK5QFont13defaultFamilyEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK5QFont13defaultFamilyEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK5QFont13defaultFamilyEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK5QFont13defaultFamilyEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK5QFont16lastResortFamilyEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK5QFont16lastResortFamilyEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK5QFont16lastResortFamilyEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK5QFont16lastResortFamilyEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK5QFont16lastResortFamilyEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK5QFont16lastResortFamilyEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK5QFont14lastResortFontEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK5QFont14lastResortFontEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK5QFont14lastResortFontEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK5QFont14lastResortFontEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK5QFont14lastResortFontEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK5QFont14lastResortFontEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK5QFont7resolveERKS_
QFont
SCOREP_LIBWRAP_FUNC_NAME( _ZNK5QFont7resolveERKS_ )( void *scorep_libwrap_arg_this, const QFont & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZNK5QFont7resolveERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK5QFont7resolveERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QFont scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK5QFont7resolveERKS_, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK5QFont7resolveERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZlsR11QDataStreamRK5QFont
QDataStream &
SCOREP_LIBWRAP_FUNC_NAME( _ZlsR11QDataStreamRK5QFont )( QDataStream & scorep_libwrap_arg_1, const QFont & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _ZlsR11QDataStreamRK5QFont );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZlsR11QDataStreamRK5QFont );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDataStream & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZlsR11QDataStreamRK5QFont, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZlsR11QDataStreamRK5QFont );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZrsR11QDataStreamR5QFont
QDataStream &
SCOREP_LIBWRAP_FUNC_NAME( _ZrsR11QDataStreamR5QFont )( QDataStream & scorep_libwrap_arg_1, QFont & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _ZrsR11QDataStreamR5QFont );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZrsR11QDataStreamR5QFont );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDataStream & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZrsR11QDataStreamR5QFont, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZrsR11QDataStreamR5QFont );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _Zls6QDebugRK5QFont
QDebug
SCOREP_LIBWRAP_FUNC_NAME( _Zls6QDebugRK5QFont )( QDebug scorep_libwrap_arg_1, const QFont & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _Zls6QDebugRK5QFont );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _Zls6QDebugRK5QFont );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDebug scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _Zls6QDebugRK5QFont, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _Zls6QDebugRK5QFont );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QStandardItemC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QStandardItemC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN13QStandardItemC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QStandardItemC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QStandardItemC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QStandardItemC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QStandardItemC1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QStandardItemC1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN13QStandardItemC1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QStandardItemC1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QStandardItemC1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QStandardItemC1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QStandardItemC2ERK7QString
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QStandardItemC2ERK7QString )( void *scorep_libwrap_arg_this, const QString & text )
{
    LIBWRAP_EARLY_INIT( _ZN13QStandardItemC2ERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QStandardItemC2ERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QStandardItemC2ERK7QString, ( scorep_libwrap_arg_this, text ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QStandardItemC2ERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QStandardItemC1ERK7QString
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QStandardItemC1ERK7QString )( void *scorep_libwrap_arg_this, const QString & text )
{
    LIBWRAP_EARLY_INIT( _ZN13QStandardItemC1ERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QStandardItemC1ERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QStandardItemC1ERK7QString, ( scorep_libwrap_arg_this, text ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QStandardItemC1ERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QStandardItemC2ERK5QIconRK7QString
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QStandardItemC2ERK5QIconRK7QString )( void *scorep_libwrap_arg_this, const QIcon & icon, const QString & text )
{
    LIBWRAP_EARLY_INIT( _ZN13QStandardItemC2ERK5QIconRK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QStandardItemC2ERK5QIconRK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QStandardItemC2ERK5QIconRK7QString, ( scorep_libwrap_arg_this, icon, text ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QStandardItemC2ERK5QIconRK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QStandardItemC1ERK5QIconRK7QString
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QStandardItemC1ERK5QIconRK7QString )( void *scorep_libwrap_arg_this, const QIcon & icon, const QString & text )
{
    LIBWRAP_EARLY_INIT( _ZN13QStandardItemC1ERK5QIconRK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QStandardItemC1ERK5QIconRK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QStandardItemC1ERK5QIconRK7QString, ( scorep_libwrap_arg_this, icon, text ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QStandardItemC1ERK5QIconRK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QStandardItemC2Eii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QStandardItemC2Eii )( void *scorep_libwrap_arg_this, int rows, int columns )
{
    LIBWRAP_EARLY_INIT( _ZN13QStandardItemC2Eii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QStandardItemC2Eii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QStandardItemC2Eii, ( scorep_libwrap_arg_this, rows, columns ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QStandardItemC2Eii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QStandardItemC1Eii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QStandardItemC1Eii )( void *scorep_libwrap_arg_this, int rows, int columns )
{
    LIBWRAP_EARLY_INIT( _ZN13QStandardItemC1Eii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QStandardItemC1Eii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QStandardItemC1Eii, ( scorep_libwrap_arg_this, rows, columns ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QStandardItemC1Eii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QStandardItemD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QStandardItemD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN13QStandardItemD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QStandardItemD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QStandardItemD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QStandardItemD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QStandardItemD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QStandardItemD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN13QStandardItemD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QStandardItemD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QStandardItemD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QStandardItemD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QStandardItemD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QStandardItemD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN13QStandardItemD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QStandardItemD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QStandardItemD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QStandardItemD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK13QStandardItem4dataEi
QVariant
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QStandardItem4dataEi )( void *scorep_libwrap_arg_this, int role )
{
    LIBWRAP_EARLY_INIT( _ZNK13QStandardItem4dataEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QStandardItem4dataEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QVariant scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QStandardItem4dataEi, ( scorep_libwrap_arg_this, role ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QStandardItem4dataEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QStandardItem7setDataERK8QVarianti
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QStandardItem7setDataERK8QVarianti )( void *scorep_libwrap_arg_this, const QVariant & value, int role )
{
    LIBWRAP_EARLY_INIT( _ZN13QStandardItem7setDataERK8QVarianti );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QStandardItem7setDataERK8QVarianti );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QStandardItem7setDataERK8QVarianti, ( scorep_libwrap_arg_this, value, role ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QStandardItem7setDataERK8QVarianti );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK13QStandardItem5flagsEv
Qt::ItemFlags
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QStandardItem5flagsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QStandardItem5flagsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QStandardItem5flagsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    Qt::ItemFlags scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QStandardItem5flagsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QStandardItem5flagsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QStandardItem8setFlagsE6QFlagsIN2Qt8ItemFlagEE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QStandardItem8setFlagsE6QFlagsIN2Qt8ItemFlagEE )( void *scorep_libwrap_arg_this, Qt::ItemFlags flags )
{
    LIBWRAP_EARLY_INIT( _ZN13QStandardItem8setFlagsE6QFlagsIN2Qt8ItemFlagEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QStandardItem8setFlagsE6QFlagsIN2Qt8ItemFlagEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QStandardItem8setFlagsE6QFlagsIN2Qt8ItemFlagEE, ( scorep_libwrap_arg_this, flags ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QStandardItem8setFlagsE6QFlagsIN2Qt8ItemFlagEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QStandardItem10setEnabledEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QStandardItem10setEnabledEb )( void *scorep_libwrap_arg_this, bool enabled )
{
    LIBWRAP_EARLY_INIT( _ZN13QStandardItem10setEnabledEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QStandardItem10setEnabledEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QStandardItem10setEnabledEb, ( scorep_libwrap_arg_this, enabled ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QStandardItem10setEnabledEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QStandardItem11setEditableEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QStandardItem11setEditableEb )( void *scorep_libwrap_arg_this, bool editable )
{
    LIBWRAP_EARLY_INIT( _ZN13QStandardItem11setEditableEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QStandardItem11setEditableEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QStandardItem11setEditableEb, ( scorep_libwrap_arg_this, editable ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QStandardItem11setEditableEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QStandardItem13setSelectableEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QStandardItem13setSelectableEb )( void *scorep_libwrap_arg_this, bool selectable )
{
    LIBWRAP_EARLY_INIT( _ZN13QStandardItem13setSelectableEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QStandardItem13setSelectableEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QStandardItem13setSelectableEb, ( scorep_libwrap_arg_this, selectable ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QStandardItem13setSelectableEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QStandardItem12setCheckableEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QStandardItem12setCheckableEb )( void *scorep_libwrap_arg_this, bool checkable )
{
    LIBWRAP_EARLY_INIT( _ZN13QStandardItem12setCheckableEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QStandardItem12setCheckableEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QStandardItem12setCheckableEb, ( scorep_libwrap_arg_this, checkable ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QStandardItem12setCheckableEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QStandardItem15setAutoTristateEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QStandardItem15setAutoTristateEb )( void *scorep_libwrap_arg_this, bool tristate )
{
    LIBWRAP_EARLY_INIT( _ZN13QStandardItem15setAutoTristateEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QStandardItem15setAutoTristateEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QStandardItem15setAutoTristateEb, ( scorep_libwrap_arg_this, tristate ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QStandardItem15setAutoTristateEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QStandardItem15setUserTristateEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QStandardItem15setUserTristateEb )( void *scorep_libwrap_arg_this, bool tristate )
{
    LIBWRAP_EARLY_INIT( _ZN13QStandardItem15setUserTristateEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QStandardItem15setUserTristateEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QStandardItem15setUserTristateEb, ( scorep_libwrap_arg_this, tristate ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QStandardItem15setUserTristateEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QStandardItem11setTristateEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QStandardItem11setTristateEb )( void *scorep_libwrap_arg_this, bool tristate )
{
    LIBWRAP_EARLY_INIT( _ZN13QStandardItem11setTristateEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QStandardItem11setTristateEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QStandardItem11setTristateEb, ( scorep_libwrap_arg_this, tristate ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QStandardItem11setTristateEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QStandardItem14setDragEnabledEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QStandardItem14setDragEnabledEb )( void *scorep_libwrap_arg_this, bool dragEnabled )
{
    LIBWRAP_EARLY_INIT( _ZN13QStandardItem14setDragEnabledEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QStandardItem14setDragEnabledEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QStandardItem14setDragEnabledEb, ( scorep_libwrap_arg_this, dragEnabled ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QStandardItem14setDragEnabledEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QStandardItem14setDropEnabledEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QStandardItem14setDropEnabledEb )( void *scorep_libwrap_arg_this, bool dropEnabled )
{
    LIBWRAP_EARLY_INIT( _ZN13QStandardItem14setDropEnabledEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QStandardItem14setDropEnabledEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QStandardItem14setDropEnabledEb, ( scorep_libwrap_arg_this, dropEnabled ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QStandardItem14setDropEnabledEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK13QStandardItem6parentEv
QStandardItem *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QStandardItem6parentEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QStandardItem6parentEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QStandardItem6parentEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QStandardItem * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QStandardItem6parentEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QStandardItem6parentEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QStandardItem3rowEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QStandardItem3rowEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QStandardItem3rowEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QStandardItem3rowEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QStandardItem3rowEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QStandardItem3rowEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QStandardItem6columnEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QStandardItem6columnEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QStandardItem6columnEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QStandardItem6columnEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QStandardItem6columnEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QStandardItem6columnEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QStandardItem5indexEv
QModelIndex
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QStandardItem5indexEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QStandardItem5indexEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QStandardItem5indexEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QModelIndex scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QStandardItem5indexEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QStandardItem5indexEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QStandardItem5modelEv
QStandardItemModel *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QStandardItem5modelEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QStandardItem5modelEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QStandardItem5modelEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QStandardItemModel * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QStandardItem5modelEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QStandardItem5modelEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QStandardItem8rowCountEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QStandardItem8rowCountEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QStandardItem8rowCountEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QStandardItem8rowCountEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QStandardItem8rowCountEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QStandardItem8rowCountEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QStandardItem11setRowCountEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QStandardItem11setRowCountEi )( void *scorep_libwrap_arg_this, int rows )
{
    LIBWRAP_EARLY_INIT( _ZN13QStandardItem11setRowCountEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QStandardItem11setRowCountEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QStandardItem11setRowCountEi, ( scorep_libwrap_arg_this, rows ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QStandardItem11setRowCountEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK13QStandardItem11columnCountEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QStandardItem11columnCountEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QStandardItem11columnCountEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QStandardItem11columnCountEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QStandardItem11columnCountEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QStandardItem11columnCountEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QStandardItem14setColumnCountEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QStandardItem14setColumnCountEi )( void *scorep_libwrap_arg_this, int columns )
{
    LIBWRAP_EARLY_INIT( _ZN13QStandardItem14setColumnCountEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QStandardItem14setColumnCountEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QStandardItem14setColumnCountEi, ( scorep_libwrap_arg_this, columns ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QStandardItem14setColumnCountEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK13QStandardItem11hasChildrenEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QStandardItem11hasChildrenEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QStandardItem11hasChildrenEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QStandardItem11hasChildrenEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QStandardItem11hasChildrenEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QStandardItem11hasChildrenEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QStandardItem5childEii
QStandardItem *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QStandardItem5childEii )( void *scorep_libwrap_arg_this, int row, int column )
{
    LIBWRAP_EARLY_INIT( _ZNK13QStandardItem5childEii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QStandardItem5childEii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QStandardItem * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QStandardItem5childEii, ( scorep_libwrap_arg_this, row, column ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QStandardItem5childEii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QStandardItem8setChildEiiPS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QStandardItem8setChildEiiPS_ )( void *scorep_libwrap_arg_this, int row, int column, QStandardItem * item )
{
    LIBWRAP_EARLY_INIT( _ZN13QStandardItem8setChildEiiPS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QStandardItem8setChildEiiPS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QStandardItem8setChildEiiPS_, ( scorep_libwrap_arg_this, row, column, item ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QStandardItem8setChildEiiPS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QStandardItem9insertRowEiRK5QListIPS_E
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QStandardItem9insertRowEiRK5QListIPS_E )( void *scorep_libwrap_arg_this, int row, const QList<QStandardItem *> & items )
{
    LIBWRAP_EARLY_INIT( _ZN13QStandardItem9insertRowEiRK5QListIPS_E );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QStandardItem9insertRowEiRK5QListIPS_E );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QStandardItem9insertRowEiRK5QListIPS_E, ( scorep_libwrap_arg_this, row, items ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QStandardItem9insertRowEiRK5QListIPS_E );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QStandardItem12insertColumnEiRK5QListIPS_E
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QStandardItem12insertColumnEiRK5QListIPS_E )( void *scorep_libwrap_arg_this, int column, const QList<QStandardItem *> & items )
{
    LIBWRAP_EARLY_INIT( _ZN13QStandardItem12insertColumnEiRK5QListIPS_E );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QStandardItem12insertColumnEiRK5QListIPS_E );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QStandardItem12insertColumnEiRK5QListIPS_E, ( scorep_libwrap_arg_this, column, items ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QStandardItem12insertColumnEiRK5QListIPS_E );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QStandardItem10insertRowsEiRK5QListIPS_E
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QStandardItem10insertRowsEiRK5QListIPS_E )( void *scorep_libwrap_arg_this, int row, const QList<QStandardItem *> & items )
{
    LIBWRAP_EARLY_INIT( _ZN13QStandardItem10insertRowsEiRK5QListIPS_E );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QStandardItem10insertRowsEiRK5QListIPS_E );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QStandardItem10insertRowsEiRK5QListIPS_E, ( scorep_libwrap_arg_this, row, items ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QStandardItem10insertRowsEiRK5QListIPS_E );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QStandardItem10insertRowsEii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QStandardItem10insertRowsEii )( void *scorep_libwrap_arg_this, int row, int count )
{
    LIBWRAP_EARLY_INIT( _ZN13QStandardItem10insertRowsEii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QStandardItem10insertRowsEii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QStandardItem10insertRowsEii, ( scorep_libwrap_arg_this, row, count ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QStandardItem10insertRowsEii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QStandardItem13insertColumnsEii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QStandardItem13insertColumnsEii )( void *scorep_libwrap_arg_this, int column, int count )
{
    LIBWRAP_EARLY_INIT( _ZN13QStandardItem13insertColumnsEii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QStandardItem13insertColumnsEii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QStandardItem13insertColumnsEii, ( scorep_libwrap_arg_this, column, count ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QStandardItem13insertColumnsEii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QStandardItem9removeRowEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QStandardItem9removeRowEi )( void *scorep_libwrap_arg_this, int row )
{
    LIBWRAP_EARLY_INIT( _ZN13QStandardItem9removeRowEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QStandardItem9removeRowEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QStandardItem9removeRowEi, ( scorep_libwrap_arg_this, row ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QStandardItem9removeRowEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QStandardItem12removeColumnEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QStandardItem12removeColumnEi )( void *scorep_libwrap_arg_this, int column )
{
    LIBWRAP_EARLY_INIT( _ZN13QStandardItem12removeColumnEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QStandardItem12removeColumnEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QStandardItem12removeColumnEi, ( scorep_libwrap_arg_this, column ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QStandardItem12removeColumnEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QStandardItem10removeRowsEii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QStandardItem10removeRowsEii )( void *scorep_libwrap_arg_this, int row, int count )
{
    LIBWRAP_EARLY_INIT( _ZN13QStandardItem10removeRowsEii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QStandardItem10removeRowsEii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QStandardItem10removeRowsEii, ( scorep_libwrap_arg_this, row, count ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QStandardItem10removeRowsEii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QStandardItem13removeColumnsEii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QStandardItem13removeColumnsEii )( void *scorep_libwrap_arg_this, int column, int count )
{
    LIBWRAP_EARLY_INIT( _ZN13QStandardItem13removeColumnsEii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QStandardItem13removeColumnsEii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QStandardItem13removeColumnsEii, ( scorep_libwrap_arg_this, column, count ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QStandardItem13removeColumnsEii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QStandardItem9takeChildEii
QStandardItem *
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QStandardItem9takeChildEii )( void *scorep_libwrap_arg_this, int row, int column )
{
    LIBWRAP_EARLY_INIT( _ZN13QStandardItem9takeChildEii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QStandardItem9takeChildEii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QStandardItem * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN13QStandardItem9takeChildEii, ( scorep_libwrap_arg_this, row, column ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QStandardItem9takeChildEii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QStandardItem7takeRowEi
QList<QStandardItem *>
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QStandardItem7takeRowEi )( void *scorep_libwrap_arg_this, int row )
{
    LIBWRAP_EARLY_INIT( _ZN13QStandardItem7takeRowEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QStandardItem7takeRowEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QList<QStandardItem *> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN13QStandardItem7takeRowEi, ( scorep_libwrap_arg_this, row ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QStandardItem7takeRowEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QStandardItem10takeColumnEi
QList<QStandardItem *>
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QStandardItem10takeColumnEi )( void *scorep_libwrap_arg_this, int column )
{
    LIBWRAP_EARLY_INIT( _ZN13QStandardItem10takeColumnEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QStandardItem10takeColumnEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QList<QStandardItem *> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN13QStandardItem10takeColumnEi, ( scorep_libwrap_arg_this, column ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QStandardItem10takeColumnEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QStandardItem12sortChildrenEiN2Qt9SortOrderE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QStandardItem12sortChildrenEiN2Qt9SortOrderE )( void *scorep_libwrap_arg_this, int column, Qt::SortOrder order )
{
    LIBWRAP_EARLY_INIT( _ZN13QStandardItem12sortChildrenEiN2Qt9SortOrderE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QStandardItem12sortChildrenEiN2Qt9SortOrderE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QStandardItem12sortChildrenEiN2Qt9SortOrderE, ( scorep_libwrap_arg_this, column, order ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QStandardItem12sortChildrenEiN2Qt9SortOrderE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK13QStandardItem5cloneEv
QStandardItem *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QStandardItem5cloneEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QStandardItem5cloneEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QStandardItem5cloneEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QStandardItem * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QStandardItem5cloneEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QStandardItem5cloneEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QStandardItem4typeEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QStandardItem4typeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QStandardItem4typeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QStandardItem4typeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QStandardItem4typeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QStandardItem4typeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QStandardItem4readER11QDataStream
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QStandardItem4readER11QDataStream )( void *scorep_libwrap_arg_this, QDataStream & in )
{
    LIBWRAP_EARLY_INIT( _ZN13QStandardItem4readER11QDataStream );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QStandardItem4readER11QDataStream );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QStandardItem4readER11QDataStream, ( scorep_libwrap_arg_this, in ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QStandardItem4readER11QDataStream );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK13QStandardItem5writeER11QDataStream
void
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QStandardItem5writeER11QDataStream )( void *scorep_libwrap_arg_this, QDataStream & out )
{
    LIBWRAP_EARLY_INIT( _ZNK13QStandardItem5writeER11QDataStream );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QStandardItem5writeER11QDataStream );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QStandardItem5writeER11QDataStream, ( scorep_libwrap_arg_this, out ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QStandardItem5writeER11QDataStream );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK13QStandardItemltERKS_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QStandardItemltERKS_ )( void *scorep_libwrap_arg_this, const QStandardItem & other )
{
    LIBWRAP_EARLY_INIT( _ZNK13QStandardItemltERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QStandardItemltERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QStandardItemltERKS_, ( scorep_libwrap_arg_this, other ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QStandardItemltERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK18QStandardItemModel10metaObjectEv
const QMetaObject *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK18QStandardItemModel10metaObjectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK18QStandardItemModel10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK18QStandardItemModel10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QMetaObject * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK18QStandardItemModel10metaObjectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK18QStandardItemModel10metaObjectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN18QStandardItemModel11qt_metacastEPKc
void *
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QStandardItemModel11qt_metacastEPKc )( void *scorep_libwrap_arg_this, const char * scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN18QStandardItemModel11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QStandardItemModel11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    void * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN18QStandardItemModel11qt_metacastEPKc, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QStandardItemModel11qt_metacastEPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN18QStandardItemModel11qt_metacallEN11QMetaObject4CallEiPPv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QStandardItemModel11qt_metacallEN11QMetaObject4CallEiPPv )( void *scorep_libwrap_arg_this, QMetaObject::Call scorep_libwrap_arg_1, int scorep_libwrap_arg_2, void ** scorep_libwrap_arg_3 )
{
    LIBWRAP_EARLY_INIT( _ZN18QStandardItemModel11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QStandardItemModel11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN18QStandardItemModel11qt_metacallEN11QMetaObject4CallEiPPv, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, scorep_libwrap_arg_2, scorep_libwrap_arg_3 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QStandardItemModel11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN18QStandardItemModelC2EP7QObject
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QStandardItemModelC2EP7QObject )( void *scorep_libwrap_arg_this, QObject * parent )
{
    LIBWRAP_EARLY_INIT( _ZN18QStandardItemModelC2EP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QStandardItemModelC2EP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QStandardItemModelC2EP7QObject, ( scorep_libwrap_arg_this, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QStandardItemModelC2EP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN18QStandardItemModelC1EP7QObject
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QStandardItemModelC1EP7QObject )( void *scorep_libwrap_arg_this, QObject * parent )
{
    LIBWRAP_EARLY_INIT( _ZN18QStandardItemModelC1EP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QStandardItemModelC1EP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QStandardItemModelC1EP7QObject, ( scorep_libwrap_arg_this, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QStandardItemModelC1EP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN18QStandardItemModelC2EiiP7QObject
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QStandardItemModelC2EiiP7QObject )( void *scorep_libwrap_arg_this, int rows, int columns, QObject * parent )
{
    LIBWRAP_EARLY_INIT( _ZN18QStandardItemModelC2EiiP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QStandardItemModelC2EiiP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QStandardItemModelC2EiiP7QObject, ( scorep_libwrap_arg_this, rows, columns, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QStandardItemModelC2EiiP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN18QStandardItemModelC1EiiP7QObject
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QStandardItemModelC1EiiP7QObject )( void *scorep_libwrap_arg_this, int rows, int columns, QObject * parent )
{
    LIBWRAP_EARLY_INIT( _ZN18QStandardItemModelC1EiiP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QStandardItemModelC1EiiP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QStandardItemModelC1EiiP7QObject, ( scorep_libwrap_arg_this, rows, columns, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QStandardItemModelC1EiiP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN18QStandardItemModelD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QStandardItemModelD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN18QStandardItemModelD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QStandardItemModelD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QStandardItemModelD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QStandardItemModelD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN18QStandardItemModelD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QStandardItemModelD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN18QStandardItemModelD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QStandardItemModelD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QStandardItemModelD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QStandardItemModelD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN18QStandardItemModelD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QStandardItemModelD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN18QStandardItemModelD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QStandardItemModelD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QStandardItemModelD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QStandardItemModelD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN18QStandardItemModel16setItemRoleNamesERK5QHashIi10QByteArrayE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QStandardItemModel16setItemRoleNamesERK5QHashIi10QByteArrayE )( void *scorep_libwrap_arg_this, const QHash<int, QByteArray> & roleNames )
{
    LIBWRAP_EARLY_INIT( _ZN18QStandardItemModel16setItemRoleNamesERK5QHashIi10QByteArrayE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QStandardItemModel16setItemRoleNamesERK5QHashIi10QByteArrayE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QStandardItemModel16setItemRoleNamesERK5QHashIi10QByteArrayE, ( scorep_libwrap_arg_this, roleNames ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QStandardItemModel16setItemRoleNamesERK5QHashIi10QByteArrayE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK18QStandardItemModel5indexEiiRK11QModelIndex
QModelIndex
SCOREP_LIBWRAP_FUNC_NAME( _ZNK18QStandardItemModel5indexEiiRK11QModelIndex )( void *scorep_libwrap_arg_this, int row, int column, const QModelIndex & parent )
{
    LIBWRAP_EARLY_INIT( _ZNK18QStandardItemModel5indexEiiRK11QModelIndex );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK18QStandardItemModel5indexEiiRK11QModelIndex );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QModelIndex scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK18QStandardItemModel5indexEiiRK11QModelIndex, ( scorep_libwrap_arg_this, row, column, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK18QStandardItemModel5indexEiiRK11QModelIndex );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK18QStandardItemModel6parentERK11QModelIndex
QModelIndex
SCOREP_LIBWRAP_FUNC_NAME( _ZNK18QStandardItemModel6parentERK11QModelIndex )( void *scorep_libwrap_arg_this, const QModelIndex & child )
{
    LIBWRAP_EARLY_INIT( _ZNK18QStandardItemModel6parentERK11QModelIndex );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK18QStandardItemModel6parentERK11QModelIndex );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QModelIndex scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK18QStandardItemModel6parentERK11QModelIndex, ( scorep_libwrap_arg_this, child ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK18QStandardItemModel6parentERK11QModelIndex );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK18QStandardItemModel8rowCountERK11QModelIndex
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK18QStandardItemModel8rowCountERK11QModelIndex )( void *scorep_libwrap_arg_this, const QModelIndex & parent )
{
    LIBWRAP_EARLY_INIT( _ZNK18QStandardItemModel8rowCountERK11QModelIndex );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK18QStandardItemModel8rowCountERK11QModelIndex );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK18QStandardItemModel8rowCountERK11QModelIndex, ( scorep_libwrap_arg_this, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK18QStandardItemModel8rowCountERK11QModelIndex );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK18QStandardItemModel11columnCountERK11QModelIndex
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK18QStandardItemModel11columnCountERK11QModelIndex )( void *scorep_libwrap_arg_this, const QModelIndex & parent )
{
    LIBWRAP_EARLY_INIT( _ZNK18QStandardItemModel11columnCountERK11QModelIndex );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK18QStandardItemModel11columnCountERK11QModelIndex );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK18QStandardItemModel11columnCountERK11QModelIndex, ( scorep_libwrap_arg_this, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK18QStandardItemModel11columnCountERK11QModelIndex );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK18QStandardItemModel11hasChildrenERK11QModelIndex
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK18QStandardItemModel11hasChildrenERK11QModelIndex )( void *scorep_libwrap_arg_this, const QModelIndex & parent )
{
    LIBWRAP_EARLY_INIT( _ZNK18QStandardItemModel11hasChildrenERK11QModelIndex );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK18QStandardItemModel11hasChildrenERK11QModelIndex );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK18QStandardItemModel11hasChildrenERK11QModelIndex, ( scorep_libwrap_arg_this, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK18QStandardItemModel11hasChildrenERK11QModelIndex );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK18QStandardItemModel7siblingEiiRK11QModelIndex
QModelIndex
SCOREP_LIBWRAP_FUNC_NAME( _ZNK18QStandardItemModel7siblingEiiRK11QModelIndex )( void *scorep_libwrap_arg_this, int row, int column, const QModelIndex & idx )
{
    LIBWRAP_EARLY_INIT( _ZNK18QStandardItemModel7siblingEiiRK11QModelIndex );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK18QStandardItemModel7siblingEiiRK11QModelIndex );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QModelIndex scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK18QStandardItemModel7siblingEiiRK11QModelIndex, ( scorep_libwrap_arg_this, row, column, idx ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK18QStandardItemModel7siblingEiiRK11QModelIndex );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK18QStandardItemModel4dataERK11QModelIndexi
QVariant
SCOREP_LIBWRAP_FUNC_NAME( _ZNK18QStandardItemModel4dataERK11QModelIndexi )( void *scorep_libwrap_arg_this, const QModelIndex & index, int role )
{
    LIBWRAP_EARLY_INIT( _ZNK18QStandardItemModel4dataERK11QModelIndexi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK18QStandardItemModel4dataERK11QModelIndexi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QVariant scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK18QStandardItemModel4dataERK11QModelIndexi, ( scorep_libwrap_arg_this, index, role ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK18QStandardItemModel4dataERK11QModelIndexi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN18QStandardItemModel7setDataERK11QModelIndexRK8QVarianti
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QStandardItemModel7setDataERK11QModelIndexRK8QVarianti )( void *scorep_libwrap_arg_this, const QModelIndex & index, const QVariant & value, int role )
{
    LIBWRAP_EARLY_INIT( _ZN18QStandardItemModel7setDataERK11QModelIndexRK8QVarianti );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QStandardItemModel7setDataERK11QModelIndexRK8QVarianti );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN18QStandardItemModel7setDataERK11QModelIndexRK8QVarianti, ( scorep_libwrap_arg_this, index, value, role ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QStandardItemModel7setDataERK11QModelIndexRK8QVarianti );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK18QStandardItemModel10headerDataEiN2Qt11OrientationEi
QVariant
SCOREP_LIBWRAP_FUNC_NAME( _ZNK18QStandardItemModel10headerDataEiN2Qt11OrientationEi )( void *scorep_libwrap_arg_this, int section, Qt::Orientation orientation, int role )
{
    LIBWRAP_EARLY_INIT( _ZNK18QStandardItemModel10headerDataEiN2Qt11OrientationEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK18QStandardItemModel10headerDataEiN2Qt11OrientationEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QVariant scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK18QStandardItemModel10headerDataEiN2Qt11OrientationEi, ( scorep_libwrap_arg_this, section, orientation, role ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK18QStandardItemModel10headerDataEiN2Qt11OrientationEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN18QStandardItemModel13setHeaderDataEiN2Qt11OrientationERK8QVarianti
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QStandardItemModel13setHeaderDataEiN2Qt11OrientationERK8QVarianti )( void *scorep_libwrap_arg_this, int section, Qt::Orientation orientation, const QVariant & value, int role )
{
    LIBWRAP_EARLY_INIT( _ZN18QStandardItemModel13setHeaderDataEiN2Qt11OrientationERK8QVarianti );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QStandardItemModel13setHeaderDataEiN2Qt11OrientationERK8QVarianti );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN18QStandardItemModel13setHeaderDataEiN2Qt11OrientationERK8QVarianti, ( scorep_libwrap_arg_this, section, orientation, value, role ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QStandardItemModel13setHeaderDataEiN2Qt11OrientationERK8QVarianti );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN18QStandardItemModel10insertRowsEiiRK11QModelIndex
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QStandardItemModel10insertRowsEiiRK11QModelIndex )( void *scorep_libwrap_arg_this, int row, int count, const QModelIndex & parent )
{
    LIBWRAP_EARLY_INIT( _ZN18QStandardItemModel10insertRowsEiiRK11QModelIndex );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QStandardItemModel10insertRowsEiiRK11QModelIndex );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN18QStandardItemModel10insertRowsEiiRK11QModelIndex, ( scorep_libwrap_arg_this, row, count, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QStandardItemModel10insertRowsEiiRK11QModelIndex );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN18QStandardItemModel13insertColumnsEiiRK11QModelIndex
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QStandardItemModel13insertColumnsEiiRK11QModelIndex )( void *scorep_libwrap_arg_this, int column, int count, const QModelIndex & parent )
{
    LIBWRAP_EARLY_INIT( _ZN18QStandardItemModel13insertColumnsEiiRK11QModelIndex );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QStandardItemModel13insertColumnsEiiRK11QModelIndex );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN18QStandardItemModel13insertColumnsEiiRK11QModelIndex, ( scorep_libwrap_arg_this, column, count, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QStandardItemModel13insertColumnsEiiRK11QModelIndex );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN18QStandardItemModel10removeRowsEiiRK11QModelIndex
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QStandardItemModel10removeRowsEiiRK11QModelIndex )( void *scorep_libwrap_arg_this, int row, int count, const QModelIndex & parent )
{
    LIBWRAP_EARLY_INIT( _ZN18QStandardItemModel10removeRowsEiiRK11QModelIndex );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QStandardItemModel10removeRowsEiiRK11QModelIndex );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN18QStandardItemModel10removeRowsEiiRK11QModelIndex, ( scorep_libwrap_arg_this, row, count, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QStandardItemModel10removeRowsEiiRK11QModelIndex );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN18QStandardItemModel13removeColumnsEiiRK11QModelIndex
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QStandardItemModel13removeColumnsEiiRK11QModelIndex )( void *scorep_libwrap_arg_this, int column, int count, const QModelIndex & parent )
{
    LIBWRAP_EARLY_INIT( _ZN18QStandardItemModel13removeColumnsEiiRK11QModelIndex );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QStandardItemModel13removeColumnsEiiRK11QModelIndex );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN18QStandardItemModel13removeColumnsEiiRK11QModelIndex, ( scorep_libwrap_arg_this, column, count, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QStandardItemModel13removeColumnsEiiRK11QModelIndex );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK18QStandardItemModel5flagsERK11QModelIndex
Qt::ItemFlags
SCOREP_LIBWRAP_FUNC_NAME( _ZNK18QStandardItemModel5flagsERK11QModelIndex )( void *scorep_libwrap_arg_this, const QModelIndex & index )
{
    LIBWRAP_EARLY_INIT( _ZNK18QStandardItemModel5flagsERK11QModelIndex );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK18QStandardItemModel5flagsERK11QModelIndex );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    Qt::ItemFlags scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK18QStandardItemModel5flagsERK11QModelIndex, ( scorep_libwrap_arg_this, index ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK18QStandardItemModel5flagsERK11QModelIndex );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK18QStandardItemModel20supportedDropActionsEv
Qt::DropActions
SCOREP_LIBWRAP_FUNC_NAME( _ZNK18QStandardItemModel20supportedDropActionsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK18QStandardItemModel20supportedDropActionsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK18QStandardItemModel20supportedDropActionsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    Qt::DropActions scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK18QStandardItemModel20supportedDropActionsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK18QStandardItemModel20supportedDropActionsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK18QStandardItemModel8itemDataERK11QModelIndex
QMap<int, QVariant>
SCOREP_LIBWRAP_FUNC_NAME( _ZNK18QStandardItemModel8itemDataERK11QModelIndex )( void *scorep_libwrap_arg_this, const QModelIndex & index )
{
    LIBWRAP_EARLY_INIT( _ZNK18QStandardItemModel8itemDataERK11QModelIndex );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK18QStandardItemModel8itemDataERK11QModelIndex );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QMap<int, QVariant> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK18QStandardItemModel8itemDataERK11QModelIndex, ( scorep_libwrap_arg_this, index ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK18QStandardItemModel8itemDataERK11QModelIndex );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN18QStandardItemModel11setItemDataERK11QModelIndexRK4QMapIi8QVariantE
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QStandardItemModel11setItemDataERK11QModelIndexRK4QMapIi8QVariantE )( void *scorep_libwrap_arg_this, const QModelIndex & index, const QMap<int, QVariant> & roles )
{
    LIBWRAP_EARLY_INIT( _ZN18QStandardItemModel11setItemDataERK11QModelIndexRK4QMapIi8QVariantE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QStandardItemModel11setItemDataERK11QModelIndexRK4QMapIi8QVariantE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN18QStandardItemModel11setItemDataERK11QModelIndexRK4QMapIi8QVariantE, ( scorep_libwrap_arg_this, index, roles ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QStandardItemModel11setItemDataERK11QModelIndexRK4QMapIi8QVariantE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN18QStandardItemModel5clearEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QStandardItemModel5clearEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN18QStandardItemModel5clearEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QStandardItemModel5clearEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QStandardItemModel5clearEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QStandardItemModel5clearEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN18QStandardItemModel4sortEiN2Qt9SortOrderE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QStandardItemModel4sortEiN2Qt9SortOrderE )( void *scorep_libwrap_arg_this, int column, Qt::SortOrder order )
{
    LIBWRAP_EARLY_INIT( _ZN18QStandardItemModel4sortEiN2Qt9SortOrderE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QStandardItemModel4sortEiN2Qt9SortOrderE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QStandardItemModel4sortEiN2Qt9SortOrderE, ( scorep_libwrap_arg_this, column, order ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QStandardItemModel4sortEiN2Qt9SortOrderE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK18QStandardItemModel13itemFromIndexERK11QModelIndex
QStandardItem *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK18QStandardItemModel13itemFromIndexERK11QModelIndex )( void *scorep_libwrap_arg_this, const QModelIndex & index )
{
    LIBWRAP_EARLY_INIT( _ZNK18QStandardItemModel13itemFromIndexERK11QModelIndex );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK18QStandardItemModel13itemFromIndexERK11QModelIndex );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QStandardItem * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK18QStandardItemModel13itemFromIndexERK11QModelIndex, ( scorep_libwrap_arg_this, index ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK18QStandardItemModel13itemFromIndexERK11QModelIndex );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK18QStandardItemModel13indexFromItemEPK13QStandardItem
QModelIndex
SCOREP_LIBWRAP_FUNC_NAME( _ZNK18QStandardItemModel13indexFromItemEPK13QStandardItem )( void *scorep_libwrap_arg_this, const QStandardItem * item )
{
    LIBWRAP_EARLY_INIT( _ZNK18QStandardItemModel13indexFromItemEPK13QStandardItem );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK18QStandardItemModel13indexFromItemEPK13QStandardItem );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QModelIndex scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK18QStandardItemModel13indexFromItemEPK13QStandardItem, ( scorep_libwrap_arg_this, item ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK18QStandardItemModel13indexFromItemEPK13QStandardItem );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK18QStandardItemModel4itemEii
QStandardItem *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK18QStandardItemModel4itemEii )( void *scorep_libwrap_arg_this, int row, int column )
{
    LIBWRAP_EARLY_INIT( _ZNK18QStandardItemModel4itemEii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK18QStandardItemModel4itemEii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QStandardItem * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK18QStandardItemModel4itemEii, ( scorep_libwrap_arg_this, row, column ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK18QStandardItemModel4itemEii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN18QStandardItemModel7setItemEiiP13QStandardItem
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QStandardItemModel7setItemEiiP13QStandardItem )( void *scorep_libwrap_arg_this, int row, int column, QStandardItem * item )
{
    LIBWRAP_EARLY_INIT( _ZN18QStandardItemModel7setItemEiiP13QStandardItem );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QStandardItemModel7setItemEiiP13QStandardItem );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QStandardItemModel7setItemEiiP13QStandardItem, ( scorep_libwrap_arg_this, row, column, item ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QStandardItemModel7setItemEiiP13QStandardItem );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK18QStandardItemModel17invisibleRootItemEv
QStandardItem *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK18QStandardItemModel17invisibleRootItemEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK18QStandardItemModel17invisibleRootItemEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK18QStandardItemModel17invisibleRootItemEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QStandardItem * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK18QStandardItemModel17invisibleRootItemEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK18QStandardItemModel17invisibleRootItemEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK18QStandardItemModel20horizontalHeaderItemEi
QStandardItem *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK18QStandardItemModel20horizontalHeaderItemEi )( void *scorep_libwrap_arg_this, int column )
{
    LIBWRAP_EARLY_INIT( _ZNK18QStandardItemModel20horizontalHeaderItemEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK18QStandardItemModel20horizontalHeaderItemEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QStandardItem * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK18QStandardItemModel20horizontalHeaderItemEi, ( scorep_libwrap_arg_this, column ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK18QStandardItemModel20horizontalHeaderItemEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN18QStandardItemModel23setHorizontalHeaderItemEiP13QStandardItem
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QStandardItemModel23setHorizontalHeaderItemEiP13QStandardItem )( void *scorep_libwrap_arg_this, int column, QStandardItem * item )
{
    LIBWRAP_EARLY_INIT( _ZN18QStandardItemModel23setHorizontalHeaderItemEiP13QStandardItem );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QStandardItemModel23setHorizontalHeaderItemEiP13QStandardItem );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QStandardItemModel23setHorizontalHeaderItemEiP13QStandardItem, ( scorep_libwrap_arg_this, column, item ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QStandardItemModel23setHorizontalHeaderItemEiP13QStandardItem );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK18QStandardItemModel18verticalHeaderItemEi
QStandardItem *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK18QStandardItemModel18verticalHeaderItemEi )( void *scorep_libwrap_arg_this, int row )
{
    LIBWRAP_EARLY_INIT( _ZNK18QStandardItemModel18verticalHeaderItemEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK18QStandardItemModel18verticalHeaderItemEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QStandardItem * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK18QStandardItemModel18verticalHeaderItemEi, ( scorep_libwrap_arg_this, row ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK18QStandardItemModel18verticalHeaderItemEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN18QStandardItemModel21setVerticalHeaderItemEiP13QStandardItem
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QStandardItemModel21setVerticalHeaderItemEiP13QStandardItem )( void *scorep_libwrap_arg_this, int row, QStandardItem * item )
{
    LIBWRAP_EARLY_INIT( _ZN18QStandardItemModel21setVerticalHeaderItemEiP13QStandardItem );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QStandardItemModel21setVerticalHeaderItemEiP13QStandardItem );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QStandardItemModel21setVerticalHeaderItemEiP13QStandardItem, ( scorep_libwrap_arg_this, row, item ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QStandardItemModel21setVerticalHeaderItemEiP13QStandardItem );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN18QStandardItemModel25setHorizontalHeaderLabelsERK11QStringList
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QStandardItemModel25setHorizontalHeaderLabelsERK11QStringList )( void *scorep_libwrap_arg_this, const QStringList & labels )
{
    LIBWRAP_EARLY_INIT( _ZN18QStandardItemModel25setHorizontalHeaderLabelsERK11QStringList );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QStandardItemModel25setHorizontalHeaderLabelsERK11QStringList );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QStandardItemModel25setHorizontalHeaderLabelsERK11QStringList, ( scorep_libwrap_arg_this, labels ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QStandardItemModel25setHorizontalHeaderLabelsERK11QStringList );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN18QStandardItemModel23setVerticalHeaderLabelsERK11QStringList
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QStandardItemModel23setVerticalHeaderLabelsERK11QStringList )( void *scorep_libwrap_arg_this, const QStringList & labels )
{
    LIBWRAP_EARLY_INIT( _ZN18QStandardItemModel23setVerticalHeaderLabelsERK11QStringList );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QStandardItemModel23setVerticalHeaderLabelsERK11QStringList );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QStandardItemModel23setVerticalHeaderLabelsERK11QStringList, ( scorep_libwrap_arg_this, labels ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QStandardItemModel23setVerticalHeaderLabelsERK11QStringList );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN18QStandardItemModel11setRowCountEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QStandardItemModel11setRowCountEi )( void *scorep_libwrap_arg_this, int rows )
{
    LIBWRAP_EARLY_INIT( _ZN18QStandardItemModel11setRowCountEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QStandardItemModel11setRowCountEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QStandardItemModel11setRowCountEi, ( scorep_libwrap_arg_this, rows ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QStandardItemModel11setRowCountEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN18QStandardItemModel14setColumnCountEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QStandardItemModel14setColumnCountEi )( void *scorep_libwrap_arg_this, int columns )
{
    LIBWRAP_EARLY_INIT( _ZN18QStandardItemModel14setColumnCountEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QStandardItemModel14setColumnCountEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QStandardItemModel14setColumnCountEi, ( scorep_libwrap_arg_this, columns ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QStandardItemModel14setColumnCountEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN18QStandardItemModel9appendRowERK5QListIP13QStandardItemE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QStandardItemModel9appendRowERK5QListIP13QStandardItemE )( void *scorep_libwrap_arg_this, const QList<QStandardItem *> & items )
{
    LIBWRAP_EARLY_INIT( _ZN18QStandardItemModel9appendRowERK5QListIP13QStandardItemE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QStandardItemModel9appendRowERK5QListIP13QStandardItemE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QStandardItemModel9appendRowERK5QListIP13QStandardItemE, ( scorep_libwrap_arg_this, items ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QStandardItemModel9appendRowERK5QListIP13QStandardItemE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN18QStandardItemModel12appendColumnERK5QListIP13QStandardItemE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QStandardItemModel12appendColumnERK5QListIP13QStandardItemE )( void *scorep_libwrap_arg_this, const QList<QStandardItem *> & items )
{
    LIBWRAP_EARLY_INIT( _ZN18QStandardItemModel12appendColumnERK5QListIP13QStandardItemE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QStandardItemModel12appendColumnERK5QListIP13QStandardItemE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QStandardItemModel12appendColumnERK5QListIP13QStandardItemE, ( scorep_libwrap_arg_this, items ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QStandardItemModel12appendColumnERK5QListIP13QStandardItemE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN18QStandardItemModel9insertRowEiRK5QListIP13QStandardItemE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QStandardItemModel9insertRowEiRK5QListIP13QStandardItemE )( void *scorep_libwrap_arg_this, int row, const QList<QStandardItem *> & items )
{
    LIBWRAP_EARLY_INIT( _ZN18QStandardItemModel9insertRowEiRK5QListIP13QStandardItemE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QStandardItemModel9insertRowEiRK5QListIP13QStandardItemE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QStandardItemModel9insertRowEiRK5QListIP13QStandardItemE, ( scorep_libwrap_arg_this, row, items ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QStandardItemModel9insertRowEiRK5QListIP13QStandardItemE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN18QStandardItemModel12insertColumnEiRK5QListIP13QStandardItemE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QStandardItemModel12insertColumnEiRK5QListIP13QStandardItemE )( void *scorep_libwrap_arg_this, int column, const QList<QStandardItem *> & items )
{
    LIBWRAP_EARLY_INIT( _ZN18QStandardItemModel12insertColumnEiRK5QListIP13QStandardItemE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QStandardItemModel12insertColumnEiRK5QListIP13QStandardItemE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QStandardItemModel12insertColumnEiRK5QListIP13QStandardItemE, ( scorep_libwrap_arg_this, column, items ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QStandardItemModel12insertColumnEiRK5QListIP13QStandardItemE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN18QStandardItemModel8takeItemEii
QStandardItem *
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QStandardItemModel8takeItemEii )( void *scorep_libwrap_arg_this, int row, int column )
{
    LIBWRAP_EARLY_INIT( _ZN18QStandardItemModel8takeItemEii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QStandardItemModel8takeItemEii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QStandardItem * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN18QStandardItemModel8takeItemEii, ( scorep_libwrap_arg_this, row, column ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QStandardItemModel8takeItemEii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN18QStandardItemModel7takeRowEi
QList<QStandardItem *>
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QStandardItemModel7takeRowEi )( void *scorep_libwrap_arg_this, int row )
{
    LIBWRAP_EARLY_INIT( _ZN18QStandardItemModel7takeRowEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QStandardItemModel7takeRowEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QList<QStandardItem *> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN18QStandardItemModel7takeRowEi, ( scorep_libwrap_arg_this, row ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QStandardItemModel7takeRowEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN18QStandardItemModel10takeColumnEi
QList<QStandardItem *>
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QStandardItemModel10takeColumnEi )( void *scorep_libwrap_arg_this, int column )
{
    LIBWRAP_EARLY_INIT( _ZN18QStandardItemModel10takeColumnEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QStandardItemModel10takeColumnEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QList<QStandardItem *> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN18QStandardItemModel10takeColumnEi, ( scorep_libwrap_arg_this, column ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QStandardItemModel10takeColumnEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN18QStandardItemModel24takeHorizontalHeaderItemEi
QStandardItem *
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QStandardItemModel24takeHorizontalHeaderItemEi )( void *scorep_libwrap_arg_this, int column )
{
    LIBWRAP_EARLY_INIT( _ZN18QStandardItemModel24takeHorizontalHeaderItemEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QStandardItemModel24takeHorizontalHeaderItemEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QStandardItem * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN18QStandardItemModel24takeHorizontalHeaderItemEi, ( scorep_libwrap_arg_this, column ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QStandardItemModel24takeHorizontalHeaderItemEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN18QStandardItemModel22takeVerticalHeaderItemEi
QStandardItem *
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QStandardItemModel22takeVerticalHeaderItemEi )( void *scorep_libwrap_arg_this, int row )
{
    LIBWRAP_EARLY_INIT( _ZN18QStandardItemModel22takeVerticalHeaderItemEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QStandardItemModel22takeVerticalHeaderItemEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QStandardItem * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN18QStandardItemModel22takeVerticalHeaderItemEi, ( scorep_libwrap_arg_this, row ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QStandardItemModel22takeVerticalHeaderItemEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK18QStandardItemModel13itemPrototypeEv
const QStandardItem *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK18QStandardItemModel13itemPrototypeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK18QStandardItemModel13itemPrototypeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK18QStandardItemModel13itemPrototypeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QStandardItem * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK18QStandardItemModel13itemPrototypeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK18QStandardItemModel13itemPrototypeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN18QStandardItemModel16setItemPrototypeEPK13QStandardItem
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QStandardItemModel16setItemPrototypeEPK13QStandardItem )( void *scorep_libwrap_arg_this, const QStandardItem * item )
{
    LIBWRAP_EARLY_INIT( _ZN18QStandardItemModel16setItemPrototypeEPK13QStandardItem );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QStandardItemModel16setItemPrototypeEPK13QStandardItem );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QStandardItemModel16setItemPrototypeEPK13QStandardItem, ( scorep_libwrap_arg_this, item ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QStandardItemModel16setItemPrototypeEPK13QStandardItem );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK18QStandardItemModel9findItemsERK7QString6QFlagsIN2Qt9MatchFlagEEi
QList<QStandardItem *>
SCOREP_LIBWRAP_FUNC_NAME( _ZNK18QStandardItemModel9findItemsERK7QString6QFlagsIN2Qt9MatchFlagEEi )( void *scorep_libwrap_arg_this, const QString & text, Qt::MatchFlags flags, int column )
{
    LIBWRAP_EARLY_INIT( _ZNK18QStandardItemModel9findItemsERK7QString6QFlagsIN2Qt9MatchFlagEEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK18QStandardItemModel9findItemsERK7QString6QFlagsIN2Qt9MatchFlagEEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QList<QStandardItem *> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK18QStandardItemModel9findItemsERK7QString6QFlagsIN2Qt9MatchFlagEEi, ( scorep_libwrap_arg_this, text, flags, column ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK18QStandardItemModel9findItemsERK7QString6QFlagsIN2Qt9MatchFlagEEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK18QStandardItemModel8sortRoleEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK18QStandardItemModel8sortRoleEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK18QStandardItemModel8sortRoleEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK18QStandardItemModel8sortRoleEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK18QStandardItemModel8sortRoleEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK18QStandardItemModel8sortRoleEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN18QStandardItemModel11setSortRoleEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QStandardItemModel11setSortRoleEi )( void *scorep_libwrap_arg_this, int role )
{
    LIBWRAP_EARLY_INIT( _ZN18QStandardItemModel11setSortRoleEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QStandardItemModel11setSortRoleEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QStandardItemModel11setSortRoleEi, ( scorep_libwrap_arg_this, role ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QStandardItemModel11setSortRoleEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK18QStandardItemModel9mimeTypesEv
QStringList
SCOREP_LIBWRAP_FUNC_NAME( _ZNK18QStandardItemModel9mimeTypesEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK18QStandardItemModel9mimeTypesEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK18QStandardItemModel9mimeTypesEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QStringList scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK18QStandardItemModel9mimeTypesEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK18QStandardItemModel9mimeTypesEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK18QStandardItemModel8mimeDataERK5QListI11QModelIndexE
QMimeData *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK18QStandardItemModel8mimeDataERK5QListI11QModelIndexE )( void *scorep_libwrap_arg_this, const QModelIndexList & indexes )
{
    LIBWRAP_EARLY_INIT( _ZNK18QStandardItemModel8mimeDataERK5QListI11QModelIndexE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK18QStandardItemModel8mimeDataERK5QListI11QModelIndexE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QMimeData * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK18QStandardItemModel8mimeDataERK5QListI11QModelIndexE, ( scorep_libwrap_arg_this, indexes ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK18QStandardItemModel8mimeDataERK5QListI11QModelIndexE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN18QStandardItemModel12dropMimeDataEPK9QMimeDataN2Qt10DropActionEiiRK11QModelIndex
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QStandardItemModel12dropMimeDataEPK9QMimeDataN2Qt10DropActionEiiRK11QModelIndex )( void *scorep_libwrap_arg_this, const QMimeData * data, Qt::DropAction action, int row, int column, const QModelIndex & parent )
{
    LIBWRAP_EARLY_INIT( _ZN18QStandardItemModel12dropMimeDataEPK9QMimeDataN2Qt10DropActionEiiRK11QModelIndex );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QStandardItemModel12dropMimeDataEPK9QMimeDataN2Qt10DropActionEiiRK11QModelIndex );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN18QStandardItemModel12dropMimeDataEPK9QMimeDataN2Qt10DropActionEiiRK11QModelIndex, ( scorep_libwrap_arg_this, data, action, row, column, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QStandardItemModel12dropMimeDataEPK9QMimeDataN2Qt10DropActionEiiRK11QModelIndex );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN18QStandardItemModel11itemChangedEP13QStandardItem
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QStandardItemModel11itemChangedEP13QStandardItem )( void *scorep_libwrap_arg_this, QStandardItem * item )
{
    LIBWRAP_EARLY_INIT( _ZN18QStandardItemModel11itemChangedEP13QStandardItem );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QStandardItemModel11itemChangedEP13QStandardItem );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QStandardItemModel11itemChangedEP13QStandardItem, ( scorep_libwrap_arg_this, item ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QStandardItemModel11itemChangedEP13QStandardItem );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZrsR11QDataStreamR13QStandardItem
QDataStream &
SCOREP_LIBWRAP_FUNC_NAME( _ZrsR11QDataStreamR13QStandardItem )( QDataStream & in, QStandardItem & item )
{
    LIBWRAP_EARLY_INIT( _ZrsR11QDataStreamR13QStandardItem );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZrsR11QDataStreamR13QStandardItem );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDataStream & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZrsR11QDataStreamR13QStandardItem, ( in, item ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZrsR11QDataStreamR13QStandardItem );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZlsR11QDataStreamRK13QStandardItem
QDataStream &
SCOREP_LIBWRAP_FUNC_NAME( _ZlsR11QDataStreamRK13QStandardItem )( QDataStream & out, const QStandardItem & item )
{
    LIBWRAP_EARLY_INIT( _ZlsR11QDataStreamRK13QStandardItem );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZlsR11QDataStreamRK13QStandardItem );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDataStream & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZlsR11QDataStreamRK13QStandardItem, ( out, item ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZlsR11QDataStreamRK13QStandardItem );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QClipboard10metaObjectEv
const QMetaObject *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QClipboard10metaObjectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QClipboard10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QClipboard10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QMetaObject * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QClipboard10metaObjectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QClipboard10metaObjectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QClipboard11qt_metacastEPKc
void *
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QClipboard11qt_metacastEPKc )( void *scorep_libwrap_arg_this, const char * scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN10QClipboard11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QClipboard11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    void * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN10QClipboard11qt_metacastEPKc, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QClipboard11qt_metacastEPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QClipboard11qt_metacallEN11QMetaObject4CallEiPPv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QClipboard11qt_metacallEN11QMetaObject4CallEiPPv )( void *scorep_libwrap_arg_this, QMetaObject::Call scorep_libwrap_arg_1, int scorep_libwrap_arg_2, void ** scorep_libwrap_arg_3 )
{
    LIBWRAP_EARLY_INIT( _ZN10QClipboard11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QClipboard11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN10QClipboard11qt_metacallEN11QMetaObject4CallEiPPv, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, scorep_libwrap_arg_2, scorep_libwrap_arg_3 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QClipboard11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QClipboard5clearENS_4ModeE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QClipboard5clearENS_4ModeE )( void *scorep_libwrap_arg_this, QClipboard::Mode mode )
{
    LIBWRAP_EARLY_INIT( _ZN10QClipboard5clearENS_4ModeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QClipboard5clearENS_4ModeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QClipboard5clearENS_4ModeE, ( scorep_libwrap_arg_this, mode ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QClipboard5clearENS_4ModeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK10QClipboard17supportsSelectionEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QClipboard17supportsSelectionEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QClipboard17supportsSelectionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QClipboard17supportsSelectionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QClipboard17supportsSelectionEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QClipboard17supportsSelectionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QClipboard18supportsFindBufferEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QClipboard18supportsFindBufferEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QClipboard18supportsFindBufferEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QClipboard18supportsFindBufferEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QClipboard18supportsFindBufferEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QClipboard18supportsFindBufferEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QClipboard13ownsSelectionEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QClipboard13ownsSelectionEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QClipboard13ownsSelectionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QClipboard13ownsSelectionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QClipboard13ownsSelectionEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QClipboard13ownsSelectionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QClipboard13ownsClipboardEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QClipboard13ownsClipboardEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QClipboard13ownsClipboardEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QClipboard13ownsClipboardEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QClipboard13ownsClipboardEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QClipboard13ownsClipboardEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QClipboard14ownsFindBufferEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QClipboard14ownsFindBufferEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QClipboard14ownsFindBufferEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QClipboard14ownsFindBufferEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QClipboard14ownsFindBufferEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QClipboard14ownsFindBufferEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QClipboard4textENS_4ModeE
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QClipboard4textENS_4ModeE )( void *scorep_libwrap_arg_this, QClipboard::Mode mode )
{
    LIBWRAP_EARLY_INIT( _ZNK10QClipboard4textENS_4ModeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QClipboard4textENS_4ModeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QClipboard4textENS_4ModeE, ( scorep_libwrap_arg_this, mode ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QClipboard4textENS_4ModeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QClipboard4textER7QStringNS_4ModeE
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QClipboard4textER7QStringNS_4ModeE )( void *scorep_libwrap_arg_this, QString & subtype, QClipboard::Mode mode )
{
    LIBWRAP_EARLY_INIT( _ZNK10QClipboard4textER7QStringNS_4ModeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QClipboard4textER7QStringNS_4ModeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QClipboard4textER7QStringNS_4ModeE, ( scorep_libwrap_arg_this, subtype, mode ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QClipboard4textER7QStringNS_4ModeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QClipboard7setTextERK7QStringNS_4ModeE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QClipboard7setTextERK7QStringNS_4ModeE )( void *scorep_libwrap_arg_this, const QString & scorep_libwrap_arg_1, QClipboard::Mode mode )
{
    LIBWRAP_EARLY_INIT( _ZN10QClipboard7setTextERK7QStringNS_4ModeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QClipboard7setTextERK7QStringNS_4ModeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QClipboard7setTextERK7QStringNS_4ModeE, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, mode ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QClipboard7setTextERK7QStringNS_4ModeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK10QClipboard8mimeDataENS_4ModeE
const QMimeData *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QClipboard8mimeDataENS_4ModeE )( void *scorep_libwrap_arg_this, QClipboard::Mode mode )
{
    LIBWRAP_EARLY_INIT( _ZNK10QClipboard8mimeDataENS_4ModeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QClipboard8mimeDataENS_4ModeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QMimeData * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QClipboard8mimeDataENS_4ModeE, ( scorep_libwrap_arg_this, mode ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QClipboard8mimeDataENS_4ModeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QClipboard11setMimeDataEP9QMimeDataNS_4ModeE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QClipboard11setMimeDataEP9QMimeDataNS_4ModeE )( void *scorep_libwrap_arg_this, QMimeData * data, QClipboard::Mode mode )
{
    LIBWRAP_EARLY_INIT( _ZN10QClipboard11setMimeDataEP9QMimeDataNS_4ModeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QClipboard11setMimeDataEP9QMimeDataNS_4ModeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QClipboard11setMimeDataEP9QMimeDataNS_4ModeE, ( scorep_libwrap_arg_this, data, mode ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QClipboard11setMimeDataEP9QMimeDataNS_4ModeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK10QClipboard5imageENS_4ModeE
QImage
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QClipboard5imageENS_4ModeE )( void *scorep_libwrap_arg_this, QClipboard::Mode mode )
{
    LIBWRAP_EARLY_INIT( _ZNK10QClipboard5imageENS_4ModeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QClipboard5imageENS_4ModeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QImage scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QClipboard5imageENS_4ModeE, ( scorep_libwrap_arg_this, mode ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QClipboard5imageENS_4ModeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QClipboard6pixmapENS_4ModeE
QPixmap
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QClipboard6pixmapENS_4ModeE )( void *scorep_libwrap_arg_this, QClipboard::Mode mode )
{
    LIBWRAP_EARLY_INIT( _ZNK10QClipboard6pixmapENS_4ModeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QClipboard6pixmapENS_4ModeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPixmap scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QClipboard6pixmapENS_4ModeE, ( scorep_libwrap_arg_this, mode ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QClipboard6pixmapENS_4ModeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QClipboard8setImageERK6QImageNS_4ModeE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QClipboard8setImageERK6QImageNS_4ModeE )( void *scorep_libwrap_arg_this, const QImage & scorep_libwrap_arg_1, QClipboard::Mode mode )
{
    LIBWRAP_EARLY_INIT( _ZN10QClipboard8setImageERK6QImageNS_4ModeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QClipboard8setImageERK6QImageNS_4ModeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QClipboard8setImageERK6QImageNS_4ModeE, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, mode ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QClipboard8setImageERK6QImageNS_4ModeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QClipboard9setPixmapERK7QPixmapNS_4ModeE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QClipboard9setPixmapERK7QPixmapNS_4ModeE )( void *scorep_libwrap_arg_this, const QPixmap & scorep_libwrap_arg_1, QClipboard::Mode mode )
{
    LIBWRAP_EARLY_INIT( _ZN10QClipboard9setPixmapERK7QPixmapNS_4ModeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QClipboard9setPixmapERK7QPixmapNS_4ModeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QClipboard9setPixmapERK7QPixmapNS_4ModeE, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, mode ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QClipboard9setPixmapERK7QPixmapNS_4ModeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QClipboard7changedENS_4ModeE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QClipboard7changedENS_4ModeE )( void *scorep_libwrap_arg_this, QClipboard::Mode mode )
{
    LIBWRAP_EARLY_INIT( _ZN10QClipboard7changedENS_4ModeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QClipboard7changedENS_4ModeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QClipboard7changedENS_4ModeE, ( scorep_libwrap_arg_this, mode ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QClipboard7changedENS_4ModeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QClipboard16selectionChangedEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QClipboard16selectionChangedEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN10QClipboard16selectionChangedEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QClipboard16selectionChangedEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QClipboard16selectionChangedEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QClipboard16selectionChangedEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QClipboard17findBufferChangedEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QClipboard17findBufferChangedEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN10QClipboard17findBufferChangedEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QClipboard17findBufferChangedEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QClipboard17findBufferChangedEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QClipboard17findBufferChangedEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QClipboard11dataChangedEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QClipboard11dataChangedEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN10QClipboard11dataChangedEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QClipboard11dataChangedEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QClipboard11dataChangedEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QClipboard11dataChangedEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QCursorC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QCursorC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN7QCursorC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QCursorC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QCursorC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QCursorC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QCursorC1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QCursorC1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN7QCursorC1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QCursorC1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QCursorC1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QCursorC1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QCursorC2EN2Qt11CursorShapeE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QCursorC2EN2Qt11CursorShapeE )( void *scorep_libwrap_arg_this, Qt::CursorShape shape )
{
    LIBWRAP_EARLY_INIT( _ZN7QCursorC2EN2Qt11CursorShapeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QCursorC2EN2Qt11CursorShapeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QCursorC2EN2Qt11CursorShapeE, ( scorep_libwrap_arg_this, shape ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QCursorC2EN2Qt11CursorShapeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QCursorC1EN2Qt11CursorShapeE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QCursorC1EN2Qt11CursorShapeE )( void *scorep_libwrap_arg_this, Qt::CursorShape shape )
{
    LIBWRAP_EARLY_INIT( _ZN7QCursorC1EN2Qt11CursorShapeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QCursorC1EN2Qt11CursorShapeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QCursorC1EN2Qt11CursorShapeE, ( scorep_libwrap_arg_this, shape ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QCursorC1EN2Qt11CursorShapeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QCursorC2ERK7QBitmapS2_ii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QCursorC2ERK7QBitmapS2_ii )( void *scorep_libwrap_arg_this, const QBitmap & bitmap, const QBitmap & mask, int hotX, int hotY )
{
    LIBWRAP_EARLY_INIT( _ZN7QCursorC2ERK7QBitmapS2_ii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QCursorC2ERK7QBitmapS2_ii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QCursorC2ERK7QBitmapS2_ii, ( scorep_libwrap_arg_this, bitmap, mask, hotX, hotY ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QCursorC2ERK7QBitmapS2_ii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QCursorC1ERK7QBitmapS2_ii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QCursorC1ERK7QBitmapS2_ii )( void *scorep_libwrap_arg_this, const QBitmap & bitmap, const QBitmap & mask, int hotX, int hotY )
{
    LIBWRAP_EARLY_INIT( _ZN7QCursorC1ERK7QBitmapS2_ii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QCursorC1ERK7QBitmapS2_ii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QCursorC1ERK7QBitmapS2_ii, ( scorep_libwrap_arg_this, bitmap, mask, hotX, hotY ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QCursorC1ERK7QBitmapS2_ii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QCursorC2ERK7QPixmapii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QCursorC2ERK7QPixmapii )( void *scorep_libwrap_arg_this, const QPixmap & pixmap, int hotX, int hotY )
{
    LIBWRAP_EARLY_INIT( _ZN7QCursorC2ERK7QPixmapii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QCursorC2ERK7QPixmapii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QCursorC2ERK7QPixmapii, ( scorep_libwrap_arg_this, pixmap, hotX, hotY ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QCursorC2ERK7QPixmapii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QCursorC1ERK7QPixmapii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QCursorC1ERK7QPixmapii )( void *scorep_libwrap_arg_this, const QPixmap & pixmap, int hotX, int hotY )
{
    LIBWRAP_EARLY_INIT( _ZN7QCursorC1ERK7QPixmapii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QCursorC1ERK7QPixmapii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QCursorC1ERK7QPixmapii, ( scorep_libwrap_arg_this, pixmap, hotX, hotY ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QCursorC1ERK7QPixmapii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QCursorC2ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QCursorC2ERKS_ )( void *scorep_libwrap_arg_this, const QCursor & cursor )
{
    LIBWRAP_EARLY_INIT( _ZN7QCursorC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QCursorC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QCursorC2ERKS_, ( scorep_libwrap_arg_this, cursor ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QCursorC2ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QCursorC1ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QCursorC1ERKS_ )( void *scorep_libwrap_arg_this, const QCursor & cursor )
{
    LIBWRAP_EARLY_INIT( _ZN7QCursorC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QCursorC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QCursorC1ERKS_, ( scorep_libwrap_arg_this, cursor ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QCursorC1ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QCursorD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QCursorD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN7QCursorD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QCursorD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QCursorD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QCursorD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QCursorD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QCursorD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN7QCursorD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QCursorD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QCursorD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QCursorD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QCursoraSERKS_
QCursor &
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QCursoraSERKS_ )( void *scorep_libwrap_arg_this, const QCursor & cursor )
{
    LIBWRAP_EARLY_INIT( _ZN7QCursoraSERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QCursoraSERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QCursor & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN7QCursoraSERKS_, ( scorep_libwrap_arg_this, cursor ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QCursoraSERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QCursor5shapeEv
Qt::CursorShape
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QCursor5shapeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QCursor5shapeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QCursor5shapeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    Qt::CursorShape scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QCursor5shapeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QCursor5shapeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QCursor8setShapeEN2Qt11CursorShapeE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QCursor8setShapeEN2Qt11CursorShapeE )( void *scorep_libwrap_arg_this, Qt::CursorShape newShape )
{
    LIBWRAP_EARLY_INIT( _ZN7QCursor8setShapeEN2Qt11CursorShapeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QCursor8setShapeEN2Qt11CursorShapeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QCursor8setShapeEN2Qt11CursorShapeE, ( scorep_libwrap_arg_this, newShape ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QCursor8setShapeEN2Qt11CursorShapeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK7QCursor6bitmapEv
const QBitmap *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QCursor6bitmapEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QCursor6bitmapEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QCursor6bitmapEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QBitmap * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QCursor6bitmapEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QCursor6bitmapEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QCursor4maskEv
const QBitmap *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QCursor4maskEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QCursor4maskEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QCursor4maskEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QBitmap * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QCursor4maskEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QCursor4maskEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QCursor6pixmapEv
QPixmap
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QCursor6pixmapEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QCursor6pixmapEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QCursor6pixmapEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPixmap scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QCursor6pixmapEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QCursor6pixmapEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QCursor7hotSpotEv
QPoint
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QCursor7hotSpotEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QCursor7hotSpotEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QCursor7hotSpotEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPoint scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QCursor7hotSpotEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QCursor7hotSpotEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QCursor3posEv
QPoint
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QCursor3posEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN7QCursor3posEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QCursor3posEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPoint scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN7QCursor3posEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QCursor3posEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QCursor3posEPK7QScreen
QPoint
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QCursor3posEPK7QScreen )( const QScreen * screen )
{
    LIBWRAP_EARLY_INIT( _ZN7QCursor3posEPK7QScreen );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QCursor3posEPK7QScreen );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPoint scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN7QCursor3posEPK7QScreen, ( screen ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QCursor3posEPK7QScreen );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QCursor6setPosEii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QCursor6setPosEii )( int x, int y )
{
    LIBWRAP_EARLY_INIT( _ZN7QCursor6setPosEii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QCursor6setPosEii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QCursor6setPosEii, ( x, y ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QCursor6setPosEii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QCursor6setPosEP7QScreenii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QCursor6setPosEP7QScreenii )( QScreen * screen, int x, int y )
{
    LIBWRAP_EARLY_INIT( _ZN7QCursor6setPosEP7QScreenii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QCursor6setPosEP7QScreenii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QCursor6setPosEP7QScreenii, ( screen, x, y ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QCursor6setPosEP7QScreenii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZrsR11QDataStreamR7QCursor
QDataStream &
SCOREP_LIBWRAP_FUNC_NAME( _ZrsR11QDataStreamR7QCursor )( QDataStream & inS, QCursor & cursor )
{
    LIBWRAP_EARLY_INIT( _ZrsR11QDataStreamR7QCursor );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZrsR11QDataStreamR7QCursor );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDataStream & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZrsR11QDataStreamR7QCursor, ( inS, cursor ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZrsR11QDataStreamR7QCursor );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _Zls6QDebugRK7QCursor
QDebug
SCOREP_LIBWRAP_FUNC_NAME( _Zls6QDebugRK7QCursor )( QDebug scorep_libwrap_arg_1, const QCursor & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _Zls6QDebugRK7QCursor );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _Zls6QDebugRK7QCursor );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDebug scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _Zls6QDebugRK7QCursor, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _Zls6QDebugRK7QCursor );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK5QDrag10metaObjectEv
const QMetaObject *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK5QDrag10metaObjectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK5QDrag10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK5QDrag10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QMetaObject * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK5QDrag10metaObjectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK5QDrag10metaObjectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN5QDrag11qt_metacastEPKc
void *
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QDrag11qt_metacastEPKc )( void *scorep_libwrap_arg_this, const char * scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN5QDrag11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QDrag11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    void * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN5QDrag11qt_metacastEPKc, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QDrag11qt_metacastEPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN5QDrag11qt_metacallEN11QMetaObject4CallEiPPv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QDrag11qt_metacallEN11QMetaObject4CallEiPPv )( void *scorep_libwrap_arg_this, QMetaObject::Call scorep_libwrap_arg_1, int scorep_libwrap_arg_2, void ** scorep_libwrap_arg_3 )
{
    LIBWRAP_EARLY_INIT( _ZN5QDrag11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QDrag11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN5QDrag11qt_metacallEN11QMetaObject4CallEiPPv, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, scorep_libwrap_arg_2, scorep_libwrap_arg_3 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QDrag11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN5QDragC2EP7QObject
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QDragC2EP7QObject )( void *scorep_libwrap_arg_this, QObject * dragSource )
{
    LIBWRAP_EARLY_INIT( _ZN5QDragC2EP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QDragC2EP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QDragC2EP7QObject, ( scorep_libwrap_arg_this, dragSource ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QDragC2EP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN5QDragC1EP7QObject
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QDragC1EP7QObject )( void *scorep_libwrap_arg_this, QObject * dragSource )
{
    LIBWRAP_EARLY_INIT( _ZN5QDragC1EP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QDragC1EP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QDragC1EP7QObject, ( scorep_libwrap_arg_this, dragSource ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QDragC1EP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN5QDragD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QDragD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN5QDragD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QDragD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QDragD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QDragD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN5QDragD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QDragD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN5QDragD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QDragD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QDragD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QDragD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN5QDragD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QDragD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN5QDragD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QDragD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QDragD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QDragD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN5QDrag11setMimeDataEP9QMimeData
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QDrag11setMimeDataEP9QMimeData )( void *scorep_libwrap_arg_this, QMimeData * data )
{
    LIBWRAP_EARLY_INIT( _ZN5QDrag11setMimeDataEP9QMimeData );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QDrag11setMimeDataEP9QMimeData );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QDrag11setMimeDataEP9QMimeData, ( scorep_libwrap_arg_this, data ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QDrag11setMimeDataEP9QMimeData );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK5QDrag8mimeDataEv
QMimeData *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK5QDrag8mimeDataEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK5QDrag8mimeDataEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK5QDrag8mimeDataEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QMimeData * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK5QDrag8mimeDataEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK5QDrag8mimeDataEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN5QDrag9setPixmapERK7QPixmap
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QDrag9setPixmapERK7QPixmap )( void *scorep_libwrap_arg_this, const QPixmap & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN5QDrag9setPixmapERK7QPixmap );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QDrag9setPixmapERK7QPixmap );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QDrag9setPixmapERK7QPixmap, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QDrag9setPixmapERK7QPixmap );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK5QDrag6pixmapEv
QPixmap
SCOREP_LIBWRAP_FUNC_NAME( _ZNK5QDrag6pixmapEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK5QDrag6pixmapEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK5QDrag6pixmapEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPixmap scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK5QDrag6pixmapEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK5QDrag6pixmapEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN5QDrag10setHotSpotERK6QPoint
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QDrag10setHotSpotERK6QPoint )( void *scorep_libwrap_arg_this, const QPoint & hotspot )
{
    LIBWRAP_EARLY_INIT( _ZN5QDrag10setHotSpotERK6QPoint );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QDrag10setHotSpotERK6QPoint );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QDrag10setHotSpotERK6QPoint, ( scorep_libwrap_arg_this, hotspot ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QDrag10setHotSpotERK6QPoint );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK5QDrag7hotSpotEv
QPoint
SCOREP_LIBWRAP_FUNC_NAME( _ZNK5QDrag7hotSpotEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK5QDrag7hotSpotEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK5QDrag7hotSpotEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPoint scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK5QDrag7hotSpotEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK5QDrag7hotSpotEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK5QDrag6sourceEv
QObject *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK5QDrag6sourceEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK5QDrag6sourceEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK5QDrag6sourceEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QObject * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK5QDrag6sourceEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK5QDrag6sourceEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK5QDrag6targetEv
QObject *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK5QDrag6targetEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK5QDrag6targetEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK5QDrag6targetEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QObject * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK5QDrag6targetEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK5QDrag6targetEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN5QDrag5startE6QFlagsIN2Qt10DropActionEE
Qt::DropAction
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QDrag5startE6QFlagsIN2Qt10DropActionEE )( void *scorep_libwrap_arg_this, Qt::DropActions supportedActions )
{
    LIBWRAP_EARLY_INIT( _ZN5QDrag5startE6QFlagsIN2Qt10DropActionEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QDrag5startE6QFlagsIN2Qt10DropActionEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    Qt::DropAction scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN5QDrag5startE6QFlagsIN2Qt10DropActionEE, ( scorep_libwrap_arg_this, supportedActions ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QDrag5startE6QFlagsIN2Qt10DropActionEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN5QDrag4execE6QFlagsIN2Qt10DropActionEE
Qt::DropAction
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QDrag4execE6QFlagsIN2Qt10DropActionEE )( void *scorep_libwrap_arg_this, Qt::DropActions supportedActions )
{
    LIBWRAP_EARLY_INIT( _ZN5QDrag4execE6QFlagsIN2Qt10DropActionEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QDrag4execE6QFlagsIN2Qt10DropActionEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    Qt::DropAction scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN5QDrag4execE6QFlagsIN2Qt10DropActionEE, ( scorep_libwrap_arg_this, supportedActions ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QDrag4execE6QFlagsIN2Qt10DropActionEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN5QDrag4execE6QFlagsIN2Qt10DropActionEES2_
Qt::DropAction
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QDrag4execE6QFlagsIN2Qt10DropActionEES2_ )( void *scorep_libwrap_arg_this, Qt::DropActions supportedActions, Qt::DropAction defaultAction )
{
    LIBWRAP_EARLY_INIT( _ZN5QDrag4execE6QFlagsIN2Qt10DropActionEES2_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QDrag4execE6QFlagsIN2Qt10DropActionEES2_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    Qt::DropAction scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN5QDrag4execE6QFlagsIN2Qt10DropActionEES2_, ( scorep_libwrap_arg_this, supportedActions, defaultAction ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QDrag4execE6QFlagsIN2Qt10DropActionEES2_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN5QDrag13setDragCursorERK7QPixmapN2Qt10DropActionE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QDrag13setDragCursorERK7QPixmapN2Qt10DropActionE )( void *scorep_libwrap_arg_this, const QPixmap & cursor, Qt::DropAction action )
{
    LIBWRAP_EARLY_INIT( _ZN5QDrag13setDragCursorERK7QPixmapN2Qt10DropActionE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QDrag13setDragCursorERK7QPixmapN2Qt10DropActionE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QDrag13setDragCursorERK7QPixmapN2Qt10DropActionE, ( scorep_libwrap_arg_this, cursor, action ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QDrag13setDragCursorERK7QPixmapN2Qt10DropActionE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK5QDrag10dragCursorEN2Qt10DropActionE
QPixmap
SCOREP_LIBWRAP_FUNC_NAME( _ZNK5QDrag10dragCursorEN2Qt10DropActionE )( void *scorep_libwrap_arg_this, Qt::DropAction action )
{
    LIBWRAP_EARLY_INIT( _ZNK5QDrag10dragCursorEN2Qt10DropActionE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK5QDrag10dragCursorEN2Qt10DropActionE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPixmap scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK5QDrag10dragCursorEN2Qt10DropActionE, ( scorep_libwrap_arg_this, action ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK5QDrag10dragCursorEN2Qt10DropActionE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK5QDrag16supportedActionsEv
Qt::DropActions
SCOREP_LIBWRAP_FUNC_NAME( _ZNK5QDrag16supportedActionsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK5QDrag16supportedActionsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK5QDrag16supportedActionsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    Qt::DropActions scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK5QDrag16supportedActionsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK5QDrag16supportedActionsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK5QDrag13defaultActionEv
Qt::DropAction
SCOREP_LIBWRAP_FUNC_NAME( _ZNK5QDrag13defaultActionEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK5QDrag13defaultActionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK5QDrag13defaultActionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    Qt::DropAction scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK5QDrag13defaultActionEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK5QDrag13defaultActionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN5QDrag6cancelEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QDrag6cancelEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN5QDrag6cancelEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QDrag6cancelEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QDrag6cancelEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QDrag6cancelEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN5QDrag13actionChangedEN2Qt10DropActionE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QDrag13actionChangedEN2Qt10DropActionE )( void *scorep_libwrap_arg_this, Qt::DropAction action )
{
    LIBWRAP_EARLY_INIT( _ZN5QDrag13actionChangedEN2Qt10DropActionE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QDrag13actionChangedEN2Qt10DropActionE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QDrag13actionChangedEN2Qt10DropActionE, ( scorep_libwrap_arg_this, action ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QDrag13actionChangedEN2Qt10DropActionE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN5QDrag13targetChangedEP7QObject
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN5QDrag13targetChangedEP7QObject )( void *scorep_libwrap_arg_this, QObject * newTarget )
{
    LIBWRAP_EARLY_INIT( _ZN5QDrag13targetChangedEP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN5QDrag13targetChangedEP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN5QDrag13targetChangedEP7QObject, ( scorep_libwrap_arg_this, newTarget ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN5QDrag13targetChangedEP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK14QGenericPlugin10metaObjectEv
const QMetaObject *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QGenericPlugin10metaObjectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QGenericPlugin10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QGenericPlugin10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QMetaObject * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QGenericPlugin10metaObjectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QGenericPlugin10metaObjectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QGenericPlugin11qt_metacastEPKc
void *
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QGenericPlugin11qt_metacastEPKc )( void *scorep_libwrap_arg_this, const char * scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN14QGenericPlugin11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QGenericPlugin11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    void * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN14QGenericPlugin11qt_metacastEPKc, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QGenericPlugin11qt_metacastEPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QGenericPlugin11qt_metacallEN11QMetaObject4CallEiPPv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QGenericPlugin11qt_metacallEN11QMetaObject4CallEiPPv )( void *scorep_libwrap_arg_this, QMetaObject::Call scorep_libwrap_arg_1, int scorep_libwrap_arg_2, void ** scorep_libwrap_arg_3 )
{
    LIBWRAP_EARLY_INIT( _ZN14QGenericPlugin11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QGenericPlugin11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN14QGenericPlugin11qt_metacallEN11QMetaObject4CallEiPPv, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, scorep_libwrap_arg_2, scorep_libwrap_arg_3 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QGenericPlugin11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QGenericPluginC2EP7QObject
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QGenericPluginC2EP7QObject )( void *scorep_libwrap_arg_this, QObject * parent )
{
    LIBWRAP_EARLY_INIT( _ZN14QGenericPluginC2EP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QGenericPluginC2EP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QGenericPluginC2EP7QObject, ( scorep_libwrap_arg_this, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QGenericPluginC2EP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QGenericPluginD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QGenericPluginD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN14QGenericPluginD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QGenericPluginD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QGenericPluginD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QGenericPluginD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QGenericPluginD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QGenericPluginD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN14QGenericPluginD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QGenericPluginD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QGenericPluginD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QGenericPluginD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QGenericPluginD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QGenericPluginD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN14QGenericPluginD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QGenericPluginD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QGenericPluginD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QGenericPluginD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN21QGenericPluginFactory4keysEv
QStringList
SCOREP_LIBWRAP_FUNC_NAME( _ZN21QGenericPluginFactory4keysEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN21QGenericPluginFactory4keysEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN21QGenericPluginFactory4keysEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QStringList scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN21QGenericPluginFactory4keysEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN21QGenericPluginFactory4keysEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN21QGenericPluginFactory6createERK7QStringS2_
QObject *
SCOREP_LIBWRAP_FUNC_NAME( _ZN21QGenericPluginFactory6createERK7QStringS2_ )( const QString & scorep_libwrap_arg_1, const QString & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _ZN21QGenericPluginFactory6createERK7QStringS2_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN21QGenericPluginFactory6createERK7QStringS2_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QObject * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN21QGenericPluginFactory6createERK7QStringS2_, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN21QGenericPluginFactory6createERK7QStringS2_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QInputMethod10metaObjectEv
const QMetaObject *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QInputMethod10metaObjectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QInputMethod10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QInputMethod10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QMetaObject * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QInputMethod10metaObjectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QInputMethod10metaObjectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QInputMethod11qt_metacastEPKc
void *
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QInputMethod11qt_metacastEPKc )( void *scorep_libwrap_arg_this, const char * scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN12QInputMethod11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QInputMethod11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    void * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN12QInputMethod11qt_metacastEPKc, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QInputMethod11qt_metacastEPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QInputMethod11qt_metacallEN11QMetaObject4CallEiPPv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QInputMethod11qt_metacallEN11QMetaObject4CallEiPPv )( void *scorep_libwrap_arg_this, QMetaObject::Call scorep_libwrap_arg_1, int scorep_libwrap_arg_2, void ** scorep_libwrap_arg_3 )
{
    LIBWRAP_EARLY_INIT( _ZN12QInputMethod11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QInputMethod11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN12QInputMethod11qt_metacallEN11QMetaObject4CallEiPPv, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, scorep_libwrap_arg_2, scorep_libwrap_arg_3 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QInputMethod11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QInputMethod18inputItemTransformEv
QTransform
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QInputMethod18inputItemTransformEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QInputMethod18inputItemTransformEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QInputMethod18inputItemTransformEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTransform scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QInputMethod18inputItemTransformEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QInputMethod18inputItemTransformEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QInputMethod21setInputItemTransformERK10QTransform
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QInputMethod21setInputItemTransformERK10QTransform )( void *scorep_libwrap_arg_this, const QTransform & transform )
{
    LIBWRAP_EARLY_INIT( _ZN12QInputMethod21setInputItemTransformERK10QTransform );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QInputMethod21setInputItemTransformERK10QTransform );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QInputMethod21setInputItemTransformERK10QTransform, ( scorep_libwrap_arg_this, transform ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QInputMethod21setInputItemTransformERK10QTransform );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK12QInputMethod18inputItemRectangleEv
QRectF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QInputMethod18inputItemRectangleEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QInputMethod18inputItemRectangleEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QInputMethod18inputItemRectangleEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRectF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QInputMethod18inputItemRectangleEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QInputMethod18inputItemRectangleEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QInputMethod21setInputItemRectangleERK6QRectF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QInputMethod21setInputItemRectangleERK6QRectF )( void *scorep_libwrap_arg_this, const QRectF & rect )
{
    LIBWRAP_EARLY_INIT( _ZN12QInputMethod21setInputItemRectangleERK6QRectF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QInputMethod21setInputItemRectangleERK6QRectF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QInputMethod21setInputItemRectangleERK6QRectF, ( scorep_libwrap_arg_this, rect ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QInputMethod21setInputItemRectangleERK6QRectF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK12QInputMethod15cursorRectangleEv
QRectF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QInputMethod15cursorRectangleEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QInputMethod15cursorRectangleEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QInputMethod15cursorRectangleEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRectF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QInputMethod15cursorRectangleEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QInputMethod15cursorRectangleEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QInputMethod15anchorRectangleEv
QRectF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QInputMethod15anchorRectangleEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QInputMethod15anchorRectangleEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QInputMethod15anchorRectangleEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRectF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QInputMethod15anchorRectangleEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QInputMethod15anchorRectangleEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QInputMethod17keyboardRectangleEv
QRectF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QInputMethod17keyboardRectangleEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QInputMethod17keyboardRectangleEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QInputMethod17keyboardRectangleEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRectF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QInputMethod17keyboardRectangleEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QInputMethod17keyboardRectangleEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QInputMethod22inputItemClipRectangleEv
QRectF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QInputMethod22inputItemClipRectangleEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QInputMethod22inputItemClipRectangleEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QInputMethod22inputItemClipRectangleEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRectF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QInputMethod22inputItemClipRectangleEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QInputMethod22inputItemClipRectangleEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QInputMethod10setVisibleEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QInputMethod10setVisibleEb )( void *scorep_libwrap_arg_this, bool visible )
{
    LIBWRAP_EARLY_INIT( _ZN12QInputMethod10setVisibleEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QInputMethod10setVisibleEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QInputMethod10setVisibleEb, ( scorep_libwrap_arg_this, visible ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QInputMethod10setVisibleEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK12QInputMethod11isAnimatingEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QInputMethod11isAnimatingEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QInputMethod11isAnimatingEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QInputMethod11isAnimatingEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QInputMethod11isAnimatingEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QInputMethod11isAnimatingEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QInputMethod6localeEv
QLocale
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QInputMethod6localeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QInputMethod6localeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QInputMethod6localeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QLocale scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QInputMethod6localeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QInputMethod6localeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QInputMethod14inputDirectionEv
Qt::LayoutDirection
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QInputMethod14inputDirectionEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QInputMethod14inputDirectionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QInputMethod14inputDirectionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    Qt::LayoutDirection scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QInputMethod14inputDirectionEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QInputMethod14inputDirectionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QInputMethod16queryFocusObjectEN2Qt16InputMethodQueryE8QVariant
QVariant
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QInputMethod16queryFocusObjectEN2Qt16InputMethodQueryE8QVariant )( Qt::InputMethodQuery query, QVariant argument )
{
    LIBWRAP_EARLY_INIT( _ZN12QInputMethod16queryFocusObjectEN2Qt16InputMethodQueryE8QVariant );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QInputMethod16queryFocusObjectEN2Qt16InputMethodQueryE8QVariant );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QVariant scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN12QInputMethod16queryFocusObjectEN2Qt16InputMethodQueryE8QVariant, ( query, argument ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QInputMethod16queryFocusObjectEN2Qt16InputMethodQueryE8QVariant );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QInputMethod4showEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QInputMethod4showEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QInputMethod4showEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QInputMethod4showEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QInputMethod4showEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QInputMethod4showEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QInputMethod4hideEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QInputMethod4hideEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QInputMethod4hideEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QInputMethod4hideEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QInputMethod4hideEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QInputMethod4hideEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QInputMethod6updateE6QFlagsIN2Qt16InputMethodQueryEE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QInputMethod6updateE6QFlagsIN2Qt16InputMethodQueryEE )( void *scorep_libwrap_arg_this, Qt::InputMethodQueries queries )
{
    LIBWRAP_EARLY_INIT( _ZN12QInputMethod6updateE6QFlagsIN2Qt16InputMethodQueryEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QInputMethod6updateE6QFlagsIN2Qt16InputMethodQueryEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QInputMethod6updateE6QFlagsIN2Qt16InputMethodQueryEE, ( scorep_libwrap_arg_this, queries ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QInputMethod6updateE6QFlagsIN2Qt16InputMethodQueryEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QInputMethod5resetEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QInputMethod5resetEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QInputMethod5resetEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QInputMethod5resetEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QInputMethod5resetEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QInputMethod5resetEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QInputMethod6commitEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QInputMethod6commitEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QInputMethod6commitEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QInputMethod6commitEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QInputMethod6commitEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QInputMethod6commitEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QInputMethod12invokeActionENS_6ActionEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QInputMethod12invokeActionENS_6ActionEi )( void *scorep_libwrap_arg_this, QInputMethod::Action a, int cursorPosition )
{
    LIBWRAP_EARLY_INIT( _ZN12QInputMethod12invokeActionENS_6ActionEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QInputMethod12invokeActionENS_6ActionEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QInputMethod12invokeActionENS_6ActionEi, ( scorep_libwrap_arg_this, a, cursorPosition ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QInputMethod12invokeActionENS_6ActionEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QInputMethod22cursorRectangleChangedEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QInputMethod22cursorRectangleChangedEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QInputMethod22cursorRectangleChangedEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QInputMethod22cursorRectangleChangedEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QInputMethod22cursorRectangleChangedEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QInputMethod22cursorRectangleChangedEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QInputMethod22anchorRectangleChangedEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QInputMethod22anchorRectangleChangedEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QInputMethod22anchorRectangleChangedEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QInputMethod22anchorRectangleChangedEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QInputMethod22anchorRectangleChangedEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QInputMethod22anchorRectangleChangedEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QInputMethod24keyboardRectangleChangedEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QInputMethod24keyboardRectangleChangedEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QInputMethod24keyboardRectangleChangedEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QInputMethod24keyboardRectangleChangedEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QInputMethod24keyboardRectangleChangedEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QInputMethod24keyboardRectangleChangedEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QInputMethod29inputItemClipRectangleChangedEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QInputMethod29inputItemClipRectangleChangedEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QInputMethod29inputItemClipRectangleChangedEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QInputMethod29inputItemClipRectangleChangedEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QInputMethod29inputItemClipRectangleChangedEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QInputMethod29inputItemClipRectangleChangedEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QInputMethod14visibleChangedEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QInputMethod14visibleChangedEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QInputMethod14visibleChangedEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QInputMethod14visibleChangedEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QInputMethod14visibleChangedEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QInputMethod14visibleChangedEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QInputMethod16animatingChangedEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QInputMethod16animatingChangedEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QInputMethod16animatingChangedEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QInputMethod16animatingChangedEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QInputMethod16animatingChangedEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QInputMethod16animatingChangedEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QInputMethod13localeChangedEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QInputMethod13localeChangedEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QInputMethod13localeChangedEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QInputMethod13localeChangedEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QInputMethod13localeChangedEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QInputMethod13localeChangedEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QInputMethod21inputDirectionChangedEN2Qt15LayoutDirectionE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QInputMethod21inputDirectionChangedEN2Qt15LayoutDirectionE )( void *scorep_libwrap_arg_this, Qt::LayoutDirection newDirection )
{
    LIBWRAP_EARLY_INIT( _ZN12QInputMethod21inputDirectionChangedEN2Qt15LayoutDirectionE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QInputMethod21inputDirectionChangedEN2Qt15LayoutDirectionE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QInputMethod21inputDirectionChangedEN2Qt15LayoutDirectionE, ( scorep_libwrap_arg_this, newDirection ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QInputMethod21inputDirectionChangedEN2Qt15LayoutDirectionE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK15QGuiApplication10metaObjectEv
const QMetaObject *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK15QGuiApplication10metaObjectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK15QGuiApplication10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK15QGuiApplication10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QMetaObject * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK15QGuiApplication10metaObjectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK15QGuiApplication10metaObjectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QGuiApplication11qt_metacastEPKc
void *
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication11qt_metacastEPKc )( void *scorep_libwrap_arg_this, const char * scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    void * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication11qt_metacastEPKc, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication11qt_metacastEPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QGuiApplication11qt_metacallEN11QMetaObject4CallEiPPv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication11qt_metacallEN11QMetaObject4CallEiPPv )( void *scorep_libwrap_arg_this, QMetaObject::Call scorep_libwrap_arg_1, int scorep_libwrap_arg_2, void ** scorep_libwrap_arg_3 )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication11qt_metacallEN11QMetaObject4CallEiPPv, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, scorep_libwrap_arg_2, scorep_libwrap_arg_3 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QGuiApplicationC2ERiPPci
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplicationC2ERiPPci )( void *scorep_libwrap_arg_this, int & argc, char ** argv, int scorep_libwrap_arg_3 )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplicationC2ERiPPci );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplicationC2ERiPPci );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplicationC2ERiPPci, ( scorep_libwrap_arg_this, argc, argv, scorep_libwrap_arg_3 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplicationC2ERiPPci );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QGuiApplicationC1ERiPPci
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplicationC1ERiPPci )( void *scorep_libwrap_arg_this, int & argc, char ** argv, int scorep_libwrap_arg_3 )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplicationC1ERiPPci );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplicationC1ERiPPci );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplicationC1ERiPPci, ( scorep_libwrap_arg_this, argc, argv, scorep_libwrap_arg_3 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplicationC1ERiPPci );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QGuiApplicationD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplicationD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplicationD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplicationD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplicationD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplicationD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QGuiApplicationD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplicationD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplicationD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplicationD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplicationD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplicationD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QGuiApplicationD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplicationD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplicationD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplicationD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplicationD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplicationD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QGuiApplication25setApplicationDisplayNameERK7QString
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication25setApplicationDisplayNameERK7QString )( const QString & name )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication25setApplicationDisplayNameERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication25setApplicationDisplayNameERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication25setApplicationDisplayNameERK7QString, ( name ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication25setApplicationDisplayNameERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QGuiApplication22applicationDisplayNameEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication22applicationDisplayNameEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication22applicationDisplayNameEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication22applicationDisplayNameEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication22applicationDisplayNameEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication22applicationDisplayNameEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QGuiApplication18setDesktopFileNameERK7QString
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication18setDesktopFileNameERK7QString )( const QString & name )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication18setDesktopFileNameERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication18setDesktopFileNameERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication18setDesktopFileNameERK7QString, ( name ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication18setDesktopFileNameERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QGuiApplication15desktopFileNameEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication15desktopFileNameEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication15desktopFileNameEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication15desktopFileNameEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication15desktopFileNameEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication15desktopFileNameEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QGuiApplication10allWindowsEv
QWindowList
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication10allWindowsEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication10allWindowsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication10allWindowsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QWindowList scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication10allWindowsEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication10allWindowsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QGuiApplication15topLevelWindowsEv
QWindowList
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication15topLevelWindowsEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication15topLevelWindowsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication15topLevelWindowsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QWindowList scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication15topLevelWindowsEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication15topLevelWindowsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QGuiApplication10topLevelAtERK6QPoint
QWindow *
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication10topLevelAtERK6QPoint )( const QPoint & pos )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication10topLevelAtERK6QPoint );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication10topLevelAtERK6QPoint );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QWindow * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication10topLevelAtERK6QPoint, ( pos ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication10topLevelAtERK6QPoint );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QGuiApplication13setWindowIconERK5QIcon
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication13setWindowIconERK5QIcon )( const QIcon & icon )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication13setWindowIconERK5QIcon );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication13setWindowIconERK5QIcon );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication13setWindowIconERK5QIcon, ( icon ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication13setWindowIconERK5QIcon );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QGuiApplication10windowIconEv
QIcon
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication10windowIconEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication10windowIconEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication10windowIconEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QIcon scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication10windowIconEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication10windowIconEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QGuiApplication12platformNameEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication12platformNameEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication12platformNameEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication12platformNameEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication12platformNameEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication12platformNameEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QGuiApplication11modalWindowEv
QWindow *
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication11modalWindowEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication11modalWindowEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication11modalWindowEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QWindow * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication11modalWindowEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication11modalWindowEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QGuiApplication11focusWindowEv
QWindow *
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication11focusWindowEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication11focusWindowEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication11focusWindowEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QWindow * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication11focusWindowEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication11focusWindowEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QGuiApplication11focusObjectEv
QObject *
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication11focusObjectEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication11focusObjectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication11focusObjectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QObject * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication11focusObjectEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication11focusObjectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QGuiApplication13primaryScreenEv
QScreen *
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication13primaryScreenEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication13primaryScreenEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication13primaryScreenEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QScreen * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication13primaryScreenEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication13primaryScreenEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QGuiApplication7screensEv
QList<QScreen *>
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication7screensEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication7screensEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication7screensEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QList<QScreen *> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication7screensEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication7screensEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK15QGuiApplication16devicePixelRatioEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK15QGuiApplication16devicePixelRatioEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK15QGuiApplication16devicePixelRatioEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK15QGuiApplication16devicePixelRatioEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK15QGuiApplication16devicePixelRatioEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK15QGuiApplication16devicePixelRatioEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QGuiApplication14overrideCursorEv
QCursor *
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication14overrideCursorEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication14overrideCursorEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication14overrideCursorEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QCursor * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication14overrideCursorEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication14overrideCursorEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QGuiApplication17setOverrideCursorERK7QCursor
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication17setOverrideCursorERK7QCursor )( const QCursor & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication17setOverrideCursorERK7QCursor );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication17setOverrideCursorERK7QCursor );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication17setOverrideCursorERK7QCursor, ( scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication17setOverrideCursorERK7QCursor );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QGuiApplication20changeOverrideCursorERK7QCursor
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication20changeOverrideCursorERK7QCursor )( const QCursor & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication20changeOverrideCursorERK7QCursor );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication20changeOverrideCursorERK7QCursor );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication20changeOverrideCursorERK7QCursor, ( scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication20changeOverrideCursorERK7QCursor );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QGuiApplication21restoreOverrideCursorEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication21restoreOverrideCursorEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication21restoreOverrideCursorEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication21restoreOverrideCursorEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication21restoreOverrideCursorEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication21restoreOverrideCursorEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QGuiApplication4fontEv
QFont
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication4fontEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication4fontEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication4fontEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QFont scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication4fontEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication4fontEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QGuiApplication7setFontERK5QFont
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication7setFontERK5QFont )( const QFont & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication7setFontERK5QFont );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication7setFontERK5QFont );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication7setFontERK5QFont, ( scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication7setFontERK5QFont );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QGuiApplication9clipboardEv
QClipboard *
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication9clipboardEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication9clipboardEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication9clipboardEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QClipboard * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication9clipboardEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication9clipboardEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QGuiApplication7paletteEv
QPalette
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication7paletteEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication7paletteEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication7paletteEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPalette scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication7paletteEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication7paletteEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QGuiApplication10setPaletteERK8QPalette
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication10setPaletteERK8QPalette )( const QPalette & pal )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication10setPaletteERK8QPalette );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication10setPaletteERK8QPalette );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication10setPaletteERK8QPalette, ( pal ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication10setPaletteERK8QPalette );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QGuiApplication17keyboardModifiersEv
Qt::KeyboardModifiers
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication17keyboardModifiersEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication17keyboardModifiersEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication17keyboardModifiersEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    Qt::KeyboardModifiers scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication17keyboardModifiersEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication17keyboardModifiersEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QGuiApplication22queryKeyboardModifiersEv
Qt::KeyboardModifiers
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication22queryKeyboardModifiersEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication22queryKeyboardModifiersEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication22queryKeyboardModifiersEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    Qt::KeyboardModifiers scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication22queryKeyboardModifiersEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication22queryKeyboardModifiersEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QGuiApplication12mouseButtonsEv
Qt::MouseButtons
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication12mouseButtonsEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication12mouseButtonsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication12mouseButtonsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    Qt::MouseButtons scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication12mouseButtonsEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication12mouseButtonsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QGuiApplication18setLayoutDirectionEN2Qt15LayoutDirectionE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication18setLayoutDirectionEN2Qt15LayoutDirectionE )( Qt::LayoutDirection direction )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication18setLayoutDirectionEN2Qt15LayoutDirectionE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication18setLayoutDirectionEN2Qt15LayoutDirectionE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication18setLayoutDirectionEN2Qt15LayoutDirectionE, ( direction ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication18setLayoutDirectionEN2Qt15LayoutDirectionE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QGuiApplication15layoutDirectionEv
Qt::LayoutDirection
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication15layoutDirectionEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication15layoutDirectionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication15layoutDirectionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    Qt::LayoutDirection scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication15layoutDirectionEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication15layoutDirectionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QGuiApplication10styleHintsEv
QStyleHints *
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication10styleHintsEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication10styleHintsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication10styleHintsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QStyleHints * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication10styleHintsEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication10styleHintsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QGuiApplication23setDesktopSettingsAwareEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication23setDesktopSettingsAwareEb )( bool on )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication23setDesktopSettingsAwareEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication23setDesktopSettingsAwareEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication23setDesktopSettingsAwareEb, ( on ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication23setDesktopSettingsAwareEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QGuiApplication20desktopSettingsAwareEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication20desktopSettingsAwareEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication20desktopSettingsAwareEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication20desktopSettingsAwareEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication20desktopSettingsAwareEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication20desktopSettingsAwareEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QGuiApplication11inputMethodEv
QInputMethod *
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication11inputMethodEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication11inputMethodEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication11inputMethodEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QInputMethod * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication11inputMethodEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication11inputMethodEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QGuiApplication23platformNativeInterfaceEv
QPlatformNativeInterface *
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication23platformNativeInterfaceEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication23platformNativeInterfaceEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication23platformNativeInterfaceEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPlatformNativeInterface * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication23platformNativeInterfaceEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication23platformNativeInterfaceEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QGuiApplication16platformFunctionERK10QByteArray
QFunctionPointer
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication16platformFunctionERK10QByteArray )( const QByteArray & function )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication16platformFunctionERK10QByteArray );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication16platformFunctionERK10QByteArray );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QFunctionPointer scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication16platformFunctionERK10QByteArray, ( function ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication16platformFunctionERK10QByteArray );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QGuiApplication25setQuitOnLastWindowClosedEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication25setQuitOnLastWindowClosedEb )( bool quit )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication25setQuitOnLastWindowClosedEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication25setQuitOnLastWindowClosedEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication25setQuitOnLastWindowClosedEb, ( quit ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication25setQuitOnLastWindowClosedEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QGuiApplication22quitOnLastWindowClosedEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication22quitOnLastWindowClosedEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication22quitOnLastWindowClosedEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication22quitOnLastWindowClosedEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication22quitOnLastWindowClosedEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication22quitOnLastWindowClosedEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QGuiApplication16applicationStateEv
Qt::ApplicationState
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication16applicationStateEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication16applicationStateEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication16applicationStateEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    Qt::ApplicationState scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication16applicationStateEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication16applicationStateEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QGuiApplication4execEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication4execEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication4execEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication4execEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication4execEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication4execEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QGuiApplication6notifyEP7QObjectP6QEvent
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication6notifyEP7QObjectP6QEvent )( void *scorep_libwrap_arg_this, QObject * scorep_libwrap_arg_1, QEvent * scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication6notifyEP7QObjectP6QEvent );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication6notifyEP7QObjectP6QEvent );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication6notifyEP7QObjectP6QEvent, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication6notifyEP7QObjectP6QEvent );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK15QGuiApplication17isSessionRestoredEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK15QGuiApplication17isSessionRestoredEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK15QGuiApplication17isSessionRestoredEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK15QGuiApplication17isSessionRestoredEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK15QGuiApplication17isSessionRestoredEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK15QGuiApplication17isSessionRestoredEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK15QGuiApplication9sessionIdEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK15QGuiApplication9sessionIdEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK15QGuiApplication9sessionIdEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK15QGuiApplication9sessionIdEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK15QGuiApplication9sessionIdEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK15QGuiApplication9sessionIdEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK15QGuiApplication10sessionKeyEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK15QGuiApplication10sessionKeyEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK15QGuiApplication10sessionKeyEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK15QGuiApplication10sessionKeyEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK15QGuiApplication10sessionKeyEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK15QGuiApplication10sessionKeyEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK15QGuiApplication15isSavingSessionEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK15QGuiApplication15isSavingSessionEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK15QGuiApplication15isSavingSessionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK15QGuiApplication15isSavingSessionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK15QGuiApplication15isSavingSessionEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK15QGuiApplication15isSavingSessionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QGuiApplication34isFallbackSessionManagementEnabledEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication34isFallbackSessionManagementEnabledEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication34isFallbackSessionManagementEnabledEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication34isFallbackSessionManagementEnabledEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication34isFallbackSessionManagementEnabledEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication34isFallbackSessionManagementEnabledEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QGuiApplication35setFallbackSessionManagementEnabledEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication35setFallbackSessionManagementEnabledEb )( bool scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication35setFallbackSessionManagementEnabledEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication35setFallbackSessionManagementEnabledEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication35setFallbackSessionManagementEnabledEb, ( scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication35setFallbackSessionManagementEnabledEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QGuiApplication4syncEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication4syncEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication4syncEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication4syncEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication4syncEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication4syncEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QGuiApplication19fontDatabaseChangedEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication19fontDatabaseChangedEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication19fontDatabaseChangedEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication19fontDatabaseChangedEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication19fontDatabaseChangedEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication19fontDatabaseChangedEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QGuiApplication11screenAddedEP7QScreen
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication11screenAddedEP7QScreen )( void *scorep_libwrap_arg_this, QScreen * screen )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication11screenAddedEP7QScreen );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication11screenAddedEP7QScreen );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication11screenAddedEP7QScreen, ( scorep_libwrap_arg_this, screen ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication11screenAddedEP7QScreen );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QGuiApplication13screenRemovedEP7QScreen
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication13screenRemovedEP7QScreen )( void *scorep_libwrap_arg_this, QScreen * screen )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication13screenRemovedEP7QScreen );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication13screenRemovedEP7QScreen );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication13screenRemovedEP7QScreen, ( scorep_libwrap_arg_this, screen ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication13screenRemovedEP7QScreen );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QGuiApplication20primaryScreenChangedEP7QScreen
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication20primaryScreenChangedEP7QScreen )( void *scorep_libwrap_arg_this, QScreen * screen )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication20primaryScreenChangedEP7QScreen );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication20primaryScreenChangedEP7QScreen );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication20primaryScreenChangedEP7QScreen, ( scorep_libwrap_arg_this, screen ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication20primaryScreenChangedEP7QScreen );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QGuiApplication16lastWindowClosedEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication16lastWindowClosedEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication16lastWindowClosedEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication16lastWindowClosedEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication16lastWindowClosedEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication16lastWindowClosedEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QGuiApplication18focusObjectChangedEP7QObject
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication18focusObjectChangedEP7QObject )( void *scorep_libwrap_arg_this, QObject * focusObject )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication18focusObjectChangedEP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication18focusObjectChangedEP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication18focusObjectChangedEP7QObject, ( scorep_libwrap_arg_this, focusObject ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication18focusObjectChangedEP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QGuiApplication18focusWindowChangedEP7QWindow
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication18focusWindowChangedEP7QWindow )( void *scorep_libwrap_arg_this, QWindow * focusWindow )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication18focusWindowChangedEP7QWindow );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication18focusWindowChangedEP7QWindow );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication18focusWindowChangedEP7QWindow, ( scorep_libwrap_arg_this, focusWindow ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication18focusWindowChangedEP7QWindow );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QGuiApplication23applicationStateChangedEN2Qt16ApplicationStateE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication23applicationStateChangedEN2Qt16ApplicationStateE )( void *scorep_libwrap_arg_this, Qt::ApplicationState state )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication23applicationStateChangedEN2Qt16ApplicationStateE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication23applicationStateChangedEN2Qt16ApplicationStateE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication23applicationStateChangedEN2Qt16ApplicationStateE, ( scorep_libwrap_arg_this, state ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication23applicationStateChangedEN2Qt16ApplicationStateE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QGuiApplication22layoutDirectionChangedEN2Qt15LayoutDirectionE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication22layoutDirectionChangedEN2Qt15LayoutDirectionE )( void *scorep_libwrap_arg_this, Qt::LayoutDirection direction )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication22layoutDirectionChangedEN2Qt15LayoutDirectionE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication22layoutDirectionChangedEN2Qt15LayoutDirectionE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication22layoutDirectionChangedEN2Qt15LayoutDirectionE, ( scorep_libwrap_arg_this, direction ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication22layoutDirectionChangedEN2Qt15LayoutDirectionE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QGuiApplication17commitDataRequestER15QSessionManager
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication17commitDataRequestER15QSessionManager )( void *scorep_libwrap_arg_this, QSessionManager & sessionManager )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication17commitDataRequestER15QSessionManager );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication17commitDataRequestER15QSessionManager );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication17commitDataRequestER15QSessionManager, ( scorep_libwrap_arg_this, sessionManager ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication17commitDataRequestER15QSessionManager );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QGuiApplication16saveStateRequestER15QSessionManager
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication16saveStateRequestER15QSessionManager )( void *scorep_libwrap_arg_this, QSessionManager & sessionManager )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication16saveStateRequestER15QSessionManager );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication16saveStateRequestER15QSessionManager );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication16saveStateRequestER15QSessionManager, ( scorep_libwrap_arg_this, sessionManager ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication16saveStateRequestER15QSessionManager );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QGuiApplication14paletteChangedERK8QPalette
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QGuiApplication14paletteChangedERK8QPalette )( void *scorep_libwrap_arg_this, const QPalette & pal )
{
    LIBWRAP_EARLY_INIT( _ZN15QGuiApplication14paletteChangedERK8QPalette );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QGuiApplication14paletteChangedERK8QPalette );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QGuiApplication14paletteChangedERK8QPalette, ( scorep_libwrap_arg_this, pal ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QGuiApplication14paletteChangedERK8QPalette );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QSurfaceFormatC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QSurfaceFormatC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN14QSurfaceFormatC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QSurfaceFormatC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QSurfaceFormatC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QSurfaceFormatC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QSurfaceFormatC1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QSurfaceFormatC1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN14QSurfaceFormatC1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QSurfaceFormatC1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QSurfaceFormatC1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QSurfaceFormatC1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QSurfaceFormatC2E6QFlagsINS_12FormatOptionEE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QSurfaceFormatC2E6QFlagsINS_12FormatOptionEE )( void *scorep_libwrap_arg_this, QSurfaceFormat::FormatOptions options )
{
    LIBWRAP_EARLY_INIT( _ZN14QSurfaceFormatC2E6QFlagsINS_12FormatOptionEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QSurfaceFormatC2E6QFlagsINS_12FormatOptionEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QSurfaceFormatC2E6QFlagsINS_12FormatOptionEE, ( scorep_libwrap_arg_this, options ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QSurfaceFormatC2E6QFlagsINS_12FormatOptionEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QSurfaceFormatC1E6QFlagsINS_12FormatOptionEE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QSurfaceFormatC1E6QFlagsINS_12FormatOptionEE )( void *scorep_libwrap_arg_this, QSurfaceFormat::FormatOptions options )
{
    LIBWRAP_EARLY_INIT( _ZN14QSurfaceFormatC1E6QFlagsINS_12FormatOptionEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QSurfaceFormatC1E6QFlagsINS_12FormatOptionEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QSurfaceFormatC1E6QFlagsINS_12FormatOptionEE, ( scorep_libwrap_arg_this, options ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QSurfaceFormatC1E6QFlagsINS_12FormatOptionEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QSurfaceFormatC2ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QSurfaceFormatC2ERKS_ )( void *scorep_libwrap_arg_this, const QSurfaceFormat & other )
{
    LIBWRAP_EARLY_INIT( _ZN14QSurfaceFormatC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QSurfaceFormatC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QSurfaceFormatC2ERKS_, ( scorep_libwrap_arg_this, other ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QSurfaceFormatC2ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QSurfaceFormatC1ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QSurfaceFormatC1ERKS_ )( void *scorep_libwrap_arg_this, const QSurfaceFormat & other )
{
    LIBWRAP_EARLY_INIT( _ZN14QSurfaceFormatC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QSurfaceFormatC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QSurfaceFormatC1ERKS_, ( scorep_libwrap_arg_this, other ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QSurfaceFormatC1ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QSurfaceFormataSERKS_
QSurfaceFormat &
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QSurfaceFormataSERKS_ )( void *scorep_libwrap_arg_this, const QSurfaceFormat & other )
{
    LIBWRAP_EARLY_INIT( _ZN14QSurfaceFormataSERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QSurfaceFormataSERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QSurfaceFormat & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN14QSurfaceFormataSERKS_, ( scorep_libwrap_arg_this, other ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QSurfaceFormataSERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QSurfaceFormatD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QSurfaceFormatD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN14QSurfaceFormatD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QSurfaceFormatD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QSurfaceFormatD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QSurfaceFormatD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QSurfaceFormatD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QSurfaceFormatD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN14QSurfaceFormatD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QSurfaceFormatD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QSurfaceFormatD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QSurfaceFormatD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QSurfaceFormat18setDepthBufferSizeEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QSurfaceFormat18setDepthBufferSizeEi )( void *scorep_libwrap_arg_this, int size )
{
    LIBWRAP_EARLY_INIT( _ZN14QSurfaceFormat18setDepthBufferSizeEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QSurfaceFormat18setDepthBufferSizeEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QSurfaceFormat18setDepthBufferSizeEi, ( scorep_libwrap_arg_this, size ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QSurfaceFormat18setDepthBufferSizeEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK14QSurfaceFormat15depthBufferSizeEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QSurfaceFormat15depthBufferSizeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QSurfaceFormat15depthBufferSizeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QSurfaceFormat15depthBufferSizeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QSurfaceFormat15depthBufferSizeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QSurfaceFormat15depthBufferSizeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QSurfaceFormat20setStencilBufferSizeEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QSurfaceFormat20setStencilBufferSizeEi )( void *scorep_libwrap_arg_this, int size )
{
    LIBWRAP_EARLY_INIT( _ZN14QSurfaceFormat20setStencilBufferSizeEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QSurfaceFormat20setStencilBufferSizeEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QSurfaceFormat20setStencilBufferSizeEi, ( scorep_libwrap_arg_this, size ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QSurfaceFormat20setStencilBufferSizeEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK14QSurfaceFormat17stencilBufferSizeEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QSurfaceFormat17stencilBufferSizeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QSurfaceFormat17stencilBufferSizeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QSurfaceFormat17stencilBufferSizeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QSurfaceFormat17stencilBufferSizeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QSurfaceFormat17stencilBufferSizeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QSurfaceFormat16setRedBufferSizeEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QSurfaceFormat16setRedBufferSizeEi )( void *scorep_libwrap_arg_this, int size )
{
    LIBWRAP_EARLY_INIT( _ZN14QSurfaceFormat16setRedBufferSizeEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QSurfaceFormat16setRedBufferSizeEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QSurfaceFormat16setRedBufferSizeEi, ( scorep_libwrap_arg_this, size ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QSurfaceFormat16setRedBufferSizeEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK14QSurfaceFormat13redBufferSizeEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QSurfaceFormat13redBufferSizeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QSurfaceFormat13redBufferSizeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QSurfaceFormat13redBufferSizeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QSurfaceFormat13redBufferSizeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QSurfaceFormat13redBufferSizeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QSurfaceFormat18setGreenBufferSizeEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QSurfaceFormat18setGreenBufferSizeEi )( void *scorep_libwrap_arg_this, int size )
{
    LIBWRAP_EARLY_INIT( _ZN14QSurfaceFormat18setGreenBufferSizeEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QSurfaceFormat18setGreenBufferSizeEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QSurfaceFormat18setGreenBufferSizeEi, ( scorep_libwrap_arg_this, size ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QSurfaceFormat18setGreenBufferSizeEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK14QSurfaceFormat15greenBufferSizeEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QSurfaceFormat15greenBufferSizeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QSurfaceFormat15greenBufferSizeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QSurfaceFormat15greenBufferSizeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QSurfaceFormat15greenBufferSizeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QSurfaceFormat15greenBufferSizeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QSurfaceFormat17setBlueBufferSizeEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QSurfaceFormat17setBlueBufferSizeEi )( void *scorep_libwrap_arg_this, int size )
{
    LIBWRAP_EARLY_INIT( _ZN14QSurfaceFormat17setBlueBufferSizeEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QSurfaceFormat17setBlueBufferSizeEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QSurfaceFormat17setBlueBufferSizeEi, ( scorep_libwrap_arg_this, size ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QSurfaceFormat17setBlueBufferSizeEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK14QSurfaceFormat14blueBufferSizeEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QSurfaceFormat14blueBufferSizeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QSurfaceFormat14blueBufferSizeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QSurfaceFormat14blueBufferSizeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QSurfaceFormat14blueBufferSizeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QSurfaceFormat14blueBufferSizeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QSurfaceFormat18setAlphaBufferSizeEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QSurfaceFormat18setAlphaBufferSizeEi )( void *scorep_libwrap_arg_this, int size )
{
    LIBWRAP_EARLY_INIT( _ZN14QSurfaceFormat18setAlphaBufferSizeEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QSurfaceFormat18setAlphaBufferSizeEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QSurfaceFormat18setAlphaBufferSizeEi, ( scorep_libwrap_arg_this, size ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QSurfaceFormat18setAlphaBufferSizeEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK14QSurfaceFormat15alphaBufferSizeEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QSurfaceFormat15alphaBufferSizeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QSurfaceFormat15alphaBufferSizeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QSurfaceFormat15alphaBufferSizeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QSurfaceFormat15alphaBufferSizeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QSurfaceFormat15alphaBufferSizeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QSurfaceFormat10setSamplesEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QSurfaceFormat10setSamplesEi )( void *scorep_libwrap_arg_this, int numSamples )
{
    LIBWRAP_EARLY_INIT( _ZN14QSurfaceFormat10setSamplesEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QSurfaceFormat10setSamplesEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QSurfaceFormat10setSamplesEi, ( scorep_libwrap_arg_this, numSamples ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QSurfaceFormat10setSamplesEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK14QSurfaceFormat7samplesEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QSurfaceFormat7samplesEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QSurfaceFormat7samplesEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QSurfaceFormat7samplesEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QSurfaceFormat7samplesEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QSurfaceFormat7samplesEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QSurfaceFormat15setSwapBehaviorENS_12SwapBehaviorE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QSurfaceFormat15setSwapBehaviorENS_12SwapBehaviorE )( void *scorep_libwrap_arg_this, QSurfaceFormat::SwapBehavior behavior )
{
    LIBWRAP_EARLY_INIT( _ZN14QSurfaceFormat15setSwapBehaviorENS_12SwapBehaviorE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QSurfaceFormat15setSwapBehaviorENS_12SwapBehaviorE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QSurfaceFormat15setSwapBehaviorENS_12SwapBehaviorE, ( scorep_libwrap_arg_this, behavior ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QSurfaceFormat15setSwapBehaviorENS_12SwapBehaviorE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK14QSurfaceFormat12swapBehaviorEv
QSurfaceFormat::SwapBehavior
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QSurfaceFormat12swapBehaviorEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QSurfaceFormat12swapBehaviorEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QSurfaceFormat12swapBehaviorEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QSurfaceFormat::SwapBehavior scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QSurfaceFormat12swapBehaviorEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QSurfaceFormat12swapBehaviorEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK14QSurfaceFormat8hasAlphaEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QSurfaceFormat8hasAlphaEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QSurfaceFormat8hasAlphaEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QSurfaceFormat8hasAlphaEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QSurfaceFormat8hasAlphaEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QSurfaceFormat8hasAlphaEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QSurfaceFormat10setProfileENS_20OpenGLContextProfileE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QSurfaceFormat10setProfileENS_20OpenGLContextProfileE )( void *scorep_libwrap_arg_this, QSurfaceFormat::OpenGLContextProfile profile )
{
    LIBWRAP_EARLY_INIT( _ZN14QSurfaceFormat10setProfileENS_20OpenGLContextProfileE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QSurfaceFormat10setProfileENS_20OpenGLContextProfileE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QSurfaceFormat10setProfileENS_20OpenGLContextProfileE, ( scorep_libwrap_arg_this, profile ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QSurfaceFormat10setProfileENS_20OpenGLContextProfileE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK14QSurfaceFormat7profileEv
QSurfaceFormat::OpenGLContextProfile
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QSurfaceFormat7profileEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QSurfaceFormat7profileEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QSurfaceFormat7profileEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QSurfaceFormat::OpenGLContextProfile scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QSurfaceFormat7profileEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QSurfaceFormat7profileEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QSurfaceFormat17setRenderableTypeENS_14RenderableTypeE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QSurfaceFormat17setRenderableTypeENS_14RenderableTypeE )( void *scorep_libwrap_arg_this, QSurfaceFormat::RenderableType type )
{
    LIBWRAP_EARLY_INIT( _ZN14QSurfaceFormat17setRenderableTypeENS_14RenderableTypeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QSurfaceFormat17setRenderableTypeENS_14RenderableTypeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QSurfaceFormat17setRenderableTypeENS_14RenderableTypeE, ( scorep_libwrap_arg_this, type ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QSurfaceFormat17setRenderableTypeENS_14RenderableTypeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK14QSurfaceFormat14renderableTypeEv
QSurfaceFormat::RenderableType
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QSurfaceFormat14renderableTypeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QSurfaceFormat14renderableTypeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QSurfaceFormat14renderableTypeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QSurfaceFormat::RenderableType scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QSurfaceFormat14renderableTypeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QSurfaceFormat14renderableTypeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QSurfaceFormat15setMajorVersionEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QSurfaceFormat15setMajorVersionEi )( void *scorep_libwrap_arg_this, int majorVersion )
{
    LIBWRAP_EARLY_INIT( _ZN14QSurfaceFormat15setMajorVersionEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QSurfaceFormat15setMajorVersionEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QSurfaceFormat15setMajorVersionEi, ( scorep_libwrap_arg_this, majorVersion ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QSurfaceFormat15setMajorVersionEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK14QSurfaceFormat12majorVersionEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QSurfaceFormat12majorVersionEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QSurfaceFormat12majorVersionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QSurfaceFormat12majorVersionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QSurfaceFormat12majorVersionEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QSurfaceFormat12majorVersionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QSurfaceFormat15setMinorVersionEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QSurfaceFormat15setMinorVersionEi )( void *scorep_libwrap_arg_this, int minorVersion )
{
    LIBWRAP_EARLY_INIT( _ZN14QSurfaceFormat15setMinorVersionEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QSurfaceFormat15setMinorVersionEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QSurfaceFormat15setMinorVersionEi, ( scorep_libwrap_arg_this, minorVersion ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QSurfaceFormat15setMinorVersionEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK14QSurfaceFormat12minorVersionEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QSurfaceFormat12minorVersionEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QSurfaceFormat12minorVersionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QSurfaceFormat12minorVersionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QSurfaceFormat12minorVersionEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QSurfaceFormat12minorVersionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK14QSurfaceFormat7versionEv
QPair<int, int>
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QSurfaceFormat7versionEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QSurfaceFormat7versionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QSurfaceFormat7versionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPair<int, int> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QSurfaceFormat7versionEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QSurfaceFormat7versionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QSurfaceFormat10setVersionEii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QSurfaceFormat10setVersionEii )( void *scorep_libwrap_arg_this, int major, int minor )
{
    LIBWRAP_EARLY_INIT( _ZN14QSurfaceFormat10setVersionEii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QSurfaceFormat10setVersionEii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QSurfaceFormat10setVersionEii, ( scorep_libwrap_arg_this, major, minor ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QSurfaceFormat10setVersionEii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QSurfaceFormat9setStereoEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QSurfaceFormat9setStereoEb )( void *scorep_libwrap_arg_this, bool enable )
{
    LIBWRAP_EARLY_INIT( _ZN14QSurfaceFormat9setStereoEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QSurfaceFormat9setStereoEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QSurfaceFormat9setStereoEb, ( scorep_libwrap_arg_this, enable ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QSurfaceFormat9setStereoEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QSurfaceFormat9setOptionE6QFlagsINS_12FormatOptionEE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QSurfaceFormat9setOptionE6QFlagsINS_12FormatOptionEE )( void *scorep_libwrap_arg_this, QSurfaceFormat::FormatOptions opt )
{
    LIBWRAP_EARLY_INIT( _ZN14QSurfaceFormat9setOptionE6QFlagsINS_12FormatOptionEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QSurfaceFormat9setOptionE6QFlagsINS_12FormatOptionEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QSurfaceFormat9setOptionE6QFlagsINS_12FormatOptionEE, ( scorep_libwrap_arg_this, opt ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QSurfaceFormat9setOptionE6QFlagsINS_12FormatOptionEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK14QSurfaceFormat10testOptionE6QFlagsINS_12FormatOptionEE
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QSurfaceFormat10testOptionE6QFlagsINS_12FormatOptionEE )( void *scorep_libwrap_arg_this, QSurfaceFormat::FormatOptions opt )
{
    LIBWRAP_EARLY_INIT( _ZNK14QSurfaceFormat10testOptionE6QFlagsINS_12FormatOptionEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QSurfaceFormat10testOptionE6QFlagsINS_12FormatOptionEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QSurfaceFormat10testOptionE6QFlagsINS_12FormatOptionEE, ( scorep_libwrap_arg_this, opt ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QSurfaceFormat10testOptionE6QFlagsINS_12FormatOptionEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QSurfaceFormat10setOptionsE6QFlagsINS_12FormatOptionEE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QSurfaceFormat10setOptionsE6QFlagsINS_12FormatOptionEE )( void *scorep_libwrap_arg_this, QSurfaceFormat::FormatOptions options )
{
    LIBWRAP_EARLY_INIT( _ZN14QSurfaceFormat10setOptionsE6QFlagsINS_12FormatOptionEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QSurfaceFormat10setOptionsE6QFlagsINS_12FormatOptionEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QSurfaceFormat10setOptionsE6QFlagsINS_12FormatOptionEE, ( scorep_libwrap_arg_this, options ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QSurfaceFormat10setOptionsE6QFlagsINS_12FormatOptionEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QSurfaceFormat9setOptionENS_12FormatOptionEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QSurfaceFormat9setOptionENS_12FormatOptionEb )( void *scorep_libwrap_arg_this, QSurfaceFormat::FormatOption option, bool on )
{
    LIBWRAP_EARLY_INIT( _ZN14QSurfaceFormat9setOptionENS_12FormatOptionEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QSurfaceFormat9setOptionENS_12FormatOptionEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QSurfaceFormat9setOptionENS_12FormatOptionEb, ( scorep_libwrap_arg_this, option, on ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QSurfaceFormat9setOptionENS_12FormatOptionEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK14QSurfaceFormat10testOptionENS_12FormatOptionE
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QSurfaceFormat10testOptionENS_12FormatOptionE )( void *scorep_libwrap_arg_this, QSurfaceFormat::FormatOption option )
{
    LIBWRAP_EARLY_INIT( _ZNK14QSurfaceFormat10testOptionENS_12FormatOptionE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QSurfaceFormat10testOptionENS_12FormatOptionE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QSurfaceFormat10testOptionENS_12FormatOptionE, ( scorep_libwrap_arg_this, option ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QSurfaceFormat10testOptionENS_12FormatOptionE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK14QSurfaceFormat7optionsEv
QSurfaceFormat::FormatOptions
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QSurfaceFormat7optionsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QSurfaceFormat7optionsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QSurfaceFormat7optionsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QSurfaceFormat::FormatOptions scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QSurfaceFormat7optionsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QSurfaceFormat7optionsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK14QSurfaceFormat12swapIntervalEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QSurfaceFormat12swapIntervalEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QSurfaceFormat12swapIntervalEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QSurfaceFormat12swapIntervalEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QSurfaceFormat12swapIntervalEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QSurfaceFormat12swapIntervalEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QSurfaceFormat15setSwapIntervalEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QSurfaceFormat15setSwapIntervalEi )( void *scorep_libwrap_arg_this, int interval )
{
    LIBWRAP_EARLY_INIT( _ZN14QSurfaceFormat15setSwapIntervalEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QSurfaceFormat15setSwapIntervalEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QSurfaceFormat15setSwapIntervalEi, ( scorep_libwrap_arg_this, interval ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QSurfaceFormat15setSwapIntervalEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QSurfaceFormat16setDefaultFormatERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QSurfaceFormat16setDefaultFormatERKS_ )( const QSurfaceFormat & format )
{
    LIBWRAP_EARLY_INIT( _ZN14QSurfaceFormat16setDefaultFormatERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QSurfaceFormat16setDefaultFormatERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QSurfaceFormat16setDefaultFormatERKS_, ( format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QSurfaceFormat16setDefaultFormatERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QSurfaceFormat13defaultFormatEv
QSurfaceFormat
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QSurfaceFormat13defaultFormatEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN14QSurfaceFormat13defaultFormatEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QSurfaceFormat13defaultFormatEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QSurfaceFormat scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN14QSurfaceFormat13defaultFormatEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QSurfaceFormat13defaultFormatEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZeqRK14QSurfaceFormatS1_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZeqRK14QSurfaceFormatS1_ )( const QSurfaceFormat & scorep_libwrap_arg_1, const QSurfaceFormat & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _ZeqRK14QSurfaceFormatS1_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZeqRK14QSurfaceFormatS1_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZeqRK14QSurfaceFormatS1_, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZeqRK14QSurfaceFormatS1_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZneRK14QSurfaceFormatS1_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZneRK14QSurfaceFormatS1_ )( const QSurfaceFormat & scorep_libwrap_arg_1, const QSurfaceFormat & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _ZneRK14QSurfaceFormatS1_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZneRK14QSurfaceFormatS1_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZneRK14QSurfaceFormatS1_, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZneRK14QSurfaceFormatS1_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _Zls6QDebugRK14QSurfaceFormat
QDebug
SCOREP_LIBWRAP_FUNC_NAME( _Zls6QDebugRK14QSurfaceFormat )( QDebug scorep_libwrap_arg_1, const QSurfaceFormat & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _Zls6QDebugRK14QSurfaceFormat );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _Zls6QDebugRK14QSurfaceFormat );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDebug scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _Zls6QDebugRK14QSurfaceFormat, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _Zls6QDebugRK14QSurfaceFormat );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN8QSurfaceD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QSurfaceD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN8QSurfaceD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QSurfaceD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QSurfaceD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QSurfaceD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QSurfaceD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QSurfaceD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN8QSurfaceD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QSurfaceD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QSurfaceD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QSurfaceD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QSurfaceD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QSurfaceD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN8QSurfaceD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QSurfaceD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QSurfaceD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QSurfaceD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK8QSurface12surfaceClassEv
QSurface::SurfaceClass
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QSurface12surfaceClassEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QSurface12surfaceClassEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QSurface12surfaceClassEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QSurface::SurfaceClass scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QSurface12surfaceClassEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QSurface12surfaceClassEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK8QSurface14supportsOpenGLEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QSurface14supportsOpenGLEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QSurface14supportsOpenGLEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QSurface14supportsOpenGLEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QSurface14supportsOpenGLEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QSurface14supportsOpenGLEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK17QOffscreenSurface10metaObjectEv
const QMetaObject *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK17QOffscreenSurface10metaObjectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK17QOffscreenSurface10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK17QOffscreenSurface10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QMetaObject * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK17QOffscreenSurface10metaObjectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK17QOffscreenSurface10metaObjectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN17QOffscreenSurface11qt_metacastEPKc
void *
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QOffscreenSurface11qt_metacastEPKc )( void *scorep_libwrap_arg_this, const char * scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN17QOffscreenSurface11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QOffscreenSurface11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    void * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN17QOffscreenSurface11qt_metacastEPKc, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QOffscreenSurface11qt_metacastEPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN17QOffscreenSurface11qt_metacallEN11QMetaObject4CallEiPPv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QOffscreenSurface11qt_metacallEN11QMetaObject4CallEiPPv )( void *scorep_libwrap_arg_this, QMetaObject::Call scorep_libwrap_arg_1, int scorep_libwrap_arg_2, void ** scorep_libwrap_arg_3 )
{
    LIBWRAP_EARLY_INIT( _ZN17QOffscreenSurface11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QOffscreenSurface11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN17QOffscreenSurface11qt_metacallEN11QMetaObject4CallEiPPv, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, scorep_libwrap_arg_2, scorep_libwrap_arg_3 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QOffscreenSurface11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN17QOffscreenSurfaceC2EP7QScreen
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QOffscreenSurfaceC2EP7QScreen )( void *scorep_libwrap_arg_this, QScreen * screen )
{
    LIBWRAP_EARLY_INIT( _ZN17QOffscreenSurfaceC2EP7QScreen );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QOffscreenSurfaceC2EP7QScreen );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QOffscreenSurfaceC2EP7QScreen, ( scorep_libwrap_arg_this, screen ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QOffscreenSurfaceC2EP7QScreen );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN17QOffscreenSurfaceC1EP7QScreen
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QOffscreenSurfaceC1EP7QScreen )( void *scorep_libwrap_arg_this, QScreen * screen )
{
    LIBWRAP_EARLY_INIT( _ZN17QOffscreenSurfaceC1EP7QScreen );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QOffscreenSurfaceC1EP7QScreen );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QOffscreenSurfaceC1EP7QScreen, ( scorep_libwrap_arg_this, screen ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QOffscreenSurfaceC1EP7QScreen );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN17QOffscreenSurfaceD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QOffscreenSurfaceD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN17QOffscreenSurfaceD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QOffscreenSurfaceD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QOffscreenSurfaceD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QOffscreenSurfaceD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN17QOffscreenSurfaceD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QOffscreenSurfaceD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN17QOffscreenSurfaceD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QOffscreenSurfaceD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QOffscreenSurfaceD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QOffscreenSurfaceD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN17QOffscreenSurfaceD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QOffscreenSurfaceD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN17QOffscreenSurfaceD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QOffscreenSurfaceD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QOffscreenSurfaceD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QOffscreenSurfaceD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK17QOffscreenSurface11surfaceTypeEv
QSurface::SurfaceType
SCOREP_LIBWRAP_FUNC_NAME( _ZNK17QOffscreenSurface11surfaceTypeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK17QOffscreenSurface11surfaceTypeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK17QOffscreenSurface11surfaceTypeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QSurface::SurfaceType scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK17QOffscreenSurface11surfaceTypeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK17QOffscreenSurface11surfaceTypeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN17QOffscreenSurface6createEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QOffscreenSurface6createEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN17QOffscreenSurface6createEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QOffscreenSurface6createEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QOffscreenSurface6createEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QOffscreenSurface6createEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN17QOffscreenSurface7destroyEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QOffscreenSurface7destroyEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN17QOffscreenSurface7destroyEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QOffscreenSurface7destroyEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QOffscreenSurface7destroyEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QOffscreenSurface7destroyEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK17QOffscreenSurface7isValidEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK17QOffscreenSurface7isValidEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK17QOffscreenSurface7isValidEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK17QOffscreenSurface7isValidEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK17QOffscreenSurface7isValidEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK17QOffscreenSurface7isValidEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN17QOffscreenSurface9setFormatERK14QSurfaceFormat
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QOffscreenSurface9setFormatERK14QSurfaceFormat )( void *scorep_libwrap_arg_this, const QSurfaceFormat & format )
{
    LIBWRAP_EARLY_INIT( _ZN17QOffscreenSurface9setFormatERK14QSurfaceFormat );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QOffscreenSurface9setFormatERK14QSurfaceFormat );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QOffscreenSurface9setFormatERK14QSurfaceFormat, ( scorep_libwrap_arg_this, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QOffscreenSurface9setFormatERK14QSurfaceFormat );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK17QOffscreenSurface6formatEv
QSurfaceFormat
SCOREP_LIBWRAP_FUNC_NAME( _ZNK17QOffscreenSurface6formatEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK17QOffscreenSurface6formatEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK17QOffscreenSurface6formatEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QSurfaceFormat scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK17QOffscreenSurface6formatEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK17QOffscreenSurface6formatEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK17QOffscreenSurface15requestedFormatEv
QSurfaceFormat
SCOREP_LIBWRAP_FUNC_NAME( _ZNK17QOffscreenSurface15requestedFormatEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK17QOffscreenSurface15requestedFormatEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK17QOffscreenSurface15requestedFormatEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QSurfaceFormat scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK17QOffscreenSurface15requestedFormatEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK17QOffscreenSurface15requestedFormatEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK17QOffscreenSurface4sizeEv
QSize
SCOREP_LIBWRAP_FUNC_NAME( _ZNK17QOffscreenSurface4sizeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK17QOffscreenSurface4sizeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK17QOffscreenSurface4sizeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QSize scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK17QOffscreenSurface4sizeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK17QOffscreenSurface4sizeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK17QOffscreenSurface6screenEv
QScreen *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK17QOffscreenSurface6screenEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK17QOffscreenSurface6screenEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK17QOffscreenSurface6screenEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QScreen * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK17QOffscreenSurface6screenEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK17QOffscreenSurface6screenEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN17QOffscreenSurface9setScreenEP7QScreen
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QOffscreenSurface9setScreenEP7QScreen )( void *scorep_libwrap_arg_this, QScreen * screen )
{
    LIBWRAP_EARLY_INIT( _ZN17QOffscreenSurface9setScreenEP7QScreen );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QOffscreenSurface9setScreenEP7QScreen );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QOffscreenSurface9setScreenEP7QScreen, ( scorep_libwrap_arg_this, screen ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QOffscreenSurface9setScreenEP7QScreen );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK17QOffscreenSurface6handleEv
QPlatformOffscreenSurface *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK17QOffscreenSurface6handleEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK17QOffscreenSurface6handleEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK17QOffscreenSurface6handleEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPlatformOffscreenSurface * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK17QOffscreenSurface6handleEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK17QOffscreenSurface6handleEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN17QOffscreenSurface13screenChangedEP7QScreen
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QOffscreenSurface13screenChangedEP7QScreen )( void *scorep_libwrap_arg_this, QScreen * screen )
{
    LIBWRAP_EARLY_INIT( _ZN17QOffscreenSurface13screenChangedEP7QScreen );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QOffscreenSurface13screenChangedEP7QScreen );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QOffscreenSurface13screenChangedEP7QScreen, ( scorep_libwrap_arg_this, screen ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QOffscreenSurface13screenChangedEP7QScreen );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN24QAbstractOpenGLFunctionsD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN24QAbstractOpenGLFunctionsD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN24QAbstractOpenGLFunctionsD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN24QAbstractOpenGLFunctionsD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN24QAbstractOpenGLFunctionsD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN24QAbstractOpenGLFunctionsD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN24QAbstractOpenGLFunctionsD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN24QAbstractOpenGLFunctionsD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN24QAbstractOpenGLFunctionsD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN24QAbstractOpenGLFunctionsD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN24QAbstractOpenGLFunctionsD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN24QAbstractOpenGLFunctionsD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN24QAbstractOpenGLFunctionsD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN24QAbstractOpenGLFunctionsD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN24QAbstractOpenGLFunctionsD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN24QAbstractOpenGLFunctionsD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN24QAbstractOpenGLFunctionsD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN24QAbstractOpenGLFunctionsD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN24QAbstractOpenGLFunctions25initializeOpenGLFunctionsEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN24QAbstractOpenGLFunctions25initializeOpenGLFunctionsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN24QAbstractOpenGLFunctions25initializeOpenGLFunctionsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN24QAbstractOpenGLFunctions25initializeOpenGLFunctionsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN24QAbstractOpenGLFunctions25initializeOpenGLFunctionsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN24QAbstractOpenGLFunctions25initializeOpenGLFunctionsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN21QOpenGLVersionProfileC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN21QOpenGLVersionProfileC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN21QOpenGLVersionProfileC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN21QOpenGLVersionProfileC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN21QOpenGLVersionProfileC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN21QOpenGLVersionProfileC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN21QOpenGLVersionProfileC1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN21QOpenGLVersionProfileC1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN21QOpenGLVersionProfileC1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN21QOpenGLVersionProfileC1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN21QOpenGLVersionProfileC1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN21QOpenGLVersionProfileC1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN21QOpenGLVersionProfileC2ERK14QSurfaceFormat
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN21QOpenGLVersionProfileC2ERK14QSurfaceFormat )( void *scorep_libwrap_arg_this, const QSurfaceFormat & format )
{
    LIBWRAP_EARLY_INIT( _ZN21QOpenGLVersionProfileC2ERK14QSurfaceFormat );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN21QOpenGLVersionProfileC2ERK14QSurfaceFormat );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN21QOpenGLVersionProfileC2ERK14QSurfaceFormat, ( scorep_libwrap_arg_this, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN21QOpenGLVersionProfileC2ERK14QSurfaceFormat );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN21QOpenGLVersionProfileC1ERK14QSurfaceFormat
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN21QOpenGLVersionProfileC1ERK14QSurfaceFormat )( void *scorep_libwrap_arg_this, const QSurfaceFormat & format )
{
    LIBWRAP_EARLY_INIT( _ZN21QOpenGLVersionProfileC1ERK14QSurfaceFormat );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN21QOpenGLVersionProfileC1ERK14QSurfaceFormat );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN21QOpenGLVersionProfileC1ERK14QSurfaceFormat, ( scorep_libwrap_arg_this, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN21QOpenGLVersionProfileC1ERK14QSurfaceFormat );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN21QOpenGLVersionProfileC2ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN21QOpenGLVersionProfileC2ERKS_ )( void *scorep_libwrap_arg_this, const QOpenGLVersionProfile & other )
{
    LIBWRAP_EARLY_INIT( _ZN21QOpenGLVersionProfileC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN21QOpenGLVersionProfileC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN21QOpenGLVersionProfileC2ERKS_, ( scorep_libwrap_arg_this, other ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN21QOpenGLVersionProfileC2ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN21QOpenGLVersionProfileC1ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN21QOpenGLVersionProfileC1ERKS_ )( void *scorep_libwrap_arg_this, const QOpenGLVersionProfile & other )
{
    LIBWRAP_EARLY_INIT( _ZN21QOpenGLVersionProfileC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN21QOpenGLVersionProfileC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN21QOpenGLVersionProfileC1ERKS_, ( scorep_libwrap_arg_this, other ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN21QOpenGLVersionProfileC1ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN21QOpenGLVersionProfileD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN21QOpenGLVersionProfileD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN21QOpenGLVersionProfileD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN21QOpenGLVersionProfileD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN21QOpenGLVersionProfileD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN21QOpenGLVersionProfileD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN21QOpenGLVersionProfileD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN21QOpenGLVersionProfileD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN21QOpenGLVersionProfileD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN21QOpenGLVersionProfileD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN21QOpenGLVersionProfileD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN21QOpenGLVersionProfileD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN21QOpenGLVersionProfileaSERKS_
QOpenGLVersionProfile &
SCOREP_LIBWRAP_FUNC_NAME( _ZN21QOpenGLVersionProfileaSERKS_ )( void *scorep_libwrap_arg_this, const QOpenGLVersionProfile & rhs )
{
    LIBWRAP_EARLY_INIT( _ZN21QOpenGLVersionProfileaSERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN21QOpenGLVersionProfileaSERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QOpenGLVersionProfile & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN21QOpenGLVersionProfileaSERKS_, ( scorep_libwrap_arg_this, rhs ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN21QOpenGLVersionProfileaSERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK21QOpenGLVersionProfile7versionEv
QPair<int, int>
SCOREP_LIBWRAP_FUNC_NAME( _ZNK21QOpenGLVersionProfile7versionEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK21QOpenGLVersionProfile7versionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK21QOpenGLVersionProfile7versionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPair<int, int> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK21QOpenGLVersionProfile7versionEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK21QOpenGLVersionProfile7versionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN21QOpenGLVersionProfile10setVersionEii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN21QOpenGLVersionProfile10setVersionEii )( void *scorep_libwrap_arg_this, int majorVersion, int minorVersion )
{
    LIBWRAP_EARLY_INIT( _ZN21QOpenGLVersionProfile10setVersionEii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN21QOpenGLVersionProfile10setVersionEii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN21QOpenGLVersionProfile10setVersionEii, ( scorep_libwrap_arg_this, majorVersion, minorVersion ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN21QOpenGLVersionProfile10setVersionEii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK21QOpenGLVersionProfile7profileEv
QSurfaceFormat::OpenGLContextProfile
SCOREP_LIBWRAP_FUNC_NAME( _ZNK21QOpenGLVersionProfile7profileEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK21QOpenGLVersionProfile7profileEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK21QOpenGLVersionProfile7profileEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QSurfaceFormat::OpenGLContextProfile scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK21QOpenGLVersionProfile7profileEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK21QOpenGLVersionProfile7profileEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN21QOpenGLVersionProfile10setProfileEN14QSurfaceFormat20OpenGLContextProfileE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN21QOpenGLVersionProfile10setProfileEN14QSurfaceFormat20OpenGLContextProfileE )( void *scorep_libwrap_arg_this, QSurfaceFormat::OpenGLContextProfile profile )
{
    LIBWRAP_EARLY_INIT( _ZN21QOpenGLVersionProfile10setProfileEN14QSurfaceFormat20OpenGLContextProfileE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN21QOpenGLVersionProfile10setProfileEN14QSurfaceFormat20OpenGLContextProfileE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN21QOpenGLVersionProfile10setProfileEN14QSurfaceFormat20OpenGLContextProfileE, ( scorep_libwrap_arg_this, profile ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN21QOpenGLVersionProfile10setProfileEN14QSurfaceFormat20OpenGLContextProfileE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK21QOpenGLVersionProfile11hasProfilesEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK21QOpenGLVersionProfile11hasProfilesEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK21QOpenGLVersionProfile11hasProfilesEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK21QOpenGLVersionProfile11hasProfilesEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK21QOpenGLVersionProfile11hasProfilesEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK21QOpenGLVersionProfile11hasProfilesEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK21QOpenGLVersionProfile15isLegacyVersionEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK21QOpenGLVersionProfile15isLegacyVersionEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK21QOpenGLVersionProfile15isLegacyVersionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK21QOpenGLVersionProfile15isLegacyVersionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK21QOpenGLVersionProfile15isLegacyVersionEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK21QOpenGLVersionProfile15isLegacyVersionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK21QOpenGLVersionProfile7isValidEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK21QOpenGLVersionProfile7isValidEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK21QOpenGLVersionProfile7isValidEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK21QOpenGLVersionProfile7isValidEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK21QOpenGLVersionProfile7isValidEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK21QOpenGLVersionProfile7isValidEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK19QOpenGLContextGroup10metaObjectEv
const QMetaObject *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK19QOpenGLContextGroup10metaObjectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK19QOpenGLContextGroup10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK19QOpenGLContextGroup10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QMetaObject * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK19QOpenGLContextGroup10metaObjectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK19QOpenGLContextGroup10metaObjectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN19QOpenGLContextGroup11qt_metacastEPKc
void *
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QOpenGLContextGroup11qt_metacastEPKc )( void *scorep_libwrap_arg_this, const char * scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN19QOpenGLContextGroup11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QOpenGLContextGroup11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    void * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN19QOpenGLContextGroup11qt_metacastEPKc, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QOpenGLContextGroup11qt_metacastEPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN19QOpenGLContextGroup11qt_metacallEN11QMetaObject4CallEiPPv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QOpenGLContextGroup11qt_metacallEN11QMetaObject4CallEiPPv )( void *scorep_libwrap_arg_this, QMetaObject::Call scorep_libwrap_arg_1, int scorep_libwrap_arg_2, void ** scorep_libwrap_arg_3 )
{
    LIBWRAP_EARLY_INIT( _ZN19QOpenGLContextGroup11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QOpenGLContextGroup11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN19QOpenGLContextGroup11qt_metacallEN11QMetaObject4CallEiPPv, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, scorep_libwrap_arg_2, scorep_libwrap_arg_3 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QOpenGLContextGroup11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN19QOpenGLContextGroupD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QOpenGLContextGroupD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN19QOpenGLContextGroupD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QOpenGLContextGroupD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN19QOpenGLContextGroupD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QOpenGLContextGroupD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN19QOpenGLContextGroupD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QOpenGLContextGroupD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN19QOpenGLContextGroupD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QOpenGLContextGroupD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN19QOpenGLContextGroupD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QOpenGLContextGroupD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN19QOpenGLContextGroupD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QOpenGLContextGroupD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN19QOpenGLContextGroupD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QOpenGLContextGroupD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN19QOpenGLContextGroupD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QOpenGLContextGroupD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK19QOpenGLContextGroup6sharesEv
QList<QOpenGLContext *>
SCOREP_LIBWRAP_FUNC_NAME( _ZNK19QOpenGLContextGroup6sharesEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK19QOpenGLContextGroup6sharesEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK19QOpenGLContextGroup6sharesEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QList<QOpenGLContext *> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK19QOpenGLContextGroup6sharesEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK19QOpenGLContextGroup6sharesEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN19QOpenGLContextGroup19currentContextGroupEv
QOpenGLContextGroup *
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QOpenGLContextGroup19currentContextGroupEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN19QOpenGLContextGroup19currentContextGroupEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QOpenGLContextGroup19currentContextGroupEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QOpenGLContextGroup * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN19QOpenGLContextGroup19currentContextGroupEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QOpenGLContextGroup19currentContextGroupEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK14QOpenGLContext10metaObjectEv
const QMetaObject *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QOpenGLContext10metaObjectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QOpenGLContext10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QOpenGLContext10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QMetaObject * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QOpenGLContext10metaObjectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QOpenGLContext10metaObjectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QOpenGLContext11qt_metacastEPKc
void *
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLContext11qt_metacastEPKc )( void *scorep_libwrap_arg_this, const char * scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLContext11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLContext11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    void * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLContext11qt_metacastEPKc, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLContext11qt_metacastEPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QOpenGLContext11qt_metacallEN11QMetaObject4CallEiPPv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLContext11qt_metacallEN11QMetaObject4CallEiPPv )( void *scorep_libwrap_arg_this, QMetaObject::Call scorep_libwrap_arg_1, int scorep_libwrap_arg_2, void ** scorep_libwrap_arg_3 )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLContext11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLContext11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLContext11qt_metacallEN11QMetaObject4CallEiPPv, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, scorep_libwrap_arg_2, scorep_libwrap_arg_3 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLContext11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QOpenGLContextC2EP7QObject
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLContextC2EP7QObject )( void *scorep_libwrap_arg_this, QObject * parent )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLContextC2EP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLContextC2EP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLContextC2EP7QObject, ( scorep_libwrap_arg_this, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLContextC2EP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QOpenGLContextC1EP7QObject
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLContextC1EP7QObject )( void *scorep_libwrap_arg_this, QObject * parent )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLContextC1EP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLContextC1EP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLContextC1EP7QObject, ( scorep_libwrap_arg_this, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLContextC1EP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QOpenGLContextD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLContextD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLContextD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLContextD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLContextD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLContextD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QOpenGLContextD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLContextD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLContextD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLContextD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLContextD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLContextD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QOpenGLContextD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLContextD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLContextD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLContextD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLContextD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLContextD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QOpenGLContext9setFormatERK14QSurfaceFormat
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLContext9setFormatERK14QSurfaceFormat )( void *scorep_libwrap_arg_this, const QSurfaceFormat & format )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLContext9setFormatERK14QSurfaceFormat );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLContext9setFormatERK14QSurfaceFormat );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLContext9setFormatERK14QSurfaceFormat, ( scorep_libwrap_arg_this, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLContext9setFormatERK14QSurfaceFormat );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QOpenGLContext15setShareContextEPS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLContext15setShareContextEPS_ )( void *scorep_libwrap_arg_this, QOpenGLContext * shareContext )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLContext15setShareContextEPS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLContext15setShareContextEPS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLContext15setShareContextEPS_, ( scorep_libwrap_arg_this, shareContext ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLContext15setShareContextEPS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QOpenGLContext9setScreenEP7QScreen
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLContext9setScreenEP7QScreen )( void *scorep_libwrap_arg_this, QScreen * screen )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLContext9setScreenEP7QScreen );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLContext9setScreenEP7QScreen );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLContext9setScreenEP7QScreen, ( scorep_libwrap_arg_this, screen ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLContext9setScreenEP7QScreen );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QOpenGLContext15setNativeHandleERK8QVariant
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLContext15setNativeHandleERK8QVariant )( void *scorep_libwrap_arg_this, const QVariant & handle )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLContext15setNativeHandleERK8QVariant );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLContext15setNativeHandleERK8QVariant );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLContext15setNativeHandleERK8QVariant, ( scorep_libwrap_arg_this, handle ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLContext15setNativeHandleERK8QVariant );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QOpenGLContext6createEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLContext6createEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLContext6createEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLContext6createEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLContext6createEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLContext6createEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK14QOpenGLContext7isValidEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QOpenGLContext7isValidEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QOpenGLContext7isValidEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QOpenGLContext7isValidEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QOpenGLContext7isValidEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QOpenGLContext7isValidEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK14QOpenGLContext6formatEv
QSurfaceFormat
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QOpenGLContext6formatEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QOpenGLContext6formatEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QOpenGLContext6formatEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QSurfaceFormat scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QOpenGLContext6formatEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QOpenGLContext6formatEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK14QOpenGLContext12shareContextEv
QOpenGLContext *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QOpenGLContext12shareContextEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QOpenGLContext12shareContextEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QOpenGLContext12shareContextEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QOpenGLContext * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QOpenGLContext12shareContextEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QOpenGLContext12shareContextEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK14QOpenGLContext10shareGroupEv
QOpenGLContextGroup *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QOpenGLContext10shareGroupEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QOpenGLContext10shareGroupEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QOpenGLContext10shareGroupEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QOpenGLContextGroup * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QOpenGLContext10shareGroupEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QOpenGLContext10shareGroupEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK14QOpenGLContext6screenEv
QScreen *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QOpenGLContext6screenEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QOpenGLContext6screenEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QOpenGLContext6screenEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QScreen * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QOpenGLContext6screenEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QOpenGLContext6screenEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK14QOpenGLContext12nativeHandleEv
QVariant
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QOpenGLContext12nativeHandleEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QOpenGLContext12nativeHandleEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QOpenGLContext12nativeHandleEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QVariant scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QOpenGLContext12nativeHandleEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QOpenGLContext12nativeHandleEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK14QOpenGLContext24defaultFramebufferObjectEv
GLuint
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QOpenGLContext24defaultFramebufferObjectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QOpenGLContext24defaultFramebufferObjectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QOpenGLContext24defaultFramebufferObjectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    GLuint scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QOpenGLContext24defaultFramebufferObjectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QOpenGLContext24defaultFramebufferObjectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QOpenGLContext11makeCurrentEP8QSurface
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLContext11makeCurrentEP8QSurface )( void *scorep_libwrap_arg_this, QSurface * surface )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLContext11makeCurrentEP8QSurface );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLContext11makeCurrentEP8QSurface );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLContext11makeCurrentEP8QSurface, ( scorep_libwrap_arg_this, surface ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLContext11makeCurrentEP8QSurface );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QOpenGLContext11doneCurrentEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLContext11doneCurrentEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLContext11doneCurrentEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLContext11doneCurrentEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLContext11doneCurrentEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLContext11doneCurrentEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QOpenGLContext11swapBuffersEP8QSurface
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLContext11swapBuffersEP8QSurface )( void *scorep_libwrap_arg_this, QSurface * surface )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLContext11swapBuffersEP8QSurface );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLContext11swapBuffersEP8QSurface );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLContext11swapBuffersEP8QSurface, ( scorep_libwrap_arg_this, surface ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLContext11swapBuffersEP8QSurface );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK14QOpenGLContext14getProcAddressERK10QByteArray
QFunctionPointer
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QOpenGLContext14getProcAddressERK10QByteArray )( void *scorep_libwrap_arg_this, const QByteArray & procName )
{
    LIBWRAP_EARLY_INIT( _ZNK14QOpenGLContext14getProcAddressERK10QByteArray );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QOpenGLContext14getProcAddressERK10QByteArray );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QFunctionPointer scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QOpenGLContext14getProcAddressERK10QByteArray, ( scorep_libwrap_arg_this, procName ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QOpenGLContext14getProcAddressERK10QByteArray );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK14QOpenGLContext14getProcAddressEPKc
QFunctionPointer
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QOpenGLContext14getProcAddressEPKc )( void *scorep_libwrap_arg_this, const char * procName )
{
    LIBWRAP_EARLY_INIT( _ZNK14QOpenGLContext14getProcAddressEPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QOpenGLContext14getProcAddressEPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QFunctionPointer scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QOpenGLContext14getProcAddressEPKc, ( scorep_libwrap_arg_this, procName ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QOpenGLContext14getProcAddressEPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK14QOpenGLContext7surfaceEv
QSurface *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QOpenGLContext7surfaceEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QOpenGLContext7surfaceEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QOpenGLContext7surfaceEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QSurface * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QOpenGLContext7surfaceEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QOpenGLContext7surfaceEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QOpenGLContext14currentContextEv
QOpenGLContext *
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLContext14currentContextEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLContext14currentContextEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLContext14currentContextEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QOpenGLContext * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLContext14currentContextEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLContext14currentContextEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QOpenGLContext10areSharingEPS_S0_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLContext10areSharingEPS_S0_ )( QOpenGLContext * first, QOpenGLContext * second )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLContext10areSharingEPS_S0_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLContext10areSharingEPS_S0_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLContext10areSharingEPS_S0_, ( first, second ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLContext10areSharingEPS_S0_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK14QOpenGLContext6handleEv
QPlatformOpenGLContext *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QOpenGLContext6handleEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QOpenGLContext6handleEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QOpenGLContext6handleEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPlatformOpenGLContext * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QOpenGLContext6handleEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QOpenGLContext6handleEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK14QOpenGLContext11shareHandleEv
QPlatformOpenGLContext *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QOpenGLContext11shareHandleEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QOpenGLContext11shareHandleEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QOpenGLContext11shareHandleEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPlatformOpenGLContext * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QOpenGLContext11shareHandleEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QOpenGLContext11shareHandleEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK14QOpenGLContext9functionsEv
QOpenGLFunctions *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QOpenGLContext9functionsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QOpenGLContext9functionsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QOpenGLContext9functionsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QOpenGLFunctions * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QOpenGLContext9functionsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QOpenGLContext9functionsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK14QOpenGLContext14extraFunctionsEv
QOpenGLExtraFunctions *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QOpenGLContext14extraFunctionsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QOpenGLContext14extraFunctionsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QOpenGLContext14extraFunctionsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QOpenGLExtraFunctions * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QOpenGLContext14extraFunctionsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QOpenGLContext14extraFunctionsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK14QOpenGLContext16versionFunctionsERK21QOpenGLVersionProfile
QAbstractOpenGLFunctions *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QOpenGLContext16versionFunctionsERK21QOpenGLVersionProfile )( void *scorep_libwrap_arg_this, const QOpenGLVersionProfile & versionProfile )
{
    LIBWRAP_EARLY_INIT( _ZNK14QOpenGLContext16versionFunctionsERK21QOpenGLVersionProfile );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QOpenGLContext16versionFunctionsERK21QOpenGLVersionProfile );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QAbstractOpenGLFunctions * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QOpenGLContext16versionFunctionsERK21QOpenGLVersionProfile, ( scorep_libwrap_arg_this, versionProfile ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QOpenGLContext16versionFunctionsERK21QOpenGLVersionProfile );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK14QOpenGLContext10extensionsEv
QSet<QByteArray>
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QOpenGLContext10extensionsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QOpenGLContext10extensionsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QOpenGLContext10extensionsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QSet<QByteArray> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QOpenGLContext10extensionsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QOpenGLContext10extensionsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK14QOpenGLContext12hasExtensionERK10QByteArray
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QOpenGLContext12hasExtensionERK10QByteArray )( void *scorep_libwrap_arg_this, const QByteArray & extension )
{
    LIBWRAP_EARLY_INIT( _ZNK14QOpenGLContext12hasExtensionERK10QByteArray );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QOpenGLContext12hasExtensionERK10QByteArray );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QOpenGLContext12hasExtensionERK10QByteArray, ( scorep_libwrap_arg_this, extension ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QOpenGLContext12hasExtensionERK10QByteArray );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QOpenGLContext18openGLModuleHandleEv
void *
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLContext18openGLModuleHandleEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLContext18openGLModuleHandleEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLContext18openGLModuleHandleEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    void * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLContext18openGLModuleHandleEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLContext18openGLModuleHandleEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QOpenGLContext16openGLModuleTypeEv
QOpenGLContext::OpenGLModuleType
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLContext16openGLModuleTypeEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLContext16openGLModuleTypeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLContext16openGLModuleTypeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QOpenGLContext::OpenGLModuleType scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLContext16openGLModuleTypeEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLContext16openGLModuleTypeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK14QOpenGLContext10isOpenGLESEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QOpenGLContext10isOpenGLESEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QOpenGLContext10isOpenGLESEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QOpenGLContext10isOpenGLESEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QOpenGLContext10isOpenGLESEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QOpenGLContext10isOpenGLESEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QOpenGLContext22supportsThreadedOpenGLEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLContext22supportsThreadedOpenGLEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLContext22supportsThreadedOpenGLEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLContext22supportsThreadedOpenGLEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLContext22supportsThreadedOpenGLEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLContext22supportsThreadedOpenGLEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QOpenGLContext18globalShareContextEv
QOpenGLContext *
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLContext18globalShareContextEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLContext18globalShareContextEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLContext18globalShareContextEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QOpenGLContext * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLContext18globalShareContextEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLContext18globalShareContextEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QOpenGLContext18aboutToBeDestroyedEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLContext18aboutToBeDestroyedEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLContext18aboutToBeDestroyedEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLContext18aboutToBeDestroyedEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLContext18aboutToBeDestroyedEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLContext18aboutToBeDestroyedEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK7QWindow10metaObjectEv
const QMetaObject *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QWindow10metaObjectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QWindow10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QWindow10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QMetaObject * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QWindow10metaObjectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QWindow10metaObjectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QWindow11qt_metacastEPKc
void *
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow11qt_metacastEPKc )( void *scorep_libwrap_arg_this, const char * scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    void * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow11qt_metacastEPKc, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow11qt_metacastEPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QWindow11qt_metacallEN11QMetaObject4CallEiPPv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow11qt_metacallEN11QMetaObject4CallEiPPv )( void *scorep_libwrap_arg_this, QMetaObject::Call scorep_libwrap_arg_1, int scorep_libwrap_arg_2, void ** scorep_libwrap_arg_3 )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow11qt_metacallEN11QMetaObject4CallEiPPv, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, scorep_libwrap_arg_2, scorep_libwrap_arg_3 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QWindowC2EPS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindowC2EPS_ )( void *scorep_libwrap_arg_this, QWindow * parent )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindowC2EPS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindowC2EPS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindowC2EPS_, ( scorep_libwrap_arg_this, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindowC2EPS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindowC1EPS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindowC1EPS_ )( void *scorep_libwrap_arg_this, QWindow * parent )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindowC1EPS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindowC1EPS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindowC1EPS_, ( scorep_libwrap_arg_this, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindowC1EPS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindowD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindowD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindowD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindowD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindowD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindowD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindowD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindowD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindowD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindowD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindowD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindowD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindowD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindowD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindowD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindowD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindowD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindowD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindow14setSurfaceTypeEN8QSurface11SurfaceTypeE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow14setSurfaceTypeEN8QSurface11SurfaceTypeE )( void *scorep_libwrap_arg_this, QSurface::SurfaceType surfaceType )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow14setSurfaceTypeEN8QSurface11SurfaceTypeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow14setSurfaceTypeEN8QSurface11SurfaceTypeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow14setSurfaceTypeEN8QSurface11SurfaceTypeE, ( scorep_libwrap_arg_this, surfaceType ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow14setSurfaceTypeEN8QSurface11SurfaceTypeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK7QWindow11surfaceTypeEv
QSurface::SurfaceType
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QWindow11surfaceTypeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QWindow11surfaceTypeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QWindow11surfaceTypeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QSurface::SurfaceType scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QWindow11surfaceTypeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QWindow11surfaceTypeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QWindow9isVisibleEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QWindow9isVisibleEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QWindow9isVisibleEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QWindow9isVisibleEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QWindow9isVisibleEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QWindow9isVisibleEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QWindow10visibilityEv
QWindow::Visibility
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QWindow10visibilityEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QWindow10visibilityEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QWindow10visibilityEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QWindow::Visibility scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QWindow10visibilityEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QWindow10visibilityEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QWindow13setVisibilityENS_10VisibilityE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow13setVisibilityENS_10VisibilityE )( void *scorep_libwrap_arg_this, QWindow::Visibility v )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow13setVisibilityENS_10VisibilityE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow13setVisibilityENS_10VisibilityE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow13setVisibilityENS_10VisibilityE, ( scorep_libwrap_arg_this, v ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow13setVisibilityENS_10VisibilityE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindow6createEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow6createEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow6createEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow6createEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow6createEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow6createEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK7QWindow5winIdEv
WId
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QWindow5winIdEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QWindow5winIdEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QWindow5winIdEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    WId scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QWindow5winIdEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QWindow5winIdEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QWindow6parentEv
QWindow *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QWindow6parentEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QWindow6parentEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QWindow6parentEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QWindow * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QWindow6parentEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QWindow6parentEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QWindow9setParentEPS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow9setParentEPS_ )( void *scorep_libwrap_arg_this, QWindow * parent )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow9setParentEPS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow9setParentEPS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow9setParentEPS_, ( scorep_libwrap_arg_this, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow9setParentEPS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK7QWindow10isTopLevelEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QWindow10isTopLevelEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QWindow10isTopLevelEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QWindow10isTopLevelEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QWindow10isTopLevelEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QWindow10isTopLevelEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QWindow7isModalEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QWindow7isModalEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QWindow7isModalEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QWindow7isModalEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QWindow7isModalEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QWindow7isModalEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QWindow8modalityEv
Qt::WindowModality
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QWindow8modalityEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QWindow8modalityEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QWindow8modalityEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    Qt::WindowModality scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QWindow8modalityEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QWindow8modalityEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QWindow11setModalityEN2Qt14WindowModalityE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow11setModalityEN2Qt14WindowModalityE )( void *scorep_libwrap_arg_this, Qt::WindowModality modality )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow11setModalityEN2Qt14WindowModalityE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow11setModalityEN2Qt14WindowModalityE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow11setModalityEN2Qt14WindowModalityE, ( scorep_libwrap_arg_this, modality ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow11setModalityEN2Qt14WindowModalityE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindow9setFormatERK14QSurfaceFormat
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow9setFormatERK14QSurfaceFormat )( void *scorep_libwrap_arg_this, const QSurfaceFormat & format )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow9setFormatERK14QSurfaceFormat );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow9setFormatERK14QSurfaceFormat );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow9setFormatERK14QSurfaceFormat, ( scorep_libwrap_arg_this, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow9setFormatERK14QSurfaceFormat );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK7QWindow6formatEv
QSurfaceFormat
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QWindow6formatEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QWindow6formatEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QWindow6formatEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QSurfaceFormat scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QWindow6formatEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QWindow6formatEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QWindow15requestedFormatEv
QSurfaceFormat
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QWindow15requestedFormatEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QWindow15requestedFormatEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QWindow15requestedFormatEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QSurfaceFormat scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QWindow15requestedFormatEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QWindow15requestedFormatEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QWindow8setFlagsE6QFlagsIN2Qt10WindowTypeEE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow8setFlagsE6QFlagsIN2Qt10WindowTypeEE )( void *scorep_libwrap_arg_this, Qt::WindowFlags flags )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow8setFlagsE6QFlagsIN2Qt10WindowTypeEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow8setFlagsE6QFlagsIN2Qt10WindowTypeEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow8setFlagsE6QFlagsIN2Qt10WindowTypeEE, ( scorep_libwrap_arg_this, flags ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow8setFlagsE6QFlagsIN2Qt10WindowTypeEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK7QWindow5flagsEv
Qt::WindowFlags
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QWindow5flagsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QWindow5flagsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QWindow5flagsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    Qt::WindowFlags scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QWindow5flagsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QWindow5flagsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QWindow4typeEv
Qt::WindowType
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QWindow4typeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QWindow4typeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QWindow4typeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    Qt::WindowType scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QWindow4typeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QWindow4typeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QWindow5titleEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QWindow5titleEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QWindow5titleEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QWindow5titleEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QWindow5titleEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QWindow5titleEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QWindow10setOpacityEd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow10setOpacityEd )( void *scorep_libwrap_arg_this, qreal level )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow10setOpacityEd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow10setOpacityEd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow10setOpacityEd, ( scorep_libwrap_arg_this, level ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow10setOpacityEd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK7QWindow7opacityEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QWindow7opacityEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QWindow7opacityEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QWindow7opacityEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QWindow7opacityEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QWindow7opacityEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QWindow7setMaskERK7QRegion
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow7setMaskERK7QRegion )( void *scorep_libwrap_arg_this, const QRegion & region )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow7setMaskERK7QRegion );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow7setMaskERK7QRegion );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow7setMaskERK7QRegion, ( scorep_libwrap_arg_this, region ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow7setMaskERK7QRegion );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK7QWindow4maskEv
QRegion
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QWindow4maskEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QWindow4maskEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QWindow4maskEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRegion scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QWindow4maskEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QWindow4maskEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QWindow8isActiveEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QWindow8isActiveEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QWindow8isActiveEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QWindow8isActiveEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QWindow8isActiveEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QWindow8isActiveEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QWindow30reportContentOrientationChangeEN2Qt17ScreenOrientationE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow30reportContentOrientationChangeEN2Qt17ScreenOrientationE )( void *scorep_libwrap_arg_this, Qt::ScreenOrientation orientation )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow30reportContentOrientationChangeEN2Qt17ScreenOrientationE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow30reportContentOrientationChangeEN2Qt17ScreenOrientationE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow30reportContentOrientationChangeEN2Qt17ScreenOrientationE, ( scorep_libwrap_arg_this, orientation ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow30reportContentOrientationChangeEN2Qt17ScreenOrientationE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK7QWindow18contentOrientationEv
Qt::ScreenOrientation
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QWindow18contentOrientationEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QWindow18contentOrientationEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QWindow18contentOrientationEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    Qt::ScreenOrientation scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QWindow18contentOrientationEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QWindow18contentOrientationEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QWindow16devicePixelRatioEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QWindow16devicePixelRatioEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QWindow16devicePixelRatioEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QWindow16devicePixelRatioEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QWindow16devicePixelRatioEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QWindow16devicePixelRatioEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QWindow11windowStateEv
Qt::WindowState
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QWindow11windowStateEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QWindow11windowStateEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QWindow11windowStateEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    Qt::WindowState scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QWindow11windowStateEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QWindow11windowStateEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QWindow14setWindowStateEN2Qt11WindowStateE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow14setWindowStateEN2Qt11WindowStateE )( void *scorep_libwrap_arg_this, Qt::WindowState state )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow14setWindowStateEN2Qt11WindowStateE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow14setWindowStateEN2Qt11WindowStateE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow14setWindowStateEN2Qt11WindowStateE, ( scorep_libwrap_arg_this, state ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow14setWindowStateEN2Qt11WindowStateE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindow18setTransientParentEPS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow18setTransientParentEPS_ )( void *scorep_libwrap_arg_this, QWindow * parent )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow18setTransientParentEPS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow18setTransientParentEPS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow18setTransientParentEPS_, ( scorep_libwrap_arg_this, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow18setTransientParentEPS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK7QWindow15transientParentEv
QWindow *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QWindow15transientParentEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QWindow15transientParentEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QWindow15transientParentEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QWindow * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QWindow15transientParentEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QWindow15transientParentEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QWindow12isAncestorOfEPKS_NS_12AncestorModeE
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QWindow12isAncestorOfEPKS_NS_12AncestorModeE )( void *scorep_libwrap_arg_this, const QWindow * child, QWindow::AncestorMode mode )
{
    LIBWRAP_EARLY_INIT( _ZNK7QWindow12isAncestorOfEPKS_NS_12AncestorModeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QWindow12isAncestorOfEPKS_NS_12AncestorModeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QWindow12isAncestorOfEPKS_NS_12AncestorModeE, ( scorep_libwrap_arg_this, child, mode ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QWindow12isAncestorOfEPKS_NS_12AncestorModeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QWindow9isExposedEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QWindow9isExposedEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QWindow9isExposedEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QWindow9isExposedEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QWindow9isExposedEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QWindow9isExposedEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QWindow11minimumSizeEv
QSize
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QWindow11minimumSizeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QWindow11minimumSizeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QWindow11minimumSizeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QSize scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QWindow11minimumSizeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QWindow11minimumSizeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QWindow11maximumSizeEv
QSize
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QWindow11maximumSizeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QWindow11maximumSizeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QWindow11maximumSizeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QSize scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QWindow11maximumSizeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QWindow11maximumSizeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QWindow8baseSizeEv
QSize
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QWindow8baseSizeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QWindow8baseSizeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QWindow8baseSizeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QSize scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QWindow8baseSizeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QWindow8baseSizeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QWindow13sizeIncrementEv
QSize
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QWindow13sizeIncrementEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QWindow13sizeIncrementEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QWindow13sizeIncrementEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QSize scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QWindow13sizeIncrementEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QWindow13sizeIncrementEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QWindow14setMinimumSizeERK5QSize
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow14setMinimumSizeERK5QSize )( void *scorep_libwrap_arg_this, const QSize & size )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow14setMinimumSizeERK5QSize );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow14setMinimumSizeERK5QSize );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow14setMinimumSizeERK5QSize, ( scorep_libwrap_arg_this, size ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow14setMinimumSizeERK5QSize );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindow14setMaximumSizeERK5QSize
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow14setMaximumSizeERK5QSize )( void *scorep_libwrap_arg_this, const QSize & size )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow14setMaximumSizeERK5QSize );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow14setMaximumSizeERK5QSize );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow14setMaximumSizeERK5QSize, ( scorep_libwrap_arg_this, size ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow14setMaximumSizeERK5QSize );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindow11setBaseSizeERK5QSize
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow11setBaseSizeERK5QSize )( void *scorep_libwrap_arg_this, const QSize & size )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow11setBaseSizeERK5QSize );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow11setBaseSizeERK5QSize );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow11setBaseSizeERK5QSize, ( scorep_libwrap_arg_this, size ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow11setBaseSizeERK5QSize );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindow16setSizeIncrementERK5QSize
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow16setSizeIncrementERK5QSize )( void *scorep_libwrap_arg_this, const QSize & size )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow16setSizeIncrementERK5QSize );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow16setSizeIncrementERK5QSize );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow16setSizeIncrementERK5QSize, ( scorep_libwrap_arg_this, size ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow16setSizeIncrementERK5QSize );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindow11setGeometryEiiii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow11setGeometryEiiii )( void *scorep_libwrap_arg_this, int posx, int posy, int w, int h )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow11setGeometryEiiii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow11setGeometryEiiii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow11setGeometryEiiii, ( scorep_libwrap_arg_this, posx, posy, w, h ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow11setGeometryEiiii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindow11setGeometryERK5QRect
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow11setGeometryERK5QRect )( void *scorep_libwrap_arg_this, const QRect & rect )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow11setGeometryERK5QRect );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow11setGeometryERK5QRect );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow11setGeometryERK5QRect, ( scorep_libwrap_arg_this, rect ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow11setGeometryERK5QRect );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK7QWindow8geometryEv
QRect
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QWindow8geometryEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QWindow8geometryEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QWindow8geometryEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRect scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QWindow8geometryEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QWindow8geometryEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QWindow12frameMarginsEv
QMargins
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QWindow12frameMarginsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QWindow12frameMarginsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QWindow12frameMarginsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QMargins scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QWindow12frameMarginsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QWindow12frameMarginsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QWindow13frameGeometryEv
QRect
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QWindow13frameGeometryEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QWindow13frameGeometryEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QWindow13frameGeometryEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRect scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QWindow13frameGeometryEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QWindow13frameGeometryEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QWindow13framePositionEv
QPoint
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QWindow13framePositionEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QWindow13framePositionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QWindow13framePositionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPoint scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QWindow13framePositionEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QWindow13framePositionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QWindow16setFramePositionERK6QPoint
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow16setFramePositionERK6QPoint )( void *scorep_libwrap_arg_this, const QPoint & point )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow16setFramePositionERK6QPoint );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow16setFramePositionERK6QPoint );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow16setFramePositionERK6QPoint, ( scorep_libwrap_arg_this, point ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow16setFramePositionERK6QPoint );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindow11setPositionERK6QPoint
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow11setPositionERK6QPoint )( void *scorep_libwrap_arg_this, const QPoint & pt )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow11setPositionERK6QPoint );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow11setPositionERK6QPoint );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow11setPositionERK6QPoint, ( scorep_libwrap_arg_this, pt ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow11setPositionERK6QPoint );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindow11setPositionEii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow11setPositionEii )( void *scorep_libwrap_arg_this, int posx, int posy )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow11setPositionEii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow11setPositionEii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow11setPositionEii, ( scorep_libwrap_arg_this, posx, posy ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow11setPositionEii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindow6resizeERK5QSize
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow6resizeERK5QSize )( void *scorep_libwrap_arg_this, const QSize & newSize )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow6resizeERK5QSize );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow6resizeERK5QSize );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow6resizeERK5QSize, ( scorep_libwrap_arg_this, newSize ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow6resizeERK5QSize );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindow6resizeEii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow6resizeEii )( void *scorep_libwrap_arg_this, int w, int h )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow6resizeEii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow6resizeEii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow6resizeEii, ( scorep_libwrap_arg_this, w, h ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow6resizeEii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindow11setFilePathERK7QString
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow11setFilePathERK7QString )( void *scorep_libwrap_arg_this, const QString & filePath )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow11setFilePathERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow11setFilePathERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow11setFilePathERK7QString, ( scorep_libwrap_arg_this, filePath ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow11setFilePathERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK7QWindow8filePathEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QWindow8filePathEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QWindow8filePathEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QWindow8filePathEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QWindow8filePathEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QWindow8filePathEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QWindow7setIconERK5QIcon
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow7setIconERK5QIcon )( void *scorep_libwrap_arg_this, const QIcon & icon )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow7setIconERK5QIcon );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow7setIconERK5QIcon );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow7setIconERK5QIcon, ( scorep_libwrap_arg_this, icon ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow7setIconERK5QIcon );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK7QWindow4iconEv
QIcon
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QWindow4iconEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QWindow4iconEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QWindow4iconEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QIcon scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QWindow4iconEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QWindow4iconEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QWindow7destroyEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow7destroyEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow7destroyEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow7destroyEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow7destroyEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow7destroyEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK7QWindow6handleEv
QPlatformWindow *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QWindow6handleEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QWindow6handleEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QWindow6handleEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPlatformWindow * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QWindow6handleEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QWindow6handleEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QWindow22setKeyboardGrabEnabledEb
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow22setKeyboardGrabEnabledEb )( void *scorep_libwrap_arg_this, bool grab )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow22setKeyboardGrabEnabledEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow22setKeyboardGrabEnabledEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow22setKeyboardGrabEnabledEb, ( scorep_libwrap_arg_this, grab ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow22setKeyboardGrabEnabledEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QWindow19setMouseGrabEnabledEb
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow19setMouseGrabEnabledEb )( void *scorep_libwrap_arg_this, bool grab )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow19setMouseGrabEnabledEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow19setMouseGrabEnabledEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow19setMouseGrabEnabledEb, ( scorep_libwrap_arg_this, grab ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow19setMouseGrabEnabledEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QWindow6screenEv
QScreen *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QWindow6screenEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QWindow6screenEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QWindow6screenEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QScreen * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QWindow6screenEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QWindow6screenEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QWindow9setScreenEP7QScreen
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow9setScreenEP7QScreen )( void *scorep_libwrap_arg_this, QScreen * screen )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow9setScreenEP7QScreen );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow9setScreenEP7QScreen );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow9setScreenEP7QScreen, ( scorep_libwrap_arg_this, screen ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow9setScreenEP7QScreen );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK7QWindow14accessibleRootEv
QAccessibleInterface *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QWindow14accessibleRootEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QWindow14accessibleRootEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QWindow14accessibleRootEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QAccessibleInterface * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QWindow14accessibleRootEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QWindow14accessibleRootEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QWindow11focusObjectEv
QObject *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QWindow11focusObjectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QWindow11focusObjectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QWindow11focusObjectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QObject * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QWindow11focusObjectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QWindow11focusObjectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QWindow11mapToGlobalERK6QPoint
QPoint
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QWindow11mapToGlobalERK6QPoint )( void *scorep_libwrap_arg_this, const QPoint & pos )
{
    LIBWRAP_EARLY_INIT( _ZNK7QWindow11mapToGlobalERK6QPoint );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QWindow11mapToGlobalERK6QPoint );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPoint scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QWindow11mapToGlobalERK6QPoint, ( scorep_libwrap_arg_this, pos ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QWindow11mapToGlobalERK6QPoint );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QWindow13mapFromGlobalERK6QPoint
QPoint
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QWindow13mapFromGlobalERK6QPoint )( void *scorep_libwrap_arg_this, const QPoint & pos )
{
    LIBWRAP_EARLY_INIT( _ZNK7QWindow13mapFromGlobalERK6QPoint );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QWindow13mapFromGlobalERK6QPoint );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPoint scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QWindow13mapFromGlobalERK6QPoint, ( scorep_libwrap_arg_this, pos ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QWindow13mapFromGlobalERK6QPoint );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QWindow6cursorEv
QCursor
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QWindow6cursorEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QWindow6cursorEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QWindow6cursorEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QCursor scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QWindow6cursorEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QWindow6cursorEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QWindow9setCursorERK7QCursor
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow9setCursorERK7QCursor )( void *scorep_libwrap_arg_this, const QCursor & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow9setCursorERK7QCursor );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow9setCursorERK7QCursor );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow9setCursorERK7QCursor, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow9setCursorERK7QCursor );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindow11unsetCursorEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow11unsetCursorEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow11unsetCursorEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow11unsetCursorEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow11unsetCursorEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow11unsetCursorEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindow9fromWinIdEy
QWindow *
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow9fromWinIdEy )( WId id )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow9fromWinIdEy );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow9fromWinIdEy );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QWindow * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow9fromWinIdEy, ( id ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow9fromWinIdEy );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QWindow15requestActivateEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow15requestActivateEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow15requestActivateEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow15requestActivateEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow15requestActivateEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow15requestActivateEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindow10setVisibleEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow10setVisibleEb )( void *scorep_libwrap_arg_this, bool visible )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow10setVisibleEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow10setVisibleEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow10setVisibleEb, ( scorep_libwrap_arg_this, visible ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow10setVisibleEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindow4showEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow4showEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow4showEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow4showEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow4showEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow4showEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindow4hideEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow4hideEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow4hideEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow4hideEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow4hideEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow4hideEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindow13showMinimizedEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow13showMinimizedEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow13showMinimizedEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow13showMinimizedEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow13showMinimizedEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow13showMinimizedEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindow13showMaximizedEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow13showMaximizedEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow13showMaximizedEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow13showMaximizedEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow13showMaximizedEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow13showMaximizedEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindow14showFullScreenEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow14showFullScreenEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow14showFullScreenEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow14showFullScreenEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow14showFullScreenEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow14showFullScreenEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindow10showNormalEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow10showNormalEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow10showNormalEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow10showNormalEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow10showNormalEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow10showNormalEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindow5closeEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow5closeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow5closeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow5closeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow5closeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow5closeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QWindow5raiseEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow5raiseEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow5raiseEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow5raiseEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow5raiseEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow5raiseEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindow5lowerEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow5lowerEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow5lowerEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow5lowerEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow5lowerEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow5lowerEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindow8setTitleERK7QString
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow8setTitleERK7QString )( void *scorep_libwrap_arg_this, const QString & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow8setTitleERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow8setTitleERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow8setTitleERK7QString, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow8setTitleERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindow4setXEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow4setXEi )( void *scorep_libwrap_arg_this, int arg )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow4setXEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow4setXEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow4setXEi, ( scorep_libwrap_arg_this, arg ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow4setXEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindow4setYEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow4setYEi )( void *scorep_libwrap_arg_this, int arg )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow4setYEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow4setYEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow4setYEi, ( scorep_libwrap_arg_this, arg ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow4setYEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindow8setWidthEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow8setWidthEi )( void *scorep_libwrap_arg_this, int arg )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow8setWidthEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow8setWidthEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow8setWidthEi, ( scorep_libwrap_arg_this, arg ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow8setWidthEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindow9setHeightEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow9setHeightEi )( void *scorep_libwrap_arg_this, int arg )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow9setHeightEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow9setHeightEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow9setHeightEi, ( scorep_libwrap_arg_this, arg ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow9setHeightEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindow15setMinimumWidthEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow15setMinimumWidthEi )( void *scorep_libwrap_arg_this, int w )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow15setMinimumWidthEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow15setMinimumWidthEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow15setMinimumWidthEi, ( scorep_libwrap_arg_this, w ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow15setMinimumWidthEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindow16setMinimumHeightEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow16setMinimumHeightEi )( void *scorep_libwrap_arg_this, int h )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow16setMinimumHeightEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow16setMinimumHeightEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow16setMinimumHeightEi, ( scorep_libwrap_arg_this, h ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow16setMinimumHeightEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindow15setMaximumWidthEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow15setMaximumWidthEi )( void *scorep_libwrap_arg_this, int w )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow15setMaximumWidthEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow15setMaximumWidthEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow15setMaximumWidthEi, ( scorep_libwrap_arg_this, w ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow15setMaximumWidthEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindow16setMaximumHeightEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow16setMaximumHeightEi )( void *scorep_libwrap_arg_this, int h )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow16setMaximumHeightEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow16setMaximumHeightEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow16setMaximumHeightEi, ( scorep_libwrap_arg_this, h ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow16setMaximumHeightEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindow5alertEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow5alertEi )( void *scorep_libwrap_arg_this, int msec )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow5alertEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow5alertEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow5alertEi, ( scorep_libwrap_arg_this, msec ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow5alertEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindow13requestUpdateEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow13requestUpdateEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow13requestUpdateEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow13requestUpdateEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow13requestUpdateEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow13requestUpdateEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindow13screenChangedEP7QScreen
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow13screenChangedEP7QScreen )( void *scorep_libwrap_arg_this, QScreen * screen )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow13screenChangedEP7QScreen );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow13screenChangedEP7QScreen );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow13screenChangedEP7QScreen, ( scorep_libwrap_arg_this, screen ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow13screenChangedEP7QScreen );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindow15modalityChangedEN2Qt14WindowModalityE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow15modalityChangedEN2Qt14WindowModalityE )( void *scorep_libwrap_arg_this, Qt::WindowModality modality )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow15modalityChangedEN2Qt14WindowModalityE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow15modalityChangedEN2Qt14WindowModalityE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow15modalityChangedEN2Qt14WindowModalityE, ( scorep_libwrap_arg_this, modality ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow15modalityChangedEN2Qt14WindowModalityE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindow18windowStateChangedEN2Qt11WindowStateE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow18windowStateChangedEN2Qt11WindowStateE )( void *scorep_libwrap_arg_this, Qt::WindowState windowState )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow18windowStateChangedEN2Qt11WindowStateE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow18windowStateChangedEN2Qt11WindowStateE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow18windowStateChangedEN2Qt11WindowStateE, ( scorep_libwrap_arg_this, windowState ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow18windowStateChangedEN2Qt11WindowStateE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindow18windowTitleChangedERK7QString
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow18windowTitleChangedERK7QString )( void *scorep_libwrap_arg_this, const QString & title )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow18windowTitleChangedERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow18windowTitleChangedERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow18windowTitleChangedERK7QString, ( scorep_libwrap_arg_this, title ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow18windowTitleChangedERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindow8xChangedEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow8xChangedEi )( void *scorep_libwrap_arg_this, int arg )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow8xChangedEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow8xChangedEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow8xChangedEi, ( scorep_libwrap_arg_this, arg ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow8xChangedEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindow8yChangedEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow8yChangedEi )( void *scorep_libwrap_arg_this, int arg )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow8yChangedEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow8yChangedEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow8yChangedEi, ( scorep_libwrap_arg_this, arg ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow8yChangedEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindow12widthChangedEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow12widthChangedEi )( void *scorep_libwrap_arg_this, int arg )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow12widthChangedEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow12widthChangedEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow12widthChangedEi, ( scorep_libwrap_arg_this, arg ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow12widthChangedEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindow13heightChangedEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow13heightChangedEi )( void *scorep_libwrap_arg_this, int arg )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow13heightChangedEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow13heightChangedEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow13heightChangedEi, ( scorep_libwrap_arg_this, arg ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow13heightChangedEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindow19minimumWidthChangedEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow19minimumWidthChangedEi )( void *scorep_libwrap_arg_this, int arg )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow19minimumWidthChangedEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow19minimumWidthChangedEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow19minimumWidthChangedEi, ( scorep_libwrap_arg_this, arg ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow19minimumWidthChangedEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindow20minimumHeightChangedEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow20minimumHeightChangedEi )( void *scorep_libwrap_arg_this, int arg )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow20minimumHeightChangedEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow20minimumHeightChangedEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow20minimumHeightChangedEi, ( scorep_libwrap_arg_this, arg ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow20minimumHeightChangedEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindow19maximumWidthChangedEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow19maximumWidthChangedEi )( void *scorep_libwrap_arg_this, int arg )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow19maximumWidthChangedEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow19maximumWidthChangedEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow19maximumWidthChangedEi, ( scorep_libwrap_arg_this, arg ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow19maximumWidthChangedEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindow20maximumHeightChangedEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow20maximumHeightChangedEi )( void *scorep_libwrap_arg_this, int arg )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow20maximumHeightChangedEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow20maximumHeightChangedEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow20maximumHeightChangedEi, ( scorep_libwrap_arg_this, arg ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow20maximumHeightChangedEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindow14visibleChangedEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow14visibleChangedEb )( void *scorep_libwrap_arg_this, bool arg )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow14visibleChangedEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow14visibleChangedEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow14visibleChangedEb, ( scorep_libwrap_arg_this, arg ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow14visibleChangedEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindow17visibilityChangedENS_10VisibilityE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow17visibilityChangedENS_10VisibilityE )( void *scorep_libwrap_arg_this, QWindow::Visibility visibility )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow17visibilityChangedENS_10VisibilityE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow17visibilityChangedENS_10VisibilityE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow17visibilityChangedENS_10VisibilityE, ( scorep_libwrap_arg_this, visibility ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow17visibilityChangedENS_10VisibilityE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindow13activeChangedEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow13activeChangedEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow13activeChangedEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow13activeChangedEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow13activeChangedEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow13activeChangedEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindow25contentOrientationChangedEN2Qt17ScreenOrientationE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow25contentOrientationChangedEN2Qt17ScreenOrientationE )( void *scorep_libwrap_arg_this, Qt::ScreenOrientation orientation )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow25contentOrientationChangedEN2Qt17ScreenOrientationE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow25contentOrientationChangedEN2Qt17ScreenOrientationE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow25contentOrientationChangedEN2Qt17ScreenOrientationE, ( scorep_libwrap_arg_this, orientation ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow25contentOrientationChangedEN2Qt17ScreenOrientationE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindow18focusObjectChangedEP7QObject
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow18focusObjectChangedEP7QObject )( void *scorep_libwrap_arg_this, QObject * object )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow18focusObjectChangedEP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow18focusObjectChangedEP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow18focusObjectChangedEP7QObject, ( scorep_libwrap_arg_this, object ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow18focusObjectChangedEP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QWindow14opacityChangedEd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QWindow14opacityChangedEd )( void *scorep_libwrap_arg_this, qreal opacity )
{
    LIBWRAP_EARLY_INIT( _ZN7QWindow14opacityChangedEd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QWindow14opacityChangedEd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QWindow14opacityChangedEd, ( scorep_libwrap_arg_this, opacity ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QWindow14opacityChangedEd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _Z17qt_window_privateP7QWindow
QWindowPrivate *
SCOREP_LIBWRAP_FUNC_NAME( _Z17qt_window_privateP7QWindow )( QWindow * window )
{
    LIBWRAP_EARLY_INIT( _Z17qt_window_privateP7QWindow );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _Z17qt_window_privateP7QWindow );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QWindowPrivate * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _Z17qt_window_privateP7QWindow, ( window ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _Z17qt_window_privateP7QWindow );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _Zls6QDebugPK7QWindow
QDebug
SCOREP_LIBWRAP_FUNC_NAME( _Zls6QDebugPK7QWindow )( QDebug scorep_libwrap_arg_1, const QWindow * scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _Zls6QDebugPK7QWindow );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _Zls6QDebugPK7QWindow );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDebug scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _Zls6QDebugPK7QWindow, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _Zls6QDebugPK7QWindow );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK18QPaintDeviceWindow10metaObjectEv
const QMetaObject *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK18QPaintDeviceWindow10metaObjectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK18QPaintDeviceWindow10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK18QPaintDeviceWindow10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QMetaObject * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK18QPaintDeviceWindow10metaObjectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK18QPaintDeviceWindow10metaObjectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN18QPaintDeviceWindow11qt_metacastEPKc
void *
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QPaintDeviceWindow11qt_metacastEPKc )( void *scorep_libwrap_arg_this, const char * scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN18QPaintDeviceWindow11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QPaintDeviceWindow11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    void * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN18QPaintDeviceWindow11qt_metacastEPKc, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QPaintDeviceWindow11qt_metacastEPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN18QPaintDeviceWindow11qt_metacallEN11QMetaObject4CallEiPPv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QPaintDeviceWindow11qt_metacallEN11QMetaObject4CallEiPPv )( void *scorep_libwrap_arg_this, QMetaObject::Call scorep_libwrap_arg_1, int scorep_libwrap_arg_2, void ** scorep_libwrap_arg_3 )
{
    LIBWRAP_EARLY_INIT( _ZN18QPaintDeviceWindow11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QPaintDeviceWindow11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN18QPaintDeviceWindow11qt_metacallEN11QMetaObject4CallEiPPv, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, scorep_libwrap_arg_2, scorep_libwrap_arg_3 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QPaintDeviceWindow11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN18QPaintDeviceWindow6updateERK5QRect
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QPaintDeviceWindow6updateERK5QRect )( void *scorep_libwrap_arg_this, const QRect & rect )
{
    LIBWRAP_EARLY_INIT( _ZN18QPaintDeviceWindow6updateERK5QRect );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QPaintDeviceWindow6updateERK5QRect );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QPaintDeviceWindow6updateERK5QRect, ( scorep_libwrap_arg_this, rect ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QPaintDeviceWindow6updateERK5QRect );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN18QPaintDeviceWindow6updateERK7QRegion
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QPaintDeviceWindow6updateERK7QRegion )( void *scorep_libwrap_arg_this, const QRegion & region )
{
    LIBWRAP_EARLY_INIT( _ZN18QPaintDeviceWindow6updateERK7QRegion );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QPaintDeviceWindow6updateERK7QRegion );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QPaintDeviceWindow6updateERK7QRegion, ( scorep_libwrap_arg_this, region ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QPaintDeviceWindow6updateERK7QRegion );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN18QPaintDeviceWindow6updateEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QPaintDeviceWindow6updateEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN18QPaintDeviceWindow6updateEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QPaintDeviceWindow6updateEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QPaintDeviceWindow6updateEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QPaintDeviceWindow6updateEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK13QOpenGLWindow10metaObjectEv
const QMetaObject *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QOpenGLWindow10metaObjectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QOpenGLWindow10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QOpenGLWindow10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QMetaObject * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QOpenGLWindow10metaObjectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QOpenGLWindow10metaObjectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QOpenGLWindow11qt_metacastEPKc
void *
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QOpenGLWindow11qt_metacastEPKc )( void *scorep_libwrap_arg_this, const char * scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN13QOpenGLWindow11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QOpenGLWindow11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    void * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN13QOpenGLWindow11qt_metacastEPKc, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QOpenGLWindow11qt_metacastEPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QOpenGLWindow11qt_metacallEN11QMetaObject4CallEiPPv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QOpenGLWindow11qt_metacallEN11QMetaObject4CallEiPPv )( void *scorep_libwrap_arg_this, QMetaObject::Call scorep_libwrap_arg_1, int scorep_libwrap_arg_2, void ** scorep_libwrap_arg_3 )
{
    LIBWRAP_EARLY_INIT( _ZN13QOpenGLWindow11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QOpenGLWindow11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN13QOpenGLWindow11qt_metacallEN11QMetaObject4CallEiPPv, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, scorep_libwrap_arg_2, scorep_libwrap_arg_3 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QOpenGLWindow11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QOpenGLWindowC2ENS_14UpdateBehaviorEP7QWindow
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QOpenGLWindowC2ENS_14UpdateBehaviorEP7QWindow )( void *scorep_libwrap_arg_this, QOpenGLWindow::UpdateBehavior updateBehavior, QWindow * parent )
{
    LIBWRAP_EARLY_INIT( _ZN13QOpenGLWindowC2ENS_14UpdateBehaviorEP7QWindow );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QOpenGLWindowC2ENS_14UpdateBehaviorEP7QWindow );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QOpenGLWindowC2ENS_14UpdateBehaviorEP7QWindow, ( scorep_libwrap_arg_this, updateBehavior, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QOpenGLWindowC2ENS_14UpdateBehaviorEP7QWindow );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QOpenGLWindowC1ENS_14UpdateBehaviorEP7QWindow
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QOpenGLWindowC1ENS_14UpdateBehaviorEP7QWindow )( void *scorep_libwrap_arg_this, QOpenGLWindow::UpdateBehavior updateBehavior, QWindow * parent )
{
    LIBWRAP_EARLY_INIT( _ZN13QOpenGLWindowC1ENS_14UpdateBehaviorEP7QWindow );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QOpenGLWindowC1ENS_14UpdateBehaviorEP7QWindow );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QOpenGLWindowC1ENS_14UpdateBehaviorEP7QWindow, ( scorep_libwrap_arg_this, updateBehavior, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QOpenGLWindowC1ENS_14UpdateBehaviorEP7QWindow );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QOpenGLWindowC2EP14QOpenGLContextNS_14UpdateBehaviorEP7QWindow
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QOpenGLWindowC2EP14QOpenGLContextNS_14UpdateBehaviorEP7QWindow )( void *scorep_libwrap_arg_this, QOpenGLContext * shareContext, QOpenGLWindow::UpdateBehavior updateBehavior, QWindow * parent )
{
    LIBWRAP_EARLY_INIT( _ZN13QOpenGLWindowC2EP14QOpenGLContextNS_14UpdateBehaviorEP7QWindow );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QOpenGLWindowC2EP14QOpenGLContextNS_14UpdateBehaviorEP7QWindow );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QOpenGLWindowC2EP14QOpenGLContextNS_14UpdateBehaviorEP7QWindow, ( scorep_libwrap_arg_this, shareContext, updateBehavior, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QOpenGLWindowC2EP14QOpenGLContextNS_14UpdateBehaviorEP7QWindow );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QOpenGLWindowC1EP14QOpenGLContextNS_14UpdateBehaviorEP7QWindow
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QOpenGLWindowC1EP14QOpenGLContextNS_14UpdateBehaviorEP7QWindow )( void *scorep_libwrap_arg_this, QOpenGLContext * shareContext, QOpenGLWindow::UpdateBehavior updateBehavior, QWindow * parent )
{
    LIBWRAP_EARLY_INIT( _ZN13QOpenGLWindowC1EP14QOpenGLContextNS_14UpdateBehaviorEP7QWindow );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QOpenGLWindowC1EP14QOpenGLContextNS_14UpdateBehaviorEP7QWindow );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QOpenGLWindowC1EP14QOpenGLContextNS_14UpdateBehaviorEP7QWindow, ( scorep_libwrap_arg_this, shareContext, updateBehavior, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QOpenGLWindowC1EP14QOpenGLContextNS_14UpdateBehaviorEP7QWindow );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QOpenGLWindowD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QOpenGLWindowD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN13QOpenGLWindowD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QOpenGLWindowD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QOpenGLWindowD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QOpenGLWindowD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QOpenGLWindowD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QOpenGLWindowD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN13QOpenGLWindowD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QOpenGLWindowD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QOpenGLWindowD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QOpenGLWindowD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QOpenGLWindowD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QOpenGLWindowD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN13QOpenGLWindowD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QOpenGLWindowD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QOpenGLWindowD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QOpenGLWindowD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK13QOpenGLWindow14updateBehaviorEv
QOpenGLWindow::UpdateBehavior
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QOpenGLWindow14updateBehaviorEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QOpenGLWindow14updateBehaviorEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QOpenGLWindow14updateBehaviorEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QOpenGLWindow::UpdateBehavior scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QOpenGLWindow14updateBehaviorEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QOpenGLWindow14updateBehaviorEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QOpenGLWindow7isValidEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QOpenGLWindow7isValidEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QOpenGLWindow7isValidEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QOpenGLWindow7isValidEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QOpenGLWindow7isValidEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QOpenGLWindow7isValidEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QOpenGLWindow11makeCurrentEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QOpenGLWindow11makeCurrentEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN13QOpenGLWindow11makeCurrentEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QOpenGLWindow11makeCurrentEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QOpenGLWindow11makeCurrentEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QOpenGLWindow11makeCurrentEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QOpenGLWindow11doneCurrentEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QOpenGLWindow11doneCurrentEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN13QOpenGLWindow11doneCurrentEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QOpenGLWindow11doneCurrentEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QOpenGLWindow11doneCurrentEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QOpenGLWindow11doneCurrentEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK13QOpenGLWindow7contextEv
QOpenGLContext *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QOpenGLWindow7contextEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QOpenGLWindow7contextEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QOpenGLWindow7contextEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QOpenGLContext * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QOpenGLWindow7contextEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QOpenGLWindow7contextEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QOpenGLWindow12shareContextEv
QOpenGLContext *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QOpenGLWindow12shareContextEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QOpenGLWindow12shareContextEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QOpenGLWindow12shareContextEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QOpenGLContext * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QOpenGLWindow12shareContextEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QOpenGLWindow12shareContextEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QOpenGLWindow24defaultFramebufferObjectEv
GLuint
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QOpenGLWindow24defaultFramebufferObjectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QOpenGLWindow24defaultFramebufferObjectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QOpenGLWindow24defaultFramebufferObjectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    GLuint scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QOpenGLWindow24defaultFramebufferObjectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QOpenGLWindow24defaultFramebufferObjectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QOpenGLWindow15grabFramebufferEv
QImage
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QOpenGLWindow15grabFramebufferEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN13QOpenGLWindow15grabFramebufferEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QOpenGLWindow15grabFramebufferEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QImage scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN13QOpenGLWindow15grabFramebufferEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QOpenGLWindow15grabFramebufferEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QOpenGLWindow12frameSwappedEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QOpenGLWindow12frameSwappedEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN13QOpenGLWindow12frameSwappedEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QOpenGLWindow12frameSwappedEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QOpenGLWindow12frameSwappedEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QOpenGLWindow12frameSwappedEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPaletteC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPaletteC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN8QPaletteC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPaletteC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPaletteC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPaletteC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPaletteC1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPaletteC1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN8QPaletteC1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPaletteC1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPaletteC1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPaletteC1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPaletteC2ERK6QColor
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPaletteC2ERK6QColor )( void *scorep_libwrap_arg_this, const QColor & button )
{
    LIBWRAP_EARLY_INIT( _ZN8QPaletteC2ERK6QColor );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPaletteC2ERK6QColor );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPaletteC2ERK6QColor, ( scorep_libwrap_arg_this, button ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPaletteC2ERK6QColor );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPaletteC1ERK6QColor
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPaletteC1ERK6QColor )( void *scorep_libwrap_arg_this, const QColor & button )
{
    LIBWRAP_EARLY_INIT( _ZN8QPaletteC1ERK6QColor );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPaletteC1ERK6QColor );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPaletteC1ERK6QColor, ( scorep_libwrap_arg_this, button ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPaletteC1ERK6QColor );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPaletteC2EN2Qt11GlobalColorE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPaletteC2EN2Qt11GlobalColorE )( void *scorep_libwrap_arg_this, Qt::GlobalColor button )
{
    LIBWRAP_EARLY_INIT( _ZN8QPaletteC2EN2Qt11GlobalColorE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPaletteC2EN2Qt11GlobalColorE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPaletteC2EN2Qt11GlobalColorE, ( scorep_libwrap_arg_this, button ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPaletteC2EN2Qt11GlobalColorE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPaletteC1EN2Qt11GlobalColorE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPaletteC1EN2Qt11GlobalColorE )( void *scorep_libwrap_arg_this, Qt::GlobalColor button )
{
    LIBWRAP_EARLY_INIT( _ZN8QPaletteC1EN2Qt11GlobalColorE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPaletteC1EN2Qt11GlobalColorE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPaletteC1EN2Qt11GlobalColorE, ( scorep_libwrap_arg_this, button ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPaletteC1EN2Qt11GlobalColorE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPaletteC2ERK6QColorS2_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPaletteC2ERK6QColorS2_ )( void *scorep_libwrap_arg_this, const QColor & button, const QColor & window )
{
    LIBWRAP_EARLY_INIT( _ZN8QPaletteC2ERK6QColorS2_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPaletteC2ERK6QColorS2_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPaletteC2ERK6QColorS2_, ( scorep_libwrap_arg_this, button, window ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPaletteC2ERK6QColorS2_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPaletteC1ERK6QColorS2_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPaletteC1ERK6QColorS2_ )( void *scorep_libwrap_arg_this, const QColor & button, const QColor & window )
{
    LIBWRAP_EARLY_INIT( _ZN8QPaletteC1ERK6QColorS2_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPaletteC1ERK6QColorS2_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPaletteC1ERK6QColorS2_, ( scorep_libwrap_arg_this, button, window ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPaletteC1ERK6QColorS2_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPaletteC2ERK6QBrushS2_S2_S2_S2_S2_S2_S2_S2_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPaletteC2ERK6QBrushS2_S2_S2_S2_S2_S2_S2_S2_ )( void *scorep_libwrap_arg_this, const QBrush & windowText, const QBrush & button, const QBrush & light, const QBrush & dark, const QBrush & mid, const QBrush & text, const QBrush & bright_text, const QBrush & base, const QBrush & window )
{
    LIBWRAP_EARLY_INIT( _ZN8QPaletteC2ERK6QBrushS2_S2_S2_S2_S2_S2_S2_S2_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPaletteC2ERK6QBrushS2_S2_S2_S2_S2_S2_S2_S2_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPaletteC2ERK6QBrushS2_S2_S2_S2_S2_S2_S2_S2_, ( scorep_libwrap_arg_this, windowText, button, light, dark, mid, text, bright_text, base, window ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPaletteC2ERK6QBrushS2_S2_S2_S2_S2_S2_S2_S2_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPaletteC1ERK6QBrushS2_S2_S2_S2_S2_S2_S2_S2_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPaletteC1ERK6QBrushS2_S2_S2_S2_S2_S2_S2_S2_ )( void *scorep_libwrap_arg_this, const QBrush & windowText, const QBrush & button, const QBrush & light, const QBrush & dark, const QBrush & mid, const QBrush & text, const QBrush & bright_text, const QBrush & base, const QBrush & window )
{
    LIBWRAP_EARLY_INIT( _ZN8QPaletteC1ERK6QBrushS2_S2_S2_S2_S2_S2_S2_S2_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPaletteC1ERK6QBrushS2_S2_S2_S2_S2_S2_S2_S2_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPaletteC1ERK6QBrushS2_S2_S2_S2_S2_S2_S2_S2_, ( scorep_libwrap_arg_this, windowText, button, light, dark, mid, text, bright_text, base, window ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPaletteC1ERK6QBrushS2_S2_S2_S2_S2_S2_S2_S2_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPaletteC2ERK6QColorS2_S2_S2_S2_S2_S2_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPaletteC2ERK6QColorS2_S2_S2_S2_S2_S2_ )( void *scorep_libwrap_arg_this, const QColor & windowText, const QColor & window, const QColor & light, const QColor & dark, const QColor & mid, const QColor & text, const QColor & base )
{
    LIBWRAP_EARLY_INIT( _ZN8QPaletteC2ERK6QColorS2_S2_S2_S2_S2_S2_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPaletteC2ERK6QColorS2_S2_S2_S2_S2_S2_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPaletteC2ERK6QColorS2_S2_S2_S2_S2_S2_, ( scorep_libwrap_arg_this, windowText, window, light, dark, mid, text, base ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPaletteC2ERK6QColorS2_S2_S2_S2_S2_S2_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPaletteC1ERK6QColorS2_S2_S2_S2_S2_S2_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPaletteC1ERK6QColorS2_S2_S2_S2_S2_S2_ )( void *scorep_libwrap_arg_this, const QColor & windowText, const QColor & window, const QColor & light, const QColor & dark, const QColor & mid, const QColor & text, const QColor & base )
{
    LIBWRAP_EARLY_INIT( _ZN8QPaletteC1ERK6QColorS2_S2_S2_S2_S2_S2_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPaletteC1ERK6QColorS2_S2_S2_S2_S2_S2_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPaletteC1ERK6QColorS2_S2_S2_S2_S2_S2_, ( scorep_libwrap_arg_this, windowText, window, light, dark, mid, text, base ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPaletteC1ERK6QColorS2_S2_S2_S2_S2_S2_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPaletteC2ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPaletteC2ERKS_ )( void *scorep_libwrap_arg_this, const QPalette & palette )
{
    LIBWRAP_EARLY_INIT( _ZN8QPaletteC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPaletteC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPaletteC2ERKS_, ( scorep_libwrap_arg_this, palette ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPaletteC2ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPaletteC1ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPaletteC1ERKS_ )( void *scorep_libwrap_arg_this, const QPalette & palette )
{
    LIBWRAP_EARLY_INIT( _ZN8QPaletteC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPaletteC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPaletteC1ERKS_, ( scorep_libwrap_arg_this, palette ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPaletteC1ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPaletteD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPaletteD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN8QPaletteD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPaletteD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPaletteD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPaletteD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPaletteD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPaletteD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN8QPaletteD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPaletteD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPaletteD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPaletteD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPaletteaSERKS_
QPalette &
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPaletteaSERKS_ )( void *scorep_libwrap_arg_this, const QPalette & palette )
{
    LIBWRAP_EARLY_INIT( _ZN8QPaletteaSERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPaletteaSERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPalette & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPaletteaSERKS_, ( scorep_libwrap_arg_this, palette ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPaletteaSERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN8QPalette13setColorGroupENS_10ColorGroupERK6QBrushS3_S3_S3_S3_S3_S3_S3_S3_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPalette13setColorGroupENS_10ColorGroupERK6QBrushS3_S3_S3_S3_S3_S3_S3_S3_ )( void *scorep_libwrap_arg_this, QPalette::ColorGroup cr, const QBrush & windowText, const QBrush & button, const QBrush & light, const QBrush & dark, const QBrush & mid, const QBrush & text, const QBrush & bright_text, const QBrush & base, const QBrush & window )
{
    LIBWRAP_EARLY_INIT( _ZN8QPalette13setColorGroupENS_10ColorGroupERK6QBrushS3_S3_S3_S3_S3_S3_S3_S3_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPalette13setColorGroupENS_10ColorGroupERK6QBrushS3_S3_S3_S3_S3_S3_S3_S3_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPalette13setColorGroupENS_10ColorGroupERK6QBrushS3_S3_S3_S3_S3_S3_S3_S3_, ( scorep_libwrap_arg_this, cr, windowText, button, light, dark, mid, text, bright_text, base, window ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPalette13setColorGroupENS_10ColorGroupERK6QBrushS3_S3_S3_S3_S3_S3_S3_S3_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK8QPalette7isEqualENS_10ColorGroupES0_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QPalette7isEqualENS_10ColorGroupES0_ )( void *scorep_libwrap_arg_this, QPalette::ColorGroup cr1, QPalette::ColorGroup cr2 )
{
    LIBWRAP_EARLY_INIT( _ZNK8QPalette7isEqualENS_10ColorGroupES0_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QPalette7isEqualENS_10ColorGroupES0_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QPalette7isEqualENS_10ColorGroupES0_, ( scorep_libwrap_arg_this, cr1, cr2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QPalette7isEqualENS_10ColorGroupES0_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK8QPaletteeqERKS_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QPaletteeqERKS_ )( void *scorep_libwrap_arg_this, const QPalette & p )
{
    LIBWRAP_EARLY_INIT( _ZNK8QPaletteeqERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QPaletteeqERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QPaletteeqERKS_, ( scorep_libwrap_arg_this, p ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QPaletteeqERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK8QPalette8isCopyOfERKS_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QPalette8isCopyOfERKS_ )( void *scorep_libwrap_arg_this, const QPalette & p )
{
    LIBWRAP_EARLY_INIT( _ZNK8QPalette8isCopyOfERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QPalette8isCopyOfERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QPalette8isCopyOfERKS_, ( scorep_libwrap_arg_this, p ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QPalette8isCopyOfERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK8QPalette8cacheKeyEv
qint64
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QPalette8cacheKeyEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QPalette8cacheKeyEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QPalette8cacheKeyEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qint64 scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QPalette8cacheKeyEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QPalette8cacheKeyEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK8QPalette7resolveERKS_
QPalette
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QPalette7resolveERKS_ )( void *scorep_libwrap_arg_this, const QPalette & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZNK8QPalette7resolveERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QPalette7resolveERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPalette scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QPalette7resolveERKS_, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QPalette7resolveERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZlsR11QDataStreamRK8QPalette
QDataStream &
SCOREP_LIBWRAP_FUNC_NAME( _ZlsR11QDataStreamRK8QPalette )( QDataStream & s, const QPalette & p )
{
    LIBWRAP_EARLY_INIT( _ZlsR11QDataStreamRK8QPalette );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZlsR11QDataStreamRK8QPalette );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDataStream & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZlsR11QDataStreamRK8QPalette, ( s, p ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZlsR11QDataStreamRK8QPalette );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZrsR11QDataStreamR8QPalette
QDataStream &
SCOREP_LIBWRAP_FUNC_NAME( _ZrsR11QDataStreamR8QPalette )( QDataStream & ds, QPalette & p )
{
    LIBWRAP_EARLY_INIT( _ZrsR11QDataStreamR8QPalette );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZrsR11QDataStreamR8QPalette );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDataStream & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZrsR11QDataStreamR8QPalette, ( ds, p ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZrsR11QDataStreamR8QPalette );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _Zls6QDebugRK8QPalette
QDebug
SCOREP_LIBWRAP_FUNC_NAME( _Zls6QDebugRK8QPalette )( QDebug scorep_libwrap_arg_1, const QPalette & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _Zls6QDebugRK8QPalette );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _Zls6QDebugRK8QPalette );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDebug scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _Zls6QDebugRK8QPalette, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _Zls6QDebugRK8QPalette );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QRasterWindow10metaObjectEv
const QMetaObject *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QRasterWindow10metaObjectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QRasterWindow10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QRasterWindow10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QMetaObject * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QRasterWindow10metaObjectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QRasterWindow10metaObjectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QRasterWindow11qt_metacastEPKc
void *
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QRasterWindow11qt_metacastEPKc )( void *scorep_libwrap_arg_this, const char * scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN13QRasterWindow11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QRasterWindow11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    void * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN13QRasterWindow11qt_metacastEPKc, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QRasterWindow11qt_metacastEPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QRasterWindow11qt_metacallEN11QMetaObject4CallEiPPv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QRasterWindow11qt_metacallEN11QMetaObject4CallEiPPv )( void *scorep_libwrap_arg_this, QMetaObject::Call scorep_libwrap_arg_1, int scorep_libwrap_arg_2, void ** scorep_libwrap_arg_3 )
{
    LIBWRAP_EARLY_INIT( _ZN13QRasterWindow11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QRasterWindow11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN13QRasterWindow11qt_metacallEN11QMetaObject4CallEiPPv, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, scorep_libwrap_arg_2, scorep_libwrap_arg_3 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QRasterWindow11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QRasterWindowC2EP7QWindow
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QRasterWindowC2EP7QWindow )( void *scorep_libwrap_arg_this, QWindow * parent )
{
    LIBWRAP_EARLY_INIT( _ZN13QRasterWindowC2EP7QWindow );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QRasterWindowC2EP7QWindow );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QRasterWindowC2EP7QWindow, ( scorep_libwrap_arg_this, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QRasterWindowC2EP7QWindow );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QRasterWindowC1EP7QWindow
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QRasterWindowC1EP7QWindow )( void *scorep_libwrap_arg_this, QWindow * parent )
{
    LIBWRAP_EARLY_INIT( _ZN13QRasterWindowC1EP7QWindow );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QRasterWindowC1EP7QWindow );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QRasterWindowC1EP7QWindow, ( scorep_libwrap_arg_this, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QRasterWindowC1EP7QWindow );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK7QScreen10metaObjectEv
const QMetaObject *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QScreen10metaObjectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QScreen10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QScreen10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QMetaObject * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QScreen10metaObjectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QScreen10metaObjectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QScreen11qt_metacastEPKc
void *
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QScreen11qt_metacastEPKc )( void *scorep_libwrap_arg_this, const char * scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN7QScreen11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QScreen11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    void * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN7QScreen11qt_metacastEPKc, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QScreen11qt_metacastEPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QScreen11qt_metacallEN11QMetaObject4CallEiPPv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QScreen11qt_metacallEN11QMetaObject4CallEiPPv )( void *scorep_libwrap_arg_this, QMetaObject::Call scorep_libwrap_arg_1, int scorep_libwrap_arg_2, void ** scorep_libwrap_arg_3 )
{
    LIBWRAP_EARLY_INIT( _ZN7QScreen11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QScreen11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN7QScreen11qt_metacallEN11QMetaObject4CallEiPPv, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, scorep_libwrap_arg_2, scorep_libwrap_arg_3 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QScreen11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QScreenD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QScreenD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN7QScreenD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QScreenD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QScreenD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QScreenD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QScreenD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QScreenD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN7QScreenD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QScreenD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QScreenD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QScreenD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QScreenD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QScreenD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN7QScreenD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QScreenD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QScreenD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QScreenD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK7QScreen6handleEv
QPlatformScreen *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QScreen6handleEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QScreen6handleEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QScreen6handleEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPlatformScreen * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QScreen6handleEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QScreen6handleEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QScreen4nameEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QScreen4nameEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QScreen4nameEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QScreen4nameEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QScreen4nameEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QScreen4nameEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QScreen5depthEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QScreen5depthEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QScreen5depthEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QScreen5depthEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QScreen5depthEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QScreen5depthEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QScreen4sizeEv
QSize
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QScreen4sizeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QScreen4sizeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QScreen4sizeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QSize scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QScreen4sizeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QScreen4sizeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QScreen8geometryEv
QRect
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QScreen8geometryEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QScreen8geometryEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QScreen8geometryEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRect scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QScreen8geometryEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QScreen8geometryEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QScreen12physicalSizeEv
QSizeF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QScreen12physicalSizeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QScreen12physicalSizeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QScreen12physicalSizeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QSizeF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QScreen12physicalSizeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QScreen12physicalSizeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QScreen20physicalDotsPerInchXEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QScreen20physicalDotsPerInchXEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QScreen20physicalDotsPerInchXEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QScreen20physicalDotsPerInchXEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QScreen20physicalDotsPerInchXEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QScreen20physicalDotsPerInchXEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QScreen20physicalDotsPerInchYEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QScreen20physicalDotsPerInchYEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QScreen20physicalDotsPerInchYEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QScreen20physicalDotsPerInchYEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QScreen20physicalDotsPerInchYEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QScreen20physicalDotsPerInchYEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QScreen19physicalDotsPerInchEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QScreen19physicalDotsPerInchEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QScreen19physicalDotsPerInchEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QScreen19physicalDotsPerInchEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QScreen19physicalDotsPerInchEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QScreen19physicalDotsPerInchEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QScreen19logicalDotsPerInchXEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QScreen19logicalDotsPerInchXEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QScreen19logicalDotsPerInchXEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QScreen19logicalDotsPerInchXEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QScreen19logicalDotsPerInchXEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QScreen19logicalDotsPerInchXEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QScreen19logicalDotsPerInchYEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QScreen19logicalDotsPerInchYEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QScreen19logicalDotsPerInchYEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QScreen19logicalDotsPerInchYEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QScreen19logicalDotsPerInchYEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QScreen19logicalDotsPerInchYEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QScreen18logicalDotsPerInchEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QScreen18logicalDotsPerInchEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QScreen18logicalDotsPerInchEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QScreen18logicalDotsPerInchEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QScreen18logicalDotsPerInchEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QScreen18logicalDotsPerInchEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QScreen16devicePixelRatioEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QScreen16devicePixelRatioEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QScreen16devicePixelRatioEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QScreen16devicePixelRatioEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QScreen16devicePixelRatioEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QScreen16devicePixelRatioEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QScreen13availableSizeEv
QSize
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QScreen13availableSizeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QScreen13availableSizeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QScreen13availableSizeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QSize scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QScreen13availableSizeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QScreen13availableSizeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QScreen17availableGeometryEv
QRect
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QScreen17availableGeometryEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QScreen17availableGeometryEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QScreen17availableGeometryEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRect scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QScreen17availableGeometryEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QScreen17availableGeometryEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QScreen15virtualSiblingsEv
QList<QScreen *>
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QScreen15virtualSiblingsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QScreen15virtualSiblingsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QScreen15virtualSiblingsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QList<QScreen *> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QScreen15virtualSiblingsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QScreen15virtualSiblingsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QScreen11virtualSizeEv
QSize
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QScreen11virtualSizeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QScreen11virtualSizeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QScreen11virtualSizeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QSize scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QScreen11virtualSizeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QScreen11virtualSizeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QScreen15virtualGeometryEv
QRect
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QScreen15virtualGeometryEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QScreen15virtualGeometryEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QScreen15virtualGeometryEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRect scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QScreen15virtualGeometryEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QScreen15virtualGeometryEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QScreen20availableVirtualSizeEv
QSize
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QScreen20availableVirtualSizeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QScreen20availableVirtualSizeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QScreen20availableVirtualSizeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QSize scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QScreen20availableVirtualSizeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QScreen20availableVirtualSizeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QScreen24availableVirtualGeometryEv
QRect
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QScreen24availableVirtualGeometryEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QScreen24availableVirtualGeometryEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QScreen24availableVirtualGeometryEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRect scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QScreen24availableVirtualGeometryEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QScreen24availableVirtualGeometryEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QScreen18primaryOrientationEv
Qt::ScreenOrientation
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QScreen18primaryOrientationEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QScreen18primaryOrientationEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QScreen18primaryOrientationEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    Qt::ScreenOrientation scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QScreen18primaryOrientationEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QScreen18primaryOrientationEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QScreen11orientationEv
Qt::ScreenOrientation
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QScreen11orientationEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QScreen11orientationEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QScreen11orientationEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    Qt::ScreenOrientation scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QScreen11orientationEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QScreen11orientationEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QScreen17nativeOrientationEv
Qt::ScreenOrientation
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QScreen17nativeOrientationEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QScreen17nativeOrientationEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QScreen17nativeOrientationEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    Qt::ScreenOrientation scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QScreen17nativeOrientationEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QScreen17nativeOrientationEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QScreen21orientationUpdateMaskEv
Qt::ScreenOrientations
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QScreen21orientationUpdateMaskEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QScreen21orientationUpdateMaskEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QScreen21orientationUpdateMaskEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    Qt::ScreenOrientations scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QScreen21orientationUpdateMaskEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QScreen21orientationUpdateMaskEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QScreen24setOrientationUpdateMaskE6QFlagsIN2Qt17ScreenOrientationEE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QScreen24setOrientationUpdateMaskE6QFlagsIN2Qt17ScreenOrientationEE )( void *scorep_libwrap_arg_this, Qt::ScreenOrientations mask )
{
    LIBWRAP_EARLY_INIT( _ZN7QScreen24setOrientationUpdateMaskE6QFlagsIN2Qt17ScreenOrientationEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QScreen24setOrientationUpdateMaskE6QFlagsIN2Qt17ScreenOrientationEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QScreen24setOrientationUpdateMaskE6QFlagsIN2Qt17ScreenOrientationEE, ( scorep_libwrap_arg_this, mask ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QScreen24setOrientationUpdateMaskE6QFlagsIN2Qt17ScreenOrientationEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK7QScreen12angleBetweenEN2Qt17ScreenOrientationES1_
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QScreen12angleBetweenEN2Qt17ScreenOrientationES1_ )( void *scorep_libwrap_arg_this, Qt::ScreenOrientation a, Qt::ScreenOrientation b )
{
    LIBWRAP_EARLY_INIT( _ZNK7QScreen12angleBetweenEN2Qt17ScreenOrientationES1_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QScreen12angleBetweenEN2Qt17ScreenOrientationES1_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QScreen12angleBetweenEN2Qt17ScreenOrientationES1_, ( scorep_libwrap_arg_this, a, b ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QScreen12angleBetweenEN2Qt17ScreenOrientationES1_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QScreen16transformBetweenEN2Qt17ScreenOrientationES1_RK5QRect
QTransform
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QScreen16transformBetweenEN2Qt17ScreenOrientationES1_RK5QRect )( void *scorep_libwrap_arg_this, Qt::ScreenOrientation a, Qt::ScreenOrientation b, const QRect & target )
{
    LIBWRAP_EARLY_INIT( _ZNK7QScreen16transformBetweenEN2Qt17ScreenOrientationES1_RK5QRect );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QScreen16transformBetweenEN2Qt17ScreenOrientationES1_RK5QRect );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTransform scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QScreen16transformBetweenEN2Qt17ScreenOrientationES1_RK5QRect, ( scorep_libwrap_arg_this, a, b, target ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QScreen16transformBetweenEN2Qt17ScreenOrientationES1_RK5QRect );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QScreen10mapBetweenEN2Qt17ScreenOrientationES1_RK5QRect
QRect
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QScreen10mapBetweenEN2Qt17ScreenOrientationES1_RK5QRect )( void *scorep_libwrap_arg_this, Qt::ScreenOrientation a, Qt::ScreenOrientation b, const QRect & rect )
{
    LIBWRAP_EARLY_INIT( _ZNK7QScreen10mapBetweenEN2Qt17ScreenOrientationES1_RK5QRect );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QScreen10mapBetweenEN2Qt17ScreenOrientationES1_RK5QRect );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRect scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QScreen10mapBetweenEN2Qt17ScreenOrientationES1_RK5QRect, ( scorep_libwrap_arg_this, a, b, rect ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QScreen10mapBetweenEN2Qt17ScreenOrientationES1_RK5QRect );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QScreen10isPortraitEN2Qt17ScreenOrientationE
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QScreen10isPortraitEN2Qt17ScreenOrientationE )( void *scorep_libwrap_arg_this, Qt::ScreenOrientation orientation )
{
    LIBWRAP_EARLY_INIT( _ZNK7QScreen10isPortraitEN2Qt17ScreenOrientationE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QScreen10isPortraitEN2Qt17ScreenOrientationE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QScreen10isPortraitEN2Qt17ScreenOrientationE, ( scorep_libwrap_arg_this, orientation ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QScreen10isPortraitEN2Qt17ScreenOrientationE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QScreen11isLandscapeEN2Qt17ScreenOrientationE
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QScreen11isLandscapeEN2Qt17ScreenOrientationE )( void *scorep_libwrap_arg_this, Qt::ScreenOrientation orientation )
{
    LIBWRAP_EARLY_INIT( _ZNK7QScreen11isLandscapeEN2Qt17ScreenOrientationE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QScreen11isLandscapeEN2Qt17ScreenOrientationE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QScreen11isLandscapeEN2Qt17ScreenOrientationE, ( scorep_libwrap_arg_this, orientation ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QScreen11isLandscapeEN2Qt17ScreenOrientationE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QScreen10grabWindowEyiiii
QPixmap
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QScreen10grabWindowEyiiii )( void *scorep_libwrap_arg_this, WId window, int x, int y, int w, int h )
{
    LIBWRAP_EARLY_INIT( _ZN7QScreen10grabWindowEyiiii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QScreen10grabWindowEyiiii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPixmap scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN7QScreen10grabWindowEyiiii, ( scorep_libwrap_arg_this, window, x, y, w, h ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QScreen10grabWindowEyiiii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK7QScreen11refreshRateEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK7QScreen11refreshRateEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK7QScreen11refreshRateEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK7QScreen11refreshRateEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK7QScreen11refreshRateEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK7QScreen11refreshRateEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN7QScreen15geometryChangedERK5QRect
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QScreen15geometryChangedERK5QRect )( void *scorep_libwrap_arg_this, const QRect & geometry )
{
    LIBWRAP_EARLY_INIT( _ZN7QScreen15geometryChangedERK5QRect );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QScreen15geometryChangedERK5QRect );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QScreen15geometryChangedERK5QRect, ( scorep_libwrap_arg_this, geometry ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QScreen15geometryChangedERK5QRect );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QScreen24availableGeometryChangedERK5QRect
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QScreen24availableGeometryChangedERK5QRect )( void *scorep_libwrap_arg_this, const QRect & geometry )
{
    LIBWRAP_EARLY_INIT( _ZN7QScreen24availableGeometryChangedERK5QRect );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QScreen24availableGeometryChangedERK5QRect );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QScreen24availableGeometryChangedERK5QRect, ( scorep_libwrap_arg_this, geometry ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QScreen24availableGeometryChangedERK5QRect );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QScreen19physicalSizeChangedERK6QSizeF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QScreen19physicalSizeChangedERK6QSizeF )( void *scorep_libwrap_arg_this, const QSizeF & size )
{
    LIBWRAP_EARLY_INIT( _ZN7QScreen19physicalSizeChangedERK6QSizeF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QScreen19physicalSizeChangedERK6QSizeF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QScreen19physicalSizeChangedERK6QSizeF, ( scorep_libwrap_arg_this, size ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QScreen19physicalSizeChangedERK6QSizeF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QScreen26physicalDotsPerInchChangedEd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QScreen26physicalDotsPerInchChangedEd )( void *scorep_libwrap_arg_this, qreal dpi )
{
    LIBWRAP_EARLY_INIT( _ZN7QScreen26physicalDotsPerInchChangedEd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QScreen26physicalDotsPerInchChangedEd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QScreen26physicalDotsPerInchChangedEd, ( scorep_libwrap_arg_this, dpi ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QScreen26physicalDotsPerInchChangedEd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QScreen25logicalDotsPerInchChangedEd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QScreen25logicalDotsPerInchChangedEd )( void *scorep_libwrap_arg_this, qreal dpi )
{
    LIBWRAP_EARLY_INIT( _ZN7QScreen25logicalDotsPerInchChangedEd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QScreen25logicalDotsPerInchChangedEd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QScreen25logicalDotsPerInchChangedEd, ( scorep_libwrap_arg_this, dpi ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QScreen25logicalDotsPerInchChangedEd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QScreen22virtualGeometryChangedERK5QRect
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QScreen22virtualGeometryChangedERK5QRect )( void *scorep_libwrap_arg_this, const QRect & rect )
{
    LIBWRAP_EARLY_INIT( _ZN7QScreen22virtualGeometryChangedERK5QRect );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QScreen22virtualGeometryChangedERK5QRect );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QScreen22virtualGeometryChangedERK5QRect, ( scorep_libwrap_arg_this, rect ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QScreen22virtualGeometryChangedERK5QRect );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QScreen25primaryOrientationChangedEN2Qt17ScreenOrientationE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QScreen25primaryOrientationChangedEN2Qt17ScreenOrientationE )( void *scorep_libwrap_arg_this, Qt::ScreenOrientation orientation )
{
    LIBWRAP_EARLY_INIT( _ZN7QScreen25primaryOrientationChangedEN2Qt17ScreenOrientationE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QScreen25primaryOrientationChangedEN2Qt17ScreenOrientationE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QScreen25primaryOrientationChangedEN2Qt17ScreenOrientationE, ( scorep_libwrap_arg_this, orientation ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QScreen25primaryOrientationChangedEN2Qt17ScreenOrientationE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QScreen18orientationChangedEN2Qt17ScreenOrientationE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QScreen18orientationChangedEN2Qt17ScreenOrientationE )( void *scorep_libwrap_arg_this, Qt::ScreenOrientation orientation )
{
    LIBWRAP_EARLY_INIT( _ZN7QScreen18orientationChangedEN2Qt17ScreenOrientationE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QScreen18orientationChangedEN2Qt17ScreenOrientationE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QScreen18orientationChangedEN2Qt17ScreenOrientationE, ( scorep_libwrap_arg_this, orientation ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QScreen18orientationChangedEN2Qt17ScreenOrientationE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN7QScreen18refreshRateChangedEd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN7QScreen18refreshRateChangedEd )( void *scorep_libwrap_arg_this, qreal refreshRate )
{
    LIBWRAP_EARLY_INIT( _ZN7QScreen18refreshRateChangedEd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN7QScreen18refreshRateChangedEd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN7QScreen18refreshRateChangedEd, ( scorep_libwrap_arg_this, refreshRate ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN7QScreen18refreshRateChangedEd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _Zls6QDebugPK7QScreen
QDebug
SCOREP_LIBWRAP_FUNC_NAME( _Zls6QDebugPK7QScreen )( QDebug scorep_libwrap_arg_1, const QScreen * scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _Zls6QDebugPK7QScreen );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _Zls6QDebugPK7QScreen );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDebug scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _Zls6QDebugPK7QScreen, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _Zls6QDebugPK7QScreen );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK15QSessionManager10metaObjectEv
const QMetaObject *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK15QSessionManager10metaObjectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK15QSessionManager10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK15QSessionManager10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QMetaObject * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK15QSessionManager10metaObjectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK15QSessionManager10metaObjectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QSessionManager11qt_metacastEPKc
void *
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QSessionManager11qt_metacastEPKc )( void *scorep_libwrap_arg_this, const char * scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN15QSessionManager11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QSessionManager11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    void * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN15QSessionManager11qt_metacastEPKc, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QSessionManager11qt_metacastEPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QSessionManager11qt_metacallEN11QMetaObject4CallEiPPv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QSessionManager11qt_metacallEN11QMetaObject4CallEiPPv )( void *scorep_libwrap_arg_this, QMetaObject::Call scorep_libwrap_arg_1, int scorep_libwrap_arg_2, void ** scorep_libwrap_arg_3 )
{
    LIBWRAP_EARLY_INIT( _ZN15QSessionManager11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QSessionManager11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN15QSessionManager11qt_metacallEN11QMetaObject4CallEiPPv, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, scorep_libwrap_arg_2, scorep_libwrap_arg_3 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QSessionManager11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK15QSessionManager9sessionIdEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK15QSessionManager9sessionIdEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK15QSessionManager9sessionIdEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK15QSessionManager9sessionIdEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK15QSessionManager9sessionIdEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK15QSessionManager9sessionIdEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK15QSessionManager10sessionKeyEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK15QSessionManager10sessionKeyEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK15QSessionManager10sessionKeyEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK15QSessionManager10sessionKeyEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK15QSessionManager10sessionKeyEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK15QSessionManager10sessionKeyEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QSessionManager17allowsInteractionEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QSessionManager17allowsInteractionEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN15QSessionManager17allowsInteractionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QSessionManager17allowsInteractionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN15QSessionManager17allowsInteractionEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QSessionManager17allowsInteractionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QSessionManager22allowsErrorInteractionEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QSessionManager22allowsErrorInteractionEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN15QSessionManager22allowsErrorInteractionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QSessionManager22allowsErrorInteractionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN15QSessionManager22allowsErrorInteractionEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QSessionManager22allowsErrorInteractionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QSessionManager7releaseEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QSessionManager7releaseEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN15QSessionManager7releaseEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QSessionManager7releaseEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QSessionManager7releaseEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QSessionManager7releaseEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QSessionManager6cancelEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QSessionManager6cancelEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN15QSessionManager6cancelEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QSessionManager6cancelEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QSessionManager6cancelEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QSessionManager6cancelEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QSessionManager14setRestartHintENS_11RestartHintE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QSessionManager14setRestartHintENS_11RestartHintE )( void *scorep_libwrap_arg_this, QSessionManager::RestartHint scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN15QSessionManager14setRestartHintENS_11RestartHintE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QSessionManager14setRestartHintENS_11RestartHintE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QSessionManager14setRestartHintENS_11RestartHintE, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QSessionManager14setRestartHintENS_11RestartHintE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK15QSessionManager11restartHintEv
QSessionManager::RestartHint
SCOREP_LIBWRAP_FUNC_NAME( _ZNK15QSessionManager11restartHintEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK15QSessionManager11restartHintEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK15QSessionManager11restartHintEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QSessionManager::RestartHint scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK15QSessionManager11restartHintEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK15QSessionManager11restartHintEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QSessionManager17setRestartCommandERK11QStringList
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QSessionManager17setRestartCommandERK11QStringList )( void *scorep_libwrap_arg_this, const QStringList & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN15QSessionManager17setRestartCommandERK11QStringList );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QSessionManager17setRestartCommandERK11QStringList );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QSessionManager17setRestartCommandERK11QStringList, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QSessionManager17setRestartCommandERK11QStringList );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK15QSessionManager14restartCommandEv
QStringList
SCOREP_LIBWRAP_FUNC_NAME( _ZNK15QSessionManager14restartCommandEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK15QSessionManager14restartCommandEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK15QSessionManager14restartCommandEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QStringList scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK15QSessionManager14restartCommandEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK15QSessionManager14restartCommandEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QSessionManager17setDiscardCommandERK11QStringList
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QSessionManager17setDiscardCommandERK11QStringList )( void *scorep_libwrap_arg_this, const QStringList & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN15QSessionManager17setDiscardCommandERK11QStringList );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QSessionManager17setDiscardCommandERK11QStringList );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QSessionManager17setDiscardCommandERK11QStringList, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QSessionManager17setDiscardCommandERK11QStringList );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK15QSessionManager14discardCommandEv
QStringList
SCOREP_LIBWRAP_FUNC_NAME( _ZNK15QSessionManager14discardCommandEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK15QSessionManager14discardCommandEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK15QSessionManager14discardCommandEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QStringList scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK15QSessionManager14discardCommandEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK15QSessionManager14discardCommandEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QSessionManager18setManagerPropertyERK7QStringS2_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QSessionManager18setManagerPropertyERK7QStringS2_ )( void *scorep_libwrap_arg_this, const QString & name, const QString & value )
{
    LIBWRAP_EARLY_INIT( _ZN15QSessionManager18setManagerPropertyERK7QStringS2_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QSessionManager18setManagerPropertyERK7QStringS2_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QSessionManager18setManagerPropertyERK7QStringS2_, ( scorep_libwrap_arg_this, name, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QSessionManager18setManagerPropertyERK7QStringS2_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN15QSessionManager18setManagerPropertyERK7QStringRK11QStringList
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QSessionManager18setManagerPropertyERK7QStringRK11QStringList )( void *scorep_libwrap_arg_this, const QString & name, const QStringList & value )
{
    LIBWRAP_EARLY_INIT( _ZN15QSessionManager18setManagerPropertyERK7QStringRK11QStringList );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QSessionManager18setManagerPropertyERK7QStringRK11QStringList );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QSessionManager18setManagerPropertyERK7QStringRK11QStringList, ( scorep_libwrap_arg_this, name, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QSessionManager18setManagerPropertyERK7QStringRK11QStringList );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK15QSessionManager8isPhase2Ev
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK15QSessionManager8isPhase2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK15QSessionManager8isPhase2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK15QSessionManager8isPhase2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK15QSessionManager8isPhase2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK15QSessionManager8isPhase2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QSessionManager13requestPhase2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QSessionManager13requestPhase2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN15QSessionManager13requestPhase2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QSessionManager13requestPhase2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN15QSessionManager13requestPhase2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QSessionManager13requestPhase2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK11QStyleHints10metaObjectEv
const QMetaObject *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QStyleHints10metaObjectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QStyleHints10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QStyleHints10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QMetaObject * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QStyleHints10metaObjectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QStyleHints10metaObjectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QStyleHints11qt_metacastEPKc
void *
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QStyleHints11qt_metacastEPKc )( void *scorep_libwrap_arg_this, const char * scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN11QStyleHints11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QStyleHints11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    void * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN11QStyleHints11qt_metacastEPKc, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QStyleHints11qt_metacastEPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QStyleHints11qt_metacallEN11QMetaObject4CallEiPPv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QStyleHints11qt_metacallEN11QMetaObject4CallEiPPv )( void *scorep_libwrap_arg_this, QMetaObject::Call scorep_libwrap_arg_1, int scorep_libwrap_arg_2, void ** scorep_libwrap_arg_3 )
{
    LIBWRAP_EARLY_INIT( _ZN11QStyleHints11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QStyleHints11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN11QStyleHints11qt_metacallEN11QMetaObject4CallEiPPv, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, scorep_libwrap_arg_2, scorep_libwrap_arg_3 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QStyleHints11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QStyleHints27setMouseDoubleClickIntervalEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QStyleHints27setMouseDoubleClickIntervalEi )( void *scorep_libwrap_arg_this, int mouseDoubleClickInterval )
{
    LIBWRAP_EARLY_INIT( _ZN11QStyleHints27setMouseDoubleClickIntervalEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QStyleHints27setMouseDoubleClickIntervalEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QStyleHints27setMouseDoubleClickIntervalEi, ( scorep_libwrap_arg_this, mouseDoubleClickInterval ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QStyleHints27setMouseDoubleClickIntervalEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK11QStyleHints24mouseDoubleClickIntervalEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QStyleHints24mouseDoubleClickIntervalEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QStyleHints24mouseDoubleClickIntervalEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QStyleHints24mouseDoubleClickIntervalEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QStyleHints24mouseDoubleClickIntervalEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QStyleHints24mouseDoubleClickIntervalEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QStyleHints28setMousePressAndHoldIntervalEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QStyleHints28setMousePressAndHoldIntervalEi )( void *scorep_libwrap_arg_this, int mousePressAndHoldInterval )
{
    LIBWRAP_EARLY_INIT( _ZN11QStyleHints28setMousePressAndHoldIntervalEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QStyleHints28setMousePressAndHoldIntervalEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QStyleHints28setMousePressAndHoldIntervalEi, ( scorep_libwrap_arg_this, mousePressAndHoldInterval ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QStyleHints28setMousePressAndHoldIntervalEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK11QStyleHints25mousePressAndHoldIntervalEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QStyleHints25mousePressAndHoldIntervalEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QStyleHints25mousePressAndHoldIntervalEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QStyleHints25mousePressAndHoldIntervalEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QStyleHints25mousePressAndHoldIntervalEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QStyleHints25mousePressAndHoldIntervalEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QStyleHints20setStartDragDistanceEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QStyleHints20setStartDragDistanceEi )( void *scorep_libwrap_arg_this, int startDragDistance )
{
    LIBWRAP_EARLY_INIT( _ZN11QStyleHints20setStartDragDistanceEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QStyleHints20setStartDragDistanceEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QStyleHints20setStartDragDistanceEi, ( scorep_libwrap_arg_this, startDragDistance ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QStyleHints20setStartDragDistanceEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK11QStyleHints17startDragDistanceEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QStyleHints17startDragDistanceEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QStyleHints17startDragDistanceEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QStyleHints17startDragDistanceEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QStyleHints17startDragDistanceEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QStyleHints17startDragDistanceEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QStyleHints16setStartDragTimeEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QStyleHints16setStartDragTimeEi )( void *scorep_libwrap_arg_this, int startDragTime )
{
    LIBWRAP_EARLY_INIT( _ZN11QStyleHints16setStartDragTimeEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QStyleHints16setStartDragTimeEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QStyleHints16setStartDragTimeEi, ( scorep_libwrap_arg_this, startDragTime ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QStyleHints16setStartDragTimeEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK11QStyleHints13startDragTimeEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QStyleHints13startDragTimeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QStyleHints13startDragTimeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QStyleHints13startDragTimeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QStyleHints13startDragTimeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QStyleHints13startDragTimeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QStyleHints17startDragVelocityEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QStyleHints17startDragVelocityEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QStyleHints17startDragVelocityEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QStyleHints17startDragVelocityEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QStyleHints17startDragVelocityEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QStyleHints17startDragVelocityEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QStyleHints24setKeyboardInputIntervalEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QStyleHints24setKeyboardInputIntervalEi )( void *scorep_libwrap_arg_this, int keyboardInputInterval )
{
    LIBWRAP_EARLY_INIT( _ZN11QStyleHints24setKeyboardInputIntervalEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QStyleHints24setKeyboardInputIntervalEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QStyleHints24setKeyboardInputIntervalEi, ( scorep_libwrap_arg_this, keyboardInputInterval ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QStyleHints24setKeyboardInputIntervalEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK11QStyleHints21keyboardInputIntervalEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QStyleHints21keyboardInputIntervalEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QStyleHints21keyboardInputIntervalEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QStyleHints21keyboardInputIntervalEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QStyleHints21keyboardInputIntervalEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QStyleHints21keyboardInputIntervalEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QStyleHints22keyboardAutoRepeatRateEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QStyleHints22keyboardAutoRepeatRateEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QStyleHints22keyboardAutoRepeatRateEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QStyleHints22keyboardAutoRepeatRateEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QStyleHints22keyboardAutoRepeatRateEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QStyleHints22keyboardAutoRepeatRateEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QStyleHints18setCursorFlashTimeEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QStyleHints18setCursorFlashTimeEi )( void *scorep_libwrap_arg_this, int cursorFlashTime )
{
    LIBWRAP_EARLY_INIT( _ZN11QStyleHints18setCursorFlashTimeEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QStyleHints18setCursorFlashTimeEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QStyleHints18setCursorFlashTimeEi, ( scorep_libwrap_arg_this, cursorFlashTime ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QStyleHints18setCursorFlashTimeEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK11QStyleHints15cursorFlashTimeEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QStyleHints15cursorFlashTimeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QStyleHints15cursorFlashTimeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QStyleHints15cursorFlashTimeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QStyleHints15cursorFlashTimeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QStyleHints15cursorFlashTimeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QStyleHints16showIsFullScreenEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QStyleHints16showIsFullScreenEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QStyleHints16showIsFullScreenEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QStyleHints16showIsFullScreenEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QStyleHints16showIsFullScreenEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QStyleHints16showIsFullScreenEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QStyleHints15showIsMaximizedEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QStyleHints15showIsMaximizedEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QStyleHints15showIsMaximizedEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QStyleHints15showIsMaximizedEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QStyleHints15showIsMaximizedEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QStyleHints15showIsMaximizedEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QStyleHints17passwordMaskDelayEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QStyleHints17passwordMaskDelayEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QStyleHints17passwordMaskDelayEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QStyleHints17passwordMaskDelayEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QStyleHints17passwordMaskDelayEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QStyleHints17passwordMaskDelayEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QStyleHints21passwordMaskCharacterEv
QChar
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QStyleHints21passwordMaskCharacterEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QStyleHints21passwordMaskCharacterEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QStyleHints21passwordMaskCharacterEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QChar scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QStyleHints21passwordMaskCharacterEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QStyleHints21passwordMaskCharacterEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QStyleHints18fontSmoothingGammaEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QStyleHints18fontSmoothingGammaEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QStyleHints18fontSmoothingGammaEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QStyleHints18fontSmoothingGammaEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QStyleHints18fontSmoothingGammaEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QStyleHints18fontSmoothingGammaEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QStyleHints16useRtlExtensionsEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QStyleHints16useRtlExtensionsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QStyleHints16useRtlExtensionsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QStyleHints16useRtlExtensionsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QStyleHints16useRtlExtensionsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QStyleHints16useRtlExtensionsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QStyleHints22setFocusOnTouchReleaseEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QStyleHints22setFocusOnTouchReleaseEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QStyleHints22setFocusOnTouchReleaseEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QStyleHints22setFocusOnTouchReleaseEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QStyleHints22setFocusOnTouchReleaseEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QStyleHints22setFocusOnTouchReleaseEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QStyleHints16tabFocusBehaviorEv
Qt::TabFocusBehavior
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QStyleHints16tabFocusBehaviorEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QStyleHints16tabFocusBehaviorEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QStyleHints16tabFocusBehaviorEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    Qt::TabFocusBehavior scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QStyleHints16tabFocusBehaviorEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QStyleHints16tabFocusBehaviorEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QStyleHints19setTabFocusBehaviorEN2Qt16TabFocusBehaviorE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QStyleHints19setTabFocusBehaviorEN2Qt16TabFocusBehaviorE )( void *scorep_libwrap_arg_this, Qt::TabFocusBehavior tabFocusBehavior )
{
    LIBWRAP_EARLY_INIT( _ZN11QStyleHints19setTabFocusBehaviorEN2Qt16TabFocusBehaviorE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QStyleHints19setTabFocusBehaviorEN2Qt16TabFocusBehaviorE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QStyleHints19setTabFocusBehaviorEN2Qt16TabFocusBehaviorE, ( scorep_libwrap_arg_this, tabFocusBehavior ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QStyleHints19setTabFocusBehaviorEN2Qt16TabFocusBehaviorE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK11QStyleHints21singleClickActivationEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QStyleHints21singleClickActivationEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QStyleHints21singleClickActivationEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QStyleHints21singleClickActivationEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QStyleHints21singleClickActivationEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QStyleHints21singleClickActivationEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QStyleHints22cursorFlashTimeChangedEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QStyleHints22cursorFlashTimeChangedEi )( void *scorep_libwrap_arg_this, int cursorFlashTime )
{
    LIBWRAP_EARLY_INIT( _ZN11QStyleHints22cursorFlashTimeChangedEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QStyleHints22cursorFlashTimeChangedEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QStyleHints22cursorFlashTimeChangedEi, ( scorep_libwrap_arg_this, cursorFlashTime ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QStyleHints22cursorFlashTimeChangedEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QStyleHints28keyboardInputIntervalChangedEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QStyleHints28keyboardInputIntervalChangedEi )( void *scorep_libwrap_arg_this, int keyboardInputInterval )
{
    LIBWRAP_EARLY_INIT( _ZN11QStyleHints28keyboardInputIntervalChangedEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QStyleHints28keyboardInputIntervalChangedEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QStyleHints28keyboardInputIntervalChangedEi, ( scorep_libwrap_arg_this, keyboardInputInterval ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QStyleHints28keyboardInputIntervalChangedEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QStyleHints31mouseDoubleClickIntervalChangedEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QStyleHints31mouseDoubleClickIntervalChangedEi )( void *scorep_libwrap_arg_this, int mouseDoubleClickInterval )
{
    LIBWRAP_EARLY_INIT( _ZN11QStyleHints31mouseDoubleClickIntervalChangedEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QStyleHints31mouseDoubleClickIntervalChangedEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QStyleHints31mouseDoubleClickIntervalChangedEi, ( scorep_libwrap_arg_this, mouseDoubleClickInterval ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QStyleHints31mouseDoubleClickIntervalChangedEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QStyleHints32mousePressAndHoldIntervalChangedEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QStyleHints32mousePressAndHoldIntervalChangedEi )( void *scorep_libwrap_arg_this, int mousePressAndHoldInterval )
{
    LIBWRAP_EARLY_INIT( _ZN11QStyleHints32mousePressAndHoldIntervalChangedEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QStyleHints32mousePressAndHoldIntervalChangedEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QStyleHints32mousePressAndHoldIntervalChangedEi, ( scorep_libwrap_arg_this, mousePressAndHoldInterval ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QStyleHints32mousePressAndHoldIntervalChangedEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QStyleHints24startDragDistanceChangedEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QStyleHints24startDragDistanceChangedEi )( void *scorep_libwrap_arg_this, int startDragDistance )
{
    LIBWRAP_EARLY_INIT( _ZN11QStyleHints24startDragDistanceChangedEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QStyleHints24startDragDistanceChangedEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QStyleHints24startDragDistanceChangedEi, ( scorep_libwrap_arg_this, startDragDistance ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QStyleHints24startDragDistanceChangedEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QStyleHints20startDragTimeChangedEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QStyleHints20startDragTimeChangedEi )( void *scorep_libwrap_arg_this, int startDragTime )
{
    LIBWRAP_EARLY_INIT( _ZN11QStyleHints20startDragTimeChangedEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QStyleHints20startDragTimeChangedEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QStyleHints20startDragTimeChangedEi, ( scorep_libwrap_arg_this, startDragTime ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QStyleHints20startDragTimeChangedEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QStyleHints23tabFocusBehaviorChangedEN2Qt16TabFocusBehaviorE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QStyleHints23tabFocusBehaviorChangedEN2Qt16TabFocusBehaviorE )( void *scorep_libwrap_arg_this, Qt::TabFocusBehavior tabFocusBehavior )
{
    LIBWRAP_EARLY_INIT( _ZN11QStyleHints23tabFocusBehaviorChangedEN2Qt16TabFocusBehaviorE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QStyleHints23tabFocusBehaviorChangedEN2Qt16TabFocusBehaviorE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QStyleHints23tabFocusBehaviorChangedEN2Qt16TabFocusBehaviorE, ( scorep_libwrap_arg_this, tabFocusBehavior ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QStyleHints23tabFocusBehaviorChangedEN2Qt16TabFocusBehaviorE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QVector3DC2ERK9QVector2D
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QVector3DC2ERK9QVector2D )( void *scorep_libwrap_arg_this, const QVector2D & vector )
{
    LIBWRAP_EARLY_INIT( _ZN9QVector3DC2ERK9QVector2D );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QVector3DC2ERK9QVector2D );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QVector3DC2ERK9QVector2D, ( scorep_libwrap_arg_this, vector ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QVector3DC2ERK9QVector2D );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QVector3DC1ERK9QVector2D
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QVector3DC1ERK9QVector2D )( void *scorep_libwrap_arg_this, const QVector2D & vector )
{
    LIBWRAP_EARLY_INIT( _ZN9QVector3DC1ERK9QVector2D );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QVector3DC1ERK9QVector2D );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QVector3DC1ERK9QVector2D, ( scorep_libwrap_arg_this, vector ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QVector3DC1ERK9QVector2D );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QVector3DC2ERK9QVector2Df
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QVector3DC2ERK9QVector2Df )( void *scorep_libwrap_arg_this, const QVector2D & vector, float zpos )
{
    LIBWRAP_EARLY_INIT( _ZN9QVector3DC2ERK9QVector2Df );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QVector3DC2ERK9QVector2Df );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QVector3DC2ERK9QVector2Df, ( scorep_libwrap_arg_this, vector, zpos ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QVector3DC2ERK9QVector2Df );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QVector3DC1ERK9QVector2Df
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QVector3DC1ERK9QVector2Df )( void *scorep_libwrap_arg_this, const QVector2D & vector, float zpos )
{
    LIBWRAP_EARLY_INIT( _ZN9QVector3DC1ERK9QVector2Df );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QVector3DC1ERK9QVector2Df );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QVector3DC1ERK9QVector2Df, ( scorep_libwrap_arg_this, vector, zpos ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QVector3DC1ERK9QVector2Df );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QVector3DC2ERK9QVector4D
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QVector3DC2ERK9QVector4D )( void *scorep_libwrap_arg_this, const QVector4D & vector )
{
    LIBWRAP_EARLY_INIT( _ZN9QVector3DC2ERK9QVector4D );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QVector3DC2ERK9QVector4D );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QVector3DC2ERK9QVector4D, ( scorep_libwrap_arg_this, vector ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QVector3DC2ERK9QVector4D );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QVector3DC1ERK9QVector4D
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QVector3DC1ERK9QVector4D )( void *scorep_libwrap_arg_this, const QVector4D & vector )
{
    LIBWRAP_EARLY_INIT( _ZN9QVector3DC1ERK9QVector4D );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QVector3DC1ERK9QVector4D );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QVector3DC1ERK9QVector4D, ( scorep_libwrap_arg_this, vector ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QVector3DC1ERK9QVector4D );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK9QVector3D6lengthEv
float
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QVector3D6lengthEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QVector3D6lengthEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QVector3D6lengthEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    float scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QVector3D6lengthEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QVector3D6lengthEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QVector3D13lengthSquaredEv
float
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QVector3D13lengthSquaredEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QVector3D13lengthSquaredEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QVector3D13lengthSquaredEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    float scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QVector3D13lengthSquaredEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QVector3D13lengthSquaredEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QVector3D10normalizedEv
QVector3D
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QVector3D10normalizedEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QVector3D10normalizedEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QVector3D10normalizedEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QVector3D scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QVector3D10normalizedEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QVector3D10normalizedEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN9QVector3D9normalizeEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QVector3D9normalizeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN9QVector3D9normalizeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QVector3D9normalizeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QVector3D9normalizeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QVector3D9normalizeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QVector3D10dotProductERKS_S1_
float
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QVector3D10dotProductERKS_S1_ )( const QVector3D & v1, const QVector3D & v2 )
{
    LIBWRAP_EARLY_INIT( _ZN9QVector3D10dotProductERKS_S1_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QVector3D10dotProductERKS_S1_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    float scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN9QVector3D10dotProductERKS_S1_, ( v1, v2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QVector3D10dotProductERKS_S1_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN9QVector3D12crossProductERKS_S1_
QVector3D
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QVector3D12crossProductERKS_S1_ )( const QVector3D & v1, const QVector3D & v2 )
{
    LIBWRAP_EARLY_INIT( _ZN9QVector3D12crossProductERKS_S1_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QVector3D12crossProductERKS_S1_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QVector3D scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN9QVector3D12crossProductERKS_S1_, ( v1, v2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QVector3D12crossProductERKS_S1_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN9QVector3D6normalERKS_S1_
QVector3D
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QVector3D6normalERKS_S1_ )( const QVector3D & v1, const QVector3D & v2 )
{
    LIBWRAP_EARLY_INIT( _ZN9QVector3D6normalERKS_S1_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QVector3D6normalERKS_S1_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QVector3D scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN9QVector3D6normalERKS_S1_, ( v1, v2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QVector3D6normalERKS_S1_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN9QVector3D6normalERKS_S1_S1_
QVector3D
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QVector3D6normalERKS_S1_S1_ )( const QVector3D & v1, const QVector3D & v2, const QVector3D & v3 )
{
    LIBWRAP_EARLY_INIT( _ZN9QVector3D6normalERKS_S1_S1_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QVector3D6normalERKS_S1_S1_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QVector3D scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN9QVector3D6normalERKS_S1_S1_, ( v1, v2, v3 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QVector3D6normalERKS_S1_S1_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QVector3D7projectERK10QMatrix4x4S2_RK5QRect
QVector3D
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QVector3D7projectERK10QMatrix4x4S2_RK5QRect )( void *scorep_libwrap_arg_this, const QMatrix4x4 & modelView, const QMatrix4x4 & projection, const QRect & viewport )
{
    LIBWRAP_EARLY_INIT( _ZNK9QVector3D7projectERK10QMatrix4x4S2_RK5QRect );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QVector3D7projectERK10QMatrix4x4S2_RK5QRect );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QVector3D scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QVector3D7projectERK10QMatrix4x4S2_RK5QRect, ( scorep_libwrap_arg_this, modelView, projection, viewport ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QVector3D7projectERK10QMatrix4x4S2_RK5QRect );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QVector3D9unprojectERK10QMatrix4x4S2_RK5QRect
QVector3D
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QVector3D9unprojectERK10QMatrix4x4S2_RK5QRect )( void *scorep_libwrap_arg_this, const QMatrix4x4 & modelView, const QMatrix4x4 & projection, const QRect & viewport )
{
    LIBWRAP_EARLY_INIT( _ZNK9QVector3D9unprojectERK10QMatrix4x4S2_RK5QRect );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QVector3D9unprojectERK10QMatrix4x4S2_RK5QRect );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QVector3D scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QVector3D9unprojectERK10QMatrix4x4S2_RK5QRect, ( scorep_libwrap_arg_this, modelView, projection, viewport ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QVector3D9unprojectERK10QMatrix4x4S2_RK5QRect );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QVector3D15distanceToPointERKS_
float
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QVector3D15distanceToPointERKS_ )( void *scorep_libwrap_arg_this, const QVector3D & point )
{
    LIBWRAP_EARLY_INIT( _ZNK9QVector3D15distanceToPointERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QVector3D15distanceToPointERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    float scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QVector3D15distanceToPointERKS_, ( scorep_libwrap_arg_this, point ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QVector3D15distanceToPointERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QVector3D15distanceToPlaneERKS_S1_
float
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QVector3D15distanceToPlaneERKS_S1_ )( void *scorep_libwrap_arg_this, const QVector3D & plane, const QVector3D & normal )
{
    LIBWRAP_EARLY_INIT( _ZNK9QVector3D15distanceToPlaneERKS_S1_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QVector3D15distanceToPlaneERKS_S1_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    float scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QVector3D15distanceToPlaneERKS_S1_, ( scorep_libwrap_arg_this, plane, normal ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QVector3D15distanceToPlaneERKS_S1_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QVector3D15distanceToPlaneERKS_S1_S1_
float
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QVector3D15distanceToPlaneERKS_S1_S1_ )( void *scorep_libwrap_arg_this, const QVector3D & plane1, const QVector3D & plane2, const QVector3D & plane3 )
{
    LIBWRAP_EARLY_INIT( _ZNK9QVector3D15distanceToPlaneERKS_S1_S1_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QVector3D15distanceToPlaneERKS_S1_S1_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    float scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QVector3D15distanceToPlaneERKS_S1_S1_, ( scorep_libwrap_arg_this, plane1, plane2, plane3 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QVector3D15distanceToPlaneERKS_S1_S1_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QVector3D14distanceToLineERKS_S1_
float
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QVector3D14distanceToLineERKS_S1_ )( void *scorep_libwrap_arg_this, const QVector3D & point, const QVector3D & direction )
{
    LIBWRAP_EARLY_INIT( _ZNK9QVector3D14distanceToLineERKS_S1_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QVector3D14distanceToLineERKS_S1_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    float scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QVector3D14distanceToLineERKS_S1_, ( scorep_libwrap_arg_this, point, direction ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QVector3D14distanceToLineERKS_S1_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QVector3D10toVector2DEv
QVector2D
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QVector3D10toVector2DEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QVector3D10toVector2DEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QVector3D10toVector2DEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QVector2D scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QVector3D10toVector2DEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QVector3D10toVector2DEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QVector3D10toVector4DEv
QVector4D
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QVector3D10toVector4DEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QVector3D10toVector4DEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QVector3D10toVector4DEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QVector4D scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QVector3D10toVector4DEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QVector3D10toVector4DEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _Zls6QDebugRK9QVector3D
QDebug
SCOREP_LIBWRAP_FUNC_NAME( _Zls6QDebugRK9QVector3D )( QDebug dbg, const QVector3D & vector )
{
    LIBWRAP_EARLY_INIT( _Zls6QDebugRK9QVector3D );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _Zls6QDebugRK9QVector3D );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDebug scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _Zls6QDebugRK9QVector3D, ( dbg, vector ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _Zls6QDebugRK9QVector3D );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZlsR11QDataStreamRK9QVector3D
QDataStream &
SCOREP_LIBWRAP_FUNC_NAME( _ZlsR11QDataStreamRK9QVector3D )( QDataStream & scorep_libwrap_arg_1, const QVector3D & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _ZlsR11QDataStreamRK9QVector3D );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZlsR11QDataStreamRK9QVector3D );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDataStream & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZlsR11QDataStreamRK9QVector3D, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZlsR11QDataStreamRK9QVector3D );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZrsR11QDataStreamR9QVector3D
QDataStream &
SCOREP_LIBWRAP_FUNC_NAME( _ZrsR11QDataStreamR9QVector3D )( QDataStream & scorep_libwrap_arg_1, QVector3D & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _ZrsR11QDataStreamR9QVector3D );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZrsR11QDataStreamR9QVector3D );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDataStream & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZrsR11QDataStreamR9QVector3D, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZrsR11QDataStreamR9QVector3D );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN9QVector4DC2ERK9QVector2D
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QVector4DC2ERK9QVector2D )( void *scorep_libwrap_arg_this, const QVector2D & vector )
{
    LIBWRAP_EARLY_INIT( _ZN9QVector4DC2ERK9QVector2D );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QVector4DC2ERK9QVector2D );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QVector4DC2ERK9QVector2D, ( scorep_libwrap_arg_this, vector ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QVector4DC2ERK9QVector2D );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QVector4DC1ERK9QVector2D
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QVector4DC1ERK9QVector2D )( void *scorep_libwrap_arg_this, const QVector2D & vector )
{
    LIBWRAP_EARLY_INIT( _ZN9QVector4DC1ERK9QVector2D );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QVector4DC1ERK9QVector2D );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QVector4DC1ERK9QVector2D, ( scorep_libwrap_arg_this, vector ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QVector4DC1ERK9QVector2D );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QVector4DC2ERK9QVector2Dff
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QVector4DC2ERK9QVector2Dff )( void *scorep_libwrap_arg_this, const QVector2D & vector, float zpos, float wpos )
{
    LIBWRAP_EARLY_INIT( _ZN9QVector4DC2ERK9QVector2Dff );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QVector4DC2ERK9QVector2Dff );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QVector4DC2ERK9QVector2Dff, ( scorep_libwrap_arg_this, vector, zpos, wpos ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QVector4DC2ERK9QVector2Dff );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QVector4DC1ERK9QVector2Dff
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QVector4DC1ERK9QVector2Dff )( void *scorep_libwrap_arg_this, const QVector2D & vector, float zpos, float wpos )
{
    LIBWRAP_EARLY_INIT( _ZN9QVector4DC1ERK9QVector2Dff );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QVector4DC1ERK9QVector2Dff );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QVector4DC1ERK9QVector2Dff, ( scorep_libwrap_arg_this, vector, zpos, wpos ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QVector4DC1ERK9QVector2Dff );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QVector4DC2ERK9QVector3D
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QVector4DC2ERK9QVector3D )( void *scorep_libwrap_arg_this, const QVector3D & vector )
{
    LIBWRAP_EARLY_INIT( _ZN9QVector4DC2ERK9QVector3D );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QVector4DC2ERK9QVector3D );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QVector4DC2ERK9QVector3D, ( scorep_libwrap_arg_this, vector ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QVector4DC2ERK9QVector3D );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QVector4DC1ERK9QVector3D
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QVector4DC1ERK9QVector3D )( void *scorep_libwrap_arg_this, const QVector3D & vector )
{
    LIBWRAP_EARLY_INIT( _ZN9QVector4DC1ERK9QVector3D );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QVector4DC1ERK9QVector3D );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QVector4DC1ERK9QVector3D, ( scorep_libwrap_arg_this, vector ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QVector4DC1ERK9QVector3D );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QVector4DC2ERK9QVector3Df
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QVector4DC2ERK9QVector3Df )( void *scorep_libwrap_arg_this, const QVector3D & vector, float wpos )
{
    LIBWRAP_EARLY_INIT( _ZN9QVector4DC2ERK9QVector3Df );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QVector4DC2ERK9QVector3Df );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QVector4DC2ERK9QVector3Df, ( scorep_libwrap_arg_this, vector, wpos ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QVector4DC2ERK9QVector3Df );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QVector4DC1ERK9QVector3Df
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QVector4DC1ERK9QVector3Df )( void *scorep_libwrap_arg_this, const QVector3D & vector, float wpos )
{
    LIBWRAP_EARLY_INIT( _ZN9QVector4DC1ERK9QVector3Df );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QVector4DC1ERK9QVector3Df );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QVector4DC1ERK9QVector3Df, ( scorep_libwrap_arg_this, vector, wpos ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QVector4DC1ERK9QVector3Df );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK9QVector4D6lengthEv
float
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QVector4D6lengthEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QVector4D6lengthEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QVector4D6lengthEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    float scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QVector4D6lengthEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QVector4D6lengthEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QVector4D13lengthSquaredEv
float
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QVector4D13lengthSquaredEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QVector4D13lengthSquaredEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QVector4D13lengthSquaredEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    float scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QVector4D13lengthSquaredEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QVector4D13lengthSquaredEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QVector4D10normalizedEv
QVector4D
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QVector4D10normalizedEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QVector4D10normalizedEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QVector4D10normalizedEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QVector4D scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QVector4D10normalizedEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QVector4D10normalizedEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN9QVector4D9normalizeEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QVector4D9normalizeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN9QVector4D9normalizeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QVector4D9normalizeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QVector4D9normalizeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QVector4D9normalizeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QVector4D10dotProductERKS_S1_
float
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QVector4D10dotProductERKS_S1_ )( const QVector4D & v1, const QVector4D & v2 )
{
    LIBWRAP_EARLY_INIT( _ZN9QVector4D10dotProductERKS_S1_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QVector4D10dotProductERKS_S1_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    float scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN9QVector4D10dotProductERKS_S1_, ( v1, v2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QVector4D10dotProductERKS_S1_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QVector4D10toVector2DEv
QVector2D
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QVector4D10toVector2DEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QVector4D10toVector2DEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QVector4D10toVector2DEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QVector2D scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QVector4D10toVector2DEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QVector4D10toVector2DEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QVector4D16toVector2DAffineEv
QVector2D
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QVector4D16toVector2DAffineEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QVector4D16toVector2DAffineEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QVector4D16toVector2DAffineEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QVector2D scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QVector4D16toVector2DAffineEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QVector4D16toVector2DAffineEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QVector4D10toVector3DEv
QVector3D
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QVector4D10toVector3DEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QVector4D10toVector3DEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QVector4D10toVector3DEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QVector3D scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QVector4D10toVector3DEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QVector4D10toVector3DEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QVector4D16toVector3DAffineEv
QVector3D
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QVector4D16toVector3DAffineEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QVector4D16toVector3DAffineEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QVector4D16toVector3DAffineEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QVector3D scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QVector4D16toVector3DAffineEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QVector4D16toVector3DAffineEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _Zls6QDebugRK9QVector4D
QDebug
SCOREP_LIBWRAP_FUNC_NAME( _Zls6QDebugRK9QVector4D )( QDebug dbg, const QVector4D & vector )
{
    LIBWRAP_EARLY_INIT( _Zls6QDebugRK9QVector4D );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _Zls6QDebugRK9QVector4D );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDebug scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _Zls6QDebugRK9QVector4D, ( dbg, vector ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _Zls6QDebugRK9QVector4D );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZlsR11QDataStreamRK9QVector4D
QDataStream &
SCOREP_LIBWRAP_FUNC_NAME( _ZlsR11QDataStreamRK9QVector4D )( QDataStream & scorep_libwrap_arg_1, const QVector4D & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _ZlsR11QDataStreamRK9QVector4D );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZlsR11QDataStreamRK9QVector4D );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDataStream & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZlsR11QDataStreamRK9QVector4D, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZlsR11QDataStreamRK9QVector4D );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZrsR11QDataStreamR9QVector4D
QDataStream &
SCOREP_LIBWRAP_FUNC_NAME( _ZrsR11QDataStreamR9QVector4D )( QDataStream & scorep_libwrap_arg_1, QVector4D & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _ZrsR11QDataStreamR9QVector4D );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZrsR11QDataStreamR9QVector4D );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDataStream & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZrsR11QDataStreamR9QVector4D, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZrsR11QDataStreamR9QVector4D );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QQuaternion6lengthEv
float
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QQuaternion6lengthEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QQuaternion6lengthEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QQuaternion6lengthEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    float scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QQuaternion6lengthEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QQuaternion6lengthEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QQuaternion13lengthSquaredEv
float
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QQuaternion13lengthSquaredEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QQuaternion13lengthSquaredEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QQuaternion13lengthSquaredEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    float scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QQuaternion13lengthSquaredEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QQuaternion13lengthSquaredEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QQuaternion10normalizedEv
QQuaternion
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QQuaternion10normalizedEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QQuaternion10normalizedEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QQuaternion10normalizedEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QQuaternion scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QQuaternion10normalizedEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QQuaternion10normalizedEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QQuaternion9normalizeEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QQuaternion9normalizeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QQuaternion9normalizeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QQuaternion9normalizeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QQuaternion9normalizeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QQuaternion9normalizeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK11QQuaternion13rotatedVectorERK9QVector3D
QVector3D
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QQuaternion13rotatedVectorERK9QVector3D )( void *scorep_libwrap_arg_this, const QVector3D & vector )
{
    LIBWRAP_EARLY_INIT( _ZNK11QQuaternion13rotatedVectorERK9QVector3D );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QQuaternion13rotatedVectorERK9QVector3D );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QVector3D scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QQuaternion13rotatedVectorERK9QVector3D, ( scorep_libwrap_arg_this, vector ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QQuaternion13rotatedVectorERK9QVector3D );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QQuaternion16fromAxisAndAngleERK9QVector3Df
QQuaternion
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QQuaternion16fromAxisAndAngleERK9QVector3Df )( const QVector3D & axis, float angle )
{
    LIBWRAP_EARLY_INIT( _ZN11QQuaternion16fromAxisAndAngleERK9QVector3Df );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QQuaternion16fromAxisAndAngleERK9QVector3Df );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QQuaternion scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN11QQuaternion16fromAxisAndAngleERK9QVector3Df, ( axis, angle ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QQuaternion16fromAxisAndAngleERK9QVector3Df );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QQuaternion15getAxisAndAngleEPfS0_S0_S0_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QQuaternion15getAxisAndAngleEPfS0_S0_S0_ )( void *scorep_libwrap_arg_this, float * x, float * y, float * z, float * angle )
{
    LIBWRAP_EARLY_INIT( _ZNK11QQuaternion15getAxisAndAngleEPfS0_S0_S0_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QQuaternion15getAxisAndAngleEPfS0_S0_S0_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QQuaternion15getAxisAndAngleEPfS0_S0_S0_, ( scorep_libwrap_arg_this, x, y, z, angle ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QQuaternion15getAxisAndAngleEPfS0_S0_S0_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QQuaternion16fromAxisAndAngleEffff
QQuaternion
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QQuaternion16fromAxisAndAngleEffff )( float x, float y, float z, float angle )
{
    LIBWRAP_EARLY_INIT( _ZN11QQuaternion16fromAxisAndAngleEffff );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QQuaternion16fromAxisAndAngleEffff );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QQuaternion scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN11QQuaternion16fromAxisAndAngleEffff, ( x, y, z, angle ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QQuaternion16fromAxisAndAngleEffff );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QQuaternion14getEulerAnglesEPfS0_S0_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QQuaternion14getEulerAnglesEPfS0_S0_ )( void *scorep_libwrap_arg_this, float * pitch, float * yaw, float * roll )
{
    LIBWRAP_EARLY_INIT( _ZNK11QQuaternion14getEulerAnglesEPfS0_S0_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QQuaternion14getEulerAnglesEPfS0_S0_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QQuaternion14getEulerAnglesEPfS0_S0_, ( scorep_libwrap_arg_this, pitch, yaw, roll ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QQuaternion14getEulerAnglesEPfS0_S0_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QQuaternion15fromEulerAnglesEfff
QQuaternion
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QQuaternion15fromEulerAnglesEfff )( float pitch, float yaw, float roll )
{
    LIBWRAP_EARLY_INIT( _ZN11QQuaternion15fromEulerAnglesEfff );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QQuaternion15fromEulerAnglesEfff );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QQuaternion scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN11QQuaternion15fromEulerAnglesEfff, ( pitch, yaw, roll ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QQuaternion15fromEulerAnglesEfff );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QQuaternion16toRotationMatrixEv
QMatrix3x3
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QQuaternion16toRotationMatrixEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QQuaternion16toRotationMatrixEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QQuaternion16toRotationMatrixEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QMatrix3x3 scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QQuaternion16toRotationMatrixEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QQuaternion16toRotationMatrixEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QQuaternion18fromRotationMatrixERK14QGenericMatrixILi3ELi3EfE
QQuaternion
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QQuaternion18fromRotationMatrixERK14QGenericMatrixILi3ELi3EfE )( const QMatrix3x3 & rot3x3 )
{
    LIBWRAP_EARLY_INIT( _ZN11QQuaternion18fromRotationMatrixERK14QGenericMatrixILi3ELi3EfE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QQuaternion18fromRotationMatrixERK14QGenericMatrixILi3ELi3EfE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QQuaternion scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN11QQuaternion18fromRotationMatrixERK14QGenericMatrixILi3ELi3EfE, ( rot3x3 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QQuaternion18fromRotationMatrixERK14QGenericMatrixILi3ELi3EfE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QQuaternion7getAxesEP9QVector3DS1_S1_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QQuaternion7getAxesEP9QVector3DS1_S1_ )( void *scorep_libwrap_arg_this, QVector3D * xAxis, QVector3D * yAxis, QVector3D * zAxis )
{
    LIBWRAP_EARLY_INIT( _ZNK11QQuaternion7getAxesEP9QVector3DS1_S1_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QQuaternion7getAxesEP9QVector3DS1_S1_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QQuaternion7getAxesEP9QVector3DS1_S1_, ( scorep_libwrap_arg_this, xAxis, yAxis, zAxis ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QQuaternion7getAxesEP9QVector3DS1_S1_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QQuaternion8fromAxesERK9QVector3DS2_S2_
QQuaternion
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QQuaternion8fromAxesERK9QVector3DS2_S2_ )( const QVector3D & xAxis, const QVector3D & yAxis, const QVector3D & zAxis )
{
    LIBWRAP_EARLY_INIT( _ZN11QQuaternion8fromAxesERK9QVector3DS2_S2_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QQuaternion8fromAxesERK9QVector3DS2_S2_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QQuaternion scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN11QQuaternion8fromAxesERK9QVector3DS2_S2_, ( xAxis, yAxis, zAxis ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QQuaternion8fromAxesERK9QVector3DS2_S2_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QQuaternion13fromDirectionERK9QVector3DS2_
QQuaternion
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QQuaternion13fromDirectionERK9QVector3DS2_ )( const QVector3D & direction, const QVector3D & up )
{
    LIBWRAP_EARLY_INIT( _ZN11QQuaternion13fromDirectionERK9QVector3DS2_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QQuaternion13fromDirectionERK9QVector3DS2_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QQuaternion scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN11QQuaternion13fromDirectionERK9QVector3DS2_, ( direction, up ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QQuaternion13fromDirectionERK9QVector3DS2_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QQuaternion10rotationToERK9QVector3DS2_
QQuaternion
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QQuaternion10rotationToERK9QVector3DS2_ )( const QVector3D & from, const QVector3D & to )
{
    LIBWRAP_EARLY_INIT( _ZN11QQuaternion10rotationToERK9QVector3DS2_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QQuaternion10rotationToERK9QVector3DS2_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QQuaternion scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN11QQuaternion10rotationToERK9QVector3DS2_, ( from, to ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QQuaternion10rotationToERK9QVector3DS2_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QQuaternion5slerpERKS_S1_f
QQuaternion
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QQuaternion5slerpERKS_S1_f )( const QQuaternion & q1, const QQuaternion & q2, float t )
{
    LIBWRAP_EARLY_INIT( _ZN11QQuaternion5slerpERKS_S1_f );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QQuaternion5slerpERKS_S1_f );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QQuaternion scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN11QQuaternion5slerpERKS_S1_f, ( q1, q2, t ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QQuaternion5slerpERKS_S1_f );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QQuaternion5nlerpERKS_S1_f
QQuaternion
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QQuaternion5nlerpERKS_S1_f )( const QQuaternion & q1, const QQuaternion & q2, float t )
{
    LIBWRAP_EARLY_INIT( _ZN11QQuaternion5nlerpERKS_S1_f );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QQuaternion5nlerpERKS_S1_f );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QQuaternion scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN11QQuaternion5nlerpERKS_S1_f, ( q1, q2, t ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QQuaternion5nlerpERKS_S1_f );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _Zls6QDebugRK11QQuaternion
QDebug
SCOREP_LIBWRAP_FUNC_NAME( _Zls6QDebugRK11QQuaternion )( QDebug dbg, const QQuaternion & q )
{
    LIBWRAP_EARLY_INIT( _Zls6QDebugRK11QQuaternion );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _Zls6QDebugRK11QQuaternion );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDebug scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _Zls6QDebugRK11QQuaternion, ( dbg, q ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _Zls6QDebugRK11QQuaternion );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZlsR11QDataStreamRK11QQuaternion
QDataStream &
SCOREP_LIBWRAP_FUNC_NAME( _ZlsR11QDataStreamRK11QQuaternion )( QDataStream & scorep_libwrap_arg_1, const QQuaternion & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _ZlsR11QDataStreamRK11QQuaternion );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZlsR11QDataStreamRK11QQuaternion );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDataStream & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZlsR11QDataStreamRK11QQuaternion, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZlsR11QDataStreamRK11QQuaternion );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZrsR11QDataStreamR11QQuaternion
QDataStream &
SCOREP_LIBWRAP_FUNC_NAME( _ZrsR11QDataStreamR11QQuaternion )( QDataStream & scorep_libwrap_arg_1, QQuaternion & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _ZrsR11QDataStreamR11QQuaternion );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZrsR11QDataStreamR11QQuaternion );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDataStream & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZrsR11QDataStreamR11QQuaternion, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZrsR11QDataStreamR11QQuaternion );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QMatrix4x4C2EPKf
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QMatrix4x4C2EPKf )( void *scorep_libwrap_arg_this, const float * values )
{
    LIBWRAP_EARLY_INIT( _ZN10QMatrix4x4C2EPKf );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QMatrix4x4C2EPKf );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QMatrix4x4C2EPKf, ( scorep_libwrap_arg_this, values ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QMatrix4x4C2EPKf );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QMatrix4x4C1EPKf
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QMatrix4x4C1EPKf )( void *scorep_libwrap_arg_this, const float * values )
{
    LIBWRAP_EARLY_INIT( _ZN10QMatrix4x4C1EPKf );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QMatrix4x4C1EPKf );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QMatrix4x4C1EPKf, ( scorep_libwrap_arg_this, values ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QMatrix4x4C1EPKf );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QMatrix4x4C2EPKfii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QMatrix4x4C2EPKfii )( void *scorep_libwrap_arg_this, const float * values, int cols, int rows )
{
    LIBWRAP_EARLY_INIT( _ZN10QMatrix4x4C2EPKfii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QMatrix4x4C2EPKfii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QMatrix4x4C2EPKfii, ( scorep_libwrap_arg_this, values, cols, rows ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QMatrix4x4C2EPKfii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QMatrix4x4C1EPKfii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QMatrix4x4C1EPKfii )( void *scorep_libwrap_arg_this, const float * values, int cols, int rows )
{
    LIBWRAP_EARLY_INIT( _ZN10QMatrix4x4C1EPKfii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QMatrix4x4C1EPKfii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QMatrix4x4C1EPKfii, ( scorep_libwrap_arg_this, values, cols, rows ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QMatrix4x4C1EPKfii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QMatrix4x4C2ERK10QTransform
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QMatrix4x4C2ERK10QTransform )( void *scorep_libwrap_arg_this, const QTransform & transform )
{
    LIBWRAP_EARLY_INIT( _ZN10QMatrix4x4C2ERK10QTransform );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QMatrix4x4C2ERK10QTransform );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QMatrix4x4C2ERK10QTransform, ( scorep_libwrap_arg_this, transform ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QMatrix4x4C2ERK10QTransform );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QMatrix4x4C1ERK10QTransform
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QMatrix4x4C1ERK10QTransform )( void *scorep_libwrap_arg_this, const QTransform & transform )
{
    LIBWRAP_EARLY_INIT( _ZN10QMatrix4x4C1ERK10QTransform );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QMatrix4x4C1ERK10QTransform );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QMatrix4x4C1ERK10QTransform, ( scorep_libwrap_arg_this, transform ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QMatrix4x4C1ERK10QTransform );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QMatrix4x4C2ERK7QMatrix
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QMatrix4x4C2ERK7QMatrix )( void *scorep_libwrap_arg_this, const QMatrix & matrix )
{
    LIBWRAP_EARLY_INIT( _ZN10QMatrix4x4C2ERK7QMatrix );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QMatrix4x4C2ERK7QMatrix );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QMatrix4x4C2ERK7QMatrix, ( scorep_libwrap_arg_this, matrix ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QMatrix4x4C2ERK7QMatrix );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QMatrix4x4C1ERK7QMatrix
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QMatrix4x4C1ERK7QMatrix )( void *scorep_libwrap_arg_this, const QMatrix & matrix )
{
    LIBWRAP_EARLY_INIT( _ZN10QMatrix4x4C1ERK7QMatrix );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QMatrix4x4C1ERK7QMatrix );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QMatrix4x4C1ERK7QMatrix, ( scorep_libwrap_arg_this, matrix ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QMatrix4x4C1ERK7QMatrix );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK10QMatrix4x411determinantEv
double
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QMatrix4x411determinantEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QMatrix4x411determinantEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QMatrix4x411determinantEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    double scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QMatrix4x411determinantEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QMatrix4x411determinantEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QMatrix4x48invertedEPb
QMatrix4x4
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QMatrix4x48invertedEPb )( void *scorep_libwrap_arg_this, bool * invertible )
{
    LIBWRAP_EARLY_INIT( _ZNK10QMatrix4x48invertedEPb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QMatrix4x48invertedEPb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QMatrix4x4 scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QMatrix4x48invertedEPb, ( scorep_libwrap_arg_this, invertible ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QMatrix4x48invertedEPb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QMatrix4x410transposedEv
QMatrix4x4
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QMatrix4x410transposedEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QMatrix4x410transposedEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QMatrix4x410transposedEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QMatrix4x4 scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QMatrix4x410transposedEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QMatrix4x410transposedEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QMatrix4x412normalMatrixEv
QMatrix3x3
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QMatrix4x412normalMatrixEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QMatrix4x412normalMatrixEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QMatrix4x412normalMatrixEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QMatrix3x3 scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QMatrix4x412normalMatrixEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QMatrix4x412normalMatrixEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QMatrix4x4dVEf
QMatrix4x4 &
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QMatrix4x4dVEf )( void *scorep_libwrap_arg_this, float divisor )
{
    LIBWRAP_EARLY_INIT( _ZN10QMatrix4x4dVEf );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QMatrix4x4dVEf );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QMatrix4x4 & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN10QMatrix4x4dVEf, ( scorep_libwrap_arg_this, divisor ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QMatrix4x4dVEf );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZdvRK10QMatrix4x4f
QMatrix4x4
SCOREP_LIBWRAP_FUNC_NAME( _ZdvRK10QMatrix4x4f )( const QMatrix4x4 & matrix, float divisor )
{
    LIBWRAP_EARLY_INIT( _ZdvRK10QMatrix4x4f );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZdvRK10QMatrix4x4f );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QMatrix4x4 scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZdvRK10QMatrix4x4f, ( matrix, divisor ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZdvRK10QMatrix4x4f );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QMatrix4x45scaleERK9QVector3D
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QMatrix4x45scaleERK9QVector3D )( void *scorep_libwrap_arg_this, const QVector3D & vector )
{
    LIBWRAP_EARLY_INIT( _ZN10QMatrix4x45scaleERK9QVector3D );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QMatrix4x45scaleERK9QVector3D );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QMatrix4x45scaleERK9QVector3D, ( scorep_libwrap_arg_this, vector ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QMatrix4x45scaleERK9QVector3D );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QMatrix4x49translateERK9QVector3D
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QMatrix4x49translateERK9QVector3D )( void *scorep_libwrap_arg_this, const QVector3D & vector )
{
    LIBWRAP_EARLY_INIT( _ZN10QMatrix4x49translateERK9QVector3D );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QMatrix4x49translateERK9QVector3D );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QMatrix4x49translateERK9QVector3D, ( scorep_libwrap_arg_this, vector ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QMatrix4x49translateERK9QVector3D );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QMatrix4x46rotateEfRK9QVector3D
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QMatrix4x46rotateEfRK9QVector3D )( void *scorep_libwrap_arg_this, float angle, const QVector3D & vector )
{
    LIBWRAP_EARLY_INIT( _ZN10QMatrix4x46rotateEfRK9QVector3D );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QMatrix4x46rotateEfRK9QVector3D );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QMatrix4x46rotateEfRK9QVector3D, ( scorep_libwrap_arg_this, angle, vector ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QMatrix4x46rotateEfRK9QVector3D );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QMatrix4x45scaleEff
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QMatrix4x45scaleEff )( void *scorep_libwrap_arg_this, float x, float y )
{
    LIBWRAP_EARLY_INIT( _ZN10QMatrix4x45scaleEff );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QMatrix4x45scaleEff );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QMatrix4x45scaleEff, ( scorep_libwrap_arg_this, x, y ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QMatrix4x45scaleEff );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QMatrix4x45scaleEfff
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QMatrix4x45scaleEfff )( void *scorep_libwrap_arg_this, float x, float y, float z )
{
    LIBWRAP_EARLY_INIT( _ZN10QMatrix4x45scaleEfff );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QMatrix4x45scaleEfff );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QMatrix4x45scaleEfff, ( scorep_libwrap_arg_this, x, y, z ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QMatrix4x45scaleEfff );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QMatrix4x45scaleEf
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QMatrix4x45scaleEf )( void *scorep_libwrap_arg_this, float factor )
{
    LIBWRAP_EARLY_INIT( _ZN10QMatrix4x45scaleEf );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QMatrix4x45scaleEf );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QMatrix4x45scaleEf, ( scorep_libwrap_arg_this, factor ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QMatrix4x45scaleEf );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QMatrix4x49translateEff
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QMatrix4x49translateEff )( void *scorep_libwrap_arg_this, float x, float y )
{
    LIBWRAP_EARLY_INIT( _ZN10QMatrix4x49translateEff );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QMatrix4x49translateEff );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QMatrix4x49translateEff, ( scorep_libwrap_arg_this, x, y ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QMatrix4x49translateEff );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QMatrix4x49translateEfff
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QMatrix4x49translateEfff )( void *scorep_libwrap_arg_this, float x, float y, float z )
{
    LIBWRAP_EARLY_INIT( _ZN10QMatrix4x49translateEfff );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QMatrix4x49translateEfff );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QMatrix4x49translateEfff, ( scorep_libwrap_arg_this, x, y, z ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QMatrix4x49translateEfff );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QMatrix4x46rotateEffff
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QMatrix4x46rotateEffff )( void *scorep_libwrap_arg_this, float angle, float x, float y, float z )
{
    LIBWRAP_EARLY_INIT( _ZN10QMatrix4x46rotateEffff );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QMatrix4x46rotateEffff );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QMatrix4x46rotateEffff, ( scorep_libwrap_arg_this, angle, x, y, z ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QMatrix4x46rotateEffff );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QMatrix4x46rotateERK11QQuaternion
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QMatrix4x46rotateERK11QQuaternion )( void *scorep_libwrap_arg_this, const QQuaternion & quaternion )
{
    LIBWRAP_EARLY_INIT( _ZN10QMatrix4x46rotateERK11QQuaternion );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QMatrix4x46rotateERK11QQuaternion );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QMatrix4x46rotateERK11QQuaternion, ( scorep_libwrap_arg_this, quaternion ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QMatrix4x46rotateERK11QQuaternion );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QMatrix4x45orthoERK5QRect
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QMatrix4x45orthoERK5QRect )( void *scorep_libwrap_arg_this, const QRect & rect )
{
    LIBWRAP_EARLY_INIT( _ZN10QMatrix4x45orthoERK5QRect );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QMatrix4x45orthoERK5QRect );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QMatrix4x45orthoERK5QRect, ( scorep_libwrap_arg_this, rect ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QMatrix4x45orthoERK5QRect );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QMatrix4x45orthoERK6QRectF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QMatrix4x45orthoERK6QRectF )( void *scorep_libwrap_arg_this, const QRectF & rect )
{
    LIBWRAP_EARLY_INIT( _ZN10QMatrix4x45orthoERK6QRectF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QMatrix4x45orthoERK6QRectF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QMatrix4x45orthoERK6QRectF, ( scorep_libwrap_arg_this, rect ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QMatrix4x45orthoERK6QRectF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QMatrix4x45orthoEffffff
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QMatrix4x45orthoEffffff )( void *scorep_libwrap_arg_this, float left, float right, float bottom, float top, float nearPlane, float farPlane )
{
    LIBWRAP_EARLY_INIT( _ZN10QMatrix4x45orthoEffffff );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QMatrix4x45orthoEffffff );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QMatrix4x45orthoEffffff, ( scorep_libwrap_arg_this, left, right, bottom, top, nearPlane, farPlane ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QMatrix4x45orthoEffffff );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QMatrix4x47frustumEffffff
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QMatrix4x47frustumEffffff )( void *scorep_libwrap_arg_this, float left, float right, float bottom, float top, float nearPlane, float farPlane )
{
    LIBWRAP_EARLY_INIT( _ZN10QMatrix4x47frustumEffffff );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QMatrix4x47frustumEffffff );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QMatrix4x47frustumEffffff, ( scorep_libwrap_arg_this, left, right, bottom, top, nearPlane, farPlane ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QMatrix4x47frustumEffffff );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QMatrix4x411perspectiveEffff
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QMatrix4x411perspectiveEffff )( void *scorep_libwrap_arg_this, float verticalAngle, float aspectRatio, float nearPlane, float farPlane )
{
    LIBWRAP_EARLY_INIT( _ZN10QMatrix4x411perspectiveEffff );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QMatrix4x411perspectiveEffff );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QMatrix4x411perspectiveEffff, ( scorep_libwrap_arg_this, verticalAngle, aspectRatio, nearPlane, farPlane ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QMatrix4x411perspectiveEffff );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QMatrix4x46lookAtERK9QVector3DS2_S2_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QMatrix4x46lookAtERK9QVector3DS2_S2_ )( void *scorep_libwrap_arg_this, const QVector3D & eye, const QVector3D & center, const QVector3D & up )
{
    LIBWRAP_EARLY_INIT( _ZN10QMatrix4x46lookAtERK9QVector3DS2_S2_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QMatrix4x46lookAtERK9QVector3DS2_S2_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QMatrix4x46lookAtERK9QVector3DS2_S2_, ( scorep_libwrap_arg_this, eye, center, up ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QMatrix4x46lookAtERK9QVector3DS2_S2_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QMatrix4x48viewportEffffff
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QMatrix4x48viewportEffffff )( void *scorep_libwrap_arg_this, float left, float bottom, float width, float height, float nearPlane, float farPlane )
{
    LIBWRAP_EARLY_INIT( _ZN10QMatrix4x48viewportEffffff );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QMatrix4x48viewportEffffff );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QMatrix4x48viewportEffffff, ( scorep_libwrap_arg_this, left, bottom, width, height, nearPlane, farPlane ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QMatrix4x48viewportEffffff );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QMatrix4x415flipCoordinatesEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QMatrix4x415flipCoordinatesEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN10QMatrix4x415flipCoordinatesEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QMatrix4x415flipCoordinatesEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QMatrix4x415flipCoordinatesEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QMatrix4x415flipCoordinatesEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK10QMatrix4x410copyDataToEPf
void
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QMatrix4x410copyDataToEPf )( void *scorep_libwrap_arg_this, float * values )
{
    LIBWRAP_EARLY_INIT( _ZNK10QMatrix4x410copyDataToEPf );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QMatrix4x410copyDataToEPf );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QMatrix4x410copyDataToEPf, ( scorep_libwrap_arg_this, values ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QMatrix4x410copyDataToEPf );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK10QMatrix4x48toAffineEv
QMatrix
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QMatrix4x48toAffineEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QMatrix4x48toAffineEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QMatrix4x48toAffineEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QMatrix scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QMatrix4x48toAffineEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QMatrix4x48toAffineEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QMatrix4x411toTransformEv
QTransform
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QMatrix4x411toTransformEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QMatrix4x411toTransformEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QMatrix4x411toTransformEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTransform scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QMatrix4x411toTransformEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QMatrix4x411toTransformEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QMatrix4x411toTransformEf
QTransform
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QMatrix4x411toTransformEf )( void *scorep_libwrap_arg_this, float distanceToPlane )
{
    LIBWRAP_EARLY_INIT( _ZNK10QMatrix4x411toTransformEf );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QMatrix4x411toTransformEf );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTransform scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QMatrix4x411toTransformEf, ( scorep_libwrap_arg_this, distanceToPlane ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QMatrix4x411toTransformEf );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QMatrix4x47mapRectERK5QRect
QRect
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QMatrix4x47mapRectERK5QRect )( void *scorep_libwrap_arg_this, const QRect & rect )
{
    LIBWRAP_EARLY_INIT( _ZNK10QMatrix4x47mapRectERK5QRect );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QMatrix4x47mapRectERK5QRect );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRect scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QMatrix4x47mapRectERK5QRect, ( scorep_libwrap_arg_this, rect ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QMatrix4x47mapRectERK5QRect );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QMatrix4x47mapRectERK6QRectF
QRectF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QMatrix4x47mapRectERK6QRectF )( void *scorep_libwrap_arg_this, const QRectF & rect )
{
    LIBWRAP_EARLY_INIT( _ZNK10QMatrix4x47mapRectERK6QRectF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QMatrix4x47mapRectERK6QRectF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRectF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QMatrix4x47mapRectERK6QRectF, ( scorep_libwrap_arg_this, rect ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QMatrix4x47mapRectERK6QRectF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QMatrix4x48optimizeEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QMatrix4x48optimizeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN10QMatrix4x48optimizeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QMatrix4x48optimizeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QMatrix4x48optimizeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QMatrix4x48optimizeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _Zls6QDebugRK10QMatrix4x4
QDebug
SCOREP_LIBWRAP_FUNC_NAME( _Zls6QDebugRK10QMatrix4x4 )( QDebug dbg, const QMatrix4x4 & m )
{
    LIBWRAP_EARLY_INIT( _Zls6QDebugRK10QMatrix4x4 );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _Zls6QDebugRK10QMatrix4x4 );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDebug scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _Zls6QDebugRK10QMatrix4x4, ( dbg, m ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _Zls6QDebugRK10QMatrix4x4 );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZlsR11QDataStreamRK10QMatrix4x4
QDataStream &
SCOREP_LIBWRAP_FUNC_NAME( _ZlsR11QDataStreamRK10QMatrix4x4 )( QDataStream & scorep_libwrap_arg_1, const QMatrix4x4 & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _ZlsR11QDataStreamRK10QMatrix4x4 );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZlsR11QDataStreamRK10QMatrix4x4 );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDataStream & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZlsR11QDataStreamRK10QMatrix4x4, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZlsR11QDataStreamRK10QMatrix4x4 );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZrsR11QDataStreamR10QMatrix4x4
QDataStream &
SCOREP_LIBWRAP_FUNC_NAME( _ZrsR11QDataStreamR10QMatrix4x4 )( QDataStream & scorep_libwrap_arg_1, QMatrix4x4 & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _ZrsR11QDataStreamR10QMatrix4x4 );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZrsR11QDataStreamR10QMatrix4x4 );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDataStream & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZrsR11QDataStreamR10QMatrix4x4, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZrsR11QDataStreamR10QMatrix4x4 );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QOpenGLBufferC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QOpenGLBufferC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN13QOpenGLBufferC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QOpenGLBufferC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QOpenGLBufferC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QOpenGLBufferC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QOpenGLBufferC1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QOpenGLBufferC1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN13QOpenGLBufferC1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QOpenGLBufferC1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QOpenGLBufferC1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QOpenGLBufferC1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QOpenGLBufferC2ENS_4TypeE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QOpenGLBufferC2ENS_4TypeE )( void *scorep_libwrap_arg_this, QOpenGLBuffer::Type type )
{
    LIBWRAP_EARLY_INIT( _ZN13QOpenGLBufferC2ENS_4TypeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QOpenGLBufferC2ENS_4TypeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QOpenGLBufferC2ENS_4TypeE, ( scorep_libwrap_arg_this, type ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QOpenGLBufferC2ENS_4TypeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QOpenGLBufferC1ENS_4TypeE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QOpenGLBufferC1ENS_4TypeE )( void *scorep_libwrap_arg_this, QOpenGLBuffer::Type type )
{
    LIBWRAP_EARLY_INIT( _ZN13QOpenGLBufferC1ENS_4TypeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QOpenGLBufferC1ENS_4TypeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QOpenGLBufferC1ENS_4TypeE, ( scorep_libwrap_arg_this, type ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QOpenGLBufferC1ENS_4TypeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QOpenGLBufferC2ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QOpenGLBufferC2ERKS_ )( void *scorep_libwrap_arg_this, const QOpenGLBuffer & other )
{
    LIBWRAP_EARLY_INIT( _ZN13QOpenGLBufferC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QOpenGLBufferC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QOpenGLBufferC2ERKS_, ( scorep_libwrap_arg_this, other ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QOpenGLBufferC2ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QOpenGLBufferC1ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QOpenGLBufferC1ERKS_ )( void *scorep_libwrap_arg_this, const QOpenGLBuffer & other )
{
    LIBWRAP_EARLY_INIT( _ZN13QOpenGLBufferC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QOpenGLBufferC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QOpenGLBufferC1ERKS_, ( scorep_libwrap_arg_this, other ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QOpenGLBufferC1ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QOpenGLBufferD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QOpenGLBufferD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN13QOpenGLBufferD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QOpenGLBufferD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QOpenGLBufferD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QOpenGLBufferD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QOpenGLBufferD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QOpenGLBufferD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN13QOpenGLBufferD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QOpenGLBufferD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QOpenGLBufferD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QOpenGLBufferD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QOpenGLBufferaSERKS_
QOpenGLBuffer &
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QOpenGLBufferaSERKS_ )( void *scorep_libwrap_arg_this, const QOpenGLBuffer & other )
{
    LIBWRAP_EARLY_INIT( _ZN13QOpenGLBufferaSERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QOpenGLBufferaSERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QOpenGLBuffer & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN13QOpenGLBufferaSERKS_, ( scorep_libwrap_arg_this, other ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QOpenGLBufferaSERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QOpenGLBuffer4typeEv
QOpenGLBuffer::Type
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QOpenGLBuffer4typeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QOpenGLBuffer4typeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QOpenGLBuffer4typeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QOpenGLBuffer::Type scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QOpenGLBuffer4typeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QOpenGLBuffer4typeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QOpenGLBuffer12usagePatternEv
QOpenGLBuffer::UsagePattern
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QOpenGLBuffer12usagePatternEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QOpenGLBuffer12usagePatternEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QOpenGLBuffer12usagePatternEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QOpenGLBuffer::UsagePattern scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QOpenGLBuffer12usagePatternEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QOpenGLBuffer12usagePatternEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QOpenGLBuffer15setUsagePatternENS_12UsagePatternE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QOpenGLBuffer15setUsagePatternENS_12UsagePatternE )( void *scorep_libwrap_arg_this, QOpenGLBuffer::UsagePattern value )
{
    LIBWRAP_EARLY_INIT( _ZN13QOpenGLBuffer15setUsagePatternENS_12UsagePatternE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QOpenGLBuffer15setUsagePatternENS_12UsagePatternE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QOpenGLBuffer15setUsagePatternENS_12UsagePatternE, ( scorep_libwrap_arg_this, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QOpenGLBuffer15setUsagePatternENS_12UsagePatternE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QOpenGLBuffer6createEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QOpenGLBuffer6createEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN13QOpenGLBuffer6createEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QOpenGLBuffer6createEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN13QOpenGLBuffer6createEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QOpenGLBuffer6createEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QOpenGLBuffer9isCreatedEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QOpenGLBuffer9isCreatedEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QOpenGLBuffer9isCreatedEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QOpenGLBuffer9isCreatedEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QOpenGLBuffer9isCreatedEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QOpenGLBuffer9isCreatedEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QOpenGLBuffer7destroyEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QOpenGLBuffer7destroyEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN13QOpenGLBuffer7destroyEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QOpenGLBuffer7destroyEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QOpenGLBuffer7destroyEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QOpenGLBuffer7destroyEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QOpenGLBuffer4bindEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QOpenGLBuffer4bindEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN13QOpenGLBuffer4bindEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QOpenGLBuffer4bindEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN13QOpenGLBuffer4bindEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QOpenGLBuffer4bindEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QOpenGLBuffer7releaseEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QOpenGLBuffer7releaseEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN13QOpenGLBuffer7releaseEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QOpenGLBuffer7releaseEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QOpenGLBuffer7releaseEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QOpenGLBuffer7releaseEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QOpenGLBuffer7releaseENS_4TypeE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QOpenGLBuffer7releaseENS_4TypeE )( QOpenGLBuffer::Type type )
{
    LIBWRAP_EARLY_INIT( _ZN13QOpenGLBuffer7releaseENS_4TypeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QOpenGLBuffer7releaseENS_4TypeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QOpenGLBuffer7releaseENS_4TypeE, ( type ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QOpenGLBuffer7releaseENS_4TypeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK13QOpenGLBuffer8bufferIdEv
GLuint
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QOpenGLBuffer8bufferIdEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QOpenGLBuffer8bufferIdEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QOpenGLBuffer8bufferIdEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    GLuint scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QOpenGLBuffer8bufferIdEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QOpenGLBuffer8bufferIdEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QOpenGLBuffer4sizeEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QOpenGLBuffer4sizeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QOpenGLBuffer4sizeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QOpenGLBuffer4sizeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QOpenGLBuffer4sizeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QOpenGLBuffer4sizeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QOpenGLBuffer4readEiPvi
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QOpenGLBuffer4readEiPvi )( void *scorep_libwrap_arg_this, int offset, void * data, int count )
{
    LIBWRAP_EARLY_INIT( _ZN13QOpenGLBuffer4readEiPvi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QOpenGLBuffer4readEiPvi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN13QOpenGLBuffer4readEiPvi, ( scorep_libwrap_arg_this, offset, data, count ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QOpenGLBuffer4readEiPvi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QOpenGLBuffer5writeEiPKvi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QOpenGLBuffer5writeEiPKvi )( void *scorep_libwrap_arg_this, int offset, const void * data, int count )
{
    LIBWRAP_EARLY_INIT( _ZN13QOpenGLBuffer5writeEiPKvi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QOpenGLBuffer5writeEiPKvi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QOpenGLBuffer5writeEiPKvi, ( scorep_libwrap_arg_this, offset, data, count ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QOpenGLBuffer5writeEiPKvi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QOpenGLBuffer8allocateEPKvi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QOpenGLBuffer8allocateEPKvi )( void *scorep_libwrap_arg_this, const void * data, int count )
{
    LIBWRAP_EARLY_INIT( _ZN13QOpenGLBuffer8allocateEPKvi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QOpenGLBuffer8allocateEPKvi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QOpenGLBuffer8allocateEPKvi, ( scorep_libwrap_arg_this, data, count ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QOpenGLBuffer8allocateEPKvi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QOpenGLBuffer3mapENS_6AccessE
void *
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QOpenGLBuffer3mapENS_6AccessE )( void *scorep_libwrap_arg_this, QOpenGLBuffer::Access access )
{
    LIBWRAP_EARLY_INIT( _ZN13QOpenGLBuffer3mapENS_6AccessE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QOpenGLBuffer3mapENS_6AccessE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    void * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN13QOpenGLBuffer3mapENS_6AccessE, ( scorep_libwrap_arg_this, access ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QOpenGLBuffer3mapENS_6AccessE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QOpenGLBuffer8mapRangeEii6QFlagsINS_15RangeAccessFlagEE
void *
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QOpenGLBuffer8mapRangeEii6QFlagsINS_15RangeAccessFlagEE )( void *scorep_libwrap_arg_this, int offset, int count, QOpenGLBuffer::RangeAccessFlags access )
{
    LIBWRAP_EARLY_INIT( _ZN13QOpenGLBuffer8mapRangeEii6QFlagsINS_15RangeAccessFlagEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QOpenGLBuffer8mapRangeEii6QFlagsINS_15RangeAccessFlagEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    void * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN13QOpenGLBuffer8mapRangeEii6QFlagsINS_15RangeAccessFlagEE, ( scorep_libwrap_arg_this, offset, count, access ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QOpenGLBuffer8mapRangeEii6QFlagsINS_15RangeAccessFlagEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QOpenGLBuffer5unmapEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QOpenGLBuffer5unmapEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN13QOpenGLBuffer5unmapEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QOpenGLBuffer5unmapEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN13QOpenGLBuffer5unmapEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QOpenGLBuffer5unmapEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN19QOpenGLDebugMessageC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QOpenGLDebugMessageC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN19QOpenGLDebugMessageC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QOpenGLDebugMessageC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN19QOpenGLDebugMessageC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QOpenGLDebugMessageC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN19QOpenGLDebugMessageC1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QOpenGLDebugMessageC1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN19QOpenGLDebugMessageC1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QOpenGLDebugMessageC1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN19QOpenGLDebugMessageC1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QOpenGLDebugMessageC1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN19QOpenGLDebugMessageC2ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QOpenGLDebugMessageC2ERKS_ )( void *scorep_libwrap_arg_this, const QOpenGLDebugMessage & debugMessage )
{
    LIBWRAP_EARLY_INIT( _ZN19QOpenGLDebugMessageC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QOpenGLDebugMessageC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN19QOpenGLDebugMessageC2ERKS_, ( scorep_libwrap_arg_this, debugMessage ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QOpenGLDebugMessageC2ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN19QOpenGLDebugMessageC1ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QOpenGLDebugMessageC1ERKS_ )( void *scorep_libwrap_arg_this, const QOpenGLDebugMessage & debugMessage )
{
    LIBWRAP_EARLY_INIT( _ZN19QOpenGLDebugMessageC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QOpenGLDebugMessageC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN19QOpenGLDebugMessageC1ERKS_, ( scorep_libwrap_arg_this, debugMessage ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QOpenGLDebugMessageC1ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN19QOpenGLDebugMessageaSERKS_
QOpenGLDebugMessage &
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QOpenGLDebugMessageaSERKS_ )( void *scorep_libwrap_arg_this, const QOpenGLDebugMessage & debugMessage )
{
    LIBWRAP_EARLY_INIT( _ZN19QOpenGLDebugMessageaSERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QOpenGLDebugMessageaSERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QOpenGLDebugMessage & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN19QOpenGLDebugMessageaSERKS_, ( scorep_libwrap_arg_this, debugMessage ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QOpenGLDebugMessageaSERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK19QOpenGLDebugMessage4typeEv
QOpenGLDebugMessage::Type
SCOREP_LIBWRAP_FUNC_NAME( _ZNK19QOpenGLDebugMessage4typeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK19QOpenGLDebugMessage4typeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK19QOpenGLDebugMessage4typeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QOpenGLDebugMessage::Type scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK19QOpenGLDebugMessage4typeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK19QOpenGLDebugMessage4typeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK19QOpenGLDebugMessage8severityEv
QOpenGLDebugMessage::Severity
SCOREP_LIBWRAP_FUNC_NAME( _ZNK19QOpenGLDebugMessage8severityEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK19QOpenGLDebugMessage8severityEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK19QOpenGLDebugMessage8severityEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QOpenGLDebugMessage::Severity scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK19QOpenGLDebugMessage8severityEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK19QOpenGLDebugMessage8severityEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK19QOpenGLDebugMessage2idEv
GLuint
SCOREP_LIBWRAP_FUNC_NAME( _ZNK19QOpenGLDebugMessage2idEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK19QOpenGLDebugMessage2idEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK19QOpenGLDebugMessage2idEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    GLuint scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK19QOpenGLDebugMessage2idEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK19QOpenGLDebugMessage2idEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK19QOpenGLDebugMessage7messageEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK19QOpenGLDebugMessage7messageEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK19QOpenGLDebugMessage7messageEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK19QOpenGLDebugMessage7messageEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK19QOpenGLDebugMessage7messageEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK19QOpenGLDebugMessage7messageEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN19QOpenGLDebugMessage24createApplicationMessageERK7QStringjNS_8SeverityENS_4TypeE
QOpenGLDebugMessage
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QOpenGLDebugMessage24createApplicationMessageERK7QStringjNS_8SeverityENS_4TypeE )( const QString & text, GLuint id, QOpenGLDebugMessage::Severity severity, QOpenGLDebugMessage::Type type )
{
    LIBWRAP_EARLY_INIT( _ZN19QOpenGLDebugMessage24createApplicationMessageERK7QStringjNS_8SeverityENS_4TypeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QOpenGLDebugMessage24createApplicationMessageERK7QStringjNS_8SeverityENS_4TypeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QOpenGLDebugMessage scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN19QOpenGLDebugMessage24createApplicationMessageERK7QStringjNS_8SeverityENS_4TypeE, ( text, id, severity, type ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QOpenGLDebugMessage24createApplicationMessageERK7QStringjNS_8SeverityENS_4TypeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN19QOpenGLDebugMessage23createThirdPartyMessageERK7QStringjNS_8SeverityENS_4TypeE
QOpenGLDebugMessage
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QOpenGLDebugMessage23createThirdPartyMessageERK7QStringjNS_8SeverityENS_4TypeE )( const QString & text, GLuint id, QOpenGLDebugMessage::Severity severity, QOpenGLDebugMessage::Type type )
{
    LIBWRAP_EARLY_INIT( _ZN19QOpenGLDebugMessage23createThirdPartyMessageERK7QStringjNS_8SeverityENS_4TypeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QOpenGLDebugMessage23createThirdPartyMessageERK7QStringjNS_8SeverityENS_4TypeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QOpenGLDebugMessage scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN19QOpenGLDebugMessage23createThirdPartyMessageERK7QStringjNS_8SeverityENS_4TypeE, ( text, id, severity, type ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QOpenGLDebugMessage23createThirdPartyMessageERK7QStringjNS_8SeverityENS_4TypeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK19QOpenGLDebugMessageeqERKS_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK19QOpenGLDebugMessageeqERKS_ )( void *scorep_libwrap_arg_this, const QOpenGLDebugMessage & debugMessage )
{
    LIBWRAP_EARLY_INIT( _ZNK19QOpenGLDebugMessageeqERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK19QOpenGLDebugMessageeqERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK19QOpenGLDebugMessageeqERKS_, ( scorep_libwrap_arg_this, debugMessage ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK19QOpenGLDebugMessageeqERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _Zls6QDebugN19QOpenGLDebugMessage6SourceE
QDebug
SCOREP_LIBWRAP_FUNC_NAME( _Zls6QDebugN19QOpenGLDebugMessage6SourceE )( QDebug debug, QOpenGLDebugMessage::Source source )
{
    LIBWRAP_EARLY_INIT( _Zls6QDebugN19QOpenGLDebugMessage6SourceE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _Zls6QDebugN19QOpenGLDebugMessage6SourceE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDebug scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _Zls6QDebugN19QOpenGLDebugMessage6SourceE, ( debug, source ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _Zls6QDebugN19QOpenGLDebugMessage6SourceE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _Zls6QDebugN19QOpenGLDebugMessage4TypeE
QDebug
SCOREP_LIBWRAP_FUNC_NAME( _Zls6QDebugN19QOpenGLDebugMessage4TypeE )( QDebug debug, QOpenGLDebugMessage::Type type )
{
    LIBWRAP_EARLY_INIT( _Zls6QDebugN19QOpenGLDebugMessage4TypeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _Zls6QDebugN19QOpenGLDebugMessage4TypeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDebug scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _Zls6QDebugN19QOpenGLDebugMessage4TypeE, ( debug, type ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _Zls6QDebugN19QOpenGLDebugMessage4TypeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _Zls6QDebugN19QOpenGLDebugMessage8SeverityE
QDebug
SCOREP_LIBWRAP_FUNC_NAME( _Zls6QDebugN19QOpenGLDebugMessage8SeverityE )( QDebug debug, QOpenGLDebugMessage::Severity severity )
{
    LIBWRAP_EARLY_INIT( _Zls6QDebugN19QOpenGLDebugMessage8SeverityE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _Zls6QDebugN19QOpenGLDebugMessage8SeverityE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDebug scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _Zls6QDebugN19QOpenGLDebugMessage8SeverityE, ( debug, severity ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _Zls6QDebugN19QOpenGLDebugMessage8SeverityE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK18QOpenGLDebugLogger10metaObjectEv
const QMetaObject *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK18QOpenGLDebugLogger10metaObjectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK18QOpenGLDebugLogger10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK18QOpenGLDebugLogger10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QMetaObject * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK18QOpenGLDebugLogger10metaObjectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK18QOpenGLDebugLogger10metaObjectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN18QOpenGLDebugLogger11qt_metacastEPKc
void *
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QOpenGLDebugLogger11qt_metacastEPKc )( void *scorep_libwrap_arg_this, const char * scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN18QOpenGLDebugLogger11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QOpenGLDebugLogger11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    void * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN18QOpenGLDebugLogger11qt_metacastEPKc, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QOpenGLDebugLogger11qt_metacastEPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN18QOpenGLDebugLogger11qt_metacallEN11QMetaObject4CallEiPPv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QOpenGLDebugLogger11qt_metacallEN11QMetaObject4CallEiPPv )( void *scorep_libwrap_arg_this, QMetaObject::Call scorep_libwrap_arg_1, int scorep_libwrap_arg_2, void ** scorep_libwrap_arg_3 )
{
    LIBWRAP_EARLY_INIT( _ZN18QOpenGLDebugLogger11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QOpenGLDebugLogger11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN18QOpenGLDebugLogger11qt_metacallEN11QMetaObject4CallEiPPv, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, scorep_libwrap_arg_2, scorep_libwrap_arg_3 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QOpenGLDebugLogger11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN18QOpenGLDebugLoggerD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QOpenGLDebugLoggerD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN18QOpenGLDebugLoggerD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QOpenGLDebugLoggerD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QOpenGLDebugLoggerD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QOpenGLDebugLoggerD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN18QOpenGLDebugLoggerD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QOpenGLDebugLoggerD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN18QOpenGLDebugLoggerD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QOpenGLDebugLoggerD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QOpenGLDebugLoggerD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QOpenGLDebugLoggerD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN18QOpenGLDebugLoggerD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QOpenGLDebugLoggerD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN18QOpenGLDebugLoggerD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QOpenGLDebugLoggerD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QOpenGLDebugLoggerD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QOpenGLDebugLoggerD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN18QOpenGLDebugLogger10initializeEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QOpenGLDebugLogger10initializeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN18QOpenGLDebugLogger10initializeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QOpenGLDebugLogger10initializeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN18QOpenGLDebugLogger10initializeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QOpenGLDebugLogger10initializeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK18QOpenGLDebugLogger9isLoggingEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK18QOpenGLDebugLogger9isLoggingEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK18QOpenGLDebugLogger9isLoggingEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK18QOpenGLDebugLogger9isLoggingEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK18QOpenGLDebugLogger9isLoggingEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK18QOpenGLDebugLogger9isLoggingEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK18QOpenGLDebugLogger11loggingModeEv
QOpenGLDebugLogger::LoggingMode
SCOREP_LIBWRAP_FUNC_NAME( _ZNK18QOpenGLDebugLogger11loggingModeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK18QOpenGLDebugLogger11loggingModeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK18QOpenGLDebugLogger11loggingModeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QOpenGLDebugLogger::LoggingMode scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK18QOpenGLDebugLogger11loggingModeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK18QOpenGLDebugLogger11loggingModeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK18QOpenGLDebugLogger20maximumMessageLengthEv
qint64
SCOREP_LIBWRAP_FUNC_NAME( _ZNK18QOpenGLDebugLogger20maximumMessageLengthEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK18QOpenGLDebugLogger20maximumMessageLengthEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK18QOpenGLDebugLogger20maximumMessageLengthEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qint64 scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK18QOpenGLDebugLogger20maximumMessageLengthEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK18QOpenGLDebugLogger20maximumMessageLengthEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN18QOpenGLDebugLogger9pushGroupERK7QStringjN19QOpenGLDebugMessage6SourceE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QOpenGLDebugLogger9pushGroupERK7QStringjN19QOpenGLDebugMessage6SourceE )( void *scorep_libwrap_arg_this, const QString & name, GLuint id, QOpenGLDebugMessage::Source source )
{
    LIBWRAP_EARLY_INIT( _ZN18QOpenGLDebugLogger9pushGroupERK7QStringjN19QOpenGLDebugMessage6SourceE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QOpenGLDebugLogger9pushGroupERK7QStringjN19QOpenGLDebugMessage6SourceE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QOpenGLDebugLogger9pushGroupERK7QStringjN19QOpenGLDebugMessage6SourceE, ( scorep_libwrap_arg_this, name, id, source ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QOpenGLDebugLogger9pushGroupERK7QStringjN19QOpenGLDebugMessage6SourceE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN18QOpenGLDebugLogger8popGroupEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QOpenGLDebugLogger8popGroupEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN18QOpenGLDebugLogger8popGroupEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QOpenGLDebugLogger8popGroupEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QOpenGLDebugLogger8popGroupEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QOpenGLDebugLogger8popGroupEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN18QOpenGLDebugLogger14enableMessagesE6QFlagsIN19QOpenGLDebugMessage6SourceEES0_INS1_4TypeEES0_INS1_8SeverityEE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QOpenGLDebugLogger14enableMessagesE6QFlagsIN19QOpenGLDebugMessage6SourceEES0_INS1_4TypeEES0_INS1_8SeverityEE )( void *scorep_libwrap_arg_this, QOpenGLDebugMessage::Sources sources, QOpenGLDebugMessage::Types types, QOpenGLDebugMessage::Severities severities )
{
    LIBWRAP_EARLY_INIT( _ZN18QOpenGLDebugLogger14enableMessagesE6QFlagsIN19QOpenGLDebugMessage6SourceEES0_INS1_4TypeEES0_INS1_8SeverityEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QOpenGLDebugLogger14enableMessagesE6QFlagsIN19QOpenGLDebugMessage6SourceEES0_INS1_4TypeEES0_INS1_8SeverityEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QOpenGLDebugLogger14enableMessagesE6QFlagsIN19QOpenGLDebugMessage6SourceEES0_INS1_4TypeEES0_INS1_8SeverityEE, ( scorep_libwrap_arg_this, sources, types, severities ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QOpenGLDebugLogger14enableMessagesE6QFlagsIN19QOpenGLDebugMessage6SourceEES0_INS1_4TypeEES0_INS1_8SeverityEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN18QOpenGLDebugLogger14enableMessagesERK7QVectorIjE6QFlagsIN19QOpenGLDebugMessage6SourceEES4_INS5_4TypeEE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QOpenGLDebugLogger14enableMessagesERK7QVectorIjE6QFlagsIN19QOpenGLDebugMessage6SourceEES4_INS5_4TypeEE )( void *scorep_libwrap_arg_this, const QVector<GLuint> & ids, QOpenGLDebugMessage::Sources sources, QOpenGLDebugMessage::Types types )
{
    LIBWRAP_EARLY_INIT( _ZN18QOpenGLDebugLogger14enableMessagesERK7QVectorIjE6QFlagsIN19QOpenGLDebugMessage6SourceEES4_INS5_4TypeEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QOpenGLDebugLogger14enableMessagesERK7QVectorIjE6QFlagsIN19QOpenGLDebugMessage6SourceEES4_INS5_4TypeEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QOpenGLDebugLogger14enableMessagesERK7QVectorIjE6QFlagsIN19QOpenGLDebugMessage6SourceEES4_INS5_4TypeEE, ( scorep_libwrap_arg_this, ids, sources, types ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QOpenGLDebugLogger14enableMessagesERK7QVectorIjE6QFlagsIN19QOpenGLDebugMessage6SourceEES4_INS5_4TypeEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN18QOpenGLDebugLogger15disableMessagesE6QFlagsIN19QOpenGLDebugMessage6SourceEES0_INS1_4TypeEES0_INS1_8SeverityEE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QOpenGLDebugLogger15disableMessagesE6QFlagsIN19QOpenGLDebugMessage6SourceEES0_INS1_4TypeEES0_INS1_8SeverityEE )( void *scorep_libwrap_arg_this, QOpenGLDebugMessage::Sources sources, QOpenGLDebugMessage::Types types, QOpenGLDebugMessage::Severities severities )
{
    LIBWRAP_EARLY_INIT( _ZN18QOpenGLDebugLogger15disableMessagesE6QFlagsIN19QOpenGLDebugMessage6SourceEES0_INS1_4TypeEES0_INS1_8SeverityEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QOpenGLDebugLogger15disableMessagesE6QFlagsIN19QOpenGLDebugMessage6SourceEES0_INS1_4TypeEES0_INS1_8SeverityEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QOpenGLDebugLogger15disableMessagesE6QFlagsIN19QOpenGLDebugMessage6SourceEES0_INS1_4TypeEES0_INS1_8SeverityEE, ( scorep_libwrap_arg_this, sources, types, severities ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QOpenGLDebugLogger15disableMessagesE6QFlagsIN19QOpenGLDebugMessage6SourceEES0_INS1_4TypeEES0_INS1_8SeverityEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN18QOpenGLDebugLogger15disableMessagesERK7QVectorIjE6QFlagsIN19QOpenGLDebugMessage6SourceEES4_INS5_4TypeEE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QOpenGLDebugLogger15disableMessagesERK7QVectorIjE6QFlagsIN19QOpenGLDebugMessage6SourceEES4_INS5_4TypeEE )( void *scorep_libwrap_arg_this, const QVector<GLuint> & ids, QOpenGLDebugMessage::Sources sources, QOpenGLDebugMessage::Types types )
{
    LIBWRAP_EARLY_INIT( _ZN18QOpenGLDebugLogger15disableMessagesERK7QVectorIjE6QFlagsIN19QOpenGLDebugMessage6SourceEES4_INS5_4TypeEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QOpenGLDebugLogger15disableMessagesERK7QVectorIjE6QFlagsIN19QOpenGLDebugMessage6SourceEES4_INS5_4TypeEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QOpenGLDebugLogger15disableMessagesERK7QVectorIjE6QFlagsIN19QOpenGLDebugMessage6SourceEES4_INS5_4TypeEE, ( scorep_libwrap_arg_this, ids, sources, types ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QOpenGLDebugLogger15disableMessagesERK7QVectorIjE6QFlagsIN19QOpenGLDebugMessage6SourceEES4_INS5_4TypeEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK18QOpenGLDebugLogger14loggedMessagesEv
QList<QOpenGLDebugMessage>
SCOREP_LIBWRAP_FUNC_NAME( _ZNK18QOpenGLDebugLogger14loggedMessagesEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK18QOpenGLDebugLogger14loggedMessagesEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK18QOpenGLDebugLogger14loggedMessagesEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QList<QOpenGLDebugMessage> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK18QOpenGLDebugLogger14loggedMessagesEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK18QOpenGLDebugLogger14loggedMessagesEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN18QOpenGLDebugLogger10logMessageERK19QOpenGLDebugMessage
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QOpenGLDebugLogger10logMessageERK19QOpenGLDebugMessage )( void *scorep_libwrap_arg_this, const QOpenGLDebugMessage & debugMessage )
{
    LIBWRAP_EARLY_INIT( _ZN18QOpenGLDebugLogger10logMessageERK19QOpenGLDebugMessage );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QOpenGLDebugLogger10logMessageERK19QOpenGLDebugMessage );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QOpenGLDebugLogger10logMessageERK19QOpenGLDebugMessage, ( scorep_libwrap_arg_this, debugMessage ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QOpenGLDebugLogger10logMessageERK19QOpenGLDebugMessage );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN18QOpenGLDebugLogger12startLoggingENS_11LoggingModeE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QOpenGLDebugLogger12startLoggingENS_11LoggingModeE )( void *scorep_libwrap_arg_this, QOpenGLDebugLogger::LoggingMode loggingMode )
{
    LIBWRAP_EARLY_INIT( _ZN18QOpenGLDebugLogger12startLoggingENS_11LoggingModeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QOpenGLDebugLogger12startLoggingENS_11LoggingModeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QOpenGLDebugLogger12startLoggingENS_11LoggingModeE, ( scorep_libwrap_arg_this, loggingMode ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QOpenGLDebugLogger12startLoggingENS_11LoggingModeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN18QOpenGLDebugLogger11stopLoggingEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QOpenGLDebugLogger11stopLoggingEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN18QOpenGLDebugLogger11stopLoggingEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QOpenGLDebugLogger11stopLoggingEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QOpenGLDebugLogger11stopLoggingEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QOpenGLDebugLogger11stopLoggingEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN18QOpenGLDebugLogger13messageLoggedERK19QOpenGLDebugMessage
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QOpenGLDebugLogger13messageLoggedERK19QOpenGLDebugMessage )( void *scorep_libwrap_arg_this, const QOpenGLDebugMessage & debugMessage )
{
    LIBWRAP_EARLY_INIT( _ZN18QOpenGLDebugLogger13messageLoggedERK19QOpenGLDebugMessage );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QOpenGLDebugLogger13messageLoggedERK19QOpenGLDebugMessage );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QOpenGLDebugLogger13messageLoggedERK19QOpenGLDebugMessage, ( scorep_libwrap_arg_this, debugMessage ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QOpenGLDebugLogger13messageLoggedERK19QOpenGLDebugMessage );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN16QOpenGLFunctionsC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN16QOpenGLFunctionsC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN16QOpenGLFunctionsC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN16QOpenGLFunctionsC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN16QOpenGLFunctionsC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN16QOpenGLFunctionsC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN16QOpenGLFunctionsC1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN16QOpenGLFunctionsC1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN16QOpenGLFunctionsC1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN16QOpenGLFunctionsC1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN16QOpenGLFunctionsC1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN16QOpenGLFunctionsC1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN16QOpenGLFunctionsC2EP14QOpenGLContext
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN16QOpenGLFunctionsC2EP14QOpenGLContext )( void *scorep_libwrap_arg_this, QOpenGLContext * context )
{
    LIBWRAP_EARLY_INIT( _ZN16QOpenGLFunctionsC2EP14QOpenGLContext );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN16QOpenGLFunctionsC2EP14QOpenGLContext );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN16QOpenGLFunctionsC2EP14QOpenGLContext, ( scorep_libwrap_arg_this, context ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN16QOpenGLFunctionsC2EP14QOpenGLContext );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN16QOpenGLFunctionsC1EP14QOpenGLContext
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN16QOpenGLFunctionsC1EP14QOpenGLContext )( void *scorep_libwrap_arg_this, QOpenGLContext * context )
{
    LIBWRAP_EARLY_INIT( _ZN16QOpenGLFunctionsC1EP14QOpenGLContext );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN16QOpenGLFunctionsC1EP14QOpenGLContext );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN16QOpenGLFunctionsC1EP14QOpenGLContext, ( scorep_libwrap_arg_this, context ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN16QOpenGLFunctionsC1EP14QOpenGLContext );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK16QOpenGLFunctions14openGLFeaturesEv
QOpenGLFunctions::OpenGLFeatures
SCOREP_LIBWRAP_FUNC_NAME( _ZNK16QOpenGLFunctions14openGLFeaturesEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK16QOpenGLFunctions14openGLFeaturesEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK16QOpenGLFunctions14openGLFeaturesEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QOpenGLFunctions::OpenGLFeatures scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK16QOpenGLFunctions14openGLFeaturesEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK16QOpenGLFunctions14openGLFeaturesEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK16QOpenGLFunctions16hasOpenGLFeatureENS_13OpenGLFeatureE
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK16QOpenGLFunctions16hasOpenGLFeatureENS_13OpenGLFeatureE )( void *scorep_libwrap_arg_this, QOpenGLFunctions::OpenGLFeature feature )
{
    LIBWRAP_EARLY_INIT( _ZNK16QOpenGLFunctions16hasOpenGLFeatureENS_13OpenGLFeatureE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK16QOpenGLFunctions16hasOpenGLFeatureENS_13OpenGLFeatureE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK16QOpenGLFunctions16hasOpenGLFeatureENS_13OpenGLFeatureE, ( scorep_libwrap_arg_this, feature ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK16QOpenGLFunctions16hasOpenGLFeatureENS_13OpenGLFeatureE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN16QOpenGLFunctions25initializeOpenGLFunctionsEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN16QOpenGLFunctions25initializeOpenGLFunctionsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN16QOpenGLFunctions25initializeOpenGLFunctionsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN16QOpenGLFunctions25initializeOpenGLFunctionsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN16QOpenGLFunctions25initializeOpenGLFunctionsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN16QOpenGLFunctions25initializeOpenGLFunctionsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN21QOpenGLExtraFunctionsC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN21QOpenGLExtraFunctionsC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN21QOpenGLExtraFunctionsC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN21QOpenGLExtraFunctionsC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN21QOpenGLExtraFunctionsC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN21QOpenGLExtraFunctionsC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN21QOpenGLExtraFunctionsC1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN21QOpenGLExtraFunctionsC1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN21QOpenGLExtraFunctionsC1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN21QOpenGLExtraFunctionsC1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN21QOpenGLExtraFunctionsC1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN21QOpenGLExtraFunctionsC1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN21QOpenGLExtraFunctionsC2EP14QOpenGLContext
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN21QOpenGLExtraFunctionsC2EP14QOpenGLContext )( void *scorep_libwrap_arg_this, QOpenGLContext * context )
{
    LIBWRAP_EARLY_INIT( _ZN21QOpenGLExtraFunctionsC2EP14QOpenGLContext );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN21QOpenGLExtraFunctionsC2EP14QOpenGLContext );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN21QOpenGLExtraFunctionsC2EP14QOpenGLContext, ( scorep_libwrap_arg_this, context ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN21QOpenGLExtraFunctionsC2EP14QOpenGLContext );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN21QOpenGLExtraFunctionsC1EP14QOpenGLContext
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN21QOpenGLExtraFunctionsC1EP14QOpenGLContext )( void *scorep_libwrap_arg_this, QOpenGLContext * context )
{
    LIBWRAP_EARLY_INIT( _ZN21QOpenGLExtraFunctionsC1EP14QOpenGLContext );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN21QOpenGLExtraFunctionsC1EP14QOpenGLContext );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN21QOpenGLExtraFunctionsC1EP14QOpenGLContext, ( scorep_libwrap_arg_this, context ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN21QOpenGLExtraFunctionsC1EP14QOpenGLContext );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN24QOpenGLFramebufferObjectC2ERK5QSizej
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN24QOpenGLFramebufferObjectC2ERK5QSizej )( void *scorep_libwrap_arg_this, const QSize & size, GLenum target )
{
    LIBWRAP_EARLY_INIT( _ZN24QOpenGLFramebufferObjectC2ERK5QSizej );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN24QOpenGLFramebufferObjectC2ERK5QSizej );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN24QOpenGLFramebufferObjectC2ERK5QSizej, ( scorep_libwrap_arg_this, size, target ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN24QOpenGLFramebufferObjectC2ERK5QSizej );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN24QOpenGLFramebufferObjectC1ERK5QSizej
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN24QOpenGLFramebufferObjectC1ERK5QSizej )( void *scorep_libwrap_arg_this, const QSize & size, GLenum target )
{
    LIBWRAP_EARLY_INIT( _ZN24QOpenGLFramebufferObjectC1ERK5QSizej );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN24QOpenGLFramebufferObjectC1ERK5QSizej );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN24QOpenGLFramebufferObjectC1ERK5QSizej, ( scorep_libwrap_arg_this, size, target ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN24QOpenGLFramebufferObjectC1ERK5QSizej );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN24QOpenGLFramebufferObjectC2Eiij
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN24QOpenGLFramebufferObjectC2Eiij )( void *scorep_libwrap_arg_this, int width, int height, GLenum target )
{
    LIBWRAP_EARLY_INIT( _ZN24QOpenGLFramebufferObjectC2Eiij );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN24QOpenGLFramebufferObjectC2Eiij );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN24QOpenGLFramebufferObjectC2Eiij, ( scorep_libwrap_arg_this, width, height, target ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN24QOpenGLFramebufferObjectC2Eiij );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN24QOpenGLFramebufferObjectC1Eiij
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN24QOpenGLFramebufferObjectC1Eiij )( void *scorep_libwrap_arg_this, int width, int height, GLenum target )
{
    LIBWRAP_EARLY_INIT( _ZN24QOpenGLFramebufferObjectC1Eiij );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN24QOpenGLFramebufferObjectC1Eiij );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN24QOpenGLFramebufferObjectC1Eiij, ( scorep_libwrap_arg_this, width, height, target ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN24QOpenGLFramebufferObjectC1Eiij );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN24QOpenGLFramebufferObjectC2ERK5QSizeNS_10AttachmentEjj
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN24QOpenGLFramebufferObjectC2ERK5QSizeNS_10AttachmentEjj )( void *scorep_libwrap_arg_this, const QSize & size, QOpenGLFramebufferObject::Attachment attachment, GLenum target, GLenum internalFormat )
{
    LIBWRAP_EARLY_INIT( _ZN24QOpenGLFramebufferObjectC2ERK5QSizeNS_10AttachmentEjj );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN24QOpenGLFramebufferObjectC2ERK5QSizeNS_10AttachmentEjj );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN24QOpenGLFramebufferObjectC2ERK5QSizeNS_10AttachmentEjj, ( scorep_libwrap_arg_this, size, attachment, target, internalFormat ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN24QOpenGLFramebufferObjectC2ERK5QSizeNS_10AttachmentEjj );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN24QOpenGLFramebufferObjectC1ERK5QSizeNS_10AttachmentEjj
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN24QOpenGLFramebufferObjectC1ERK5QSizeNS_10AttachmentEjj )( void *scorep_libwrap_arg_this, const QSize & size, QOpenGLFramebufferObject::Attachment attachment, GLenum target, GLenum internalFormat )
{
    LIBWRAP_EARLY_INIT( _ZN24QOpenGLFramebufferObjectC1ERK5QSizeNS_10AttachmentEjj );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN24QOpenGLFramebufferObjectC1ERK5QSizeNS_10AttachmentEjj );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN24QOpenGLFramebufferObjectC1ERK5QSizeNS_10AttachmentEjj, ( scorep_libwrap_arg_this, size, attachment, target, internalFormat ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN24QOpenGLFramebufferObjectC1ERK5QSizeNS_10AttachmentEjj );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN24QOpenGLFramebufferObjectC2EiiNS_10AttachmentEjj
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN24QOpenGLFramebufferObjectC2EiiNS_10AttachmentEjj )( void *scorep_libwrap_arg_this, int width, int height, QOpenGLFramebufferObject::Attachment attachment, GLenum target, GLenum internalFormat )
{
    LIBWRAP_EARLY_INIT( _ZN24QOpenGLFramebufferObjectC2EiiNS_10AttachmentEjj );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN24QOpenGLFramebufferObjectC2EiiNS_10AttachmentEjj );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN24QOpenGLFramebufferObjectC2EiiNS_10AttachmentEjj, ( scorep_libwrap_arg_this, width, height, attachment, target, internalFormat ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN24QOpenGLFramebufferObjectC2EiiNS_10AttachmentEjj );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN24QOpenGLFramebufferObjectC1EiiNS_10AttachmentEjj
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN24QOpenGLFramebufferObjectC1EiiNS_10AttachmentEjj )( void *scorep_libwrap_arg_this, int width, int height, QOpenGLFramebufferObject::Attachment attachment, GLenum target, GLenum internalFormat )
{
    LIBWRAP_EARLY_INIT( _ZN24QOpenGLFramebufferObjectC1EiiNS_10AttachmentEjj );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN24QOpenGLFramebufferObjectC1EiiNS_10AttachmentEjj );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN24QOpenGLFramebufferObjectC1EiiNS_10AttachmentEjj, ( scorep_libwrap_arg_this, width, height, attachment, target, internalFormat ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN24QOpenGLFramebufferObjectC1EiiNS_10AttachmentEjj );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN24QOpenGLFramebufferObjectC2ERK5QSizeRK30QOpenGLFramebufferObjectFormat
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN24QOpenGLFramebufferObjectC2ERK5QSizeRK30QOpenGLFramebufferObjectFormat )( void *scorep_libwrap_arg_this, const QSize & size, const QOpenGLFramebufferObjectFormat & format )
{
    LIBWRAP_EARLY_INIT( _ZN24QOpenGLFramebufferObjectC2ERK5QSizeRK30QOpenGLFramebufferObjectFormat );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN24QOpenGLFramebufferObjectC2ERK5QSizeRK30QOpenGLFramebufferObjectFormat );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN24QOpenGLFramebufferObjectC2ERK5QSizeRK30QOpenGLFramebufferObjectFormat, ( scorep_libwrap_arg_this, size, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN24QOpenGLFramebufferObjectC2ERK5QSizeRK30QOpenGLFramebufferObjectFormat );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN24QOpenGLFramebufferObjectC1ERK5QSizeRK30QOpenGLFramebufferObjectFormat
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN24QOpenGLFramebufferObjectC1ERK5QSizeRK30QOpenGLFramebufferObjectFormat )( void *scorep_libwrap_arg_this, const QSize & size, const QOpenGLFramebufferObjectFormat & format )
{
    LIBWRAP_EARLY_INIT( _ZN24QOpenGLFramebufferObjectC1ERK5QSizeRK30QOpenGLFramebufferObjectFormat );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN24QOpenGLFramebufferObjectC1ERK5QSizeRK30QOpenGLFramebufferObjectFormat );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN24QOpenGLFramebufferObjectC1ERK5QSizeRK30QOpenGLFramebufferObjectFormat, ( scorep_libwrap_arg_this, size, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN24QOpenGLFramebufferObjectC1ERK5QSizeRK30QOpenGLFramebufferObjectFormat );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN24QOpenGLFramebufferObjectC2EiiRK30QOpenGLFramebufferObjectFormat
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN24QOpenGLFramebufferObjectC2EiiRK30QOpenGLFramebufferObjectFormat )( void *scorep_libwrap_arg_this, int width, int height, const QOpenGLFramebufferObjectFormat & format )
{
    LIBWRAP_EARLY_INIT( _ZN24QOpenGLFramebufferObjectC2EiiRK30QOpenGLFramebufferObjectFormat );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN24QOpenGLFramebufferObjectC2EiiRK30QOpenGLFramebufferObjectFormat );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN24QOpenGLFramebufferObjectC2EiiRK30QOpenGLFramebufferObjectFormat, ( scorep_libwrap_arg_this, width, height, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN24QOpenGLFramebufferObjectC2EiiRK30QOpenGLFramebufferObjectFormat );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN24QOpenGLFramebufferObjectC1EiiRK30QOpenGLFramebufferObjectFormat
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN24QOpenGLFramebufferObjectC1EiiRK30QOpenGLFramebufferObjectFormat )( void *scorep_libwrap_arg_this, int width, int height, const QOpenGLFramebufferObjectFormat & format )
{
    LIBWRAP_EARLY_INIT( _ZN24QOpenGLFramebufferObjectC1EiiRK30QOpenGLFramebufferObjectFormat );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN24QOpenGLFramebufferObjectC1EiiRK30QOpenGLFramebufferObjectFormat );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN24QOpenGLFramebufferObjectC1EiiRK30QOpenGLFramebufferObjectFormat, ( scorep_libwrap_arg_this, width, height, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN24QOpenGLFramebufferObjectC1EiiRK30QOpenGLFramebufferObjectFormat );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN24QOpenGLFramebufferObjectD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN24QOpenGLFramebufferObjectD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN24QOpenGLFramebufferObjectD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN24QOpenGLFramebufferObjectD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN24QOpenGLFramebufferObjectD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN24QOpenGLFramebufferObjectD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN24QOpenGLFramebufferObjectD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN24QOpenGLFramebufferObjectD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN24QOpenGLFramebufferObjectD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN24QOpenGLFramebufferObjectD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN24QOpenGLFramebufferObjectD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN24QOpenGLFramebufferObjectD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN24QOpenGLFramebufferObjectD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN24QOpenGLFramebufferObjectD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN24QOpenGLFramebufferObjectD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN24QOpenGLFramebufferObjectD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN24QOpenGLFramebufferObjectD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN24QOpenGLFramebufferObjectD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN24QOpenGLFramebufferObject18addColorAttachmentERK5QSizej
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN24QOpenGLFramebufferObject18addColorAttachmentERK5QSizej )( void *scorep_libwrap_arg_this, const QSize & size, GLenum internalFormat )
{
    LIBWRAP_EARLY_INIT( _ZN24QOpenGLFramebufferObject18addColorAttachmentERK5QSizej );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN24QOpenGLFramebufferObject18addColorAttachmentERK5QSizej );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN24QOpenGLFramebufferObject18addColorAttachmentERK5QSizej, ( scorep_libwrap_arg_this, size, internalFormat ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN24QOpenGLFramebufferObject18addColorAttachmentERK5QSizej );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN24QOpenGLFramebufferObject18addColorAttachmentEiij
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN24QOpenGLFramebufferObject18addColorAttachmentEiij )( void *scorep_libwrap_arg_this, int width, int height, GLenum internalFormat )
{
    LIBWRAP_EARLY_INIT( _ZN24QOpenGLFramebufferObject18addColorAttachmentEiij );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN24QOpenGLFramebufferObject18addColorAttachmentEiij );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN24QOpenGLFramebufferObject18addColorAttachmentEiij, ( scorep_libwrap_arg_this, width, height, internalFormat ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN24QOpenGLFramebufferObject18addColorAttachmentEiij );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK24QOpenGLFramebufferObject6formatEv
QOpenGLFramebufferObjectFormat
SCOREP_LIBWRAP_FUNC_NAME( _ZNK24QOpenGLFramebufferObject6formatEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK24QOpenGLFramebufferObject6formatEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK24QOpenGLFramebufferObject6formatEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QOpenGLFramebufferObjectFormat scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK24QOpenGLFramebufferObject6formatEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK24QOpenGLFramebufferObject6formatEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK24QOpenGLFramebufferObject7isValidEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK24QOpenGLFramebufferObject7isValidEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK24QOpenGLFramebufferObject7isValidEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK24QOpenGLFramebufferObject7isValidEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK24QOpenGLFramebufferObject7isValidEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK24QOpenGLFramebufferObject7isValidEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK24QOpenGLFramebufferObject7isBoundEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK24QOpenGLFramebufferObject7isBoundEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK24QOpenGLFramebufferObject7isBoundEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK24QOpenGLFramebufferObject7isBoundEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK24QOpenGLFramebufferObject7isBoundEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK24QOpenGLFramebufferObject7isBoundEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN24QOpenGLFramebufferObject4bindEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN24QOpenGLFramebufferObject4bindEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN24QOpenGLFramebufferObject4bindEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN24QOpenGLFramebufferObject4bindEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN24QOpenGLFramebufferObject4bindEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN24QOpenGLFramebufferObject4bindEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN24QOpenGLFramebufferObject7releaseEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN24QOpenGLFramebufferObject7releaseEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN24QOpenGLFramebufferObject7releaseEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN24QOpenGLFramebufferObject7releaseEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN24QOpenGLFramebufferObject7releaseEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN24QOpenGLFramebufferObject7releaseEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK24QOpenGLFramebufferObject7textureEv
GLuint
SCOREP_LIBWRAP_FUNC_NAME( _ZNK24QOpenGLFramebufferObject7textureEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK24QOpenGLFramebufferObject7textureEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK24QOpenGLFramebufferObject7textureEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    GLuint scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK24QOpenGLFramebufferObject7textureEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK24QOpenGLFramebufferObject7textureEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK24QOpenGLFramebufferObject8texturesEv
QVector<GLuint>
SCOREP_LIBWRAP_FUNC_NAME( _ZNK24QOpenGLFramebufferObject8texturesEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK24QOpenGLFramebufferObject8texturesEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK24QOpenGLFramebufferObject8texturesEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QVector<GLuint> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK24QOpenGLFramebufferObject8texturesEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK24QOpenGLFramebufferObject8texturesEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN24QOpenGLFramebufferObject11takeTextureEv
GLuint
SCOREP_LIBWRAP_FUNC_NAME( _ZN24QOpenGLFramebufferObject11takeTextureEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN24QOpenGLFramebufferObject11takeTextureEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN24QOpenGLFramebufferObject11takeTextureEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    GLuint scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN24QOpenGLFramebufferObject11takeTextureEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN24QOpenGLFramebufferObject11takeTextureEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN24QOpenGLFramebufferObject11takeTextureEi
GLuint
SCOREP_LIBWRAP_FUNC_NAME( _ZN24QOpenGLFramebufferObject11takeTextureEi )( void *scorep_libwrap_arg_this, int colorAttachmentIndex )
{
    LIBWRAP_EARLY_INIT( _ZN24QOpenGLFramebufferObject11takeTextureEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN24QOpenGLFramebufferObject11takeTextureEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    GLuint scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN24QOpenGLFramebufferObject11takeTextureEi, ( scorep_libwrap_arg_this, colorAttachmentIndex ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN24QOpenGLFramebufferObject11takeTextureEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK24QOpenGLFramebufferObject4sizeEv
QSize
SCOREP_LIBWRAP_FUNC_NAME( _ZNK24QOpenGLFramebufferObject4sizeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK24QOpenGLFramebufferObject4sizeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK24QOpenGLFramebufferObject4sizeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QSize scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK24QOpenGLFramebufferObject4sizeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK24QOpenGLFramebufferObject4sizeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK24QOpenGLFramebufferObject5sizesEv
QVector<QSize>
SCOREP_LIBWRAP_FUNC_NAME( _ZNK24QOpenGLFramebufferObject5sizesEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK24QOpenGLFramebufferObject5sizesEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK24QOpenGLFramebufferObject5sizesEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QVector<QSize> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK24QOpenGLFramebufferObject5sizesEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK24QOpenGLFramebufferObject5sizesEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK24QOpenGLFramebufferObject7toImageEv
QImage
SCOREP_LIBWRAP_FUNC_NAME( _ZNK24QOpenGLFramebufferObject7toImageEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK24QOpenGLFramebufferObject7toImageEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK24QOpenGLFramebufferObject7toImageEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QImage scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK24QOpenGLFramebufferObject7toImageEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK24QOpenGLFramebufferObject7toImageEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK24QOpenGLFramebufferObject7toImageEb
QImage
SCOREP_LIBWRAP_FUNC_NAME( _ZNK24QOpenGLFramebufferObject7toImageEb )( void *scorep_libwrap_arg_this, bool flipped )
{
    LIBWRAP_EARLY_INIT( _ZNK24QOpenGLFramebufferObject7toImageEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK24QOpenGLFramebufferObject7toImageEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QImage scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK24QOpenGLFramebufferObject7toImageEb, ( scorep_libwrap_arg_this, flipped ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK24QOpenGLFramebufferObject7toImageEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK24QOpenGLFramebufferObject7toImageEbi
QImage
SCOREP_LIBWRAP_FUNC_NAME( _ZNK24QOpenGLFramebufferObject7toImageEbi )( void *scorep_libwrap_arg_this, bool flipped, int colorAttachmentIndex )
{
    LIBWRAP_EARLY_INIT( _ZNK24QOpenGLFramebufferObject7toImageEbi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK24QOpenGLFramebufferObject7toImageEbi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QImage scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK24QOpenGLFramebufferObject7toImageEbi, ( scorep_libwrap_arg_this, flipped, colorAttachmentIndex ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK24QOpenGLFramebufferObject7toImageEbi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK24QOpenGLFramebufferObject10attachmentEv
QOpenGLFramebufferObject::Attachment
SCOREP_LIBWRAP_FUNC_NAME( _ZNK24QOpenGLFramebufferObject10attachmentEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK24QOpenGLFramebufferObject10attachmentEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK24QOpenGLFramebufferObject10attachmentEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QOpenGLFramebufferObject::Attachment scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK24QOpenGLFramebufferObject10attachmentEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK24QOpenGLFramebufferObject10attachmentEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN24QOpenGLFramebufferObject13setAttachmentENS_10AttachmentE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN24QOpenGLFramebufferObject13setAttachmentENS_10AttachmentE )( void *scorep_libwrap_arg_this, QOpenGLFramebufferObject::Attachment attachment )
{
    LIBWRAP_EARLY_INIT( _ZN24QOpenGLFramebufferObject13setAttachmentENS_10AttachmentE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN24QOpenGLFramebufferObject13setAttachmentENS_10AttachmentE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN24QOpenGLFramebufferObject13setAttachmentENS_10AttachmentE, ( scorep_libwrap_arg_this, attachment ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN24QOpenGLFramebufferObject13setAttachmentENS_10AttachmentE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK24QOpenGLFramebufferObject6handleEv
GLuint
SCOREP_LIBWRAP_FUNC_NAME( _ZNK24QOpenGLFramebufferObject6handleEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK24QOpenGLFramebufferObject6handleEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK24QOpenGLFramebufferObject6handleEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    GLuint scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK24QOpenGLFramebufferObject6handleEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK24QOpenGLFramebufferObject6handleEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN24QOpenGLFramebufferObject11bindDefaultEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN24QOpenGLFramebufferObject11bindDefaultEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN24QOpenGLFramebufferObject11bindDefaultEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN24QOpenGLFramebufferObject11bindDefaultEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN24QOpenGLFramebufferObject11bindDefaultEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN24QOpenGLFramebufferObject11bindDefaultEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN24QOpenGLFramebufferObject27hasOpenGLFramebufferObjectsEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN24QOpenGLFramebufferObject27hasOpenGLFramebufferObjectsEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN24QOpenGLFramebufferObject27hasOpenGLFramebufferObjectsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN24QOpenGLFramebufferObject27hasOpenGLFramebufferObjectsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN24QOpenGLFramebufferObject27hasOpenGLFramebufferObjectsEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN24QOpenGLFramebufferObject27hasOpenGLFramebufferObjectsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN24QOpenGLFramebufferObject24hasOpenGLFramebufferBlitEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN24QOpenGLFramebufferObject24hasOpenGLFramebufferBlitEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN24QOpenGLFramebufferObject24hasOpenGLFramebufferBlitEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN24QOpenGLFramebufferObject24hasOpenGLFramebufferBlitEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN24QOpenGLFramebufferObject24hasOpenGLFramebufferBlitEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN24QOpenGLFramebufferObject24hasOpenGLFramebufferBlitEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN24QOpenGLFramebufferObject15blitFramebufferEPS_RK5QRectS0_S3_jjiiNS_24FramebufferRestorePolicyE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN24QOpenGLFramebufferObject15blitFramebufferEPS_RK5QRectS0_S3_jjiiNS_24FramebufferRestorePolicyE )( QOpenGLFramebufferObject * target, const QRect & targetRect, QOpenGLFramebufferObject * source, const QRect & sourceRect, GLbitfield buffers, GLenum filter, int readColorAttachmentIndex, int drawColorAttachmentIndex, QOpenGLFramebufferObject::FramebufferRestorePolicy restorePolicy )
{
    LIBWRAP_EARLY_INIT( _ZN24QOpenGLFramebufferObject15blitFramebufferEPS_RK5QRectS0_S3_jjiiNS_24FramebufferRestorePolicyE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN24QOpenGLFramebufferObject15blitFramebufferEPS_RK5QRectS0_S3_jjiiNS_24FramebufferRestorePolicyE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN24QOpenGLFramebufferObject15blitFramebufferEPS_RK5QRectS0_S3_jjiiNS_24FramebufferRestorePolicyE, ( target, targetRect, source, sourceRect, buffers, filter, readColorAttachmentIndex, drawColorAttachmentIndex, restorePolicy ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN24QOpenGLFramebufferObject15blitFramebufferEPS_RK5QRectS0_S3_jjiiNS_24FramebufferRestorePolicyE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN24QOpenGLFramebufferObject15blitFramebufferEPS_RK5QRectS0_S3_jjii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN24QOpenGLFramebufferObject15blitFramebufferEPS_RK5QRectS0_S3_jjii )( QOpenGLFramebufferObject * target, const QRect & targetRect, QOpenGLFramebufferObject * source, const QRect & sourceRect, GLbitfield buffers, GLenum filter, int readColorAttachmentIndex, int drawColorAttachmentIndex )
{
    LIBWRAP_EARLY_INIT( _ZN24QOpenGLFramebufferObject15blitFramebufferEPS_RK5QRectS0_S3_jjii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN24QOpenGLFramebufferObject15blitFramebufferEPS_RK5QRectS0_S3_jjii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN24QOpenGLFramebufferObject15blitFramebufferEPS_RK5QRectS0_S3_jjii, ( target, targetRect, source, sourceRect, buffers, filter, readColorAttachmentIndex, drawColorAttachmentIndex ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN24QOpenGLFramebufferObject15blitFramebufferEPS_RK5QRectS0_S3_jjii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN24QOpenGLFramebufferObject15blitFramebufferEPS_RK5QRectS0_S3_jj
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN24QOpenGLFramebufferObject15blitFramebufferEPS_RK5QRectS0_S3_jj )( QOpenGLFramebufferObject * target, const QRect & targetRect, QOpenGLFramebufferObject * source, const QRect & sourceRect, GLbitfield buffers, GLenum filter )
{
    LIBWRAP_EARLY_INIT( _ZN24QOpenGLFramebufferObject15blitFramebufferEPS_RK5QRectS0_S3_jj );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN24QOpenGLFramebufferObject15blitFramebufferEPS_RK5QRectS0_S3_jj );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN24QOpenGLFramebufferObject15blitFramebufferEPS_RK5QRectS0_S3_jj, ( target, targetRect, source, sourceRect, buffers, filter ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN24QOpenGLFramebufferObject15blitFramebufferEPS_RK5QRectS0_S3_jj );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN24QOpenGLFramebufferObject15blitFramebufferEPS_S0_jj
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN24QOpenGLFramebufferObject15blitFramebufferEPS_S0_jj )( QOpenGLFramebufferObject * target, QOpenGLFramebufferObject * source, GLbitfield buffers, GLenum filter )
{
    LIBWRAP_EARLY_INIT( _ZN24QOpenGLFramebufferObject15blitFramebufferEPS_S0_jj );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN24QOpenGLFramebufferObject15blitFramebufferEPS_S0_jj );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN24QOpenGLFramebufferObject15blitFramebufferEPS_S0_jj, ( target, source, buffers, filter ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN24QOpenGLFramebufferObject15blitFramebufferEPS_S0_jj );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN30QOpenGLFramebufferObjectFormatC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN30QOpenGLFramebufferObjectFormatC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN30QOpenGLFramebufferObjectFormatC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN30QOpenGLFramebufferObjectFormatC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN30QOpenGLFramebufferObjectFormatC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN30QOpenGLFramebufferObjectFormatC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN30QOpenGLFramebufferObjectFormatC1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN30QOpenGLFramebufferObjectFormatC1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN30QOpenGLFramebufferObjectFormatC1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN30QOpenGLFramebufferObjectFormatC1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN30QOpenGLFramebufferObjectFormatC1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN30QOpenGLFramebufferObjectFormatC1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN30QOpenGLFramebufferObjectFormatC2ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN30QOpenGLFramebufferObjectFormatC2ERKS_ )( void *scorep_libwrap_arg_this, const QOpenGLFramebufferObjectFormat & other )
{
    LIBWRAP_EARLY_INIT( _ZN30QOpenGLFramebufferObjectFormatC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN30QOpenGLFramebufferObjectFormatC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN30QOpenGLFramebufferObjectFormatC2ERKS_, ( scorep_libwrap_arg_this, other ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN30QOpenGLFramebufferObjectFormatC2ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN30QOpenGLFramebufferObjectFormatC1ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN30QOpenGLFramebufferObjectFormatC1ERKS_ )( void *scorep_libwrap_arg_this, const QOpenGLFramebufferObjectFormat & other )
{
    LIBWRAP_EARLY_INIT( _ZN30QOpenGLFramebufferObjectFormatC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN30QOpenGLFramebufferObjectFormatC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN30QOpenGLFramebufferObjectFormatC1ERKS_, ( scorep_libwrap_arg_this, other ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN30QOpenGLFramebufferObjectFormatC1ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN30QOpenGLFramebufferObjectFormataSERKS_
QOpenGLFramebufferObjectFormat &
SCOREP_LIBWRAP_FUNC_NAME( _ZN30QOpenGLFramebufferObjectFormataSERKS_ )( void *scorep_libwrap_arg_this, const QOpenGLFramebufferObjectFormat & other )
{
    LIBWRAP_EARLY_INIT( _ZN30QOpenGLFramebufferObjectFormataSERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN30QOpenGLFramebufferObjectFormataSERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QOpenGLFramebufferObjectFormat & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN30QOpenGLFramebufferObjectFormataSERKS_, ( scorep_libwrap_arg_this, other ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN30QOpenGLFramebufferObjectFormataSERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN30QOpenGLFramebufferObjectFormatD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN30QOpenGLFramebufferObjectFormatD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN30QOpenGLFramebufferObjectFormatD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN30QOpenGLFramebufferObjectFormatD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN30QOpenGLFramebufferObjectFormatD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN30QOpenGLFramebufferObjectFormatD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN30QOpenGLFramebufferObjectFormatD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN30QOpenGLFramebufferObjectFormatD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN30QOpenGLFramebufferObjectFormatD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN30QOpenGLFramebufferObjectFormatD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN30QOpenGLFramebufferObjectFormatD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN30QOpenGLFramebufferObjectFormatD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN30QOpenGLFramebufferObjectFormat10setSamplesEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN30QOpenGLFramebufferObjectFormat10setSamplesEi )( void *scorep_libwrap_arg_this, int samples )
{
    LIBWRAP_EARLY_INIT( _ZN30QOpenGLFramebufferObjectFormat10setSamplesEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN30QOpenGLFramebufferObjectFormat10setSamplesEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN30QOpenGLFramebufferObjectFormat10setSamplesEi, ( scorep_libwrap_arg_this, samples ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN30QOpenGLFramebufferObjectFormat10setSamplesEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK30QOpenGLFramebufferObjectFormat7samplesEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK30QOpenGLFramebufferObjectFormat7samplesEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK30QOpenGLFramebufferObjectFormat7samplesEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK30QOpenGLFramebufferObjectFormat7samplesEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK30QOpenGLFramebufferObjectFormat7samplesEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK30QOpenGLFramebufferObjectFormat7samplesEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN30QOpenGLFramebufferObjectFormat9setMipmapEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN30QOpenGLFramebufferObjectFormat9setMipmapEb )( void *scorep_libwrap_arg_this, bool enabled )
{
    LIBWRAP_EARLY_INIT( _ZN30QOpenGLFramebufferObjectFormat9setMipmapEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN30QOpenGLFramebufferObjectFormat9setMipmapEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN30QOpenGLFramebufferObjectFormat9setMipmapEb, ( scorep_libwrap_arg_this, enabled ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN30QOpenGLFramebufferObjectFormat9setMipmapEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK30QOpenGLFramebufferObjectFormat6mipmapEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK30QOpenGLFramebufferObjectFormat6mipmapEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK30QOpenGLFramebufferObjectFormat6mipmapEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK30QOpenGLFramebufferObjectFormat6mipmapEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK30QOpenGLFramebufferObjectFormat6mipmapEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK30QOpenGLFramebufferObjectFormat6mipmapEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN30QOpenGLFramebufferObjectFormat13setAttachmentEN24QOpenGLFramebufferObject10AttachmentE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN30QOpenGLFramebufferObjectFormat13setAttachmentEN24QOpenGLFramebufferObject10AttachmentE )( void *scorep_libwrap_arg_this, QOpenGLFramebufferObject::Attachment attachment )
{
    LIBWRAP_EARLY_INIT( _ZN30QOpenGLFramebufferObjectFormat13setAttachmentEN24QOpenGLFramebufferObject10AttachmentE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN30QOpenGLFramebufferObjectFormat13setAttachmentEN24QOpenGLFramebufferObject10AttachmentE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN30QOpenGLFramebufferObjectFormat13setAttachmentEN24QOpenGLFramebufferObject10AttachmentE, ( scorep_libwrap_arg_this, attachment ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN30QOpenGLFramebufferObjectFormat13setAttachmentEN24QOpenGLFramebufferObject10AttachmentE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK30QOpenGLFramebufferObjectFormat10attachmentEv
QOpenGLFramebufferObject::Attachment
SCOREP_LIBWRAP_FUNC_NAME( _ZNK30QOpenGLFramebufferObjectFormat10attachmentEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK30QOpenGLFramebufferObjectFormat10attachmentEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK30QOpenGLFramebufferObjectFormat10attachmentEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QOpenGLFramebufferObject::Attachment scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK30QOpenGLFramebufferObjectFormat10attachmentEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK30QOpenGLFramebufferObjectFormat10attachmentEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN30QOpenGLFramebufferObjectFormat16setTextureTargetEj
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN30QOpenGLFramebufferObjectFormat16setTextureTargetEj )( void *scorep_libwrap_arg_this, GLenum target )
{
    LIBWRAP_EARLY_INIT( _ZN30QOpenGLFramebufferObjectFormat16setTextureTargetEj );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN30QOpenGLFramebufferObjectFormat16setTextureTargetEj );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN30QOpenGLFramebufferObjectFormat16setTextureTargetEj, ( scorep_libwrap_arg_this, target ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN30QOpenGLFramebufferObjectFormat16setTextureTargetEj );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK30QOpenGLFramebufferObjectFormat13textureTargetEv
GLenum
SCOREP_LIBWRAP_FUNC_NAME( _ZNK30QOpenGLFramebufferObjectFormat13textureTargetEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK30QOpenGLFramebufferObjectFormat13textureTargetEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK30QOpenGLFramebufferObjectFormat13textureTargetEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    GLenum scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK30QOpenGLFramebufferObjectFormat13textureTargetEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK30QOpenGLFramebufferObjectFormat13textureTargetEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN30QOpenGLFramebufferObjectFormat24setInternalTextureFormatEj
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN30QOpenGLFramebufferObjectFormat24setInternalTextureFormatEj )( void *scorep_libwrap_arg_this, GLenum internalTextureFormat )
{
    LIBWRAP_EARLY_INIT( _ZN30QOpenGLFramebufferObjectFormat24setInternalTextureFormatEj );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN30QOpenGLFramebufferObjectFormat24setInternalTextureFormatEj );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN30QOpenGLFramebufferObjectFormat24setInternalTextureFormatEj, ( scorep_libwrap_arg_this, internalTextureFormat ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN30QOpenGLFramebufferObjectFormat24setInternalTextureFormatEj );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK30QOpenGLFramebufferObjectFormat21internalTextureFormatEv
GLenum
SCOREP_LIBWRAP_FUNC_NAME( _ZNK30QOpenGLFramebufferObjectFormat21internalTextureFormatEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK30QOpenGLFramebufferObjectFormat21internalTextureFormatEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK30QOpenGLFramebufferObjectFormat21internalTextureFormatEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    GLenum scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK30QOpenGLFramebufferObjectFormat21internalTextureFormatEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK30QOpenGLFramebufferObjectFormat21internalTextureFormatEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK30QOpenGLFramebufferObjectFormateqERKS_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK30QOpenGLFramebufferObjectFormateqERKS_ )( void *scorep_libwrap_arg_this, const QOpenGLFramebufferObjectFormat & other )
{
    LIBWRAP_EARLY_INIT( _ZNK30QOpenGLFramebufferObjectFormateqERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK30QOpenGLFramebufferObjectFormateqERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK30QOpenGLFramebufferObjectFormateqERKS_, ( scorep_libwrap_arg_this, other ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK30QOpenGLFramebufferObjectFormateqERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK30QOpenGLFramebufferObjectFormatneERKS_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK30QOpenGLFramebufferObjectFormatneERKS_ )( void *scorep_libwrap_arg_this, const QOpenGLFramebufferObjectFormat & other )
{
    LIBWRAP_EARLY_INIT( _ZNK30QOpenGLFramebufferObjectFormatneERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK30QOpenGLFramebufferObjectFormatneERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK30QOpenGLFramebufferObjectFormatneERKS_, ( scorep_libwrap_arg_this, other ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK30QOpenGLFramebufferObjectFormatneERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN18QOpenGLPaintDeviceC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QOpenGLPaintDeviceC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN18QOpenGLPaintDeviceC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QOpenGLPaintDeviceC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QOpenGLPaintDeviceC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QOpenGLPaintDeviceC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN18QOpenGLPaintDeviceC1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QOpenGLPaintDeviceC1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN18QOpenGLPaintDeviceC1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QOpenGLPaintDeviceC1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QOpenGLPaintDeviceC1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QOpenGLPaintDeviceC1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN18QOpenGLPaintDeviceC2ERK5QSize
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QOpenGLPaintDeviceC2ERK5QSize )( void *scorep_libwrap_arg_this, const QSize & size )
{
    LIBWRAP_EARLY_INIT( _ZN18QOpenGLPaintDeviceC2ERK5QSize );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QOpenGLPaintDeviceC2ERK5QSize );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QOpenGLPaintDeviceC2ERK5QSize, ( scorep_libwrap_arg_this, size ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QOpenGLPaintDeviceC2ERK5QSize );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN18QOpenGLPaintDeviceC1ERK5QSize
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QOpenGLPaintDeviceC1ERK5QSize )( void *scorep_libwrap_arg_this, const QSize & size )
{
    LIBWRAP_EARLY_INIT( _ZN18QOpenGLPaintDeviceC1ERK5QSize );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QOpenGLPaintDeviceC1ERK5QSize );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QOpenGLPaintDeviceC1ERK5QSize, ( scorep_libwrap_arg_this, size ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QOpenGLPaintDeviceC1ERK5QSize );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN18QOpenGLPaintDeviceC2Eii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QOpenGLPaintDeviceC2Eii )( void *scorep_libwrap_arg_this, int width, int height )
{
    LIBWRAP_EARLY_INIT( _ZN18QOpenGLPaintDeviceC2Eii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QOpenGLPaintDeviceC2Eii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QOpenGLPaintDeviceC2Eii, ( scorep_libwrap_arg_this, width, height ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QOpenGLPaintDeviceC2Eii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN18QOpenGLPaintDeviceC1Eii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QOpenGLPaintDeviceC1Eii )( void *scorep_libwrap_arg_this, int width, int height )
{
    LIBWRAP_EARLY_INIT( _ZN18QOpenGLPaintDeviceC1Eii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QOpenGLPaintDeviceC1Eii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QOpenGLPaintDeviceC1Eii, ( scorep_libwrap_arg_this, width, height ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QOpenGLPaintDeviceC1Eii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN18QOpenGLPaintDeviceD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QOpenGLPaintDeviceD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN18QOpenGLPaintDeviceD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QOpenGLPaintDeviceD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QOpenGLPaintDeviceD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QOpenGLPaintDeviceD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN18QOpenGLPaintDeviceD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QOpenGLPaintDeviceD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN18QOpenGLPaintDeviceD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QOpenGLPaintDeviceD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QOpenGLPaintDeviceD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QOpenGLPaintDeviceD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN18QOpenGLPaintDeviceD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QOpenGLPaintDeviceD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN18QOpenGLPaintDeviceD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QOpenGLPaintDeviceD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QOpenGLPaintDeviceD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QOpenGLPaintDeviceD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK18QOpenGLPaintDevice11paintEngineEv
QPaintEngine *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK18QOpenGLPaintDevice11paintEngineEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK18QOpenGLPaintDevice11paintEngineEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK18QOpenGLPaintDevice11paintEngineEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPaintEngine * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK18QOpenGLPaintDevice11paintEngineEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK18QOpenGLPaintDevice11paintEngineEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK18QOpenGLPaintDevice7contextEv
QOpenGLContext *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK18QOpenGLPaintDevice7contextEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK18QOpenGLPaintDevice7contextEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK18QOpenGLPaintDevice7contextEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QOpenGLContext * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK18QOpenGLPaintDevice7contextEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK18QOpenGLPaintDevice7contextEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK18QOpenGLPaintDevice4sizeEv
QSize
SCOREP_LIBWRAP_FUNC_NAME( _ZNK18QOpenGLPaintDevice4sizeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK18QOpenGLPaintDevice4sizeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK18QOpenGLPaintDevice4sizeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QSize scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK18QOpenGLPaintDevice4sizeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK18QOpenGLPaintDevice4sizeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN18QOpenGLPaintDevice7setSizeERK5QSize
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QOpenGLPaintDevice7setSizeERK5QSize )( void *scorep_libwrap_arg_this, const QSize & size )
{
    LIBWRAP_EARLY_INIT( _ZN18QOpenGLPaintDevice7setSizeERK5QSize );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QOpenGLPaintDevice7setSizeERK5QSize );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QOpenGLPaintDevice7setSizeERK5QSize, ( scorep_libwrap_arg_this, size ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QOpenGLPaintDevice7setSizeERK5QSize );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN18QOpenGLPaintDevice19setDevicePixelRatioEd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QOpenGLPaintDevice19setDevicePixelRatioEd )( void *scorep_libwrap_arg_this, qreal devicePixelRatio )
{
    LIBWRAP_EARLY_INIT( _ZN18QOpenGLPaintDevice19setDevicePixelRatioEd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QOpenGLPaintDevice19setDevicePixelRatioEd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QOpenGLPaintDevice19setDevicePixelRatioEd, ( scorep_libwrap_arg_this, devicePixelRatio ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QOpenGLPaintDevice19setDevicePixelRatioEd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK18QOpenGLPaintDevice13dotsPerMeterXEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK18QOpenGLPaintDevice13dotsPerMeterXEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK18QOpenGLPaintDevice13dotsPerMeterXEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK18QOpenGLPaintDevice13dotsPerMeterXEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK18QOpenGLPaintDevice13dotsPerMeterXEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK18QOpenGLPaintDevice13dotsPerMeterXEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK18QOpenGLPaintDevice13dotsPerMeterYEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK18QOpenGLPaintDevice13dotsPerMeterYEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK18QOpenGLPaintDevice13dotsPerMeterYEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK18QOpenGLPaintDevice13dotsPerMeterYEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK18QOpenGLPaintDevice13dotsPerMeterYEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK18QOpenGLPaintDevice13dotsPerMeterYEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN18QOpenGLPaintDevice16setDotsPerMeterXEd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QOpenGLPaintDevice16setDotsPerMeterXEd )( void *scorep_libwrap_arg_this, qreal scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN18QOpenGLPaintDevice16setDotsPerMeterXEd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QOpenGLPaintDevice16setDotsPerMeterXEd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QOpenGLPaintDevice16setDotsPerMeterXEd, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QOpenGLPaintDevice16setDotsPerMeterXEd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN18QOpenGLPaintDevice16setDotsPerMeterYEd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QOpenGLPaintDevice16setDotsPerMeterYEd )( void *scorep_libwrap_arg_this, qreal scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN18QOpenGLPaintDevice16setDotsPerMeterYEd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QOpenGLPaintDevice16setDotsPerMeterYEd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QOpenGLPaintDevice16setDotsPerMeterYEd, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QOpenGLPaintDevice16setDotsPerMeterYEd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN18QOpenGLPaintDevice15setPaintFlippedEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QOpenGLPaintDevice15setPaintFlippedEb )( void *scorep_libwrap_arg_this, bool flipped )
{
    LIBWRAP_EARLY_INIT( _ZN18QOpenGLPaintDevice15setPaintFlippedEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QOpenGLPaintDevice15setPaintFlippedEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QOpenGLPaintDevice15setPaintFlippedEb, ( scorep_libwrap_arg_this, flipped ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QOpenGLPaintDevice15setPaintFlippedEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK18QOpenGLPaintDevice12paintFlippedEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK18QOpenGLPaintDevice12paintFlippedEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK18QOpenGLPaintDevice12paintFlippedEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK18QOpenGLPaintDevice12paintFlippedEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK18QOpenGLPaintDevice12paintFlippedEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK18QOpenGLPaintDevice12paintFlippedEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN18QOpenGLPaintDevice18ensureActiveTargetEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QOpenGLPaintDevice18ensureActiveTargetEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN18QOpenGLPaintDevice18ensureActiveTargetEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QOpenGLPaintDevice18ensureActiveTargetEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QOpenGLPaintDevice18ensureActiveTargetEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QOpenGLPaintDevice18ensureActiveTargetEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN27QOpenGLPixelTransferOptionsC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN27QOpenGLPixelTransferOptionsC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN27QOpenGLPixelTransferOptionsC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN27QOpenGLPixelTransferOptionsC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN27QOpenGLPixelTransferOptionsC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN27QOpenGLPixelTransferOptionsC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN27QOpenGLPixelTransferOptionsC1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN27QOpenGLPixelTransferOptionsC1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN27QOpenGLPixelTransferOptionsC1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN27QOpenGLPixelTransferOptionsC1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN27QOpenGLPixelTransferOptionsC1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN27QOpenGLPixelTransferOptionsC1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN27QOpenGLPixelTransferOptionsC2ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN27QOpenGLPixelTransferOptionsC2ERKS_ )( void *scorep_libwrap_arg_this, const QOpenGLPixelTransferOptions & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN27QOpenGLPixelTransferOptionsC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN27QOpenGLPixelTransferOptionsC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN27QOpenGLPixelTransferOptionsC2ERKS_, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN27QOpenGLPixelTransferOptionsC2ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN27QOpenGLPixelTransferOptionsC1ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN27QOpenGLPixelTransferOptionsC1ERKS_ )( void *scorep_libwrap_arg_this, const QOpenGLPixelTransferOptions & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN27QOpenGLPixelTransferOptionsC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN27QOpenGLPixelTransferOptionsC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN27QOpenGLPixelTransferOptionsC1ERKS_, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN27QOpenGLPixelTransferOptionsC1ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN27QOpenGLPixelTransferOptionsD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN27QOpenGLPixelTransferOptionsD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN27QOpenGLPixelTransferOptionsD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN27QOpenGLPixelTransferOptionsD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN27QOpenGLPixelTransferOptionsD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN27QOpenGLPixelTransferOptionsD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN27QOpenGLPixelTransferOptionsD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN27QOpenGLPixelTransferOptionsD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN27QOpenGLPixelTransferOptionsD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN27QOpenGLPixelTransferOptionsD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN27QOpenGLPixelTransferOptionsD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN27QOpenGLPixelTransferOptionsD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK27QOpenGLPixelTransferOptions9alignmentEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK27QOpenGLPixelTransferOptions9alignmentEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK27QOpenGLPixelTransferOptions9alignmentEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK27QOpenGLPixelTransferOptions9alignmentEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK27QOpenGLPixelTransferOptions9alignmentEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK27QOpenGLPixelTransferOptions9alignmentEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN27QOpenGLPixelTransferOptions13setSkipImagesEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN27QOpenGLPixelTransferOptions13setSkipImagesEi )( void *scorep_libwrap_arg_this, int skipImages )
{
    LIBWRAP_EARLY_INIT( _ZN27QOpenGLPixelTransferOptions13setSkipImagesEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN27QOpenGLPixelTransferOptions13setSkipImagesEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN27QOpenGLPixelTransferOptions13setSkipImagesEi, ( scorep_libwrap_arg_this, skipImages ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN27QOpenGLPixelTransferOptions13setSkipImagesEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK27QOpenGLPixelTransferOptions10skipImagesEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK27QOpenGLPixelTransferOptions10skipImagesEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK27QOpenGLPixelTransferOptions10skipImagesEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK27QOpenGLPixelTransferOptions10skipImagesEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK27QOpenGLPixelTransferOptions10skipImagesEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK27QOpenGLPixelTransferOptions10skipImagesEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN27QOpenGLPixelTransferOptions11setSkipRowsEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN27QOpenGLPixelTransferOptions11setSkipRowsEi )( void *scorep_libwrap_arg_this, int skipRows )
{
    LIBWRAP_EARLY_INIT( _ZN27QOpenGLPixelTransferOptions11setSkipRowsEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN27QOpenGLPixelTransferOptions11setSkipRowsEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN27QOpenGLPixelTransferOptions11setSkipRowsEi, ( scorep_libwrap_arg_this, skipRows ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN27QOpenGLPixelTransferOptions11setSkipRowsEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK27QOpenGLPixelTransferOptions8skipRowsEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK27QOpenGLPixelTransferOptions8skipRowsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK27QOpenGLPixelTransferOptions8skipRowsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK27QOpenGLPixelTransferOptions8skipRowsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK27QOpenGLPixelTransferOptions8skipRowsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK27QOpenGLPixelTransferOptions8skipRowsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN27QOpenGLPixelTransferOptions13setSkipPixelsEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN27QOpenGLPixelTransferOptions13setSkipPixelsEi )( void *scorep_libwrap_arg_this, int skipPixels )
{
    LIBWRAP_EARLY_INIT( _ZN27QOpenGLPixelTransferOptions13setSkipPixelsEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN27QOpenGLPixelTransferOptions13setSkipPixelsEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN27QOpenGLPixelTransferOptions13setSkipPixelsEi, ( scorep_libwrap_arg_this, skipPixels ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN27QOpenGLPixelTransferOptions13setSkipPixelsEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK27QOpenGLPixelTransferOptions10skipPixelsEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK27QOpenGLPixelTransferOptions10skipPixelsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK27QOpenGLPixelTransferOptions10skipPixelsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK27QOpenGLPixelTransferOptions10skipPixelsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK27QOpenGLPixelTransferOptions10skipPixelsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK27QOpenGLPixelTransferOptions10skipPixelsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN27QOpenGLPixelTransferOptions14setImageHeightEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN27QOpenGLPixelTransferOptions14setImageHeightEi )( void *scorep_libwrap_arg_this, int imageHeight )
{
    LIBWRAP_EARLY_INIT( _ZN27QOpenGLPixelTransferOptions14setImageHeightEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN27QOpenGLPixelTransferOptions14setImageHeightEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN27QOpenGLPixelTransferOptions14setImageHeightEi, ( scorep_libwrap_arg_this, imageHeight ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN27QOpenGLPixelTransferOptions14setImageHeightEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK27QOpenGLPixelTransferOptions11imageHeightEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK27QOpenGLPixelTransferOptions11imageHeightEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK27QOpenGLPixelTransferOptions11imageHeightEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK27QOpenGLPixelTransferOptions11imageHeightEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK27QOpenGLPixelTransferOptions11imageHeightEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK27QOpenGLPixelTransferOptions11imageHeightEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN27QOpenGLPixelTransferOptions12setRowLengthEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN27QOpenGLPixelTransferOptions12setRowLengthEi )( void *scorep_libwrap_arg_this, int rowLength )
{
    LIBWRAP_EARLY_INIT( _ZN27QOpenGLPixelTransferOptions12setRowLengthEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN27QOpenGLPixelTransferOptions12setRowLengthEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN27QOpenGLPixelTransferOptions12setRowLengthEi, ( scorep_libwrap_arg_this, rowLength ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN27QOpenGLPixelTransferOptions12setRowLengthEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK27QOpenGLPixelTransferOptions9rowLengthEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK27QOpenGLPixelTransferOptions9rowLengthEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK27QOpenGLPixelTransferOptions9rowLengthEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK27QOpenGLPixelTransferOptions9rowLengthEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK27QOpenGLPixelTransferOptions9rowLengthEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK27QOpenGLPixelTransferOptions9rowLengthEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN27QOpenGLPixelTransferOptions28setLeastSignificantByteFirstEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN27QOpenGLPixelTransferOptions28setLeastSignificantByteFirstEb )( void *scorep_libwrap_arg_this, bool lsbFirst )
{
    LIBWRAP_EARLY_INIT( _ZN27QOpenGLPixelTransferOptions28setLeastSignificantByteFirstEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN27QOpenGLPixelTransferOptions28setLeastSignificantByteFirstEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN27QOpenGLPixelTransferOptions28setLeastSignificantByteFirstEb, ( scorep_libwrap_arg_this, lsbFirst ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN27QOpenGLPixelTransferOptions28setLeastSignificantByteFirstEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK27QOpenGLPixelTransferOptions26isLeastSignificantBitFirstEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK27QOpenGLPixelTransferOptions26isLeastSignificantBitFirstEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK27QOpenGLPixelTransferOptions26isLeastSignificantBitFirstEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK27QOpenGLPixelTransferOptions26isLeastSignificantBitFirstEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK27QOpenGLPixelTransferOptions26isLeastSignificantBitFirstEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK27QOpenGLPixelTransferOptions26isLeastSignificantBitFirstEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN27QOpenGLPixelTransferOptions19setSwapBytesEnabledEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN27QOpenGLPixelTransferOptions19setSwapBytesEnabledEb )( void *scorep_libwrap_arg_this, bool swapBytes )
{
    LIBWRAP_EARLY_INIT( _ZN27QOpenGLPixelTransferOptions19setSwapBytesEnabledEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN27QOpenGLPixelTransferOptions19setSwapBytesEnabledEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN27QOpenGLPixelTransferOptions19setSwapBytesEnabledEb, ( scorep_libwrap_arg_this, swapBytes ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN27QOpenGLPixelTransferOptions19setSwapBytesEnabledEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK27QOpenGLPixelTransferOptions18isSwapBytesEnabledEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK27QOpenGLPixelTransferOptions18isSwapBytesEnabledEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK27QOpenGLPixelTransferOptions18isSwapBytesEnabledEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK27QOpenGLPixelTransferOptions18isSwapBytesEnabledEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK27QOpenGLPixelTransferOptions18isSwapBytesEnabledEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK27QOpenGLPixelTransferOptions18isSwapBytesEnabledEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QOpenGLShader10metaObjectEv
const QMetaObject *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QOpenGLShader10metaObjectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QOpenGLShader10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QOpenGLShader10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QMetaObject * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QOpenGLShader10metaObjectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QOpenGLShader10metaObjectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QOpenGLShader11qt_metacastEPKc
void *
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QOpenGLShader11qt_metacastEPKc )( void *scorep_libwrap_arg_this, const char * scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN13QOpenGLShader11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QOpenGLShader11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    void * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN13QOpenGLShader11qt_metacastEPKc, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QOpenGLShader11qt_metacastEPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QOpenGLShader11qt_metacallEN11QMetaObject4CallEiPPv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QOpenGLShader11qt_metacallEN11QMetaObject4CallEiPPv )( void *scorep_libwrap_arg_this, QMetaObject::Call scorep_libwrap_arg_1, int scorep_libwrap_arg_2, void ** scorep_libwrap_arg_3 )
{
    LIBWRAP_EARLY_INIT( _ZN13QOpenGLShader11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QOpenGLShader11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN13QOpenGLShader11qt_metacallEN11QMetaObject4CallEiPPv, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, scorep_libwrap_arg_2, scorep_libwrap_arg_3 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QOpenGLShader11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QOpenGLShaderC2E6QFlagsINS_13ShaderTypeBitEEP7QObject
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QOpenGLShaderC2E6QFlagsINS_13ShaderTypeBitEEP7QObject )( void *scorep_libwrap_arg_this, QOpenGLShader::ShaderType type, QObject * parent )
{
    LIBWRAP_EARLY_INIT( _ZN13QOpenGLShaderC2E6QFlagsINS_13ShaderTypeBitEEP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QOpenGLShaderC2E6QFlagsINS_13ShaderTypeBitEEP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QOpenGLShaderC2E6QFlagsINS_13ShaderTypeBitEEP7QObject, ( scorep_libwrap_arg_this, type, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QOpenGLShaderC2E6QFlagsINS_13ShaderTypeBitEEP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QOpenGLShaderC1E6QFlagsINS_13ShaderTypeBitEEP7QObject
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QOpenGLShaderC1E6QFlagsINS_13ShaderTypeBitEEP7QObject )( void *scorep_libwrap_arg_this, QOpenGLShader::ShaderType type, QObject * parent )
{
    LIBWRAP_EARLY_INIT( _ZN13QOpenGLShaderC1E6QFlagsINS_13ShaderTypeBitEEP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QOpenGLShaderC1E6QFlagsINS_13ShaderTypeBitEEP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QOpenGLShaderC1E6QFlagsINS_13ShaderTypeBitEEP7QObject, ( scorep_libwrap_arg_this, type, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QOpenGLShaderC1E6QFlagsINS_13ShaderTypeBitEEP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QOpenGLShaderD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QOpenGLShaderD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN13QOpenGLShaderD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QOpenGLShaderD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QOpenGLShaderD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QOpenGLShaderD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QOpenGLShaderD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QOpenGLShaderD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN13QOpenGLShaderD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QOpenGLShaderD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QOpenGLShaderD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QOpenGLShaderD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QOpenGLShaderD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QOpenGLShaderD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN13QOpenGLShaderD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QOpenGLShaderD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QOpenGLShaderD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QOpenGLShaderD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK13QOpenGLShader10shaderTypeEv
QOpenGLShader::ShaderType
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QOpenGLShader10shaderTypeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QOpenGLShader10shaderTypeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QOpenGLShader10shaderTypeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QOpenGLShader::ShaderType scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QOpenGLShader10shaderTypeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QOpenGLShader10shaderTypeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QOpenGLShader17compileSourceCodeEPKc
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QOpenGLShader17compileSourceCodeEPKc )( void *scorep_libwrap_arg_this, const char * source )
{
    LIBWRAP_EARLY_INIT( _ZN13QOpenGLShader17compileSourceCodeEPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QOpenGLShader17compileSourceCodeEPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN13QOpenGLShader17compileSourceCodeEPKc, ( scorep_libwrap_arg_this, source ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QOpenGLShader17compileSourceCodeEPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QOpenGLShader17compileSourceCodeERK10QByteArray
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QOpenGLShader17compileSourceCodeERK10QByteArray )( void *scorep_libwrap_arg_this, const QByteArray & source )
{
    LIBWRAP_EARLY_INIT( _ZN13QOpenGLShader17compileSourceCodeERK10QByteArray );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QOpenGLShader17compileSourceCodeERK10QByteArray );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN13QOpenGLShader17compileSourceCodeERK10QByteArray, ( scorep_libwrap_arg_this, source ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QOpenGLShader17compileSourceCodeERK10QByteArray );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QOpenGLShader17compileSourceCodeERK7QString
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QOpenGLShader17compileSourceCodeERK7QString )( void *scorep_libwrap_arg_this, const QString & source )
{
    LIBWRAP_EARLY_INIT( _ZN13QOpenGLShader17compileSourceCodeERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QOpenGLShader17compileSourceCodeERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN13QOpenGLShader17compileSourceCodeERK7QString, ( scorep_libwrap_arg_this, source ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QOpenGLShader17compileSourceCodeERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QOpenGLShader17compileSourceFileERK7QString
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QOpenGLShader17compileSourceFileERK7QString )( void *scorep_libwrap_arg_this, const QString & fileName )
{
    LIBWRAP_EARLY_INIT( _ZN13QOpenGLShader17compileSourceFileERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QOpenGLShader17compileSourceFileERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN13QOpenGLShader17compileSourceFileERK7QString, ( scorep_libwrap_arg_this, fileName ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QOpenGLShader17compileSourceFileERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QOpenGLShader10sourceCodeEv
QByteArray
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QOpenGLShader10sourceCodeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QOpenGLShader10sourceCodeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QOpenGLShader10sourceCodeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QByteArray scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QOpenGLShader10sourceCodeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QOpenGLShader10sourceCodeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QOpenGLShader10isCompiledEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QOpenGLShader10isCompiledEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QOpenGLShader10isCompiledEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QOpenGLShader10isCompiledEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QOpenGLShader10isCompiledEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QOpenGLShader10isCompiledEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QOpenGLShader3logEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QOpenGLShader3logEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QOpenGLShader3logEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QOpenGLShader3logEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QOpenGLShader3logEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QOpenGLShader3logEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QOpenGLShader8shaderIdEv
GLuint
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QOpenGLShader8shaderIdEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QOpenGLShader8shaderIdEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QOpenGLShader8shaderIdEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    GLuint scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QOpenGLShader8shaderIdEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QOpenGLShader8shaderIdEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QOpenGLShader16hasOpenGLShadersE6QFlagsINS_13ShaderTypeBitEEP14QOpenGLContext
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QOpenGLShader16hasOpenGLShadersE6QFlagsINS_13ShaderTypeBitEEP14QOpenGLContext )( QOpenGLShader::ShaderType type, QOpenGLContext * context )
{
    LIBWRAP_EARLY_INIT( _ZN13QOpenGLShader16hasOpenGLShadersE6QFlagsINS_13ShaderTypeBitEEP14QOpenGLContext );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QOpenGLShader16hasOpenGLShadersE6QFlagsINS_13ShaderTypeBitEEP14QOpenGLContext );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN13QOpenGLShader16hasOpenGLShadersE6QFlagsINS_13ShaderTypeBitEEP14QOpenGLContext, ( type, context ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QOpenGLShader16hasOpenGLShadersE6QFlagsINS_13ShaderTypeBitEEP14QOpenGLContext );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK20QOpenGLShaderProgram10metaObjectEv
const QMetaObject *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK20QOpenGLShaderProgram10metaObjectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK20QOpenGLShaderProgram10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK20QOpenGLShaderProgram10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QMetaObject * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK20QOpenGLShaderProgram10metaObjectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK20QOpenGLShaderProgram10metaObjectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN20QOpenGLShaderProgram11qt_metacastEPKc
void *
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram11qt_metacastEPKc )( void *scorep_libwrap_arg_this, const char * scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    void * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram11qt_metacastEPKc, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram11qt_metacastEPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN20QOpenGLShaderProgram11qt_metacallEN11QMetaObject4CallEiPPv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram11qt_metacallEN11QMetaObject4CallEiPPv )( void *scorep_libwrap_arg_this, QMetaObject::Call scorep_libwrap_arg_1, int scorep_libwrap_arg_2, void ** scorep_libwrap_arg_3 )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram11qt_metacallEN11QMetaObject4CallEiPPv, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, scorep_libwrap_arg_2, scorep_libwrap_arg_3 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN20QOpenGLShaderProgramC2EP7QObject
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgramC2EP7QObject )( void *scorep_libwrap_arg_this, QObject * parent )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgramC2EP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgramC2EP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgramC2EP7QObject, ( scorep_libwrap_arg_this, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgramC2EP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgramC1EP7QObject
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgramC1EP7QObject )( void *scorep_libwrap_arg_this, QObject * parent )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgramC1EP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgramC1EP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgramC1EP7QObject, ( scorep_libwrap_arg_this, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgramC1EP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgramD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgramD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgramD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgramD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgramD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgramD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgramD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgramD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgramD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgramD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgramD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgramD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgramD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgramD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgramD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgramD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgramD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgramD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram9addShaderEP13QOpenGLShader
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram9addShaderEP13QOpenGLShader )( void *scorep_libwrap_arg_this, QOpenGLShader * shader )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram9addShaderEP13QOpenGLShader );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram9addShaderEP13QOpenGLShader );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram9addShaderEP13QOpenGLShader, ( scorep_libwrap_arg_this, shader ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram9addShaderEP13QOpenGLShader );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN20QOpenGLShaderProgram12removeShaderEP13QOpenGLShader
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram12removeShaderEP13QOpenGLShader )( void *scorep_libwrap_arg_this, QOpenGLShader * shader )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram12removeShaderEP13QOpenGLShader );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram12removeShaderEP13QOpenGLShader );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram12removeShaderEP13QOpenGLShader, ( scorep_libwrap_arg_this, shader ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram12removeShaderEP13QOpenGLShader );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK20QOpenGLShaderProgram7shadersEv
QList<QOpenGLShader *>
SCOREP_LIBWRAP_FUNC_NAME( _ZNK20QOpenGLShaderProgram7shadersEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK20QOpenGLShaderProgram7shadersEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK20QOpenGLShaderProgram7shadersEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QList<QOpenGLShader *> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK20QOpenGLShaderProgram7shadersEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK20QOpenGLShaderProgram7shadersEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN20QOpenGLShaderProgram23addShaderFromSourceCodeE6QFlagsIN13QOpenGLShader13ShaderTypeBitEEPKc
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram23addShaderFromSourceCodeE6QFlagsIN13QOpenGLShader13ShaderTypeBitEEPKc )( void *scorep_libwrap_arg_this, QOpenGLShader::ShaderType type, const char * source )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram23addShaderFromSourceCodeE6QFlagsIN13QOpenGLShader13ShaderTypeBitEEPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram23addShaderFromSourceCodeE6QFlagsIN13QOpenGLShader13ShaderTypeBitEEPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram23addShaderFromSourceCodeE6QFlagsIN13QOpenGLShader13ShaderTypeBitEEPKc, ( scorep_libwrap_arg_this, type, source ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram23addShaderFromSourceCodeE6QFlagsIN13QOpenGLShader13ShaderTypeBitEEPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN20QOpenGLShaderProgram23addShaderFromSourceCodeE6QFlagsIN13QOpenGLShader13ShaderTypeBitEERK10QByteArray
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram23addShaderFromSourceCodeE6QFlagsIN13QOpenGLShader13ShaderTypeBitEERK10QByteArray )( void *scorep_libwrap_arg_this, QOpenGLShader::ShaderType type, const QByteArray & source )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram23addShaderFromSourceCodeE6QFlagsIN13QOpenGLShader13ShaderTypeBitEERK10QByteArray );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram23addShaderFromSourceCodeE6QFlagsIN13QOpenGLShader13ShaderTypeBitEERK10QByteArray );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram23addShaderFromSourceCodeE6QFlagsIN13QOpenGLShader13ShaderTypeBitEERK10QByteArray, ( scorep_libwrap_arg_this, type, source ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram23addShaderFromSourceCodeE6QFlagsIN13QOpenGLShader13ShaderTypeBitEERK10QByteArray );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN20QOpenGLShaderProgram23addShaderFromSourceCodeE6QFlagsIN13QOpenGLShader13ShaderTypeBitEERK7QString
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram23addShaderFromSourceCodeE6QFlagsIN13QOpenGLShader13ShaderTypeBitEERK7QString )( void *scorep_libwrap_arg_this, QOpenGLShader::ShaderType type, const QString & source )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram23addShaderFromSourceCodeE6QFlagsIN13QOpenGLShader13ShaderTypeBitEERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram23addShaderFromSourceCodeE6QFlagsIN13QOpenGLShader13ShaderTypeBitEERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram23addShaderFromSourceCodeE6QFlagsIN13QOpenGLShader13ShaderTypeBitEERK7QString, ( scorep_libwrap_arg_this, type, source ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram23addShaderFromSourceCodeE6QFlagsIN13QOpenGLShader13ShaderTypeBitEERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN20QOpenGLShaderProgram23addShaderFromSourceFileE6QFlagsIN13QOpenGLShader13ShaderTypeBitEERK7QString
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram23addShaderFromSourceFileE6QFlagsIN13QOpenGLShader13ShaderTypeBitEERK7QString )( void *scorep_libwrap_arg_this, QOpenGLShader::ShaderType type, const QString & fileName )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram23addShaderFromSourceFileE6QFlagsIN13QOpenGLShader13ShaderTypeBitEERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram23addShaderFromSourceFileE6QFlagsIN13QOpenGLShader13ShaderTypeBitEERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram23addShaderFromSourceFileE6QFlagsIN13QOpenGLShader13ShaderTypeBitEERK7QString, ( scorep_libwrap_arg_this, type, fileName ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram23addShaderFromSourceFileE6QFlagsIN13QOpenGLShader13ShaderTypeBitEERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN20QOpenGLShaderProgram16removeAllShadersEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram16removeAllShadersEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram16removeAllShadersEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram16removeAllShadersEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram16removeAllShadersEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram16removeAllShadersEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram4linkEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram4linkEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram4linkEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram4linkEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram4linkEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram4linkEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK20QOpenGLShaderProgram8isLinkedEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK20QOpenGLShaderProgram8isLinkedEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK20QOpenGLShaderProgram8isLinkedEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK20QOpenGLShaderProgram8isLinkedEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK20QOpenGLShaderProgram8isLinkedEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK20QOpenGLShaderProgram8isLinkedEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK20QOpenGLShaderProgram3logEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK20QOpenGLShaderProgram3logEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK20QOpenGLShaderProgram3logEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK20QOpenGLShaderProgram3logEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK20QOpenGLShaderProgram3logEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK20QOpenGLShaderProgram3logEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN20QOpenGLShaderProgram4bindEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram4bindEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram4bindEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram4bindEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram4bindEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram4bindEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN20QOpenGLShaderProgram7releaseEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram7releaseEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram7releaseEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram7releaseEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram7releaseEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram7releaseEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram6createEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram6createEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram6createEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram6createEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram6createEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram6createEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK20QOpenGLShaderProgram9programIdEv
GLuint
SCOREP_LIBWRAP_FUNC_NAME( _ZNK20QOpenGLShaderProgram9programIdEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK20QOpenGLShaderProgram9programIdEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK20QOpenGLShaderProgram9programIdEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    GLuint scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK20QOpenGLShaderProgram9programIdEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK20QOpenGLShaderProgram9programIdEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK20QOpenGLShaderProgram25maxGeometryOutputVerticesEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK20QOpenGLShaderProgram25maxGeometryOutputVerticesEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK20QOpenGLShaderProgram25maxGeometryOutputVerticesEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK20QOpenGLShaderProgram25maxGeometryOutputVerticesEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK20QOpenGLShaderProgram25maxGeometryOutputVerticesEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK20QOpenGLShaderProgram25maxGeometryOutputVerticesEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN20QOpenGLShaderProgram19setPatchVertexCountEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram19setPatchVertexCountEi )( void *scorep_libwrap_arg_this, int count )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram19setPatchVertexCountEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram19setPatchVertexCountEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram19setPatchVertexCountEi, ( scorep_libwrap_arg_this, count ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram19setPatchVertexCountEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK20QOpenGLShaderProgram16patchVertexCountEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK20QOpenGLShaderProgram16patchVertexCountEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK20QOpenGLShaderProgram16patchVertexCountEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK20QOpenGLShaderProgram16patchVertexCountEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK20QOpenGLShaderProgram16patchVertexCountEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK20QOpenGLShaderProgram16patchVertexCountEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN20QOpenGLShaderProgram33setDefaultOuterTessellationLevelsERK7QVectorIfE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram33setDefaultOuterTessellationLevelsERK7QVectorIfE )( void *scorep_libwrap_arg_this, const QVector<float> & levels )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram33setDefaultOuterTessellationLevelsERK7QVectorIfE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram33setDefaultOuterTessellationLevelsERK7QVectorIfE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram33setDefaultOuterTessellationLevelsERK7QVectorIfE, ( scorep_libwrap_arg_this, levels ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram33setDefaultOuterTessellationLevelsERK7QVectorIfE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK20QOpenGLShaderProgram30defaultOuterTessellationLevelsEv
QVector<float>
SCOREP_LIBWRAP_FUNC_NAME( _ZNK20QOpenGLShaderProgram30defaultOuterTessellationLevelsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK20QOpenGLShaderProgram30defaultOuterTessellationLevelsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK20QOpenGLShaderProgram30defaultOuterTessellationLevelsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QVector<float> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK20QOpenGLShaderProgram30defaultOuterTessellationLevelsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK20QOpenGLShaderProgram30defaultOuterTessellationLevelsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN20QOpenGLShaderProgram33setDefaultInnerTessellationLevelsERK7QVectorIfE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram33setDefaultInnerTessellationLevelsERK7QVectorIfE )( void *scorep_libwrap_arg_this, const QVector<float> & levels )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram33setDefaultInnerTessellationLevelsERK7QVectorIfE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram33setDefaultInnerTessellationLevelsERK7QVectorIfE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram33setDefaultInnerTessellationLevelsERK7QVectorIfE, ( scorep_libwrap_arg_this, levels ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram33setDefaultInnerTessellationLevelsERK7QVectorIfE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK20QOpenGLShaderProgram30defaultInnerTessellationLevelsEv
QVector<float>
SCOREP_LIBWRAP_FUNC_NAME( _ZNK20QOpenGLShaderProgram30defaultInnerTessellationLevelsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK20QOpenGLShaderProgram30defaultInnerTessellationLevelsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK20QOpenGLShaderProgram30defaultInnerTessellationLevelsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QVector<float> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK20QOpenGLShaderProgram30defaultInnerTessellationLevelsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK20QOpenGLShaderProgram30defaultInnerTessellationLevelsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN20QOpenGLShaderProgram21bindAttributeLocationEPKci
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram21bindAttributeLocationEPKci )( void *scorep_libwrap_arg_this, const char * name, int location )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram21bindAttributeLocationEPKci );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram21bindAttributeLocationEPKci );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram21bindAttributeLocationEPKci, ( scorep_libwrap_arg_this, name, location ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram21bindAttributeLocationEPKci );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram21bindAttributeLocationERK10QByteArrayi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram21bindAttributeLocationERK10QByteArrayi )( void *scorep_libwrap_arg_this, const QByteArray & name, int location )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram21bindAttributeLocationERK10QByteArrayi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram21bindAttributeLocationERK10QByteArrayi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram21bindAttributeLocationERK10QByteArrayi, ( scorep_libwrap_arg_this, name, location ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram21bindAttributeLocationERK10QByteArrayi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram21bindAttributeLocationERK7QStringi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram21bindAttributeLocationERK7QStringi )( void *scorep_libwrap_arg_this, const QString & name, int location )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram21bindAttributeLocationERK7QStringi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram21bindAttributeLocationERK7QStringi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram21bindAttributeLocationERK7QStringi, ( scorep_libwrap_arg_this, name, location ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram21bindAttributeLocationERK7QStringi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK20QOpenGLShaderProgram17attributeLocationEPKc
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK20QOpenGLShaderProgram17attributeLocationEPKc )( void *scorep_libwrap_arg_this, const char * name )
{
    LIBWRAP_EARLY_INIT( _ZNK20QOpenGLShaderProgram17attributeLocationEPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK20QOpenGLShaderProgram17attributeLocationEPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK20QOpenGLShaderProgram17attributeLocationEPKc, ( scorep_libwrap_arg_this, name ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK20QOpenGLShaderProgram17attributeLocationEPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK20QOpenGLShaderProgram17attributeLocationERK10QByteArray
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK20QOpenGLShaderProgram17attributeLocationERK10QByteArray )( void *scorep_libwrap_arg_this, const QByteArray & name )
{
    LIBWRAP_EARLY_INIT( _ZNK20QOpenGLShaderProgram17attributeLocationERK10QByteArray );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK20QOpenGLShaderProgram17attributeLocationERK10QByteArray );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK20QOpenGLShaderProgram17attributeLocationERK10QByteArray, ( scorep_libwrap_arg_this, name ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK20QOpenGLShaderProgram17attributeLocationERK10QByteArray );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK20QOpenGLShaderProgram17attributeLocationERK7QString
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK20QOpenGLShaderProgram17attributeLocationERK7QString )( void *scorep_libwrap_arg_this, const QString & name )
{
    LIBWRAP_EARLY_INIT( _ZNK20QOpenGLShaderProgram17attributeLocationERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK20QOpenGLShaderProgram17attributeLocationERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK20QOpenGLShaderProgram17attributeLocationERK7QString, ( scorep_libwrap_arg_this, name ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK20QOpenGLShaderProgram17attributeLocationERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN20QOpenGLShaderProgram17setAttributeValueEif
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram17setAttributeValueEif )( void *scorep_libwrap_arg_this, int location, GLfloat value )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram17setAttributeValueEif );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram17setAttributeValueEif );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram17setAttributeValueEif, ( scorep_libwrap_arg_this, location, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram17setAttributeValueEif );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram17setAttributeValueEiff
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram17setAttributeValueEiff )( void *scorep_libwrap_arg_this, int location, GLfloat x, GLfloat y )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram17setAttributeValueEiff );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram17setAttributeValueEiff );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram17setAttributeValueEiff, ( scorep_libwrap_arg_this, location, x, y ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram17setAttributeValueEiff );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram17setAttributeValueEifff
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram17setAttributeValueEifff )( void *scorep_libwrap_arg_this, int location, GLfloat x, GLfloat y, GLfloat z )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram17setAttributeValueEifff );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram17setAttributeValueEifff );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram17setAttributeValueEifff, ( scorep_libwrap_arg_this, location, x, y, z ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram17setAttributeValueEifff );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram17setAttributeValueEiffff
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram17setAttributeValueEiffff )( void *scorep_libwrap_arg_this, int location, GLfloat x, GLfloat y, GLfloat z, GLfloat w )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram17setAttributeValueEiffff );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram17setAttributeValueEiffff );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram17setAttributeValueEiffff, ( scorep_libwrap_arg_this, location, x, y, z, w ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram17setAttributeValueEiffff );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram17setAttributeValueEiRK9QVector2D
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram17setAttributeValueEiRK9QVector2D )( void *scorep_libwrap_arg_this, int location, const QVector2D & value )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram17setAttributeValueEiRK9QVector2D );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram17setAttributeValueEiRK9QVector2D );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram17setAttributeValueEiRK9QVector2D, ( scorep_libwrap_arg_this, location, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram17setAttributeValueEiRK9QVector2D );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram17setAttributeValueEiRK9QVector3D
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram17setAttributeValueEiRK9QVector3D )( void *scorep_libwrap_arg_this, int location, const QVector3D & value )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram17setAttributeValueEiRK9QVector3D );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram17setAttributeValueEiRK9QVector3D );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram17setAttributeValueEiRK9QVector3D, ( scorep_libwrap_arg_this, location, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram17setAttributeValueEiRK9QVector3D );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram17setAttributeValueEiRK9QVector4D
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram17setAttributeValueEiRK9QVector4D )( void *scorep_libwrap_arg_this, int location, const QVector4D & value )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram17setAttributeValueEiRK9QVector4D );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram17setAttributeValueEiRK9QVector4D );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram17setAttributeValueEiRK9QVector4D, ( scorep_libwrap_arg_this, location, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram17setAttributeValueEiRK9QVector4D );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram17setAttributeValueEiRK6QColor
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram17setAttributeValueEiRK6QColor )( void *scorep_libwrap_arg_this, int location, const QColor & value )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram17setAttributeValueEiRK6QColor );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram17setAttributeValueEiRK6QColor );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram17setAttributeValueEiRK6QColor, ( scorep_libwrap_arg_this, location, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram17setAttributeValueEiRK6QColor );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram17setAttributeValueEiPKfii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram17setAttributeValueEiPKfii )( void *scorep_libwrap_arg_this, int location, const GLfloat * values, int columns, int rows )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram17setAttributeValueEiPKfii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram17setAttributeValueEiPKfii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram17setAttributeValueEiPKfii, ( scorep_libwrap_arg_this, location, values, columns, rows ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram17setAttributeValueEiPKfii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram17setAttributeValueEPKcf
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram17setAttributeValueEPKcf )( void *scorep_libwrap_arg_this, const char * name, GLfloat value )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram17setAttributeValueEPKcf );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram17setAttributeValueEPKcf );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram17setAttributeValueEPKcf, ( scorep_libwrap_arg_this, name, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram17setAttributeValueEPKcf );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram17setAttributeValueEPKcff
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram17setAttributeValueEPKcff )( void *scorep_libwrap_arg_this, const char * name, GLfloat x, GLfloat y )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram17setAttributeValueEPKcff );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram17setAttributeValueEPKcff );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram17setAttributeValueEPKcff, ( scorep_libwrap_arg_this, name, x, y ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram17setAttributeValueEPKcff );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram17setAttributeValueEPKcfff
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram17setAttributeValueEPKcfff )( void *scorep_libwrap_arg_this, const char * name, GLfloat x, GLfloat y, GLfloat z )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram17setAttributeValueEPKcfff );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram17setAttributeValueEPKcfff );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram17setAttributeValueEPKcfff, ( scorep_libwrap_arg_this, name, x, y, z ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram17setAttributeValueEPKcfff );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram17setAttributeValueEPKcffff
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram17setAttributeValueEPKcffff )( void *scorep_libwrap_arg_this, const char * name, GLfloat x, GLfloat y, GLfloat z, GLfloat w )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram17setAttributeValueEPKcffff );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram17setAttributeValueEPKcffff );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram17setAttributeValueEPKcffff, ( scorep_libwrap_arg_this, name, x, y, z, w ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram17setAttributeValueEPKcffff );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram17setAttributeValueEPKcRK9QVector2D
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram17setAttributeValueEPKcRK9QVector2D )( void *scorep_libwrap_arg_this, const char * name, const QVector2D & value )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram17setAttributeValueEPKcRK9QVector2D );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram17setAttributeValueEPKcRK9QVector2D );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram17setAttributeValueEPKcRK9QVector2D, ( scorep_libwrap_arg_this, name, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram17setAttributeValueEPKcRK9QVector2D );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram17setAttributeValueEPKcRK9QVector3D
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram17setAttributeValueEPKcRK9QVector3D )( void *scorep_libwrap_arg_this, const char * name, const QVector3D & value )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram17setAttributeValueEPKcRK9QVector3D );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram17setAttributeValueEPKcRK9QVector3D );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram17setAttributeValueEPKcRK9QVector3D, ( scorep_libwrap_arg_this, name, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram17setAttributeValueEPKcRK9QVector3D );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram17setAttributeValueEPKcRK9QVector4D
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram17setAttributeValueEPKcRK9QVector4D )( void *scorep_libwrap_arg_this, const char * name, const QVector4D & value )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram17setAttributeValueEPKcRK9QVector4D );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram17setAttributeValueEPKcRK9QVector4D );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram17setAttributeValueEPKcRK9QVector4D, ( scorep_libwrap_arg_this, name, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram17setAttributeValueEPKcRK9QVector4D );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram17setAttributeValueEPKcRK6QColor
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram17setAttributeValueEPKcRK6QColor )( void *scorep_libwrap_arg_this, const char * name, const QColor & value )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram17setAttributeValueEPKcRK6QColor );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram17setAttributeValueEPKcRK6QColor );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram17setAttributeValueEPKcRK6QColor, ( scorep_libwrap_arg_this, name, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram17setAttributeValueEPKcRK6QColor );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram17setAttributeValueEPKcPKfii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram17setAttributeValueEPKcPKfii )( void *scorep_libwrap_arg_this, const char * name, const GLfloat * values, int columns, int rows )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram17setAttributeValueEPKcPKfii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram17setAttributeValueEPKcPKfii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram17setAttributeValueEPKcPKfii, ( scorep_libwrap_arg_this, name, values, columns, rows ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram17setAttributeValueEPKcPKfii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram17setAttributeArrayEiPKfii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram17setAttributeArrayEiPKfii )( void *scorep_libwrap_arg_this, int location, const GLfloat * values, int tupleSize, int stride )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram17setAttributeArrayEiPKfii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram17setAttributeArrayEiPKfii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram17setAttributeArrayEiPKfii, ( scorep_libwrap_arg_this, location, values, tupleSize, stride ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram17setAttributeArrayEiPKfii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram17setAttributeArrayEiPK9QVector2Di
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram17setAttributeArrayEiPK9QVector2Di )( void *scorep_libwrap_arg_this, int location, const QVector2D * values, int stride )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram17setAttributeArrayEiPK9QVector2Di );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram17setAttributeArrayEiPK9QVector2Di );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram17setAttributeArrayEiPK9QVector2Di, ( scorep_libwrap_arg_this, location, values, stride ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram17setAttributeArrayEiPK9QVector2Di );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram17setAttributeArrayEiPK9QVector3Di
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram17setAttributeArrayEiPK9QVector3Di )( void *scorep_libwrap_arg_this, int location, const QVector3D * values, int stride )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram17setAttributeArrayEiPK9QVector3Di );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram17setAttributeArrayEiPK9QVector3Di );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram17setAttributeArrayEiPK9QVector3Di, ( scorep_libwrap_arg_this, location, values, stride ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram17setAttributeArrayEiPK9QVector3Di );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram17setAttributeArrayEiPK9QVector4Di
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram17setAttributeArrayEiPK9QVector4Di )( void *scorep_libwrap_arg_this, int location, const QVector4D * values, int stride )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram17setAttributeArrayEiPK9QVector4Di );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram17setAttributeArrayEiPK9QVector4Di );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram17setAttributeArrayEiPK9QVector4Di, ( scorep_libwrap_arg_this, location, values, stride ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram17setAttributeArrayEiPK9QVector4Di );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram17setAttributeArrayEijPKvii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram17setAttributeArrayEijPKvii )( void *scorep_libwrap_arg_this, int location, GLenum type, const void * values, int tupleSize, int stride )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram17setAttributeArrayEijPKvii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram17setAttributeArrayEijPKvii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram17setAttributeArrayEijPKvii, ( scorep_libwrap_arg_this, location, type, values, tupleSize, stride ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram17setAttributeArrayEijPKvii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram17setAttributeArrayEPKcPKfii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram17setAttributeArrayEPKcPKfii )( void *scorep_libwrap_arg_this, const char * name, const GLfloat * values, int tupleSize, int stride )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram17setAttributeArrayEPKcPKfii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram17setAttributeArrayEPKcPKfii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram17setAttributeArrayEPKcPKfii, ( scorep_libwrap_arg_this, name, values, tupleSize, stride ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram17setAttributeArrayEPKcPKfii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram17setAttributeArrayEPKcPK9QVector2Di
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram17setAttributeArrayEPKcPK9QVector2Di )( void *scorep_libwrap_arg_this, const char * name, const QVector2D * values, int stride )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram17setAttributeArrayEPKcPK9QVector2Di );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram17setAttributeArrayEPKcPK9QVector2Di );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram17setAttributeArrayEPKcPK9QVector2Di, ( scorep_libwrap_arg_this, name, values, stride ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram17setAttributeArrayEPKcPK9QVector2Di );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram17setAttributeArrayEPKcPK9QVector3Di
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram17setAttributeArrayEPKcPK9QVector3Di )( void *scorep_libwrap_arg_this, const char * name, const QVector3D * values, int stride )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram17setAttributeArrayEPKcPK9QVector3Di );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram17setAttributeArrayEPKcPK9QVector3Di );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram17setAttributeArrayEPKcPK9QVector3Di, ( scorep_libwrap_arg_this, name, values, stride ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram17setAttributeArrayEPKcPK9QVector3Di );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram17setAttributeArrayEPKcPK9QVector4Di
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram17setAttributeArrayEPKcPK9QVector4Di )( void *scorep_libwrap_arg_this, const char * name, const QVector4D * values, int stride )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram17setAttributeArrayEPKcPK9QVector4Di );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram17setAttributeArrayEPKcPK9QVector4Di );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram17setAttributeArrayEPKcPK9QVector4Di, ( scorep_libwrap_arg_this, name, values, stride ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram17setAttributeArrayEPKcPK9QVector4Di );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram17setAttributeArrayEPKcjPKvii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram17setAttributeArrayEPKcjPKvii )( void *scorep_libwrap_arg_this, const char * name, GLenum type, const void * values, int tupleSize, int stride )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram17setAttributeArrayEPKcjPKvii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram17setAttributeArrayEPKcjPKvii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram17setAttributeArrayEPKcjPKvii, ( scorep_libwrap_arg_this, name, type, values, tupleSize, stride ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram17setAttributeArrayEPKcjPKvii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram18setAttributeBufferEijiii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram18setAttributeBufferEijiii )( void *scorep_libwrap_arg_this, int location, GLenum type, int offset, int tupleSize, int stride )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram18setAttributeBufferEijiii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram18setAttributeBufferEijiii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram18setAttributeBufferEijiii, ( scorep_libwrap_arg_this, location, type, offset, tupleSize, stride ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram18setAttributeBufferEijiii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram18setAttributeBufferEPKcjiii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram18setAttributeBufferEPKcjiii )( void *scorep_libwrap_arg_this, const char * name, GLenum type, int offset, int tupleSize, int stride )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram18setAttributeBufferEPKcjiii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram18setAttributeBufferEPKcjiii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram18setAttributeBufferEPKcjiii, ( scorep_libwrap_arg_this, name, type, offset, tupleSize, stride ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram18setAttributeBufferEPKcjiii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram20enableAttributeArrayEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram20enableAttributeArrayEi )( void *scorep_libwrap_arg_this, int location )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram20enableAttributeArrayEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram20enableAttributeArrayEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram20enableAttributeArrayEi, ( scorep_libwrap_arg_this, location ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram20enableAttributeArrayEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram20enableAttributeArrayEPKc
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram20enableAttributeArrayEPKc )( void *scorep_libwrap_arg_this, const char * name )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram20enableAttributeArrayEPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram20enableAttributeArrayEPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram20enableAttributeArrayEPKc, ( scorep_libwrap_arg_this, name ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram20enableAttributeArrayEPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram21disableAttributeArrayEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram21disableAttributeArrayEi )( void *scorep_libwrap_arg_this, int location )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram21disableAttributeArrayEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram21disableAttributeArrayEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram21disableAttributeArrayEi, ( scorep_libwrap_arg_this, location ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram21disableAttributeArrayEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram21disableAttributeArrayEPKc
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram21disableAttributeArrayEPKc )( void *scorep_libwrap_arg_this, const char * name )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram21disableAttributeArrayEPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram21disableAttributeArrayEPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram21disableAttributeArrayEPKc, ( scorep_libwrap_arg_this, name ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram21disableAttributeArrayEPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK20QOpenGLShaderProgram15uniformLocationEPKc
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK20QOpenGLShaderProgram15uniformLocationEPKc )( void *scorep_libwrap_arg_this, const char * name )
{
    LIBWRAP_EARLY_INIT( _ZNK20QOpenGLShaderProgram15uniformLocationEPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK20QOpenGLShaderProgram15uniformLocationEPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK20QOpenGLShaderProgram15uniformLocationEPKc, ( scorep_libwrap_arg_this, name ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK20QOpenGLShaderProgram15uniformLocationEPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK20QOpenGLShaderProgram15uniformLocationERK10QByteArray
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK20QOpenGLShaderProgram15uniformLocationERK10QByteArray )( void *scorep_libwrap_arg_this, const QByteArray & name )
{
    LIBWRAP_EARLY_INIT( _ZNK20QOpenGLShaderProgram15uniformLocationERK10QByteArray );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK20QOpenGLShaderProgram15uniformLocationERK10QByteArray );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK20QOpenGLShaderProgram15uniformLocationERK10QByteArray, ( scorep_libwrap_arg_this, name ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK20QOpenGLShaderProgram15uniformLocationERK10QByteArray );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK20QOpenGLShaderProgram15uniformLocationERK7QString
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK20QOpenGLShaderProgram15uniformLocationERK7QString )( void *scorep_libwrap_arg_this, const QString & name )
{
    LIBWRAP_EARLY_INIT( _ZNK20QOpenGLShaderProgram15uniformLocationERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK20QOpenGLShaderProgram15uniformLocationERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK20QOpenGLShaderProgram15uniformLocationERK7QString, ( scorep_libwrap_arg_this, name ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK20QOpenGLShaderProgram15uniformLocationERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN20QOpenGLShaderProgram15setUniformValueEif
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram15setUniformValueEif )( void *scorep_libwrap_arg_this, int location, GLfloat value )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram15setUniformValueEif );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram15setUniformValueEif );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram15setUniformValueEif, ( scorep_libwrap_arg_this, location, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram15setUniformValueEif );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram15setUniformValueEii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram15setUniformValueEii )( void *scorep_libwrap_arg_this, int location, GLint value )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram15setUniformValueEii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram15setUniformValueEii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram15setUniformValueEii, ( scorep_libwrap_arg_this, location, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram15setUniformValueEii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram15setUniformValueEij
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram15setUniformValueEij )( void *scorep_libwrap_arg_this, int location, GLuint value )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram15setUniformValueEij );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram15setUniformValueEij );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram15setUniformValueEij, ( scorep_libwrap_arg_this, location, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram15setUniformValueEij );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram15setUniformValueEiff
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram15setUniformValueEiff )( void *scorep_libwrap_arg_this, int location, GLfloat x, GLfloat y )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram15setUniformValueEiff );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram15setUniformValueEiff );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram15setUniformValueEiff, ( scorep_libwrap_arg_this, location, x, y ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram15setUniformValueEiff );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram15setUniformValueEifff
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram15setUniformValueEifff )( void *scorep_libwrap_arg_this, int location, GLfloat x, GLfloat y, GLfloat z )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram15setUniformValueEifff );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram15setUniformValueEifff );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram15setUniformValueEifff, ( scorep_libwrap_arg_this, location, x, y, z ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram15setUniformValueEifff );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram15setUniformValueEiffff
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram15setUniformValueEiffff )( void *scorep_libwrap_arg_this, int location, GLfloat x, GLfloat y, GLfloat z, GLfloat w )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram15setUniformValueEiffff );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram15setUniformValueEiffff );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram15setUniformValueEiffff, ( scorep_libwrap_arg_this, location, x, y, z, w ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram15setUniformValueEiffff );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram15setUniformValueEiRK9QVector2D
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram15setUniformValueEiRK9QVector2D )( void *scorep_libwrap_arg_this, int location, const QVector2D & value )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram15setUniformValueEiRK9QVector2D );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram15setUniformValueEiRK9QVector2D );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram15setUniformValueEiRK9QVector2D, ( scorep_libwrap_arg_this, location, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram15setUniformValueEiRK9QVector2D );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram15setUniformValueEiRK9QVector3D
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram15setUniformValueEiRK9QVector3D )( void *scorep_libwrap_arg_this, int location, const QVector3D & value )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram15setUniformValueEiRK9QVector3D );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram15setUniformValueEiRK9QVector3D );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram15setUniformValueEiRK9QVector3D, ( scorep_libwrap_arg_this, location, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram15setUniformValueEiRK9QVector3D );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram15setUniformValueEiRK9QVector4D
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram15setUniformValueEiRK9QVector4D )( void *scorep_libwrap_arg_this, int location, const QVector4D & value )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram15setUniformValueEiRK9QVector4D );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram15setUniformValueEiRK9QVector4D );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram15setUniformValueEiRK9QVector4D, ( scorep_libwrap_arg_this, location, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram15setUniformValueEiRK9QVector4D );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram15setUniformValueEiRK6QColor
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram15setUniformValueEiRK6QColor )( void *scorep_libwrap_arg_this, int location, const QColor & color )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram15setUniformValueEiRK6QColor );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram15setUniformValueEiRK6QColor );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram15setUniformValueEiRK6QColor, ( scorep_libwrap_arg_this, location, color ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram15setUniformValueEiRK6QColor );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram15setUniformValueEiRK6QPoint
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram15setUniformValueEiRK6QPoint )( void *scorep_libwrap_arg_this, int location, const QPoint & point )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram15setUniformValueEiRK6QPoint );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram15setUniformValueEiRK6QPoint );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram15setUniformValueEiRK6QPoint, ( scorep_libwrap_arg_this, location, point ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram15setUniformValueEiRK6QPoint );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram15setUniformValueEiRK7QPointF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram15setUniformValueEiRK7QPointF )( void *scorep_libwrap_arg_this, int location, const QPointF & point )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram15setUniformValueEiRK7QPointF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram15setUniformValueEiRK7QPointF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram15setUniformValueEiRK7QPointF, ( scorep_libwrap_arg_this, location, point ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram15setUniformValueEiRK7QPointF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram15setUniformValueEiRK5QSize
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram15setUniformValueEiRK5QSize )( void *scorep_libwrap_arg_this, int location, const QSize & size )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram15setUniformValueEiRK5QSize );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram15setUniformValueEiRK5QSize );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram15setUniformValueEiRK5QSize, ( scorep_libwrap_arg_this, location, size ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram15setUniformValueEiRK5QSize );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram15setUniformValueEiRK6QSizeF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram15setUniformValueEiRK6QSizeF )( void *scorep_libwrap_arg_this, int location, const QSizeF & size )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram15setUniformValueEiRK6QSizeF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram15setUniformValueEiRK6QSizeF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram15setUniformValueEiRK6QSizeF, ( scorep_libwrap_arg_this, location, size ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram15setUniformValueEiRK6QSizeF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram15setUniformValueEiRK14QGenericMatrixILi2ELi2EfE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram15setUniformValueEiRK14QGenericMatrixILi2ELi2EfE )( void *scorep_libwrap_arg_this, int location, const QMatrix2x2 & value )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram15setUniformValueEiRK14QGenericMatrixILi2ELi2EfE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram15setUniformValueEiRK14QGenericMatrixILi2ELi2EfE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram15setUniformValueEiRK14QGenericMatrixILi2ELi2EfE, ( scorep_libwrap_arg_this, location, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram15setUniformValueEiRK14QGenericMatrixILi2ELi2EfE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram15setUniformValueEiRK14QGenericMatrixILi2ELi3EfE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram15setUniformValueEiRK14QGenericMatrixILi2ELi3EfE )( void *scorep_libwrap_arg_this, int location, const QMatrix2x3 & value )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram15setUniformValueEiRK14QGenericMatrixILi2ELi3EfE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram15setUniformValueEiRK14QGenericMatrixILi2ELi3EfE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram15setUniformValueEiRK14QGenericMatrixILi2ELi3EfE, ( scorep_libwrap_arg_this, location, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram15setUniformValueEiRK14QGenericMatrixILi2ELi3EfE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram15setUniformValueEiRK14QGenericMatrixILi2ELi4EfE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram15setUniformValueEiRK14QGenericMatrixILi2ELi4EfE )( void *scorep_libwrap_arg_this, int location, const QMatrix2x4 & value )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram15setUniformValueEiRK14QGenericMatrixILi2ELi4EfE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram15setUniformValueEiRK14QGenericMatrixILi2ELi4EfE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram15setUniformValueEiRK14QGenericMatrixILi2ELi4EfE, ( scorep_libwrap_arg_this, location, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram15setUniformValueEiRK14QGenericMatrixILi2ELi4EfE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram15setUniformValueEiRK14QGenericMatrixILi3ELi2EfE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram15setUniformValueEiRK14QGenericMatrixILi3ELi2EfE )( void *scorep_libwrap_arg_this, int location, const QMatrix3x2 & value )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram15setUniformValueEiRK14QGenericMatrixILi3ELi2EfE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram15setUniformValueEiRK14QGenericMatrixILi3ELi2EfE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram15setUniformValueEiRK14QGenericMatrixILi3ELi2EfE, ( scorep_libwrap_arg_this, location, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram15setUniformValueEiRK14QGenericMatrixILi3ELi2EfE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram15setUniformValueEiRK14QGenericMatrixILi3ELi3EfE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram15setUniformValueEiRK14QGenericMatrixILi3ELi3EfE )( void *scorep_libwrap_arg_this, int location, const QMatrix3x3 & value )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram15setUniformValueEiRK14QGenericMatrixILi3ELi3EfE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram15setUniformValueEiRK14QGenericMatrixILi3ELi3EfE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram15setUniformValueEiRK14QGenericMatrixILi3ELi3EfE, ( scorep_libwrap_arg_this, location, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram15setUniformValueEiRK14QGenericMatrixILi3ELi3EfE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram15setUniformValueEiRK14QGenericMatrixILi3ELi4EfE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram15setUniformValueEiRK14QGenericMatrixILi3ELi4EfE )( void *scorep_libwrap_arg_this, int location, const QMatrix3x4 & value )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram15setUniformValueEiRK14QGenericMatrixILi3ELi4EfE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram15setUniformValueEiRK14QGenericMatrixILi3ELi4EfE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram15setUniformValueEiRK14QGenericMatrixILi3ELi4EfE, ( scorep_libwrap_arg_this, location, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram15setUniformValueEiRK14QGenericMatrixILi3ELi4EfE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram15setUniformValueEiRK14QGenericMatrixILi4ELi2EfE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram15setUniformValueEiRK14QGenericMatrixILi4ELi2EfE )( void *scorep_libwrap_arg_this, int location, const QMatrix4x2 & value )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram15setUniformValueEiRK14QGenericMatrixILi4ELi2EfE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram15setUniformValueEiRK14QGenericMatrixILi4ELi2EfE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram15setUniformValueEiRK14QGenericMatrixILi4ELi2EfE, ( scorep_libwrap_arg_this, location, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram15setUniformValueEiRK14QGenericMatrixILi4ELi2EfE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram15setUniformValueEiRK14QGenericMatrixILi4ELi3EfE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram15setUniformValueEiRK14QGenericMatrixILi4ELi3EfE )( void *scorep_libwrap_arg_this, int location, const QMatrix4x3 & value )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram15setUniformValueEiRK14QGenericMatrixILi4ELi3EfE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram15setUniformValueEiRK14QGenericMatrixILi4ELi3EfE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram15setUniformValueEiRK14QGenericMatrixILi4ELi3EfE, ( scorep_libwrap_arg_this, location, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram15setUniformValueEiRK14QGenericMatrixILi4ELi3EfE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram15setUniformValueEiRK10QMatrix4x4
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram15setUniformValueEiRK10QMatrix4x4 )( void *scorep_libwrap_arg_this, int location, const QMatrix4x4 & value )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram15setUniformValueEiRK10QMatrix4x4 );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram15setUniformValueEiRK10QMatrix4x4 );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram15setUniformValueEiRK10QMatrix4x4, ( scorep_libwrap_arg_this, location, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram15setUniformValueEiRK10QMatrix4x4 );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram15setUniformValueEiPA2_Kf
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram15setUniformValueEiPA2_Kf )( void *scorep_libwrap_arg_this, int location, const GLfloat value[2][2] )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram15setUniformValueEiPA2_Kf );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram15setUniformValueEiPA2_Kf );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram15setUniformValueEiPA2_Kf, ( scorep_libwrap_arg_this, location, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram15setUniformValueEiPA2_Kf );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram15setUniformValueEiPA3_Kf
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram15setUniformValueEiPA3_Kf )( void *scorep_libwrap_arg_this, int location, const GLfloat value[3][3] )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram15setUniformValueEiPA3_Kf );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram15setUniformValueEiPA3_Kf );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram15setUniformValueEiPA3_Kf, ( scorep_libwrap_arg_this, location, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram15setUniformValueEiPA3_Kf );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram15setUniformValueEiPA4_Kf
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram15setUniformValueEiPA4_Kf )( void *scorep_libwrap_arg_this, int location, const GLfloat value[4][4] )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram15setUniformValueEiPA4_Kf );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram15setUniformValueEiPA4_Kf );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram15setUniformValueEiPA4_Kf, ( scorep_libwrap_arg_this, location, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram15setUniformValueEiPA4_Kf );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram15setUniformValueEiRK10QTransform
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram15setUniformValueEiRK10QTransform )( void *scorep_libwrap_arg_this, int location, const QTransform & value )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram15setUniformValueEiRK10QTransform );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram15setUniformValueEiRK10QTransform );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram15setUniformValueEiRK10QTransform, ( scorep_libwrap_arg_this, location, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram15setUniformValueEiRK10QTransform );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram15setUniformValueEPKcf
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram15setUniformValueEPKcf )( void *scorep_libwrap_arg_this, const char * name, GLfloat value )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram15setUniformValueEPKcf );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram15setUniformValueEPKcf );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram15setUniformValueEPKcf, ( scorep_libwrap_arg_this, name, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram15setUniformValueEPKcf );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram15setUniformValueEPKci
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram15setUniformValueEPKci )( void *scorep_libwrap_arg_this, const char * name, GLint value )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram15setUniformValueEPKci );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram15setUniformValueEPKci );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram15setUniformValueEPKci, ( scorep_libwrap_arg_this, name, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram15setUniformValueEPKci );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram15setUniformValueEPKcj
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram15setUniformValueEPKcj )( void *scorep_libwrap_arg_this, const char * name, GLuint value )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram15setUniformValueEPKcj );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram15setUniformValueEPKcj );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram15setUniformValueEPKcj, ( scorep_libwrap_arg_this, name, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram15setUniformValueEPKcj );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram15setUniformValueEPKcff
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram15setUniformValueEPKcff )( void *scorep_libwrap_arg_this, const char * name, GLfloat x, GLfloat y )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram15setUniformValueEPKcff );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram15setUniformValueEPKcff );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram15setUniformValueEPKcff, ( scorep_libwrap_arg_this, name, x, y ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram15setUniformValueEPKcff );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram15setUniformValueEPKcfff
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram15setUniformValueEPKcfff )( void *scorep_libwrap_arg_this, const char * name, GLfloat x, GLfloat y, GLfloat z )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram15setUniformValueEPKcfff );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram15setUniformValueEPKcfff );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram15setUniformValueEPKcfff, ( scorep_libwrap_arg_this, name, x, y, z ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram15setUniformValueEPKcfff );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram15setUniformValueEPKcffff
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram15setUniformValueEPKcffff )( void *scorep_libwrap_arg_this, const char * name, GLfloat x, GLfloat y, GLfloat z, GLfloat w )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram15setUniformValueEPKcffff );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram15setUniformValueEPKcffff );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram15setUniformValueEPKcffff, ( scorep_libwrap_arg_this, name, x, y, z, w ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram15setUniformValueEPKcffff );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK9QVector2D
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK9QVector2D )( void *scorep_libwrap_arg_this, const char * name, const QVector2D & value )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK9QVector2D );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK9QVector2D );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK9QVector2D, ( scorep_libwrap_arg_this, name, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK9QVector2D );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK9QVector3D
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK9QVector3D )( void *scorep_libwrap_arg_this, const char * name, const QVector3D & value )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK9QVector3D );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK9QVector3D );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK9QVector3D, ( scorep_libwrap_arg_this, name, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK9QVector3D );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK9QVector4D
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK9QVector4D )( void *scorep_libwrap_arg_this, const char * name, const QVector4D & value )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK9QVector4D );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK9QVector4D );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK9QVector4D, ( scorep_libwrap_arg_this, name, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK9QVector4D );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK6QColor
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK6QColor )( void *scorep_libwrap_arg_this, const char * name, const QColor & color )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK6QColor );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK6QColor );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK6QColor, ( scorep_libwrap_arg_this, name, color ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK6QColor );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK6QPoint
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK6QPoint )( void *scorep_libwrap_arg_this, const char * name, const QPoint & point )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK6QPoint );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK6QPoint );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK6QPoint, ( scorep_libwrap_arg_this, name, point ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK6QPoint );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK7QPointF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK7QPointF )( void *scorep_libwrap_arg_this, const char * name, const QPointF & point )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK7QPointF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK7QPointF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK7QPointF, ( scorep_libwrap_arg_this, name, point ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK7QPointF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK5QSize
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK5QSize )( void *scorep_libwrap_arg_this, const char * name, const QSize & size )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK5QSize );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK5QSize );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK5QSize, ( scorep_libwrap_arg_this, name, size ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK5QSize );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK6QSizeF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK6QSizeF )( void *scorep_libwrap_arg_this, const char * name, const QSizeF & size )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK6QSizeF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK6QSizeF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK6QSizeF, ( scorep_libwrap_arg_this, name, size ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK6QSizeF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK14QGenericMatrixILi2ELi2EfE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK14QGenericMatrixILi2ELi2EfE )( void *scorep_libwrap_arg_this, const char * name, const QMatrix2x2 & value )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK14QGenericMatrixILi2ELi2EfE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK14QGenericMatrixILi2ELi2EfE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK14QGenericMatrixILi2ELi2EfE, ( scorep_libwrap_arg_this, name, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK14QGenericMatrixILi2ELi2EfE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK14QGenericMatrixILi2ELi3EfE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK14QGenericMatrixILi2ELi3EfE )( void *scorep_libwrap_arg_this, const char * name, const QMatrix2x3 & value )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK14QGenericMatrixILi2ELi3EfE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK14QGenericMatrixILi2ELi3EfE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK14QGenericMatrixILi2ELi3EfE, ( scorep_libwrap_arg_this, name, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK14QGenericMatrixILi2ELi3EfE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK14QGenericMatrixILi2ELi4EfE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK14QGenericMatrixILi2ELi4EfE )( void *scorep_libwrap_arg_this, const char * name, const QMatrix2x4 & value )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK14QGenericMatrixILi2ELi4EfE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK14QGenericMatrixILi2ELi4EfE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK14QGenericMatrixILi2ELi4EfE, ( scorep_libwrap_arg_this, name, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK14QGenericMatrixILi2ELi4EfE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK14QGenericMatrixILi3ELi2EfE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK14QGenericMatrixILi3ELi2EfE )( void *scorep_libwrap_arg_this, const char * name, const QMatrix3x2 & value )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK14QGenericMatrixILi3ELi2EfE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK14QGenericMatrixILi3ELi2EfE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK14QGenericMatrixILi3ELi2EfE, ( scorep_libwrap_arg_this, name, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK14QGenericMatrixILi3ELi2EfE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK14QGenericMatrixILi3ELi3EfE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK14QGenericMatrixILi3ELi3EfE )( void *scorep_libwrap_arg_this, const char * name, const QMatrix3x3 & value )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK14QGenericMatrixILi3ELi3EfE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK14QGenericMatrixILi3ELi3EfE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK14QGenericMatrixILi3ELi3EfE, ( scorep_libwrap_arg_this, name, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK14QGenericMatrixILi3ELi3EfE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK14QGenericMatrixILi3ELi4EfE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK14QGenericMatrixILi3ELi4EfE )( void *scorep_libwrap_arg_this, const char * name, const QMatrix3x4 & value )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK14QGenericMatrixILi3ELi4EfE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK14QGenericMatrixILi3ELi4EfE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK14QGenericMatrixILi3ELi4EfE, ( scorep_libwrap_arg_this, name, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK14QGenericMatrixILi3ELi4EfE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK14QGenericMatrixILi4ELi2EfE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK14QGenericMatrixILi4ELi2EfE )( void *scorep_libwrap_arg_this, const char * name, const QMatrix4x2 & value )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK14QGenericMatrixILi4ELi2EfE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK14QGenericMatrixILi4ELi2EfE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK14QGenericMatrixILi4ELi2EfE, ( scorep_libwrap_arg_this, name, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK14QGenericMatrixILi4ELi2EfE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK14QGenericMatrixILi4ELi3EfE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK14QGenericMatrixILi4ELi3EfE )( void *scorep_libwrap_arg_this, const char * name, const QMatrix4x3 & value )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK14QGenericMatrixILi4ELi3EfE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK14QGenericMatrixILi4ELi3EfE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK14QGenericMatrixILi4ELi3EfE, ( scorep_libwrap_arg_this, name, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK14QGenericMatrixILi4ELi3EfE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK10QMatrix4x4
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK10QMatrix4x4 )( void *scorep_libwrap_arg_this, const char * name, const QMatrix4x4 & value )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK10QMatrix4x4 );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK10QMatrix4x4 );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK10QMatrix4x4, ( scorep_libwrap_arg_this, name, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK10QMatrix4x4 );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram15setUniformValueEPKcPA2_Kf
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram15setUniformValueEPKcPA2_Kf )( void *scorep_libwrap_arg_this, const char * name, const GLfloat value[2][2] )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram15setUniformValueEPKcPA2_Kf );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram15setUniformValueEPKcPA2_Kf );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram15setUniformValueEPKcPA2_Kf, ( scorep_libwrap_arg_this, name, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram15setUniformValueEPKcPA2_Kf );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram15setUniformValueEPKcPA3_Kf
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram15setUniformValueEPKcPA3_Kf )( void *scorep_libwrap_arg_this, const char * name, const GLfloat value[3][3] )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram15setUniformValueEPKcPA3_Kf );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram15setUniformValueEPKcPA3_Kf );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram15setUniformValueEPKcPA3_Kf, ( scorep_libwrap_arg_this, name, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram15setUniformValueEPKcPA3_Kf );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram15setUniformValueEPKcPA4_Kf
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram15setUniformValueEPKcPA4_Kf )( void *scorep_libwrap_arg_this, const char * name, const GLfloat value[4][4] )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram15setUniformValueEPKcPA4_Kf );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram15setUniformValueEPKcPA4_Kf );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram15setUniformValueEPKcPA4_Kf, ( scorep_libwrap_arg_this, name, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram15setUniformValueEPKcPA4_Kf );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK10QTransform
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK10QTransform )( void *scorep_libwrap_arg_this, const char * name, const QTransform & value )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK10QTransform );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK10QTransform );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK10QTransform, ( scorep_libwrap_arg_this, name, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram15setUniformValueEPKcRK10QTransform );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPKfii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPKfii )( void *scorep_libwrap_arg_this, int location, const GLfloat * values, int count, int tupleSize )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPKfii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPKfii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPKfii, ( scorep_libwrap_arg_this, location, values, count, tupleSize ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPKfii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPKii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPKii )( void *scorep_libwrap_arg_this, int location, const GLint * values, int count )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPKii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPKii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPKii, ( scorep_libwrap_arg_this, location, values, count ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPKii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPKji
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPKji )( void *scorep_libwrap_arg_this, int location, const GLuint * values, int count )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPKji );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPKji );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPKji, ( scorep_libwrap_arg_this, location, values, count ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPKji );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK9QVector2Di
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK9QVector2Di )( void *scorep_libwrap_arg_this, int location, const QVector2D * values, int count )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK9QVector2Di );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK9QVector2Di );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK9QVector2Di, ( scorep_libwrap_arg_this, location, values, count ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK9QVector2Di );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK9QVector3Di
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK9QVector3Di )( void *scorep_libwrap_arg_this, int location, const QVector3D * values, int count )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK9QVector3Di );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK9QVector3Di );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK9QVector3Di, ( scorep_libwrap_arg_this, location, values, count ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK9QVector3Di );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK9QVector4Di
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK9QVector4Di )( void *scorep_libwrap_arg_this, int location, const QVector4D * values, int count )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK9QVector4Di );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK9QVector4Di );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK9QVector4Di, ( scorep_libwrap_arg_this, location, values, count ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK9QVector4Di );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK14QGenericMatrixILi2ELi2EfEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK14QGenericMatrixILi2ELi2EfEi )( void *scorep_libwrap_arg_this, int location, const QMatrix2x2 * values, int count )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK14QGenericMatrixILi2ELi2EfEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK14QGenericMatrixILi2ELi2EfEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK14QGenericMatrixILi2ELi2EfEi, ( scorep_libwrap_arg_this, location, values, count ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK14QGenericMatrixILi2ELi2EfEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK14QGenericMatrixILi2ELi3EfEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK14QGenericMatrixILi2ELi3EfEi )( void *scorep_libwrap_arg_this, int location, const QMatrix2x3 * values, int count )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK14QGenericMatrixILi2ELi3EfEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK14QGenericMatrixILi2ELi3EfEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK14QGenericMatrixILi2ELi3EfEi, ( scorep_libwrap_arg_this, location, values, count ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK14QGenericMatrixILi2ELi3EfEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK14QGenericMatrixILi2ELi4EfEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK14QGenericMatrixILi2ELi4EfEi )( void *scorep_libwrap_arg_this, int location, const QMatrix2x4 * values, int count )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK14QGenericMatrixILi2ELi4EfEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK14QGenericMatrixILi2ELi4EfEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK14QGenericMatrixILi2ELi4EfEi, ( scorep_libwrap_arg_this, location, values, count ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK14QGenericMatrixILi2ELi4EfEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK14QGenericMatrixILi3ELi2EfEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK14QGenericMatrixILi3ELi2EfEi )( void *scorep_libwrap_arg_this, int location, const QMatrix3x2 * values, int count )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK14QGenericMatrixILi3ELi2EfEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK14QGenericMatrixILi3ELi2EfEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK14QGenericMatrixILi3ELi2EfEi, ( scorep_libwrap_arg_this, location, values, count ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK14QGenericMatrixILi3ELi2EfEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK14QGenericMatrixILi3ELi3EfEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK14QGenericMatrixILi3ELi3EfEi )( void *scorep_libwrap_arg_this, int location, const QMatrix3x3 * values, int count )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK14QGenericMatrixILi3ELi3EfEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK14QGenericMatrixILi3ELi3EfEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK14QGenericMatrixILi3ELi3EfEi, ( scorep_libwrap_arg_this, location, values, count ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK14QGenericMatrixILi3ELi3EfEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK14QGenericMatrixILi3ELi4EfEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK14QGenericMatrixILi3ELi4EfEi )( void *scorep_libwrap_arg_this, int location, const QMatrix3x4 * values, int count )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK14QGenericMatrixILi3ELi4EfEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK14QGenericMatrixILi3ELi4EfEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK14QGenericMatrixILi3ELi4EfEi, ( scorep_libwrap_arg_this, location, values, count ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK14QGenericMatrixILi3ELi4EfEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK14QGenericMatrixILi4ELi2EfEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK14QGenericMatrixILi4ELi2EfEi )( void *scorep_libwrap_arg_this, int location, const QMatrix4x2 * values, int count )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK14QGenericMatrixILi4ELi2EfEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK14QGenericMatrixILi4ELi2EfEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK14QGenericMatrixILi4ELi2EfEi, ( scorep_libwrap_arg_this, location, values, count ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK14QGenericMatrixILi4ELi2EfEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK14QGenericMatrixILi4ELi3EfEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK14QGenericMatrixILi4ELi3EfEi )( void *scorep_libwrap_arg_this, int location, const QMatrix4x3 * values, int count )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK14QGenericMatrixILi4ELi3EfEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK14QGenericMatrixILi4ELi3EfEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK14QGenericMatrixILi4ELi3EfEi, ( scorep_libwrap_arg_this, location, values, count ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK14QGenericMatrixILi4ELi3EfEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK10QMatrix4x4i
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK10QMatrix4x4i )( void *scorep_libwrap_arg_this, int location, const QMatrix4x4 * values, int count )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK10QMatrix4x4i );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK10QMatrix4x4i );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK10QMatrix4x4i, ( scorep_libwrap_arg_this, location, values, count ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEiPK10QMatrix4x4i );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPKfii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPKfii )( void *scorep_libwrap_arg_this, const char * name, const GLfloat * values, int count, int tupleSize )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPKfii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPKfii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPKfii, ( scorep_libwrap_arg_this, name, values, count, tupleSize ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPKfii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPKii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPKii )( void *scorep_libwrap_arg_this, const char * name, const GLint * values, int count )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPKii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPKii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPKii, ( scorep_libwrap_arg_this, name, values, count ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPKii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPKji
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPKji )( void *scorep_libwrap_arg_this, const char * name, const GLuint * values, int count )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPKji );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPKji );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPKji, ( scorep_libwrap_arg_this, name, values, count ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPKji );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK9QVector2Di
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK9QVector2Di )( void *scorep_libwrap_arg_this, const char * name, const QVector2D * values, int count )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK9QVector2Di );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK9QVector2Di );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK9QVector2Di, ( scorep_libwrap_arg_this, name, values, count ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK9QVector2Di );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK9QVector3Di
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK9QVector3Di )( void *scorep_libwrap_arg_this, const char * name, const QVector3D * values, int count )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK9QVector3Di );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK9QVector3Di );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK9QVector3Di, ( scorep_libwrap_arg_this, name, values, count ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK9QVector3Di );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK9QVector4Di
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK9QVector4Di )( void *scorep_libwrap_arg_this, const char * name, const QVector4D * values, int count )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK9QVector4Di );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK9QVector4Di );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK9QVector4Di, ( scorep_libwrap_arg_this, name, values, count ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK9QVector4Di );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK14QGenericMatrixILi2ELi2EfEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK14QGenericMatrixILi2ELi2EfEi )( void *scorep_libwrap_arg_this, const char * name, const QMatrix2x2 * values, int count )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK14QGenericMatrixILi2ELi2EfEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK14QGenericMatrixILi2ELi2EfEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK14QGenericMatrixILi2ELi2EfEi, ( scorep_libwrap_arg_this, name, values, count ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK14QGenericMatrixILi2ELi2EfEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK14QGenericMatrixILi2ELi3EfEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK14QGenericMatrixILi2ELi3EfEi )( void *scorep_libwrap_arg_this, const char * name, const QMatrix2x3 * values, int count )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK14QGenericMatrixILi2ELi3EfEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK14QGenericMatrixILi2ELi3EfEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK14QGenericMatrixILi2ELi3EfEi, ( scorep_libwrap_arg_this, name, values, count ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK14QGenericMatrixILi2ELi3EfEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK14QGenericMatrixILi2ELi4EfEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK14QGenericMatrixILi2ELi4EfEi )( void *scorep_libwrap_arg_this, const char * name, const QMatrix2x4 * values, int count )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK14QGenericMatrixILi2ELi4EfEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK14QGenericMatrixILi2ELi4EfEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK14QGenericMatrixILi2ELi4EfEi, ( scorep_libwrap_arg_this, name, values, count ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK14QGenericMatrixILi2ELi4EfEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK14QGenericMatrixILi3ELi2EfEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK14QGenericMatrixILi3ELi2EfEi )( void *scorep_libwrap_arg_this, const char * name, const QMatrix3x2 * values, int count )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK14QGenericMatrixILi3ELi2EfEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK14QGenericMatrixILi3ELi2EfEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK14QGenericMatrixILi3ELi2EfEi, ( scorep_libwrap_arg_this, name, values, count ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK14QGenericMatrixILi3ELi2EfEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK14QGenericMatrixILi3ELi3EfEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK14QGenericMatrixILi3ELi3EfEi )( void *scorep_libwrap_arg_this, const char * name, const QMatrix3x3 * values, int count )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK14QGenericMatrixILi3ELi3EfEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK14QGenericMatrixILi3ELi3EfEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK14QGenericMatrixILi3ELi3EfEi, ( scorep_libwrap_arg_this, name, values, count ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK14QGenericMatrixILi3ELi3EfEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK14QGenericMatrixILi3ELi4EfEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK14QGenericMatrixILi3ELi4EfEi )( void *scorep_libwrap_arg_this, const char * name, const QMatrix3x4 * values, int count )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK14QGenericMatrixILi3ELi4EfEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK14QGenericMatrixILi3ELi4EfEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK14QGenericMatrixILi3ELi4EfEi, ( scorep_libwrap_arg_this, name, values, count ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK14QGenericMatrixILi3ELi4EfEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK14QGenericMatrixILi4ELi2EfEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK14QGenericMatrixILi4ELi2EfEi )( void *scorep_libwrap_arg_this, const char * name, const QMatrix4x2 * values, int count )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK14QGenericMatrixILi4ELi2EfEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK14QGenericMatrixILi4ELi2EfEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK14QGenericMatrixILi4ELi2EfEi, ( scorep_libwrap_arg_this, name, values, count ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK14QGenericMatrixILi4ELi2EfEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK14QGenericMatrixILi4ELi3EfEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK14QGenericMatrixILi4ELi3EfEi )( void *scorep_libwrap_arg_this, const char * name, const QMatrix4x3 * values, int count )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK14QGenericMatrixILi4ELi3EfEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK14QGenericMatrixILi4ELi3EfEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK14QGenericMatrixILi4ELi3EfEi, ( scorep_libwrap_arg_this, name, values, count ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK14QGenericMatrixILi4ELi3EfEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK10QMatrix4x4i
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK10QMatrix4x4i )( void *scorep_libwrap_arg_this, const char * name, const QMatrix4x4 * values, int count )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK10QMatrix4x4i );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK10QMatrix4x4i );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK10QMatrix4x4i, ( scorep_libwrap_arg_this, name, values, count ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram20setUniformValueArrayEPKcPK10QMatrix4x4i );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QOpenGLShaderProgram23hasOpenGLShaderProgramsEP14QOpenGLContext
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QOpenGLShaderProgram23hasOpenGLShaderProgramsEP14QOpenGLContext )( QOpenGLContext * context )
{
    LIBWRAP_EARLY_INIT( _ZN20QOpenGLShaderProgram23hasOpenGLShaderProgramsEP14QOpenGLContext );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QOpenGLShaderProgram23hasOpenGLShaderProgramsEP14QOpenGLContext );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN20QOpenGLShaderProgram23hasOpenGLShaderProgramsEP14QOpenGLContext, ( context ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QOpenGLShaderProgram23hasOpenGLShaderProgramsEP14QOpenGLContext );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QOpenGLTextureD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLTextureD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLTextureD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLTextureD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLTextureD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLTextureD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QOpenGLTextureD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLTextureD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLTextureD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLTextureD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLTextureD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLTextureD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK14QOpenGLTexture6targetEv
QOpenGLTexture::Target
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QOpenGLTexture6targetEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QOpenGLTexture6targetEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QOpenGLTexture6targetEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QOpenGLTexture::Target scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QOpenGLTexture6targetEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QOpenGLTexture6targetEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QOpenGLTexture6createEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLTexture6createEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLTexture6createEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLTexture6createEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLTexture6createEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLTexture6createEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QOpenGLTexture7destroyEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLTexture7destroyEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLTexture7destroyEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLTexture7destroyEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLTexture7destroyEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLTexture7destroyEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK14QOpenGLTexture9isCreatedEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QOpenGLTexture9isCreatedEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QOpenGLTexture9isCreatedEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QOpenGLTexture9isCreatedEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QOpenGLTexture9isCreatedEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QOpenGLTexture9isCreatedEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK14QOpenGLTexture9textureIdEv
GLuint
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QOpenGLTexture9textureIdEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QOpenGLTexture9textureIdEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QOpenGLTexture9textureIdEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    GLuint scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QOpenGLTexture9textureIdEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QOpenGLTexture9textureIdEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QOpenGLTexture4bindEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLTexture4bindEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLTexture4bindEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLTexture4bindEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLTexture4bindEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLTexture4bindEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QOpenGLTexture7releaseEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLTexture7releaseEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLTexture7releaseEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLTexture7releaseEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLTexture7releaseEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLTexture7releaseEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK14QOpenGLTexture7isBoundEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QOpenGLTexture7isBoundEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QOpenGLTexture7isBoundEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QOpenGLTexture7isBoundEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QOpenGLTexture7isBoundEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QOpenGLTexture7isBoundEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QOpenGLTexture7isBoundEj
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLTexture7isBoundEj )( void *scorep_libwrap_arg_this, uint unit )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLTexture7isBoundEj );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLTexture7isBoundEj );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLTexture7isBoundEj, ( scorep_libwrap_arg_this, unit ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLTexture7isBoundEj );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK14QOpenGLTexture6formatEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QOpenGLTexture6formatEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QOpenGLTexture6formatEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QOpenGLTexture6formatEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QOpenGLTexture6formatEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QOpenGLTexture6formatEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QOpenGLTexture7setSizeEiii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLTexture7setSizeEiii )( void *scorep_libwrap_arg_this, int width, int height, int depth )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLTexture7setSizeEiii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLTexture7setSizeEiii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLTexture7setSizeEiii, ( scorep_libwrap_arg_this, width, height, depth ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLTexture7setSizeEiii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK14QOpenGLTexture5widthEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QOpenGLTexture5widthEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QOpenGLTexture5widthEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QOpenGLTexture5widthEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QOpenGLTexture5widthEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QOpenGLTexture5widthEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK14QOpenGLTexture6heightEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QOpenGLTexture6heightEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QOpenGLTexture6heightEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QOpenGLTexture6heightEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QOpenGLTexture6heightEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QOpenGLTexture6heightEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK14QOpenGLTexture5depthEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QOpenGLTexture5depthEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QOpenGLTexture5depthEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QOpenGLTexture5depthEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QOpenGLTexture5depthEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QOpenGLTexture5depthEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QOpenGLTexture12setMipLevelsEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLTexture12setMipLevelsEi )( void *scorep_libwrap_arg_this, int levels )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLTexture12setMipLevelsEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLTexture12setMipLevelsEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLTexture12setMipLevelsEi, ( scorep_libwrap_arg_this, levels ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLTexture12setMipLevelsEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK14QOpenGLTexture9mipLevelsEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QOpenGLTexture9mipLevelsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QOpenGLTexture9mipLevelsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QOpenGLTexture9mipLevelsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QOpenGLTexture9mipLevelsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QOpenGLTexture9mipLevelsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK14QOpenGLTexture16maximumMipLevelsEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QOpenGLTexture16maximumMipLevelsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QOpenGLTexture16maximumMipLevelsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QOpenGLTexture16maximumMipLevelsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QOpenGLTexture16maximumMipLevelsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QOpenGLTexture16maximumMipLevelsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QOpenGLTexture9setLayersEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLTexture9setLayersEi )( void *scorep_libwrap_arg_this, int layers )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLTexture9setLayersEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLTexture9setLayersEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLTexture9setLayersEi, ( scorep_libwrap_arg_this, layers ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLTexture9setLayersEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK14QOpenGLTexture6layersEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QOpenGLTexture6layersEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QOpenGLTexture6layersEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QOpenGLTexture6layersEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QOpenGLTexture6layersEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QOpenGLTexture6layersEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK14QOpenGLTexture5facesEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QOpenGLTexture5facesEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QOpenGLTexture5facesEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QOpenGLTexture5facesEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QOpenGLTexture5facesEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QOpenGLTexture5facesEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QOpenGLTexture10setSamplesEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLTexture10setSamplesEi )( void *scorep_libwrap_arg_this, int samples )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLTexture10setSamplesEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLTexture10setSamplesEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLTexture10setSamplesEi, ( scorep_libwrap_arg_this, samples ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLTexture10setSamplesEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK14QOpenGLTexture7samplesEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QOpenGLTexture7samplesEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QOpenGLTexture7samplesEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QOpenGLTexture7samplesEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QOpenGLTexture7samplesEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QOpenGLTexture7samplesEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QOpenGLTexture23setFixedSamplePositionsEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLTexture23setFixedSamplePositionsEb )( void *scorep_libwrap_arg_this, bool fixed )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLTexture23setFixedSamplePositionsEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLTexture23setFixedSamplePositionsEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLTexture23setFixedSamplePositionsEb, ( scorep_libwrap_arg_this, fixed ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLTexture23setFixedSamplePositionsEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK14QOpenGLTexture22isFixedSamplePositionsEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QOpenGLTexture22isFixedSamplePositionsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QOpenGLTexture22isFixedSamplePositionsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QOpenGLTexture22isFixedSamplePositionsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QOpenGLTexture22isFixedSamplePositionsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QOpenGLTexture22isFixedSamplePositionsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QOpenGLTexture15allocateStorageEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLTexture15allocateStorageEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLTexture15allocateStorageEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLTexture15allocateStorageEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLTexture15allocateStorageEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLTexture15allocateStorageEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK14QOpenGLTexture18isStorageAllocatedEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QOpenGLTexture18isStorageAllocatedEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QOpenGLTexture18isStorageAllocatedEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QOpenGLTexture18isStorageAllocatedEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QOpenGLTexture18isStorageAllocatedEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QOpenGLTexture18isStorageAllocatedEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK14QOpenGLTexture13isTextureViewEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QOpenGLTexture13isTextureViewEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QOpenGLTexture13isTextureViewEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QOpenGLTexture13isTextureViewEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QOpenGLTexture13isTextureViewEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QOpenGLTexture13isTextureViewEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QOpenGLTexture17setCompressedDataEiiNS_11CubeMapFaceEiPvPK27QOpenGLPixelTransferOptions
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLTexture17setCompressedDataEiiNS_11CubeMapFaceEiPvPK27QOpenGLPixelTransferOptions )( void *scorep_libwrap_arg_this, int mipLevel, int layer, QOpenGLTexture::CubeMapFace cubeFace, int dataSize, void * data, const QOpenGLPixelTransferOptions *const options )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLTexture17setCompressedDataEiiNS_11CubeMapFaceEiPvPK27QOpenGLPixelTransferOptions );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLTexture17setCompressedDataEiiNS_11CubeMapFaceEiPvPK27QOpenGLPixelTransferOptions );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLTexture17setCompressedDataEiiNS_11CubeMapFaceEiPvPK27QOpenGLPixelTransferOptions, ( scorep_libwrap_arg_this, mipLevel, layer, cubeFace, dataSize, data, options ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLTexture17setCompressedDataEiiNS_11CubeMapFaceEiPvPK27QOpenGLPixelTransferOptions );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QOpenGLTexture17setCompressedDataEiiiPvPK27QOpenGLPixelTransferOptions
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLTexture17setCompressedDataEiiiPvPK27QOpenGLPixelTransferOptions )( void *scorep_libwrap_arg_this, int mipLevel, int layer, int dataSize, void * data, const QOpenGLPixelTransferOptions *const options )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLTexture17setCompressedDataEiiiPvPK27QOpenGLPixelTransferOptions );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLTexture17setCompressedDataEiiiPvPK27QOpenGLPixelTransferOptions );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLTexture17setCompressedDataEiiiPvPK27QOpenGLPixelTransferOptions, ( scorep_libwrap_arg_this, mipLevel, layer, dataSize, data, options ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLTexture17setCompressedDataEiiiPvPK27QOpenGLPixelTransferOptions );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QOpenGLTexture17setCompressedDataEiiPvPK27QOpenGLPixelTransferOptions
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLTexture17setCompressedDataEiiPvPK27QOpenGLPixelTransferOptions )( void *scorep_libwrap_arg_this, int mipLevel, int dataSize, void * data, const QOpenGLPixelTransferOptions *const options )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLTexture17setCompressedDataEiiPvPK27QOpenGLPixelTransferOptions );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLTexture17setCompressedDataEiiPvPK27QOpenGLPixelTransferOptions );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLTexture17setCompressedDataEiiPvPK27QOpenGLPixelTransferOptions, ( scorep_libwrap_arg_this, mipLevel, dataSize, data, options ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLTexture17setCompressedDataEiiPvPK27QOpenGLPixelTransferOptions );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QOpenGLTexture17setCompressedDataEiPvPK27QOpenGLPixelTransferOptions
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLTexture17setCompressedDataEiPvPK27QOpenGLPixelTransferOptions )( void *scorep_libwrap_arg_this, int dataSize, void * data, const QOpenGLPixelTransferOptions *const options )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLTexture17setCompressedDataEiPvPK27QOpenGLPixelTransferOptions );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLTexture17setCompressedDataEiPvPK27QOpenGLPixelTransferOptions );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLTexture17setCompressedDataEiPvPK27QOpenGLPixelTransferOptions, ( scorep_libwrap_arg_this, dataSize, data, options ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLTexture17setCompressedDataEiPvPK27QOpenGLPixelTransferOptions );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QOpenGLTexture17setCompressedDataEiiNS_11CubeMapFaceEiPKvPK27QOpenGLPixelTransferOptions
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLTexture17setCompressedDataEiiNS_11CubeMapFaceEiPKvPK27QOpenGLPixelTransferOptions )( void *scorep_libwrap_arg_this, int mipLevel, int layer, QOpenGLTexture::CubeMapFace cubeFace, int dataSize, const void * data, const QOpenGLPixelTransferOptions *const options )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLTexture17setCompressedDataEiiNS_11CubeMapFaceEiPKvPK27QOpenGLPixelTransferOptions );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLTexture17setCompressedDataEiiNS_11CubeMapFaceEiPKvPK27QOpenGLPixelTransferOptions );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLTexture17setCompressedDataEiiNS_11CubeMapFaceEiPKvPK27QOpenGLPixelTransferOptions, ( scorep_libwrap_arg_this, mipLevel, layer, cubeFace, dataSize, data, options ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLTexture17setCompressedDataEiiNS_11CubeMapFaceEiPKvPK27QOpenGLPixelTransferOptions );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QOpenGLTexture17setCompressedDataEiiiPKvPK27QOpenGLPixelTransferOptions
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLTexture17setCompressedDataEiiiPKvPK27QOpenGLPixelTransferOptions )( void *scorep_libwrap_arg_this, int mipLevel, int layer, int dataSize, const void * data, const QOpenGLPixelTransferOptions *const options )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLTexture17setCompressedDataEiiiPKvPK27QOpenGLPixelTransferOptions );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLTexture17setCompressedDataEiiiPKvPK27QOpenGLPixelTransferOptions );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLTexture17setCompressedDataEiiiPKvPK27QOpenGLPixelTransferOptions, ( scorep_libwrap_arg_this, mipLevel, layer, dataSize, data, options ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLTexture17setCompressedDataEiiiPKvPK27QOpenGLPixelTransferOptions );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QOpenGLTexture17setCompressedDataEiiPKvPK27QOpenGLPixelTransferOptions
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLTexture17setCompressedDataEiiPKvPK27QOpenGLPixelTransferOptions )( void *scorep_libwrap_arg_this, int mipLevel, int dataSize, const void * data, const QOpenGLPixelTransferOptions *const options )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLTexture17setCompressedDataEiiPKvPK27QOpenGLPixelTransferOptions );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLTexture17setCompressedDataEiiPKvPK27QOpenGLPixelTransferOptions );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLTexture17setCompressedDataEiiPKvPK27QOpenGLPixelTransferOptions, ( scorep_libwrap_arg_this, mipLevel, dataSize, data, options ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLTexture17setCompressedDataEiiPKvPK27QOpenGLPixelTransferOptions );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QOpenGLTexture17setCompressedDataEiPKvPK27QOpenGLPixelTransferOptions
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLTexture17setCompressedDataEiPKvPK27QOpenGLPixelTransferOptions )( void *scorep_libwrap_arg_this, int dataSize, const void * data, const QOpenGLPixelTransferOptions *const options )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLTexture17setCompressedDataEiPKvPK27QOpenGLPixelTransferOptions );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLTexture17setCompressedDataEiPKvPK27QOpenGLPixelTransferOptions );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLTexture17setCompressedDataEiPKvPK27QOpenGLPixelTransferOptions, ( scorep_libwrap_arg_this, dataSize, data, options ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLTexture17setCompressedDataEiPKvPK27QOpenGLPixelTransferOptions );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QOpenGLTexture15setMipBaseLevelEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLTexture15setMipBaseLevelEi )( void *scorep_libwrap_arg_this, int baseLevel )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLTexture15setMipBaseLevelEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLTexture15setMipBaseLevelEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLTexture15setMipBaseLevelEi, ( scorep_libwrap_arg_this, baseLevel ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLTexture15setMipBaseLevelEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK14QOpenGLTexture12mipBaseLevelEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QOpenGLTexture12mipBaseLevelEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QOpenGLTexture12mipBaseLevelEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QOpenGLTexture12mipBaseLevelEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QOpenGLTexture12mipBaseLevelEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QOpenGLTexture12mipBaseLevelEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QOpenGLTexture14setMipMaxLevelEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLTexture14setMipMaxLevelEi )( void *scorep_libwrap_arg_this, int maxLevel )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLTexture14setMipMaxLevelEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLTexture14setMipMaxLevelEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLTexture14setMipMaxLevelEi, ( scorep_libwrap_arg_this, maxLevel ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLTexture14setMipMaxLevelEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK14QOpenGLTexture11mipMaxLevelEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QOpenGLTexture11mipMaxLevelEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QOpenGLTexture11mipMaxLevelEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QOpenGLTexture11mipMaxLevelEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QOpenGLTexture11mipMaxLevelEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QOpenGLTexture11mipMaxLevelEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QOpenGLTexture16setMipLevelRangeEii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLTexture16setMipLevelRangeEii )( void *scorep_libwrap_arg_this, int baseLevel, int maxLevel )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLTexture16setMipLevelRangeEii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLTexture16setMipLevelRangeEii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLTexture16setMipLevelRangeEii, ( scorep_libwrap_arg_this, baseLevel, maxLevel ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLTexture16setMipLevelRangeEii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK14QOpenGLTexture13mipLevelRangeEv
QPair<int, int>
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QOpenGLTexture13mipLevelRangeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QOpenGLTexture13mipLevelRangeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QOpenGLTexture13mipLevelRangeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPair<int, int> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QOpenGLTexture13mipLevelRangeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QOpenGLTexture13mipLevelRangeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QOpenGLTexture30setAutoMipMapGenerationEnabledEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLTexture30setAutoMipMapGenerationEnabledEb )( void *scorep_libwrap_arg_this, bool enabled )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLTexture30setAutoMipMapGenerationEnabledEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLTexture30setAutoMipMapGenerationEnabledEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLTexture30setAutoMipMapGenerationEnabledEb, ( scorep_libwrap_arg_this, enabled ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLTexture30setAutoMipMapGenerationEnabledEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK14QOpenGLTexture29isAutoMipMapGenerationEnabledEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QOpenGLTexture29isAutoMipMapGenerationEnabledEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QOpenGLTexture29isAutoMipMapGenerationEnabledEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QOpenGLTexture29isAutoMipMapGenerationEnabledEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QOpenGLTexture29isAutoMipMapGenerationEnabledEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QOpenGLTexture29isAutoMipMapGenerationEnabledEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QOpenGLTexture15generateMipMapsEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLTexture15generateMipMapsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLTexture15generateMipMapsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLTexture15generateMipMapsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLTexture15generateMipMapsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLTexture15generateMipMapsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QOpenGLTexture15generateMipMapsEib
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLTexture15generateMipMapsEib )( void *scorep_libwrap_arg_this, int baseLevel, bool resetBaseLevel )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLTexture15generateMipMapsEib );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLTexture15generateMipMapsEib );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLTexture15generateMipMapsEib, ( scorep_libwrap_arg_this, baseLevel, resetBaseLevel ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLTexture15generateMipMapsEib );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK14QOpenGLTexture16depthStencilModeEv
QOpenGLTexture::DepthStencilMode
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QOpenGLTexture16depthStencilModeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QOpenGLTexture16depthStencilModeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QOpenGLTexture16depthStencilModeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QOpenGLTexture::DepthStencilMode scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QOpenGLTexture16depthStencilModeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QOpenGLTexture16depthStencilModeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK14QOpenGLTexture18comparisonFunctionEv
QOpenGLTexture::ComparisonFunction
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QOpenGLTexture18comparisonFunctionEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QOpenGLTexture18comparisonFunctionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QOpenGLTexture18comparisonFunctionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QOpenGLTexture::ComparisonFunction scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QOpenGLTexture18comparisonFunctionEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QOpenGLTexture18comparisonFunctionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QOpenGLTexture17setComparisonModeENS_14ComparisonModeE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLTexture17setComparisonModeENS_14ComparisonModeE )( void *scorep_libwrap_arg_this, QOpenGLTexture::ComparisonMode mode )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLTexture17setComparisonModeENS_14ComparisonModeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLTexture17setComparisonModeENS_14ComparisonModeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLTexture17setComparisonModeENS_14ComparisonModeE, ( scorep_libwrap_arg_this, mode ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLTexture17setComparisonModeENS_14ComparisonModeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK14QOpenGLTexture14comparisonModeEv
QOpenGLTexture::ComparisonMode
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QOpenGLTexture14comparisonModeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QOpenGLTexture14comparisonModeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QOpenGLTexture14comparisonModeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QOpenGLTexture::ComparisonMode scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QOpenGLTexture14comparisonModeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QOpenGLTexture14comparisonModeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK14QOpenGLTexture18minificationFilterEv
QOpenGLTexture::Filter
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QOpenGLTexture18minificationFilterEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QOpenGLTexture18minificationFilterEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QOpenGLTexture18minificationFilterEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QOpenGLTexture::Filter scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QOpenGLTexture18minificationFilterEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QOpenGLTexture18minificationFilterEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QOpenGLTexture22setMagnificationFilterENS_6FilterE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLTexture22setMagnificationFilterENS_6FilterE )( void *scorep_libwrap_arg_this, QOpenGLTexture::Filter filter )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLTexture22setMagnificationFilterENS_6FilterE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLTexture22setMagnificationFilterENS_6FilterE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLTexture22setMagnificationFilterENS_6FilterE, ( scorep_libwrap_arg_this, filter ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLTexture22setMagnificationFilterENS_6FilterE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK14QOpenGLTexture19magnificationFilterEv
QOpenGLTexture::Filter
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QOpenGLTexture19magnificationFilterEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QOpenGLTexture19magnificationFilterEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QOpenGLTexture19magnificationFilterEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QOpenGLTexture::Filter scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QOpenGLTexture19magnificationFilterEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QOpenGLTexture19magnificationFilterEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QOpenGLTexture16setMinMagFiltersENS_6FilterES0_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLTexture16setMinMagFiltersENS_6FilterES0_ )( void *scorep_libwrap_arg_this, QOpenGLTexture::Filter minificationFilter, QOpenGLTexture::Filter magnificationFilter )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLTexture16setMinMagFiltersENS_6FilterES0_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLTexture16setMinMagFiltersENS_6FilterES0_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLTexture16setMinMagFiltersENS_6FilterES0_, ( scorep_libwrap_arg_this, minificationFilter, magnificationFilter ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLTexture16setMinMagFiltersENS_6FilterES0_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK14QOpenGLTexture13minMagFiltersEv
QPair<QOpenGLTexture::Filter, QOpenGLTexture::Filter>
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QOpenGLTexture13minMagFiltersEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QOpenGLTexture13minMagFiltersEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QOpenGLTexture13minMagFiltersEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPair<QOpenGLTexture::Filter, QOpenGLTexture::Filter> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QOpenGLTexture13minMagFiltersEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QOpenGLTexture13minMagFiltersEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QOpenGLTexture20setMaximumAnisotropyEf
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLTexture20setMaximumAnisotropyEf )( void *scorep_libwrap_arg_this, float anisotropy )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLTexture20setMaximumAnisotropyEf );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLTexture20setMaximumAnisotropyEf );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLTexture20setMaximumAnisotropyEf, ( scorep_libwrap_arg_this, anisotropy ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLTexture20setMaximumAnisotropyEf );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK14QOpenGLTexture17maximumAnisotropyEv
float
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QOpenGLTexture17maximumAnisotropyEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QOpenGLTexture17maximumAnisotropyEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QOpenGLTexture17maximumAnisotropyEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    float scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QOpenGLTexture17maximumAnisotropyEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QOpenGLTexture17maximumAnisotropyEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QOpenGLTexture14setBorderColorE6QColor
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLTexture14setBorderColorE6QColor )( void *scorep_libwrap_arg_this, QColor color )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLTexture14setBorderColorE6QColor );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLTexture14setBorderColorE6QColor );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLTexture14setBorderColorE6QColor, ( scorep_libwrap_arg_this, color ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLTexture14setBorderColorE6QColor );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QOpenGLTexture14setBorderColorEffff
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLTexture14setBorderColorEffff )( void *scorep_libwrap_arg_this, float r, float g, float b, float a )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLTexture14setBorderColorEffff );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLTexture14setBorderColorEffff );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLTexture14setBorderColorEffff, ( scorep_libwrap_arg_this, r, g, b, a ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLTexture14setBorderColorEffff );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QOpenGLTexture14setBorderColorEiiii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLTexture14setBorderColorEiiii )( void *scorep_libwrap_arg_this, int r, int g, int b, int a )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLTexture14setBorderColorEiiii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLTexture14setBorderColorEiiii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLTexture14setBorderColorEiiii, ( scorep_libwrap_arg_this, r, g, b, a ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLTexture14setBorderColorEiiii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QOpenGLTexture14setBorderColorEjjjj
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLTexture14setBorderColorEjjjj )( void *scorep_libwrap_arg_this, uint r, uint g, uint b, uint a )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLTexture14setBorderColorEjjjj );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLTexture14setBorderColorEjjjj );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLTexture14setBorderColorEjjjj, ( scorep_libwrap_arg_this, r, g, b, a ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLTexture14setBorderColorEjjjj );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK14QOpenGLTexture11borderColorEv
QColor
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QOpenGLTexture11borderColorEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QOpenGLTexture11borderColorEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QOpenGLTexture11borderColorEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QColor scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QOpenGLTexture11borderColorEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QOpenGLTexture11borderColorEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK14QOpenGLTexture11borderColorEPf
void
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QOpenGLTexture11borderColorEPf )( void *scorep_libwrap_arg_this, float * border )
{
    LIBWRAP_EARLY_INIT( _ZNK14QOpenGLTexture11borderColorEPf );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QOpenGLTexture11borderColorEPf );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QOpenGLTexture11borderColorEPf, ( scorep_libwrap_arg_this, border ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QOpenGLTexture11borderColorEPf );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK14QOpenGLTexture11borderColorEPi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QOpenGLTexture11borderColorEPi )( void *scorep_libwrap_arg_this, int * border )
{
    LIBWRAP_EARLY_INIT( _ZNK14QOpenGLTexture11borderColorEPi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QOpenGLTexture11borderColorEPi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QOpenGLTexture11borderColorEPi, ( scorep_libwrap_arg_this, border ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QOpenGLTexture11borderColorEPi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK14QOpenGLTexture11borderColorEPj
void
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QOpenGLTexture11borderColorEPj )( void *scorep_libwrap_arg_this, unsigned int * border )
{
    LIBWRAP_EARLY_INIT( _ZNK14QOpenGLTexture11borderColorEPj );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QOpenGLTexture11borderColorEPj );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QOpenGLTexture11borderColorEPj, ( scorep_libwrap_arg_this, border ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QOpenGLTexture11borderColorEPj );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QOpenGLTexture23setMinimumLevelOfDetailEf
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLTexture23setMinimumLevelOfDetailEf )( void *scorep_libwrap_arg_this, float value )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLTexture23setMinimumLevelOfDetailEf );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLTexture23setMinimumLevelOfDetailEf );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLTexture23setMinimumLevelOfDetailEf, ( scorep_libwrap_arg_this, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLTexture23setMinimumLevelOfDetailEf );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK14QOpenGLTexture20minimumLevelOfDetailEv
float
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QOpenGLTexture20minimumLevelOfDetailEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QOpenGLTexture20minimumLevelOfDetailEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QOpenGLTexture20minimumLevelOfDetailEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    float scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QOpenGLTexture20minimumLevelOfDetailEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QOpenGLTexture20minimumLevelOfDetailEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QOpenGLTexture23setMaximumLevelOfDetailEf
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLTexture23setMaximumLevelOfDetailEf )( void *scorep_libwrap_arg_this, float value )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLTexture23setMaximumLevelOfDetailEf );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLTexture23setMaximumLevelOfDetailEf );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLTexture23setMaximumLevelOfDetailEf, ( scorep_libwrap_arg_this, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLTexture23setMaximumLevelOfDetailEf );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK14QOpenGLTexture20maximumLevelOfDetailEv
float
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QOpenGLTexture20maximumLevelOfDetailEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QOpenGLTexture20maximumLevelOfDetailEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QOpenGLTexture20maximumLevelOfDetailEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    float scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QOpenGLTexture20maximumLevelOfDetailEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QOpenGLTexture20maximumLevelOfDetailEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QOpenGLTexture21setLevelOfDetailRangeEff
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLTexture21setLevelOfDetailRangeEff )( void *scorep_libwrap_arg_this, float min, float max )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLTexture21setLevelOfDetailRangeEff );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLTexture21setLevelOfDetailRangeEff );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLTexture21setLevelOfDetailRangeEff, ( scorep_libwrap_arg_this, min, max ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLTexture21setLevelOfDetailRangeEff );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK14QOpenGLTexture18levelOfDetailRangeEv
QPair<float, float>
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QOpenGLTexture18levelOfDetailRangeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QOpenGLTexture18levelOfDetailRangeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QOpenGLTexture18levelOfDetailRangeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPair<float, float> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QOpenGLTexture18levelOfDetailRangeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QOpenGLTexture18levelOfDetailRangeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN14QOpenGLTexture20setLevelofDetailBiasEf
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QOpenGLTexture20setLevelofDetailBiasEf )( void *scorep_libwrap_arg_this, float bias )
{
    LIBWRAP_EARLY_INIT( _ZN14QOpenGLTexture20setLevelofDetailBiasEf );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QOpenGLTexture20setLevelofDetailBiasEf );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QOpenGLTexture20setLevelofDetailBiasEf, ( scorep_libwrap_arg_this, bias ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QOpenGLTexture20setLevelofDetailBiasEf );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK14QOpenGLTexture17levelofDetailBiasEv
float
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QOpenGLTexture17levelofDetailBiasEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QOpenGLTexture17levelofDetailBiasEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QOpenGLTexture17levelofDetailBiasEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    float scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QOpenGLTexture17levelofDetailBiasEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QOpenGLTexture17levelofDetailBiasEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK17QOpenGLTimerQuery10metaObjectEv
const QMetaObject *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK17QOpenGLTimerQuery10metaObjectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK17QOpenGLTimerQuery10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK17QOpenGLTimerQuery10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QMetaObject * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK17QOpenGLTimerQuery10metaObjectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK17QOpenGLTimerQuery10metaObjectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN17QOpenGLTimerQuery11qt_metacastEPKc
void *
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QOpenGLTimerQuery11qt_metacastEPKc )( void *scorep_libwrap_arg_this, const char * scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN17QOpenGLTimerQuery11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QOpenGLTimerQuery11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    void * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN17QOpenGLTimerQuery11qt_metacastEPKc, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QOpenGLTimerQuery11qt_metacastEPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN17QOpenGLTimerQuery11qt_metacallEN11QMetaObject4CallEiPPv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QOpenGLTimerQuery11qt_metacallEN11QMetaObject4CallEiPPv )( void *scorep_libwrap_arg_this, QMetaObject::Call scorep_libwrap_arg_1, int scorep_libwrap_arg_2, void ** scorep_libwrap_arg_3 )
{
    LIBWRAP_EARLY_INIT( _ZN17QOpenGLTimerQuery11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QOpenGLTimerQuery11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN17QOpenGLTimerQuery11qt_metacallEN11QMetaObject4CallEiPPv, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, scorep_libwrap_arg_2, scorep_libwrap_arg_3 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QOpenGLTimerQuery11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN17QOpenGLTimerQueryC2EP7QObject
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QOpenGLTimerQueryC2EP7QObject )( void *scorep_libwrap_arg_this, QObject * parent )
{
    LIBWRAP_EARLY_INIT( _ZN17QOpenGLTimerQueryC2EP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QOpenGLTimerQueryC2EP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QOpenGLTimerQueryC2EP7QObject, ( scorep_libwrap_arg_this, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QOpenGLTimerQueryC2EP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN17QOpenGLTimerQueryC1EP7QObject
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QOpenGLTimerQueryC1EP7QObject )( void *scorep_libwrap_arg_this, QObject * parent )
{
    LIBWRAP_EARLY_INIT( _ZN17QOpenGLTimerQueryC1EP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QOpenGLTimerQueryC1EP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QOpenGLTimerQueryC1EP7QObject, ( scorep_libwrap_arg_this, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QOpenGLTimerQueryC1EP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN17QOpenGLTimerQueryD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QOpenGLTimerQueryD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN17QOpenGLTimerQueryD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QOpenGLTimerQueryD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QOpenGLTimerQueryD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QOpenGLTimerQueryD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN17QOpenGLTimerQueryD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QOpenGLTimerQueryD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN17QOpenGLTimerQueryD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QOpenGLTimerQueryD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QOpenGLTimerQueryD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QOpenGLTimerQueryD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN17QOpenGLTimerQueryD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QOpenGLTimerQueryD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN17QOpenGLTimerQueryD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QOpenGLTimerQueryD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QOpenGLTimerQueryD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QOpenGLTimerQueryD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN17QOpenGLTimerQuery6createEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QOpenGLTimerQuery6createEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN17QOpenGLTimerQuery6createEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QOpenGLTimerQuery6createEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN17QOpenGLTimerQuery6createEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QOpenGLTimerQuery6createEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN17QOpenGLTimerQuery7destroyEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QOpenGLTimerQuery7destroyEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN17QOpenGLTimerQuery7destroyEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QOpenGLTimerQuery7destroyEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QOpenGLTimerQuery7destroyEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QOpenGLTimerQuery7destroyEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK17QOpenGLTimerQuery9isCreatedEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK17QOpenGLTimerQuery9isCreatedEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK17QOpenGLTimerQuery9isCreatedEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK17QOpenGLTimerQuery9isCreatedEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK17QOpenGLTimerQuery9isCreatedEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK17QOpenGLTimerQuery9isCreatedEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK17QOpenGLTimerQuery8objectIdEv
GLuint
SCOREP_LIBWRAP_FUNC_NAME( _ZNK17QOpenGLTimerQuery8objectIdEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK17QOpenGLTimerQuery8objectIdEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK17QOpenGLTimerQuery8objectIdEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    GLuint scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK17QOpenGLTimerQuery8objectIdEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK17QOpenGLTimerQuery8objectIdEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN17QOpenGLTimerQuery5beginEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QOpenGLTimerQuery5beginEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN17QOpenGLTimerQuery5beginEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QOpenGLTimerQuery5beginEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QOpenGLTimerQuery5beginEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QOpenGLTimerQuery5beginEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN17QOpenGLTimerQuery3endEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QOpenGLTimerQuery3endEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN17QOpenGLTimerQuery3endEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QOpenGLTimerQuery3endEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QOpenGLTimerQuery3endEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QOpenGLTimerQuery3endEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK17QOpenGLTimerQuery16waitForTimestampEv
GLuint64
SCOREP_LIBWRAP_FUNC_NAME( _ZNK17QOpenGLTimerQuery16waitForTimestampEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK17QOpenGLTimerQuery16waitForTimestampEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK17QOpenGLTimerQuery16waitForTimestampEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    GLuint64 scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK17QOpenGLTimerQuery16waitForTimestampEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK17QOpenGLTimerQuery16waitForTimestampEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN17QOpenGLTimerQuery15recordTimestampEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QOpenGLTimerQuery15recordTimestampEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN17QOpenGLTimerQuery15recordTimestampEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QOpenGLTimerQuery15recordTimestampEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QOpenGLTimerQuery15recordTimestampEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QOpenGLTimerQuery15recordTimestampEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK17QOpenGLTimerQuery17isResultAvailableEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK17QOpenGLTimerQuery17isResultAvailableEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK17QOpenGLTimerQuery17isResultAvailableEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK17QOpenGLTimerQuery17isResultAvailableEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK17QOpenGLTimerQuery17isResultAvailableEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK17QOpenGLTimerQuery17isResultAvailableEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK17QOpenGLTimerQuery13waitForResultEv
GLuint64
SCOREP_LIBWRAP_FUNC_NAME( _ZNK17QOpenGLTimerQuery13waitForResultEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK17QOpenGLTimerQuery13waitForResultEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK17QOpenGLTimerQuery13waitForResultEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    GLuint64 scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK17QOpenGLTimerQuery13waitForResultEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK17QOpenGLTimerQuery13waitForResultEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK18QOpenGLTimeMonitor10metaObjectEv
const QMetaObject *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK18QOpenGLTimeMonitor10metaObjectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK18QOpenGLTimeMonitor10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK18QOpenGLTimeMonitor10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QMetaObject * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK18QOpenGLTimeMonitor10metaObjectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK18QOpenGLTimeMonitor10metaObjectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN18QOpenGLTimeMonitor11qt_metacastEPKc
void *
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QOpenGLTimeMonitor11qt_metacastEPKc )( void *scorep_libwrap_arg_this, const char * scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN18QOpenGLTimeMonitor11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QOpenGLTimeMonitor11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    void * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN18QOpenGLTimeMonitor11qt_metacastEPKc, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QOpenGLTimeMonitor11qt_metacastEPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN18QOpenGLTimeMonitor11qt_metacallEN11QMetaObject4CallEiPPv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QOpenGLTimeMonitor11qt_metacallEN11QMetaObject4CallEiPPv )( void *scorep_libwrap_arg_this, QMetaObject::Call scorep_libwrap_arg_1, int scorep_libwrap_arg_2, void ** scorep_libwrap_arg_3 )
{
    LIBWRAP_EARLY_INIT( _ZN18QOpenGLTimeMonitor11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QOpenGLTimeMonitor11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN18QOpenGLTimeMonitor11qt_metacallEN11QMetaObject4CallEiPPv, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, scorep_libwrap_arg_2, scorep_libwrap_arg_3 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QOpenGLTimeMonitor11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN18QOpenGLTimeMonitorC2EP7QObject
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QOpenGLTimeMonitorC2EP7QObject )( void *scorep_libwrap_arg_this, QObject * parent )
{
    LIBWRAP_EARLY_INIT( _ZN18QOpenGLTimeMonitorC2EP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QOpenGLTimeMonitorC2EP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QOpenGLTimeMonitorC2EP7QObject, ( scorep_libwrap_arg_this, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QOpenGLTimeMonitorC2EP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN18QOpenGLTimeMonitorC1EP7QObject
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QOpenGLTimeMonitorC1EP7QObject )( void *scorep_libwrap_arg_this, QObject * parent )
{
    LIBWRAP_EARLY_INIT( _ZN18QOpenGLTimeMonitorC1EP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QOpenGLTimeMonitorC1EP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QOpenGLTimeMonitorC1EP7QObject, ( scorep_libwrap_arg_this, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QOpenGLTimeMonitorC1EP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN18QOpenGLTimeMonitorD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QOpenGLTimeMonitorD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN18QOpenGLTimeMonitorD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QOpenGLTimeMonitorD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QOpenGLTimeMonitorD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QOpenGLTimeMonitorD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN18QOpenGLTimeMonitorD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QOpenGLTimeMonitorD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN18QOpenGLTimeMonitorD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QOpenGLTimeMonitorD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QOpenGLTimeMonitorD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QOpenGLTimeMonitorD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN18QOpenGLTimeMonitorD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QOpenGLTimeMonitorD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN18QOpenGLTimeMonitorD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QOpenGLTimeMonitorD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QOpenGLTimeMonitorD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QOpenGLTimeMonitorD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN18QOpenGLTimeMonitor14setSampleCountEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QOpenGLTimeMonitor14setSampleCountEi )( void *scorep_libwrap_arg_this, int sampleCount )
{
    LIBWRAP_EARLY_INIT( _ZN18QOpenGLTimeMonitor14setSampleCountEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QOpenGLTimeMonitor14setSampleCountEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QOpenGLTimeMonitor14setSampleCountEi, ( scorep_libwrap_arg_this, sampleCount ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QOpenGLTimeMonitor14setSampleCountEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK18QOpenGLTimeMonitor11sampleCountEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK18QOpenGLTimeMonitor11sampleCountEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK18QOpenGLTimeMonitor11sampleCountEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK18QOpenGLTimeMonitor11sampleCountEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK18QOpenGLTimeMonitor11sampleCountEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK18QOpenGLTimeMonitor11sampleCountEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN18QOpenGLTimeMonitor6createEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QOpenGLTimeMonitor6createEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN18QOpenGLTimeMonitor6createEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QOpenGLTimeMonitor6createEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN18QOpenGLTimeMonitor6createEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QOpenGLTimeMonitor6createEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN18QOpenGLTimeMonitor7destroyEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QOpenGLTimeMonitor7destroyEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN18QOpenGLTimeMonitor7destroyEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QOpenGLTimeMonitor7destroyEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QOpenGLTimeMonitor7destroyEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QOpenGLTimeMonitor7destroyEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK18QOpenGLTimeMonitor9isCreatedEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK18QOpenGLTimeMonitor9isCreatedEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK18QOpenGLTimeMonitor9isCreatedEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK18QOpenGLTimeMonitor9isCreatedEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK18QOpenGLTimeMonitor9isCreatedEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK18QOpenGLTimeMonitor9isCreatedEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK18QOpenGLTimeMonitor9objectIdsEv
QVector<GLuint>
SCOREP_LIBWRAP_FUNC_NAME( _ZNK18QOpenGLTimeMonitor9objectIdsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK18QOpenGLTimeMonitor9objectIdsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK18QOpenGLTimeMonitor9objectIdsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QVector<GLuint> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK18QOpenGLTimeMonitor9objectIdsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK18QOpenGLTimeMonitor9objectIdsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN18QOpenGLTimeMonitor12recordSampleEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QOpenGLTimeMonitor12recordSampleEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN18QOpenGLTimeMonitor12recordSampleEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QOpenGLTimeMonitor12recordSampleEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN18QOpenGLTimeMonitor12recordSampleEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QOpenGLTimeMonitor12recordSampleEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK18QOpenGLTimeMonitor17isResultAvailableEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK18QOpenGLTimeMonitor17isResultAvailableEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK18QOpenGLTimeMonitor17isResultAvailableEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK18QOpenGLTimeMonitor17isResultAvailableEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK18QOpenGLTimeMonitor17isResultAvailableEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK18QOpenGLTimeMonitor17isResultAvailableEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK18QOpenGLTimeMonitor14waitForSamplesEv
QVector<GLuint64>
SCOREP_LIBWRAP_FUNC_NAME( _ZNK18QOpenGLTimeMonitor14waitForSamplesEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK18QOpenGLTimeMonitor14waitForSamplesEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK18QOpenGLTimeMonitor14waitForSamplesEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QVector<GLuint64> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK18QOpenGLTimeMonitor14waitForSamplesEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK18QOpenGLTimeMonitor14waitForSamplesEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK18QOpenGLTimeMonitor16waitForIntervalsEv
QVector<GLuint64>
SCOREP_LIBWRAP_FUNC_NAME( _ZNK18QOpenGLTimeMonitor16waitForIntervalsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK18QOpenGLTimeMonitor16waitForIntervalsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK18QOpenGLTimeMonitor16waitForIntervalsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QVector<GLuint64> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK18QOpenGLTimeMonitor16waitForIntervalsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK18QOpenGLTimeMonitor16waitForIntervalsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN18QOpenGLTimeMonitor5resetEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QOpenGLTimeMonitor5resetEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN18QOpenGLTimeMonitor5resetEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QOpenGLTimeMonitor5resetEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QOpenGLTimeMonitor5resetEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QOpenGLTimeMonitor5resetEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK24QOpenGLVertexArrayObject10metaObjectEv
const QMetaObject *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK24QOpenGLVertexArrayObject10metaObjectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK24QOpenGLVertexArrayObject10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK24QOpenGLVertexArrayObject10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QMetaObject * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK24QOpenGLVertexArrayObject10metaObjectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK24QOpenGLVertexArrayObject10metaObjectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN24QOpenGLVertexArrayObject11qt_metacastEPKc
void *
SCOREP_LIBWRAP_FUNC_NAME( _ZN24QOpenGLVertexArrayObject11qt_metacastEPKc )( void *scorep_libwrap_arg_this, const char * scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN24QOpenGLVertexArrayObject11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN24QOpenGLVertexArrayObject11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    void * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN24QOpenGLVertexArrayObject11qt_metacastEPKc, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN24QOpenGLVertexArrayObject11qt_metacastEPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN24QOpenGLVertexArrayObject11qt_metacallEN11QMetaObject4CallEiPPv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZN24QOpenGLVertexArrayObject11qt_metacallEN11QMetaObject4CallEiPPv )( void *scorep_libwrap_arg_this, QMetaObject::Call scorep_libwrap_arg_1, int scorep_libwrap_arg_2, void ** scorep_libwrap_arg_3 )
{
    LIBWRAP_EARLY_INIT( _ZN24QOpenGLVertexArrayObject11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN24QOpenGLVertexArrayObject11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN24QOpenGLVertexArrayObject11qt_metacallEN11QMetaObject4CallEiPPv, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, scorep_libwrap_arg_2, scorep_libwrap_arg_3 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN24QOpenGLVertexArrayObject11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN24QOpenGLVertexArrayObjectC2EP7QObject
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN24QOpenGLVertexArrayObjectC2EP7QObject )( void *scorep_libwrap_arg_this, QObject * parent )
{
    LIBWRAP_EARLY_INIT( _ZN24QOpenGLVertexArrayObjectC2EP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN24QOpenGLVertexArrayObjectC2EP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN24QOpenGLVertexArrayObjectC2EP7QObject, ( scorep_libwrap_arg_this, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN24QOpenGLVertexArrayObjectC2EP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN24QOpenGLVertexArrayObjectC1EP7QObject
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN24QOpenGLVertexArrayObjectC1EP7QObject )( void *scorep_libwrap_arg_this, QObject * parent )
{
    LIBWRAP_EARLY_INIT( _ZN24QOpenGLVertexArrayObjectC1EP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN24QOpenGLVertexArrayObjectC1EP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN24QOpenGLVertexArrayObjectC1EP7QObject, ( scorep_libwrap_arg_this, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN24QOpenGLVertexArrayObjectC1EP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN24QOpenGLVertexArrayObjectD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN24QOpenGLVertexArrayObjectD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN24QOpenGLVertexArrayObjectD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN24QOpenGLVertexArrayObjectD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN24QOpenGLVertexArrayObjectD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN24QOpenGLVertexArrayObjectD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN24QOpenGLVertexArrayObjectD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN24QOpenGLVertexArrayObjectD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN24QOpenGLVertexArrayObjectD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN24QOpenGLVertexArrayObjectD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN24QOpenGLVertexArrayObjectD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN24QOpenGLVertexArrayObjectD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN24QOpenGLVertexArrayObjectD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN24QOpenGLVertexArrayObjectD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN24QOpenGLVertexArrayObjectD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN24QOpenGLVertexArrayObjectD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN24QOpenGLVertexArrayObjectD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN24QOpenGLVertexArrayObjectD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN24QOpenGLVertexArrayObject6createEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN24QOpenGLVertexArrayObject6createEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN24QOpenGLVertexArrayObject6createEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN24QOpenGLVertexArrayObject6createEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN24QOpenGLVertexArrayObject6createEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN24QOpenGLVertexArrayObject6createEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN24QOpenGLVertexArrayObject7destroyEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN24QOpenGLVertexArrayObject7destroyEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN24QOpenGLVertexArrayObject7destroyEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN24QOpenGLVertexArrayObject7destroyEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN24QOpenGLVertexArrayObject7destroyEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN24QOpenGLVertexArrayObject7destroyEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK24QOpenGLVertexArrayObject9isCreatedEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK24QOpenGLVertexArrayObject9isCreatedEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK24QOpenGLVertexArrayObject9isCreatedEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK24QOpenGLVertexArrayObject9isCreatedEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK24QOpenGLVertexArrayObject9isCreatedEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK24QOpenGLVertexArrayObject9isCreatedEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK24QOpenGLVertexArrayObject8objectIdEv
GLuint
SCOREP_LIBWRAP_FUNC_NAME( _ZNK24QOpenGLVertexArrayObject8objectIdEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK24QOpenGLVertexArrayObject8objectIdEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK24QOpenGLVertexArrayObject8objectIdEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    GLuint scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK24QOpenGLVertexArrayObject8objectIdEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK24QOpenGLVertexArrayObject8objectIdEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN24QOpenGLVertexArrayObject4bindEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN24QOpenGLVertexArrayObject4bindEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN24QOpenGLVertexArrayObject4bindEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN24QOpenGLVertexArrayObject4bindEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN24QOpenGLVertexArrayObject4bindEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN24QOpenGLVertexArrayObject4bindEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN24QOpenGLVertexArrayObject7releaseEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN24QOpenGLVertexArrayObject7releaseEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN24QOpenGLVertexArrayObject7releaseEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN24QOpenGLVertexArrayObject7releaseEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN24QOpenGLVertexArrayObject7releaseEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN24QOpenGLVertexArrayObject7releaseEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QBackingStoreC2EP7QWindow
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QBackingStoreC2EP7QWindow )( void *scorep_libwrap_arg_this, QWindow * window )
{
    LIBWRAP_EARLY_INIT( _ZN13QBackingStoreC2EP7QWindow );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QBackingStoreC2EP7QWindow );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QBackingStoreC2EP7QWindow, ( scorep_libwrap_arg_this, window ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QBackingStoreC2EP7QWindow );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QBackingStoreC1EP7QWindow
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QBackingStoreC1EP7QWindow )( void *scorep_libwrap_arg_this, QWindow * window )
{
    LIBWRAP_EARLY_INIT( _ZN13QBackingStoreC1EP7QWindow );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QBackingStoreC1EP7QWindow );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QBackingStoreC1EP7QWindow, ( scorep_libwrap_arg_this, window ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QBackingStoreC1EP7QWindow );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QBackingStoreD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QBackingStoreD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN13QBackingStoreD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QBackingStoreD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QBackingStoreD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QBackingStoreD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QBackingStoreD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QBackingStoreD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN13QBackingStoreD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QBackingStoreD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QBackingStoreD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QBackingStoreD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK13QBackingStore6windowEv
QWindow *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QBackingStore6windowEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QBackingStore6windowEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QBackingStore6windowEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QWindow * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QBackingStore6windowEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QBackingStore6windowEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QBackingStore11paintDeviceEv
QPaintDevice *
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QBackingStore11paintDeviceEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN13QBackingStore11paintDeviceEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QBackingStore11paintDeviceEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPaintDevice * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN13QBackingStore11paintDeviceEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QBackingStore11paintDeviceEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QBackingStore5flushERK7QRegionP7QWindowRK6QPoint
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QBackingStore5flushERK7QRegionP7QWindowRK6QPoint )( void *scorep_libwrap_arg_this, const QRegion & region, QWindow * window, const QPoint & offset )
{
    LIBWRAP_EARLY_INIT( _ZN13QBackingStore5flushERK7QRegionP7QWindowRK6QPoint );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QBackingStore5flushERK7QRegionP7QWindowRK6QPoint );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QBackingStore5flushERK7QRegionP7QWindowRK6QPoint, ( scorep_libwrap_arg_this, region, window, offset ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QBackingStore5flushERK7QRegionP7QWindowRK6QPoint );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QBackingStore6resizeERK5QSize
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QBackingStore6resizeERK5QSize )( void *scorep_libwrap_arg_this, const QSize & size )
{
    LIBWRAP_EARLY_INIT( _ZN13QBackingStore6resizeERK5QSize );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QBackingStore6resizeERK5QSize );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QBackingStore6resizeERK5QSize, ( scorep_libwrap_arg_this, size ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QBackingStore6resizeERK5QSize );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK13QBackingStore4sizeEv
QSize
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QBackingStore4sizeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QBackingStore4sizeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QBackingStore4sizeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QSize scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QBackingStore4sizeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QBackingStore4sizeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QBackingStore6scrollERK7QRegionii
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QBackingStore6scrollERK7QRegionii )( void *scorep_libwrap_arg_this, const QRegion & area, int dx, int dy )
{
    LIBWRAP_EARLY_INIT( _ZN13QBackingStore6scrollERK7QRegionii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QBackingStore6scrollERK7QRegionii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN13QBackingStore6scrollERK7QRegionii, ( scorep_libwrap_arg_this, area, dx, dy ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QBackingStore6scrollERK7QRegionii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QBackingStore10beginPaintERK7QRegion
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QBackingStore10beginPaintERK7QRegion )( void *scorep_libwrap_arg_this, const QRegion & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN13QBackingStore10beginPaintERK7QRegion );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QBackingStore10beginPaintERK7QRegion );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QBackingStore10beginPaintERK7QRegion, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QBackingStore10beginPaintERK7QRegion );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QBackingStore8endPaintEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QBackingStore8endPaintEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN13QBackingStore8endPaintEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QBackingStore8endPaintEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QBackingStore8endPaintEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QBackingStore8endPaintEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QBackingStore17setStaticContentsERK7QRegion
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QBackingStore17setStaticContentsERK7QRegion )( void *scorep_libwrap_arg_this, const QRegion & region )
{
    LIBWRAP_EARLY_INIT( _ZN13QBackingStore17setStaticContentsERK7QRegion );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QBackingStore17setStaticContentsERK7QRegion );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QBackingStore17setStaticContentsERK7QRegion, ( scorep_libwrap_arg_this, region ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QBackingStore17setStaticContentsERK7QRegion );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK13QBackingStore14staticContentsEv
QRegion
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QBackingStore14staticContentsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QBackingStore14staticContentsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QBackingStore14staticContentsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRegion scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QBackingStore14staticContentsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QBackingStore14staticContentsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QBackingStore17hasStaticContentsEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QBackingStore17hasStaticContentsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QBackingStore17hasStaticContentsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QBackingStore17hasStaticContentsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QBackingStore17hasStaticContentsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QBackingStore17hasStaticContentsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QBackingStore6handleEv
QPlatformBackingStore *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QBackingStore6handleEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QBackingStore6handleEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QBackingStore6handleEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPlatformBackingStore * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QBackingStore6handleEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QBackingStore6handleEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN9QPageSizeC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QPageSizeC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN9QPageSizeC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QPageSizeC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QPageSizeC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QPageSizeC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QPageSizeC1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QPageSizeC1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN9QPageSizeC1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QPageSizeC1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QPageSizeC1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QPageSizeC1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QPageSizeC2ENS_10PageSizeIdE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QPageSizeC2ENS_10PageSizeIdE )( void *scorep_libwrap_arg_this, QPageSize::PageSizeId pageSizeId )
{
    LIBWRAP_EARLY_INIT( _ZN9QPageSizeC2ENS_10PageSizeIdE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QPageSizeC2ENS_10PageSizeIdE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QPageSizeC2ENS_10PageSizeIdE, ( scorep_libwrap_arg_this, pageSizeId ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QPageSizeC2ENS_10PageSizeIdE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QPageSizeC1ENS_10PageSizeIdE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QPageSizeC1ENS_10PageSizeIdE )( void *scorep_libwrap_arg_this, QPageSize::PageSizeId pageSizeId )
{
    LIBWRAP_EARLY_INIT( _ZN9QPageSizeC1ENS_10PageSizeIdE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QPageSizeC1ENS_10PageSizeIdE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QPageSizeC1ENS_10PageSizeIdE, ( scorep_libwrap_arg_this, pageSizeId ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QPageSizeC1ENS_10PageSizeIdE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QPageSizeC2ERK5QSizeRK7QStringNS_15SizeMatchPolicyE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QPageSizeC2ERK5QSizeRK7QStringNS_15SizeMatchPolicyE )( void *scorep_libwrap_arg_this, const QSize & pointSize, const QString & name, QPageSize::SizeMatchPolicy matchPolicy )
{
    LIBWRAP_EARLY_INIT( _ZN9QPageSizeC2ERK5QSizeRK7QStringNS_15SizeMatchPolicyE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QPageSizeC2ERK5QSizeRK7QStringNS_15SizeMatchPolicyE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QPageSizeC2ERK5QSizeRK7QStringNS_15SizeMatchPolicyE, ( scorep_libwrap_arg_this, pointSize, name, matchPolicy ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QPageSizeC2ERK5QSizeRK7QStringNS_15SizeMatchPolicyE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QPageSizeC1ERK5QSizeRK7QStringNS_15SizeMatchPolicyE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QPageSizeC1ERK5QSizeRK7QStringNS_15SizeMatchPolicyE )( void *scorep_libwrap_arg_this, const QSize & pointSize, const QString & name, QPageSize::SizeMatchPolicy matchPolicy )
{
    LIBWRAP_EARLY_INIT( _ZN9QPageSizeC1ERK5QSizeRK7QStringNS_15SizeMatchPolicyE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QPageSizeC1ERK5QSizeRK7QStringNS_15SizeMatchPolicyE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QPageSizeC1ERK5QSizeRK7QStringNS_15SizeMatchPolicyE, ( scorep_libwrap_arg_this, pointSize, name, matchPolicy ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QPageSizeC1ERK5QSizeRK7QStringNS_15SizeMatchPolicyE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QPageSizeC2ERK6QSizeFNS_4UnitERK7QStringNS_15SizeMatchPolicyE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QPageSizeC2ERK6QSizeFNS_4UnitERK7QStringNS_15SizeMatchPolicyE )( void *scorep_libwrap_arg_this, const QSizeF & size, QPageSize::Unit units, const QString & name, QPageSize::SizeMatchPolicy matchPolicy )
{
    LIBWRAP_EARLY_INIT( _ZN9QPageSizeC2ERK6QSizeFNS_4UnitERK7QStringNS_15SizeMatchPolicyE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QPageSizeC2ERK6QSizeFNS_4UnitERK7QStringNS_15SizeMatchPolicyE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QPageSizeC2ERK6QSizeFNS_4UnitERK7QStringNS_15SizeMatchPolicyE, ( scorep_libwrap_arg_this, size, units, name, matchPolicy ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QPageSizeC2ERK6QSizeFNS_4UnitERK7QStringNS_15SizeMatchPolicyE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QPageSizeC1ERK6QSizeFNS_4UnitERK7QStringNS_15SizeMatchPolicyE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QPageSizeC1ERK6QSizeFNS_4UnitERK7QStringNS_15SizeMatchPolicyE )( void *scorep_libwrap_arg_this, const QSizeF & size, QPageSize::Unit units, const QString & name, QPageSize::SizeMatchPolicy matchPolicy )
{
    LIBWRAP_EARLY_INIT( _ZN9QPageSizeC1ERK6QSizeFNS_4UnitERK7QStringNS_15SizeMatchPolicyE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QPageSizeC1ERK6QSizeFNS_4UnitERK7QStringNS_15SizeMatchPolicyE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QPageSizeC1ERK6QSizeFNS_4UnitERK7QStringNS_15SizeMatchPolicyE, ( scorep_libwrap_arg_this, size, units, name, matchPolicy ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QPageSizeC1ERK6QSizeFNS_4UnitERK7QStringNS_15SizeMatchPolicyE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QPageSizeC2ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QPageSizeC2ERKS_ )( void *scorep_libwrap_arg_this, const QPageSize & other )
{
    LIBWRAP_EARLY_INIT( _ZN9QPageSizeC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QPageSizeC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QPageSizeC2ERKS_, ( scorep_libwrap_arg_this, other ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QPageSizeC2ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QPageSizeC1ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QPageSizeC1ERKS_ )( void *scorep_libwrap_arg_this, const QPageSize & other )
{
    LIBWRAP_EARLY_INIT( _ZN9QPageSizeC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QPageSizeC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QPageSizeC1ERKS_, ( scorep_libwrap_arg_this, other ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QPageSizeC1ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QPageSizeD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QPageSizeD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN9QPageSizeD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QPageSizeD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QPageSizeD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QPageSizeD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QPageSizeD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QPageSizeD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN9QPageSizeD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QPageSizeD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QPageSizeD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QPageSizeD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK9QPageSize14isEquivalentToERKS_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QPageSize14isEquivalentToERKS_ )( void *scorep_libwrap_arg_this, const QPageSize & other )
{
    LIBWRAP_EARLY_INIT( _ZNK9QPageSize14isEquivalentToERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QPageSize14isEquivalentToERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QPageSize14isEquivalentToERKS_, ( scorep_libwrap_arg_this, other ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QPageSize14isEquivalentToERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QPageSize7isValidEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QPageSize7isValidEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QPageSize7isValidEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QPageSize7isValidEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QPageSize7isValidEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QPageSize7isValidEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QPageSize3keyEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QPageSize3keyEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QPageSize3keyEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QPageSize3keyEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QPageSize3keyEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QPageSize3keyEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QPageSize4nameEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QPageSize4nameEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QPageSize4nameEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QPageSize4nameEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QPageSize4nameEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QPageSize4nameEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QPageSize2idEv
QPageSize::PageSizeId
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QPageSize2idEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QPageSize2idEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QPageSize2idEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPageSize::PageSizeId scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QPageSize2idEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QPageSize2idEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QPageSize9windowsIdEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QPageSize9windowsIdEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QPageSize9windowsIdEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QPageSize9windowsIdEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QPageSize9windowsIdEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QPageSize9windowsIdEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QPageSize14definitionSizeEv
QSizeF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QPageSize14definitionSizeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QPageSize14definitionSizeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QPageSize14definitionSizeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QSizeF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QPageSize14definitionSizeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QPageSize14definitionSizeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QPageSize15definitionUnitsEv
QPageSize::Unit
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QPageSize15definitionUnitsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QPageSize15definitionUnitsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QPageSize15definitionUnitsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPageSize::Unit scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QPageSize15definitionUnitsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QPageSize15definitionUnitsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QPageSize4sizeENS_4UnitE
QSizeF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QPageSize4sizeENS_4UnitE )( void *scorep_libwrap_arg_this, QPageSize::Unit units )
{
    LIBWRAP_EARLY_INIT( _ZNK9QPageSize4sizeENS_4UnitE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QPageSize4sizeENS_4UnitE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QSizeF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QPageSize4sizeENS_4UnitE, ( scorep_libwrap_arg_this, units ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QPageSize4sizeENS_4UnitE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QPageSize10sizePointsEv
QSize
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QPageSize10sizePointsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QPageSize10sizePointsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QPageSize10sizePointsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QSize scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QPageSize10sizePointsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QPageSize10sizePointsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QPageSize10sizePixelsEi
QSize
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QPageSize10sizePixelsEi )( void *scorep_libwrap_arg_this, int resolution )
{
    LIBWRAP_EARLY_INIT( _ZNK9QPageSize10sizePixelsEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QPageSize10sizePixelsEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QSize scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QPageSize10sizePixelsEi, ( scorep_libwrap_arg_this, resolution ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QPageSize10sizePixelsEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QPageSize4rectENS_4UnitE
QRectF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QPageSize4rectENS_4UnitE )( void *scorep_libwrap_arg_this, QPageSize::Unit units )
{
    LIBWRAP_EARLY_INIT( _ZNK9QPageSize4rectENS_4UnitE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QPageSize4rectENS_4UnitE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRectF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QPageSize4rectENS_4UnitE, ( scorep_libwrap_arg_this, units ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QPageSize4rectENS_4UnitE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QPageSize10rectPointsEv
QRect
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QPageSize10rectPointsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QPageSize10rectPointsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QPageSize10rectPointsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRect scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QPageSize10rectPointsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QPageSize10rectPointsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QPageSize10rectPixelsEi
QRect
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QPageSize10rectPixelsEi )( void *scorep_libwrap_arg_this, int resolution )
{
    LIBWRAP_EARLY_INIT( _ZNK9QPageSize10rectPixelsEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QPageSize10rectPixelsEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRect scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QPageSize10rectPixelsEi, ( scorep_libwrap_arg_this, resolution ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QPageSize10rectPixelsEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN9QPageSize3keyENS_10PageSizeIdE
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QPageSize3keyENS_10PageSizeIdE )( QPageSize::PageSizeId pageSizeId )
{
    LIBWRAP_EARLY_INIT( _ZN9QPageSize3keyENS_10PageSizeIdE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QPageSize3keyENS_10PageSizeIdE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN9QPageSize3keyENS_10PageSizeIdE, ( pageSizeId ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QPageSize3keyENS_10PageSizeIdE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN9QPageSize4nameENS_10PageSizeIdE
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QPageSize4nameENS_10PageSizeIdE )( QPageSize::PageSizeId pageSizeId )
{
    LIBWRAP_EARLY_INIT( _ZN9QPageSize4nameENS_10PageSizeIdE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QPageSize4nameENS_10PageSizeIdE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN9QPageSize4nameENS_10PageSizeIdE, ( pageSizeId ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QPageSize4nameENS_10PageSizeIdE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN9QPageSize2idERK5QSizeNS_15SizeMatchPolicyE
QPageSize::PageSizeId
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QPageSize2idERK5QSizeNS_15SizeMatchPolicyE )( const QSize & pointSize, QPageSize::SizeMatchPolicy matchPolicy )
{
    LIBWRAP_EARLY_INIT( _ZN9QPageSize2idERK5QSizeNS_15SizeMatchPolicyE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QPageSize2idERK5QSizeNS_15SizeMatchPolicyE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPageSize::PageSizeId scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN9QPageSize2idERK5QSizeNS_15SizeMatchPolicyE, ( pointSize, matchPolicy ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QPageSize2idERK5QSizeNS_15SizeMatchPolicyE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN9QPageSize2idERK6QSizeFNS_4UnitENS_15SizeMatchPolicyE
QPageSize::PageSizeId
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QPageSize2idERK6QSizeFNS_4UnitENS_15SizeMatchPolicyE )( const QSizeF & size, QPageSize::Unit units, QPageSize::SizeMatchPolicy matchPolicy )
{
    LIBWRAP_EARLY_INIT( _ZN9QPageSize2idERK6QSizeFNS_4UnitENS_15SizeMatchPolicyE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QPageSize2idERK6QSizeFNS_4UnitENS_15SizeMatchPolicyE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPageSize::PageSizeId scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN9QPageSize2idERK6QSizeFNS_4UnitENS_15SizeMatchPolicyE, ( size, units, matchPolicy ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QPageSize2idERK6QSizeFNS_4UnitENS_15SizeMatchPolicyE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN9QPageSize2idEi
QPageSize::PageSizeId
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QPageSize2idEi )( int windowsId )
{
    LIBWRAP_EARLY_INIT( _ZN9QPageSize2idEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QPageSize2idEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPageSize::PageSizeId scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN9QPageSize2idEi, ( windowsId ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QPageSize2idEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN9QPageSize9windowsIdENS_10PageSizeIdE
int
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QPageSize9windowsIdENS_10PageSizeIdE )( QPageSize::PageSizeId pageSizeId )
{
    LIBWRAP_EARLY_INIT( _ZN9QPageSize9windowsIdENS_10PageSizeIdE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QPageSize9windowsIdENS_10PageSizeIdE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN9QPageSize9windowsIdENS_10PageSizeIdE, ( pageSizeId ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QPageSize9windowsIdENS_10PageSizeIdE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN9QPageSize14definitionSizeENS_10PageSizeIdE
QSizeF
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QPageSize14definitionSizeENS_10PageSizeIdE )( QPageSize::PageSizeId pageSizeId )
{
    LIBWRAP_EARLY_INIT( _ZN9QPageSize14definitionSizeENS_10PageSizeIdE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QPageSize14definitionSizeENS_10PageSizeIdE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QSizeF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN9QPageSize14definitionSizeENS_10PageSizeIdE, ( pageSizeId ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QPageSize14definitionSizeENS_10PageSizeIdE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN9QPageSize15definitionUnitsENS_10PageSizeIdE
QPageSize::Unit
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QPageSize15definitionUnitsENS_10PageSizeIdE )( QPageSize::PageSizeId pageSizeId )
{
    LIBWRAP_EARLY_INIT( _ZN9QPageSize15definitionUnitsENS_10PageSizeIdE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QPageSize15definitionUnitsENS_10PageSizeIdE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPageSize::Unit scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN9QPageSize15definitionUnitsENS_10PageSizeIdE, ( pageSizeId ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QPageSize15definitionUnitsENS_10PageSizeIdE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN9QPageSize4sizeENS_10PageSizeIdENS_4UnitE
QSizeF
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QPageSize4sizeENS_10PageSizeIdENS_4UnitE )( QPageSize::PageSizeId pageSizeId, QPageSize::Unit units )
{
    LIBWRAP_EARLY_INIT( _ZN9QPageSize4sizeENS_10PageSizeIdENS_4UnitE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QPageSize4sizeENS_10PageSizeIdENS_4UnitE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QSizeF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN9QPageSize4sizeENS_10PageSizeIdENS_4UnitE, ( pageSizeId, units ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QPageSize4sizeENS_10PageSizeIdENS_4UnitE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN9QPageSize10sizePointsENS_10PageSizeIdE
QSize
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QPageSize10sizePointsENS_10PageSizeIdE )( QPageSize::PageSizeId pageSizeId )
{
    LIBWRAP_EARLY_INIT( _ZN9QPageSize10sizePointsENS_10PageSizeIdE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QPageSize10sizePointsENS_10PageSizeIdE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QSize scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN9QPageSize10sizePointsENS_10PageSizeIdE, ( pageSizeId ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QPageSize10sizePointsENS_10PageSizeIdE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN9QPageSize10sizePixelsENS_10PageSizeIdEi
QSize
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QPageSize10sizePixelsENS_10PageSizeIdEi )( QPageSize::PageSizeId pageSizeId, int resolution )
{
    LIBWRAP_EARLY_INIT( _ZN9QPageSize10sizePixelsENS_10PageSizeIdEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QPageSize10sizePixelsENS_10PageSizeIdEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QSize scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN9QPageSize10sizePixelsENS_10PageSizeIdEi, ( pageSizeId, resolution ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QPageSize10sizePixelsENS_10PageSizeIdEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _Zls6QDebugRK9QPageSize
QDebug
SCOREP_LIBWRAP_FUNC_NAME( _Zls6QDebugRK9QPageSize )( QDebug dbg, const QPageSize & pageSize )
{
    LIBWRAP_EARLY_INIT( _Zls6QDebugRK9QPageSize );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _Zls6QDebugRK9QPageSize );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDebug scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _Zls6QDebugRK9QPageSize, ( dbg, pageSize ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _Zls6QDebugRK9QPageSize );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QPageLayoutC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QPageLayoutC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QPageLayoutC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QPageLayoutC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QPageLayoutC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QPageLayoutC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QPageLayoutC1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QPageLayoutC1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QPageLayoutC1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QPageLayoutC1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QPageLayoutC1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QPageLayoutC1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QPageLayoutC2ERK9QPageSizeNS_11OrientationERK9QMarginsFNS_4UnitES6_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QPageLayoutC2ERK9QPageSizeNS_11OrientationERK9QMarginsFNS_4UnitES6_ )( void *scorep_libwrap_arg_this, const QPageSize & pageSize, QPageLayout::Orientation orientation, const QMarginsF & margins, QPageLayout::Unit units, const QMarginsF & minMargins )
{
    LIBWRAP_EARLY_INIT( _ZN11QPageLayoutC2ERK9QPageSizeNS_11OrientationERK9QMarginsFNS_4UnitES6_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QPageLayoutC2ERK9QPageSizeNS_11OrientationERK9QMarginsFNS_4UnitES6_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QPageLayoutC2ERK9QPageSizeNS_11OrientationERK9QMarginsFNS_4UnitES6_, ( scorep_libwrap_arg_this, pageSize, orientation, margins, units, minMargins ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QPageLayoutC2ERK9QPageSizeNS_11OrientationERK9QMarginsFNS_4UnitES6_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QPageLayoutC1ERK9QPageSizeNS_11OrientationERK9QMarginsFNS_4UnitES6_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QPageLayoutC1ERK9QPageSizeNS_11OrientationERK9QMarginsFNS_4UnitES6_ )( void *scorep_libwrap_arg_this, const QPageSize & pageSize, QPageLayout::Orientation orientation, const QMarginsF & margins, QPageLayout::Unit units, const QMarginsF & minMargins )
{
    LIBWRAP_EARLY_INIT( _ZN11QPageLayoutC1ERK9QPageSizeNS_11OrientationERK9QMarginsFNS_4UnitES6_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QPageLayoutC1ERK9QPageSizeNS_11OrientationERK9QMarginsFNS_4UnitES6_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QPageLayoutC1ERK9QPageSizeNS_11OrientationERK9QMarginsFNS_4UnitES6_, ( scorep_libwrap_arg_this, pageSize, orientation, margins, units, minMargins ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QPageLayoutC1ERK9QPageSizeNS_11OrientationERK9QMarginsFNS_4UnitES6_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QPageLayoutC2ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QPageLayoutC2ERKS_ )( void *scorep_libwrap_arg_this, const QPageLayout & other )
{
    LIBWRAP_EARLY_INIT( _ZN11QPageLayoutC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QPageLayoutC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QPageLayoutC2ERKS_, ( scorep_libwrap_arg_this, other ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QPageLayoutC2ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QPageLayoutC1ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QPageLayoutC1ERKS_ )( void *scorep_libwrap_arg_this, const QPageLayout & other )
{
    LIBWRAP_EARLY_INIT( _ZN11QPageLayoutC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QPageLayoutC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QPageLayoutC1ERKS_, ( scorep_libwrap_arg_this, other ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QPageLayoutC1ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QPageLayoutD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QPageLayoutD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QPageLayoutD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QPageLayoutD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QPageLayoutD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QPageLayoutD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QPageLayoutD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QPageLayoutD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QPageLayoutD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QPageLayoutD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QPageLayoutD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QPageLayoutD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK11QPageLayout14isEquivalentToERKS_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QPageLayout14isEquivalentToERKS_ )( void *scorep_libwrap_arg_this, const QPageLayout & other )
{
    LIBWRAP_EARLY_INIT( _ZNK11QPageLayout14isEquivalentToERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QPageLayout14isEquivalentToERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QPageLayout14isEquivalentToERKS_, ( scorep_libwrap_arg_this, other ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QPageLayout14isEquivalentToERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QPageLayout7isValidEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QPageLayout7isValidEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QPageLayout7isValidEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QPageLayout7isValidEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QPageLayout7isValidEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QPageLayout7isValidEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QPageLayout7setModeENS_4ModeE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QPageLayout7setModeENS_4ModeE )( void *scorep_libwrap_arg_this, QPageLayout::Mode mode )
{
    LIBWRAP_EARLY_INIT( _ZN11QPageLayout7setModeENS_4ModeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QPageLayout7setModeENS_4ModeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QPageLayout7setModeENS_4ModeE, ( scorep_libwrap_arg_this, mode ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QPageLayout7setModeENS_4ModeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK11QPageLayout4modeEv
QPageLayout::Mode
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QPageLayout4modeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QPageLayout4modeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QPageLayout4modeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPageLayout::Mode scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QPageLayout4modeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QPageLayout4modeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QPageLayout11setPageSizeERK9QPageSizeRK9QMarginsF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QPageLayout11setPageSizeERK9QPageSizeRK9QMarginsF )( void *scorep_libwrap_arg_this, const QPageSize & pageSize, const QMarginsF & minMargins )
{
    LIBWRAP_EARLY_INIT( _ZN11QPageLayout11setPageSizeERK9QPageSizeRK9QMarginsF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QPageLayout11setPageSizeERK9QPageSizeRK9QMarginsF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QPageLayout11setPageSizeERK9QPageSizeRK9QMarginsF, ( scorep_libwrap_arg_this, pageSize, minMargins ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QPageLayout11setPageSizeERK9QPageSizeRK9QMarginsF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK11QPageLayout8pageSizeEv
QPageSize
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QPageLayout8pageSizeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QPageLayout8pageSizeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QPageLayout8pageSizeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPageSize scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QPageLayout8pageSizeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QPageLayout8pageSizeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QPageLayout14setOrientationENS_11OrientationE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QPageLayout14setOrientationENS_11OrientationE )( void *scorep_libwrap_arg_this, QPageLayout::Orientation orientation )
{
    LIBWRAP_EARLY_INIT( _ZN11QPageLayout14setOrientationENS_11OrientationE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QPageLayout14setOrientationENS_11OrientationE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QPageLayout14setOrientationENS_11OrientationE, ( scorep_libwrap_arg_this, orientation ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QPageLayout14setOrientationENS_11OrientationE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK11QPageLayout11orientationEv
QPageLayout::Orientation
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QPageLayout11orientationEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QPageLayout11orientationEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QPageLayout11orientationEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPageLayout::Orientation scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QPageLayout11orientationEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QPageLayout11orientationEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QPageLayout8setUnitsENS_4UnitE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QPageLayout8setUnitsENS_4UnitE )( void *scorep_libwrap_arg_this, QPageLayout::Unit units )
{
    LIBWRAP_EARLY_INIT( _ZN11QPageLayout8setUnitsENS_4UnitE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QPageLayout8setUnitsENS_4UnitE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QPageLayout8setUnitsENS_4UnitE, ( scorep_libwrap_arg_this, units ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QPageLayout8setUnitsENS_4UnitE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK11QPageLayout5unitsEv
QPageLayout::Unit
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QPageLayout5unitsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QPageLayout5unitsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QPageLayout5unitsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPageLayout::Unit scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QPageLayout5unitsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QPageLayout5unitsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QPageLayout10setMarginsERK9QMarginsF
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QPageLayout10setMarginsERK9QMarginsF )( void *scorep_libwrap_arg_this, const QMarginsF & margins )
{
    LIBWRAP_EARLY_INIT( _ZN11QPageLayout10setMarginsERK9QMarginsF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QPageLayout10setMarginsERK9QMarginsF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN11QPageLayout10setMarginsERK9QMarginsF, ( scorep_libwrap_arg_this, margins ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QPageLayout10setMarginsERK9QMarginsF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QPageLayout13setLeftMarginEd
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QPageLayout13setLeftMarginEd )( void *scorep_libwrap_arg_this, qreal leftMargin )
{
    LIBWRAP_EARLY_INIT( _ZN11QPageLayout13setLeftMarginEd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QPageLayout13setLeftMarginEd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN11QPageLayout13setLeftMarginEd, ( scorep_libwrap_arg_this, leftMargin ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QPageLayout13setLeftMarginEd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QPageLayout14setRightMarginEd
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QPageLayout14setRightMarginEd )( void *scorep_libwrap_arg_this, qreal rightMargin )
{
    LIBWRAP_EARLY_INIT( _ZN11QPageLayout14setRightMarginEd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QPageLayout14setRightMarginEd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN11QPageLayout14setRightMarginEd, ( scorep_libwrap_arg_this, rightMargin ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QPageLayout14setRightMarginEd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QPageLayout12setTopMarginEd
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QPageLayout12setTopMarginEd )( void *scorep_libwrap_arg_this, qreal topMargin )
{
    LIBWRAP_EARLY_INIT( _ZN11QPageLayout12setTopMarginEd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QPageLayout12setTopMarginEd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN11QPageLayout12setTopMarginEd, ( scorep_libwrap_arg_this, topMargin ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QPageLayout12setTopMarginEd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QPageLayout15setBottomMarginEd
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QPageLayout15setBottomMarginEd )( void *scorep_libwrap_arg_this, qreal bottomMargin )
{
    LIBWRAP_EARLY_INIT( _ZN11QPageLayout15setBottomMarginEd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QPageLayout15setBottomMarginEd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN11QPageLayout15setBottomMarginEd, ( scorep_libwrap_arg_this, bottomMargin ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QPageLayout15setBottomMarginEd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QPageLayout7marginsEv
QMarginsF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QPageLayout7marginsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QPageLayout7marginsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QPageLayout7marginsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QMarginsF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QPageLayout7marginsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QPageLayout7marginsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QPageLayout7marginsENS_4UnitE
QMarginsF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QPageLayout7marginsENS_4UnitE )( void *scorep_libwrap_arg_this, QPageLayout::Unit units )
{
    LIBWRAP_EARLY_INIT( _ZNK11QPageLayout7marginsENS_4UnitE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QPageLayout7marginsENS_4UnitE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QMarginsF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QPageLayout7marginsENS_4UnitE, ( scorep_libwrap_arg_this, units ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QPageLayout7marginsENS_4UnitE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QPageLayout13marginsPointsEv
QMargins
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QPageLayout13marginsPointsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QPageLayout13marginsPointsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QPageLayout13marginsPointsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QMargins scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QPageLayout13marginsPointsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QPageLayout13marginsPointsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QPageLayout13marginsPixelsEi
QMargins
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QPageLayout13marginsPixelsEi )( void *scorep_libwrap_arg_this, int resolution )
{
    LIBWRAP_EARLY_INIT( _ZNK11QPageLayout13marginsPixelsEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QPageLayout13marginsPixelsEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QMargins scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QPageLayout13marginsPixelsEi, ( scorep_libwrap_arg_this, resolution ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QPageLayout13marginsPixelsEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QPageLayout17setMinimumMarginsERK9QMarginsF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QPageLayout17setMinimumMarginsERK9QMarginsF )( void *scorep_libwrap_arg_this, const QMarginsF & minMargins )
{
    LIBWRAP_EARLY_INIT( _ZN11QPageLayout17setMinimumMarginsERK9QMarginsF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QPageLayout17setMinimumMarginsERK9QMarginsF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QPageLayout17setMinimumMarginsERK9QMarginsF, ( scorep_libwrap_arg_this, minMargins ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QPageLayout17setMinimumMarginsERK9QMarginsF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK11QPageLayout14minimumMarginsEv
QMarginsF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QPageLayout14minimumMarginsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QPageLayout14minimumMarginsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QPageLayout14minimumMarginsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QMarginsF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QPageLayout14minimumMarginsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QPageLayout14minimumMarginsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QPageLayout14maximumMarginsEv
QMarginsF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QPageLayout14maximumMarginsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QPageLayout14maximumMarginsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QPageLayout14maximumMarginsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QMarginsF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QPageLayout14maximumMarginsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QPageLayout14maximumMarginsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QPageLayout8fullRectEv
QRectF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QPageLayout8fullRectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QPageLayout8fullRectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QPageLayout8fullRectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRectF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QPageLayout8fullRectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QPageLayout8fullRectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QPageLayout8fullRectENS_4UnitE
QRectF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QPageLayout8fullRectENS_4UnitE )( void *scorep_libwrap_arg_this, QPageLayout::Unit units )
{
    LIBWRAP_EARLY_INIT( _ZNK11QPageLayout8fullRectENS_4UnitE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QPageLayout8fullRectENS_4UnitE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRectF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QPageLayout8fullRectENS_4UnitE, ( scorep_libwrap_arg_this, units ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QPageLayout8fullRectENS_4UnitE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QPageLayout14fullRectPointsEv
QRect
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QPageLayout14fullRectPointsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QPageLayout14fullRectPointsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QPageLayout14fullRectPointsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRect scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QPageLayout14fullRectPointsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QPageLayout14fullRectPointsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QPageLayout14fullRectPixelsEi
QRect
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QPageLayout14fullRectPixelsEi )( void *scorep_libwrap_arg_this, int resolution )
{
    LIBWRAP_EARLY_INIT( _ZNK11QPageLayout14fullRectPixelsEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QPageLayout14fullRectPixelsEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRect scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QPageLayout14fullRectPixelsEi, ( scorep_libwrap_arg_this, resolution ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QPageLayout14fullRectPixelsEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QPageLayout9paintRectEv
QRectF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QPageLayout9paintRectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QPageLayout9paintRectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QPageLayout9paintRectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRectF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QPageLayout9paintRectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QPageLayout9paintRectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QPageLayout9paintRectENS_4UnitE
QRectF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QPageLayout9paintRectENS_4UnitE )( void *scorep_libwrap_arg_this, QPageLayout::Unit units )
{
    LIBWRAP_EARLY_INIT( _ZNK11QPageLayout9paintRectENS_4UnitE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QPageLayout9paintRectENS_4UnitE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRectF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QPageLayout9paintRectENS_4UnitE, ( scorep_libwrap_arg_this, units ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QPageLayout9paintRectENS_4UnitE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QPageLayout15paintRectPointsEv
QRect
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QPageLayout15paintRectPointsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QPageLayout15paintRectPointsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QPageLayout15paintRectPointsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRect scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QPageLayout15paintRectPointsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QPageLayout15paintRectPointsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QPageLayout15paintRectPixelsEi
QRect
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QPageLayout15paintRectPixelsEi )( void *scorep_libwrap_arg_this, int resolution )
{
    LIBWRAP_EARLY_INIT( _ZNK11QPageLayout15paintRectPixelsEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QPageLayout15paintRectPixelsEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRect scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QPageLayout15paintRectPixelsEi, ( scorep_libwrap_arg_this, resolution ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QPageLayout15paintRectPixelsEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _Zls6QDebugRK11QPageLayout
QDebug
SCOREP_LIBWRAP_FUNC_NAME( _Zls6QDebugRK11QPageLayout )( QDebug dbg, const QPageLayout & pageLayout )
{
    LIBWRAP_EARLY_INIT( _Zls6QDebugRK11QPageLayout );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _Zls6QDebugRK11QPageLayout );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDebug scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _Zls6QDebugRK11QPageLayout, ( dbg, pageLayout ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _Zls6QDebugRK11QPageLayout );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN17QPagedPaintDeviceC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QPagedPaintDeviceC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN17QPagedPaintDeviceC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QPagedPaintDeviceC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QPagedPaintDeviceC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QPagedPaintDeviceC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN17QPagedPaintDeviceD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QPagedPaintDeviceD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN17QPagedPaintDeviceD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QPagedPaintDeviceD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QPagedPaintDeviceD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QPagedPaintDeviceD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN17QPagedPaintDeviceD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QPagedPaintDeviceD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN17QPagedPaintDeviceD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QPagedPaintDeviceD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QPagedPaintDeviceD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QPagedPaintDeviceD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN17QPagedPaintDeviceD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QPagedPaintDeviceD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN17QPagedPaintDeviceD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QPagedPaintDeviceD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QPagedPaintDeviceD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QPagedPaintDeviceD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN17QPagedPaintDevice13setPageLayoutERK11QPageLayout
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QPagedPaintDevice13setPageLayoutERK11QPageLayout )( void *scorep_libwrap_arg_this, const QPageLayout & pageLayout )
{
    LIBWRAP_EARLY_INIT( _ZN17QPagedPaintDevice13setPageLayoutERK11QPageLayout );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QPagedPaintDevice13setPageLayoutERK11QPageLayout );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN17QPagedPaintDevice13setPageLayoutERK11QPageLayout, ( scorep_libwrap_arg_this, pageLayout ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QPagedPaintDevice13setPageLayoutERK11QPageLayout );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN17QPagedPaintDevice11setPageSizeERK9QPageSize
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QPagedPaintDevice11setPageSizeERK9QPageSize )( void *scorep_libwrap_arg_this, const QPageSize & pageSize )
{
    LIBWRAP_EARLY_INIT( _ZN17QPagedPaintDevice11setPageSizeERK9QPageSize );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QPagedPaintDevice11setPageSizeERK9QPageSize );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN17QPagedPaintDevice11setPageSizeERK9QPageSize, ( scorep_libwrap_arg_this, pageSize ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QPagedPaintDevice11setPageSizeERK9QPageSize );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN17QPagedPaintDevice18setPageOrientationEN11QPageLayout11OrientationE
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QPagedPaintDevice18setPageOrientationEN11QPageLayout11OrientationE )( void *scorep_libwrap_arg_this, QPageLayout::Orientation orientation )
{
    LIBWRAP_EARLY_INIT( _ZN17QPagedPaintDevice18setPageOrientationEN11QPageLayout11OrientationE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QPagedPaintDevice18setPageOrientationEN11QPageLayout11OrientationE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN17QPagedPaintDevice18setPageOrientationEN11QPageLayout11OrientationE, ( scorep_libwrap_arg_this, orientation ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QPagedPaintDevice18setPageOrientationEN11QPageLayout11OrientationE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN17QPagedPaintDevice14setPageMarginsERK9QMarginsF
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QPagedPaintDevice14setPageMarginsERK9QMarginsF )( void *scorep_libwrap_arg_this, const QMarginsF & margins )
{
    LIBWRAP_EARLY_INIT( _ZN17QPagedPaintDevice14setPageMarginsERK9QMarginsF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QPagedPaintDevice14setPageMarginsERK9QMarginsF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN17QPagedPaintDevice14setPageMarginsERK9QMarginsF, ( scorep_libwrap_arg_this, margins ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QPagedPaintDevice14setPageMarginsERK9QMarginsF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN17QPagedPaintDevice14setPageMarginsERK9QMarginsFN11QPageLayout4UnitE
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QPagedPaintDevice14setPageMarginsERK9QMarginsFN11QPageLayout4UnitE )( void *scorep_libwrap_arg_this, const QMarginsF & margins, QPageLayout::Unit units )
{
    LIBWRAP_EARLY_INIT( _ZN17QPagedPaintDevice14setPageMarginsERK9QMarginsFN11QPageLayout4UnitE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QPagedPaintDevice14setPageMarginsERK9QMarginsFN11QPageLayout4UnitE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN17QPagedPaintDevice14setPageMarginsERK9QMarginsFN11QPageLayout4UnitE, ( scorep_libwrap_arg_this, margins, units ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QPagedPaintDevice14setPageMarginsERK9QMarginsFN11QPageLayout4UnitE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK17QPagedPaintDevice10pageLayoutEv
QPageLayout
SCOREP_LIBWRAP_FUNC_NAME( _ZNK17QPagedPaintDevice10pageLayoutEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK17QPagedPaintDevice10pageLayoutEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK17QPagedPaintDevice10pageLayoutEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPageLayout scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK17QPagedPaintDevice10pageLayoutEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK17QPagedPaintDevice10pageLayoutEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN17QPagedPaintDevice11setPageSizeENS_8PageSizeE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QPagedPaintDevice11setPageSizeENS_8PageSizeE )( void *scorep_libwrap_arg_this, QPagedPaintDevice::PageSize size )
{
    LIBWRAP_EARLY_INIT( _ZN17QPagedPaintDevice11setPageSizeENS_8PageSizeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QPagedPaintDevice11setPageSizeENS_8PageSizeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QPagedPaintDevice11setPageSizeENS_8PageSizeE, ( scorep_libwrap_arg_this, size ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QPagedPaintDevice11setPageSizeENS_8PageSizeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK17QPagedPaintDevice8pageSizeEv
QPagedPaintDevice::PageSize
SCOREP_LIBWRAP_FUNC_NAME( _ZNK17QPagedPaintDevice8pageSizeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK17QPagedPaintDevice8pageSizeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK17QPagedPaintDevice8pageSizeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPagedPaintDevice::PageSize scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK17QPagedPaintDevice8pageSizeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK17QPagedPaintDevice8pageSizeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN17QPagedPaintDevice13setPageSizeMMERK6QSizeF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QPagedPaintDevice13setPageSizeMMERK6QSizeF )( void *scorep_libwrap_arg_this, const QSizeF & size )
{
    LIBWRAP_EARLY_INIT( _ZN17QPagedPaintDevice13setPageSizeMMERK6QSizeF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QPagedPaintDevice13setPageSizeMMERK6QSizeF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QPagedPaintDevice13setPageSizeMMERK6QSizeF, ( scorep_libwrap_arg_this, size ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QPagedPaintDevice13setPageSizeMMERK6QSizeF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK17QPagedPaintDevice10pageSizeMMEv
QSizeF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK17QPagedPaintDevice10pageSizeMMEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK17QPagedPaintDevice10pageSizeMMEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK17QPagedPaintDevice10pageSizeMMEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QSizeF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK17QPagedPaintDevice10pageSizeMMEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK17QPagedPaintDevice10pageSizeMMEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN17QPagedPaintDevice10setMarginsERKNS_7MarginsE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QPagedPaintDevice10setMarginsERKNS_7MarginsE )( void *scorep_libwrap_arg_this, const QPagedPaintDevice::Margins & margins )
{
    LIBWRAP_EARLY_INIT( _ZN17QPagedPaintDevice10setMarginsERKNS_7MarginsE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QPagedPaintDevice10setMarginsERKNS_7MarginsE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QPagedPaintDevice10setMarginsERKNS_7MarginsE, ( scorep_libwrap_arg_this, margins ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QPagedPaintDevice10setMarginsERKNS_7MarginsE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK17QPagedPaintDevice7marginsEv
QPagedPaintDevice::Margins
SCOREP_LIBWRAP_FUNC_NAME( _ZNK17QPagedPaintDevice7marginsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK17QPagedPaintDevice7marginsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK17QPagedPaintDevice7marginsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPagedPaintDevice::Margins scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK17QPagedPaintDevice7marginsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK17QPagedPaintDevice7marginsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QTextOptionC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextOptionC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextOptionC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextOptionC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextOptionC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextOptionC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextOptionC1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextOptionC1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextOptionC1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextOptionC1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextOptionC1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextOptionC1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextOptionC2E6QFlagsIN2Qt13AlignmentFlagEE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextOptionC2E6QFlagsIN2Qt13AlignmentFlagEE )( void *scorep_libwrap_arg_this, Qt::Alignment alignment )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextOptionC2E6QFlagsIN2Qt13AlignmentFlagEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextOptionC2E6QFlagsIN2Qt13AlignmentFlagEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextOptionC2E6QFlagsIN2Qt13AlignmentFlagEE, ( scorep_libwrap_arg_this, alignment ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextOptionC2E6QFlagsIN2Qt13AlignmentFlagEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextOptionC1E6QFlagsIN2Qt13AlignmentFlagEE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextOptionC1E6QFlagsIN2Qt13AlignmentFlagEE )( void *scorep_libwrap_arg_this, Qt::Alignment alignment )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextOptionC1E6QFlagsIN2Qt13AlignmentFlagEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextOptionC1E6QFlagsIN2Qt13AlignmentFlagEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextOptionC1E6QFlagsIN2Qt13AlignmentFlagEE, ( scorep_libwrap_arg_this, alignment ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextOptionC1E6QFlagsIN2Qt13AlignmentFlagEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextOptionD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextOptionD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextOptionD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextOptionD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextOptionD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextOptionD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextOptionD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextOptionD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextOptionD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextOptionD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextOptionD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextOptionD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextOptionC2ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextOptionC2ERKS_ )( void *scorep_libwrap_arg_this, const QTextOption & o )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextOptionC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextOptionC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextOptionC2ERKS_, ( scorep_libwrap_arg_this, o ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextOptionC2ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextOptionC1ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextOptionC1ERKS_ )( void *scorep_libwrap_arg_this, const QTextOption & o )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextOptionC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextOptionC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextOptionC1ERKS_, ( scorep_libwrap_arg_this, o ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextOptionC1ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextOptionaSERKS_
QTextOption &
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextOptionaSERKS_ )( void *scorep_libwrap_arg_this, const QTextOption & o )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextOptionaSERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextOptionaSERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextOption & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextOptionaSERKS_, ( scorep_libwrap_arg_this, o ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextOptionaSERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QTextOption11setTabArrayERK5QListIdE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextOption11setTabArrayERK5QListIdE )( void *scorep_libwrap_arg_this, const QList<qreal> & tabStops )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextOption11setTabArrayERK5QListIdE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextOption11setTabArrayERK5QListIdE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextOption11setTabArrayERK5QListIdE, ( scorep_libwrap_arg_this, tabStops ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextOption11setTabArrayERK5QListIdE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK11QTextOption8tabArrayEv
QList<qreal>
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextOption8tabArrayEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextOption8tabArrayEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextOption8tabArrayEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QList<qreal> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextOption8tabArrayEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextOption8tabArrayEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QTextOption7setTabsERK5QListINS_3TabEE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextOption7setTabsERK5QListINS_3TabEE )( void *scorep_libwrap_arg_this, const QList<QTextOption::Tab> & tabStops )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextOption7setTabsERK5QListINS_3TabEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextOption7setTabsERK5QListINS_3TabEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextOption7setTabsERK5QListINS_3TabEE, ( scorep_libwrap_arg_this, tabStops ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextOption7setTabsERK5QListINS_3TabEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK11QTextOption4tabsEv
QList<QTextOption::Tab>
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextOption4tabsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextOption4tabsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextOption4tabsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QList<QTextOption::Tab> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextOption4tabsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextOption4tabsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZlsR11QDataStreamRK4QPen
QDataStream &
SCOREP_LIBWRAP_FUNC_NAME( _ZlsR11QDataStreamRK4QPen )( QDataStream & scorep_libwrap_arg_1, const QPen & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _ZlsR11QDataStreamRK4QPen );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZlsR11QDataStreamRK4QPen );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDataStream & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZlsR11QDataStreamRK4QPen, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZlsR11QDataStreamRK4QPen );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZrsR11QDataStreamR4QPen
QDataStream &
SCOREP_LIBWRAP_FUNC_NAME( _ZrsR11QDataStreamR4QPen )( QDataStream & scorep_libwrap_arg_1, QPen & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _ZrsR11QDataStreamR4QPen );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZrsR11QDataStreamR4QPen );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDataStream & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZrsR11QDataStreamR4QPen, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZrsR11QDataStreamR4QPen );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN4QPenC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN4QPenC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN4QPenC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN4QPenC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN4QPenC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN4QPenC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN4QPenC1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN4QPenC1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN4QPenC1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN4QPenC1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN4QPenC1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN4QPenC1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN4QPenC2EN2Qt8PenStyleE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN4QPenC2EN2Qt8PenStyleE )( void *scorep_libwrap_arg_this, Qt::PenStyle scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN4QPenC2EN2Qt8PenStyleE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN4QPenC2EN2Qt8PenStyleE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN4QPenC2EN2Qt8PenStyleE, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN4QPenC2EN2Qt8PenStyleE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN4QPenC1EN2Qt8PenStyleE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN4QPenC1EN2Qt8PenStyleE )( void *scorep_libwrap_arg_this, Qt::PenStyle scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN4QPenC1EN2Qt8PenStyleE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN4QPenC1EN2Qt8PenStyleE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN4QPenC1EN2Qt8PenStyleE, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN4QPenC1EN2Qt8PenStyleE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN4QPenC2ERK6QColor
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN4QPenC2ERK6QColor )( void *scorep_libwrap_arg_this, const QColor & color )
{
    LIBWRAP_EARLY_INIT( _ZN4QPenC2ERK6QColor );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN4QPenC2ERK6QColor );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN4QPenC2ERK6QColor, ( scorep_libwrap_arg_this, color ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN4QPenC2ERK6QColor );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN4QPenC1ERK6QColor
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN4QPenC1ERK6QColor )( void *scorep_libwrap_arg_this, const QColor & color )
{
    LIBWRAP_EARLY_INIT( _ZN4QPenC1ERK6QColor );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN4QPenC1ERK6QColor );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN4QPenC1ERK6QColor, ( scorep_libwrap_arg_this, color ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN4QPenC1ERK6QColor );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN4QPenC2ERK6QBrushdN2Qt8PenStyleENS3_11PenCapStyleENS3_12PenJoinStyleE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN4QPenC2ERK6QBrushdN2Qt8PenStyleENS3_11PenCapStyleENS3_12PenJoinStyleE )( void *scorep_libwrap_arg_this, const QBrush & brush, qreal width, Qt::PenStyle s, Qt::PenCapStyle c, Qt::PenJoinStyle j )
{
    LIBWRAP_EARLY_INIT( _ZN4QPenC2ERK6QBrushdN2Qt8PenStyleENS3_11PenCapStyleENS3_12PenJoinStyleE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN4QPenC2ERK6QBrushdN2Qt8PenStyleENS3_11PenCapStyleENS3_12PenJoinStyleE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN4QPenC2ERK6QBrushdN2Qt8PenStyleENS3_11PenCapStyleENS3_12PenJoinStyleE, ( scorep_libwrap_arg_this, brush, width, s, c, j ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN4QPenC2ERK6QBrushdN2Qt8PenStyleENS3_11PenCapStyleENS3_12PenJoinStyleE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN4QPenC1ERK6QBrushdN2Qt8PenStyleENS3_11PenCapStyleENS3_12PenJoinStyleE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN4QPenC1ERK6QBrushdN2Qt8PenStyleENS3_11PenCapStyleENS3_12PenJoinStyleE )( void *scorep_libwrap_arg_this, const QBrush & brush, qreal width, Qt::PenStyle s, Qt::PenCapStyle c, Qt::PenJoinStyle j )
{
    LIBWRAP_EARLY_INIT( _ZN4QPenC1ERK6QBrushdN2Qt8PenStyleENS3_11PenCapStyleENS3_12PenJoinStyleE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN4QPenC1ERK6QBrushdN2Qt8PenStyleENS3_11PenCapStyleENS3_12PenJoinStyleE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN4QPenC1ERK6QBrushdN2Qt8PenStyleENS3_11PenCapStyleENS3_12PenJoinStyleE, ( scorep_libwrap_arg_this, brush, width, s, c, j ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN4QPenC1ERK6QBrushdN2Qt8PenStyleENS3_11PenCapStyleENS3_12PenJoinStyleE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN4QPenC2ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN4QPenC2ERKS_ )( void *scorep_libwrap_arg_this, const QPen & pen )
{
    LIBWRAP_EARLY_INIT( _ZN4QPenC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN4QPenC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN4QPenC2ERKS_, ( scorep_libwrap_arg_this, pen ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN4QPenC2ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN4QPenC1ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN4QPenC1ERKS_ )( void *scorep_libwrap_arg_this, const QPen & pen )
{
    LIBWRAP_EARLY_INIT( _ZN4QPenC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN4QPenC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN4QPenC1ERKS_, ( scorep_libwrap_arg_this, pen ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN4QPenC1ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN4QPenD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN4QPenD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN4QPenD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN4QPenD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN4QPenD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN4QPenD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN4QPenD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN4QPenD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN4QPenD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN4QPenD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN4QPenD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN4QPenD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN4QPenaSERKS_
QPen &
SCOREP_LIBWRAP_FUNC_NAME( _ZN4QPenaSERKS_ )( void *scorep_libwrap_arg_this, const QPen & pen )
{
    LIBWRAP_EARLY_INIT( _ZN4QPenaSERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN4QPenaSERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPen & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN4QPenaSERKS_, ( scorep_libwrap_arg_this, pen ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN4QPenaSERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN4QPen8setStyleEN2Qt8PenStyleE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN4QPen8setStyleEN2Qt8PenStyleE )( void *scorep_libwrap_arg_this, Qt::PenStyle scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN4QPen8setStyleEN2Qt8PenStyleE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN4QPen8setStyleEN2Qt8PenStyleE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN4QPen8setStyleEN2Qt8PenStyleE, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN4QPen8setStyleEN2Qt8PenStyleE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK4QPen11dashPatternEv
QVector<qreal>
SCOREP_LIBWRAP_FUNC_NAME( _ZNK4QPen11dashPatternEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK4QPen11dashPatternEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK4QPen11dashPatternEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QVector<qreal> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK4QPen11dashPatternEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK4QPen11dashPatternEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN4QPen14setDashPatternERK7QVectorIdE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN4QPen14setDashPatternERK7QVectorIdE )( void *scorep_libwrap_arg_this, const QVector<qreal> & pattern )
{
    LIBWRAP_EARLY_INIT( _ZN4QPen14setDashPatternERK7QVectorIdE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN4QPen14setDashPatternERK7QVectorIdE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN4QPen14setDashPatternERK7QVectorIdE, ( scorep_libwrap_arg_this, pattern ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN4QPen14setDashPatternERK7QVectorIdE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK4QPen10dashOffsetEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK4QPen10dashOffsetEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK4QPen10dashOffsetEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK4QPen10dashOffsetEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK4QPen10dashOffsetEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK4QPen10dashOffsetEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN4QPen13setDashOffsetEd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN4QPen13setDashOffsetEd )( void *scorep_libwrap_arg_this, qreal doffset )
{
    LIBWRAP_EARLY_INIT( _ZN4QPen13setDashOffsetEd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN4QPen13setDashOffsetEd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN4QPen13setDashOffsetEd, ( scorep_libwrap_arg_this, doffset ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN4QPen13setDashOffsetEd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK4QPen10miterLimitEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK4QPen10miterLimitEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK4QPen10miterLimitEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK4QPen10miterLimitEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK4QPen10miterLimitEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK4QPen10miterLimitEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN4QPen13setMiterLimitEd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN4QPen13setMiterLimitEd )( void *scorep_libwrap_arg_this, qreal limit )
{
    LIBWRAP_EARLY_INIT( _ZN4QPen13setMiterLimitEd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN4QPen13setMiterLimitEd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN4QPen13setMiterLimitEd, ( scorep_libwrap_arg_this, limit ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN4QPen13setMiterLimitEd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK4QPen6widthFEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK4QPen6widthFEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK4QPen6widthFEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK4QPen6widthFEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK4QPen6widthFEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK4QPen6widthFEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN4QPen9setWidthFEd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN4QPen9setWidthFEd )( void *scorep_libwrap_arg_this, qreal width )
{
    LIBWRAP_EARLY_INIT( _ZN4QPen9setWidthFEd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN4QPen9setWidthFEd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN4QPen9setWidthFEd, ( scorep_libwrap_arg_this, width ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN4QPen9setWidthFEd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK4QPen5widthEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK4QPen5widthEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK4QPen5widthEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK4QPen5widthEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK4QPen5widthEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK4QPen5widthEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN4QPen8setWidthEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN4QPen8setWidthEi )( void *scorep_libwrap_arg_this, int width )
{
    LIBWRAP_EARLY_INIT( _ZN4QPen8setWidthEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN4QPen8setWidthEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN4QPen8setWidthEi, ( scorep_libwrap_arg_this, width ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN4QPen8setWidthEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK4QPen5colorEv
QColor
SCOREP_LIBWRAP_FUNC_NAME( _ZNK4QPen5colorEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK4QPen5colorEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK4QPen5colorEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QColor scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK4QPen5colorEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK4QPen5colorEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN4QPen8setColorERK6QColor
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN4QPen8setColorERK6QColor )( void *scorep_libwrap_arg_this, const QColor & color )
{
    LIBWRAP_EARLY_INIT( _ZN4QPen8setColorERK6QColor );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN4QPen8setColorERK6QColor );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN4QPen8setColorERK6QColor, ( scorep_libwrap_arg_this, color ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN4QPen8setColorERK6QColor );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK4QPen5brushEv
QBrush
SCOREP_LIBWRAP_FUNC_NAME( _ZNK4QPen5brushEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK4QPen5brushEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK4QPen5brushEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QBrush scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK4QPen5brushEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK4QPen5brushEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN4QPen8setBrushERK6QBrush
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN4QPen8setBrushERK6QBrush )( void *scorep_libwrap_arg_this, const QBrush & brush )
{
    LIBWRAP_EARLY_INIT( _ZN4QPen8setBrushERK6QBrush );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN4QPen8setBrushERK6QBrush );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN4QPen8setBrushERK6QBrush, ( scorep_libwrap_arg_this, brush ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN4QPen8setBrushERK6QBrush );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK4QPen7isSolidEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK4QPen7isSolidEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK4QPen7isSolidEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK4QPen7isSolidEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK4QPen7isSolidEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK4QPen7isSolidEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK4QPen8capStyleEv
Qt::PenCapStyle
SCOREP_LIBWRAP_FUNC_NAME( _ZNK4QPen8capStyleEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK4QPen8capStyleEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK4QPen8capStyleEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    Qt::PenCapStyle scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK4QPen8capStyleEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK4QPen8capStyleEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN4QPen11setCapStyleEN2Qt11PenCapStyleE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN4QPen11setCapStyleEN2Qt11PenCapStyleE )( void *scorep_libwrap_arg_this, Qt::PenCapStyle pcs )
{
    LIBWRAP_EARLY_INIT( _ZN4QPen11setCapStyleEN2Qt11PenCapStyleE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN4QPen11setCapStyleEN2Qt11PenCapStyleE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN4QPen11setCapStyleEN2Qt11PenCapStyleE, ( scorep_libwrap_arg_this, pcs ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN4QPen11setCapStyleEN2Qt11PenCapStyleE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK4QPen9joinStyleEv
Qt::PenJoinStyle
SCOREP_LIBWRAP_FUNC_NAME( _ZNK4QPen9joinStyleEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK4QPen9joinStyleEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK4QPen9joinStyleEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    Qt::PenJoinStyle scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK4QPen9joinStyleEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK4QPen9joinStyleEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN4QPen12setJoinStyleEN2Qt12PenJoinStyleE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN4QPen12setJoinStyleEN2Qt12PenJoinStyleE )( void *scorep_libwrap_arg_this, Qt::PenJoinStyle pcs )
{
    LIBWRAP_EARLY_INIT( _ZN4QPen12setJoinStyleEN2Qt12PenJoinStyleE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN4QPen12setJoinStyleEN2Qt12PenJoinStyleE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN4QPen12setJoinStyleEN2Qt12PenJoinStyleE, ( scorep_libwrap_arg_this, pcs ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN4QPen12setJoinStyleEN2Qt12PenJoinStyleE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK4QPen10isCosmeticEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK4QPen10isCosmeticEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK4QPen10isCosmeticEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK4QPen10isCosmeticEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK4QPen10isCosmeticEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK4QPen10isCosmeticEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN4QPen11setCosmeticEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN4QPen11setCosmeticEb )( void *scorep_libwrap_arg_this, bool cosmetic )
{
    LIBWRAP_EARLY_INIT( _ZN4QPen11setCosmeticEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN4QPen11setCosmeticEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN4QPen11setCosmeticEb, ( scorep_libwrap_arg_this, cosmetic ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN4QPen11setCosmeticEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK4QPeneqERKS_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK4QPeneqERKS_ )( void *scorep_libwrap_arg_this, const QPen & p )
{
    LIBWRAP_EARLY_INIT( _ZNK4QPeneqERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK4QPeneqERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK4QPeneqERKS_, ( scorep_libwrap_arg_this, p ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK4QPeneqERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN4QPen10isDetachedEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN4QPen10isDetachedEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN4QPen10isDetachedEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN4QPen10isDetachedEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN4QPen10isDetachedEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN4QPen10isDetachedEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN9QFontInfoC2ERK5QFont
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QFontInfoC2ERK5QFont )( void *scorep_libwrap_arg_this, const QFont & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN9QFontInfoC2ERK5QFont );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QFontInfoC2ERK5QFont );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QFontInfoC2ERK5QFont, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QFontInfoC2ERK5QFont );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QFontInfoC1ERK5QFont
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QFontInfoC1ERK5QFont )( void *scorep_libwrap_arg_this, const QFont & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN9QFontInfoC1ERK5QFont );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QFontInfoC1ERK5QFont );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QFontInfoC1ERK5QFont, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QFontInfoC1ERK5QFont );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QFontInfoC2ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QFontInfoC2ERKS_ )( void *scorep_libwrap_arg_this, const QFontInfo & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN9QFontInfoC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QFontInfoC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QFontInfoC2ERKS_, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QFontInfoC2ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QFontInfoC1ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QFontInfoC1ERKS_ )( void *scorep_libwrap_arg_this, const QFontInfo & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN9QFontInfoC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QFontInfoC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QFontInfoC1ERKS_, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QFontInfoC1ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QFontInfoD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QFontInfoD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN9QFontInfoD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QFontInfoD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QFontInfoD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QFontInfoD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QFontInfoD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QFontInfoD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN9QFontInfoD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QFontInfoD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QFontInfoD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QFontInfoD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QFontInfoaSERKS_
QFontInfo &
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QFontInfoaSERKS_ )( void *scorep_libwrap_arg_this, const QFontInfo & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN9QFontInfoaSERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QFontInfoaSERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QFontInfo & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN9QFontInfoaSERKS_, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QFontInfoaSERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QFontInfo6familyEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QFontInfo6familyEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QFontInfo6familyEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QFontInfo6familyEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QFontInfo6familyEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QFontInfo6familyEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QFontInfo9styleNameEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QFontInfo9styleNameEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QFontInfo9styleNameEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QFontInfo9styleNameEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QFontInfo9styleNameEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QFontInfo9styleNameEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QFontInfo9pixelSizeEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QFontInfo9pixelSizeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QFontInfo9pixelSizeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QFontInfo9pixelSizeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QFontInfo9pixelSizeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QFontInfo9pixelSizeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QFontInfo9pointSizeEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QFontInfo9pointSizeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QFontInfo9pointSizeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QFontInfo9pointSizeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QFontInfo9pointSizeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QFontInfo9pointSizeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QFontInfo10pointSizeFEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QFontInfo10pointSizeFEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QFontInfo10pointSizeFEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QFontInfo10pointSizeFEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QFontInfo10pointSizeFEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QFontInfo10pointSizeFEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QFontInfo6italicEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QFontInfo6italicEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QFontInfo6italicEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QFontInfo6italicEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QFontInfo6italicEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QFontInfo6italicEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QFontInfo5styleEv
QFont::Style
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QFontInfo5styleEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QFontInfo5styleEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QFontInfo5styleEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QFont::Style scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QFontInfo5styleEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QFontInfo5styleEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QFontInfo6weightEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QFontInfo6weightEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QFontInfo6weightEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QFontInfo6weightEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QFontInfo6weightEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QFontInfo6weightEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QFontInfo9underlineEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QFontInfo9underlineEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QFontInfo9underlineEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QFontInfo9underlineEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QFontInfo9underlineEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QFontInfo9underlineEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QFontInfo8overlineEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QFontInfo8overlineEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QFontInfo8overlineEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QFontInfo8overlineEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QFontInfo8overlineEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QFontInfo8overlineEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QFontInfo9strikeOutEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QFontInfo9strikeOutEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QFontInfo9strikeOutEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QFontInfo9strikeOutEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QFontInfo9strikeOutEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QFontInfo9strikeOutEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QFontInfo10fixedPitchEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QFontInfo10fixedPitchEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QFontInfo10fixedPitchEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QFontInfo10fixedPitchEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QFontInfo10fixedPitchEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QFontInfo10fixedPitchEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QFontInfo9styleHintEv
QFont::StyleHint
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QFontInfo9styleHintEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QFontInfo9styleHintEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QFontInfo9styleHintEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QFont::StyleHint scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QFontInfo9styleHintEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QFontInfo9styleHintEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QFontInfo7rawModeEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QFontInfo7rawModeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QFontInfo7rawModeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QFontInfo7rawModeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QFontInfo7rawModeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QFontInfo7rawModeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QFontInfo10exactMatchEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QFontInfo10exactMatchEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QFontInfo10exactMatchEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QFontInfo10exactMatchEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QFontInfo10exactMatchEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QFontInfo10exactMatchEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QFontMetricsC2ERK5QFont
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QFontMetricsC2ERK5QFont )( void *scorep_libwrap_arg_this, const QFont & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN12QFontMetricsC2ERK5QFont );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QFontMetricsC2ERK5QFont );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QFontMetricsC2ERK5QFont, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QFontMetricsC2ERK5QFont );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QFontMetricsC1ERK5QFont
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QFontMetricsC1ERK5QFont )( void *scorep_libwrap_arg_this, const QFont & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN12QFontMetricsC1ERK5QFont );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QFontMetricsC1ERK5QFont );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QFontMetricsC1ERK5QFont, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QFontMetricsC1ERK5QFont );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QFontMetricsC2ERK5QFontP12QPaintDevice
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QFontMetricsC2ERK5QFontP12QPaintDevice )( void *scorep_libwrap_arg_this, const QFont & scorep_libwrap_arg_1, QPaintDevice * pd )
{
    LIBWRAP_EARLY_INIT( _ZN12QFontMetricsC2ERK5QFontP12QPaintDevice );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QFontMetricsC2ERK5QFontP12QPaintDevice );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QFontMetricsC2ERK5QFontP12QPaintDevice, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, pd ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QFontMetricsC2ERK5QFontP12QPaintDevice );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QFontMetricsC1ERK5QFontP12QPaintDevice
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QFontMetricsC1ERK5QFontP12QPaintDevice )( void *scorep_libwrap_arg_this, const QFont & scorep_libwrap_arg_1, QPaintDevice * pd )
{
    LIBWRAP_EARLY_INIT( _ZN12QFontMetricsC1ERK5QFontP12QPaintDevice );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QFontMetricsC1ERK5QFontP12QPaintDevice );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QFontMetricsC1ERK5QFontP12QPaintDevice, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, pd ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QFontMetricsC1ERK5QFontP12QPaintDevice );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QFontMetricsC2ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QFontMetricsC2ERKS_ )( void *scorep_libwrap_arg_this, const QFontMetrics & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN12QFontMetricsC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QFontMetricsC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QFontMetricsC2ERKS_, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QFontMetricsC2ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QFontMetricsC1ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QFontMetricsC1ERKS_ )( void *scorep_libwrap_arg_this, const QFontMetrics & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN12QFontMetricsC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QFontMetricsC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QFontMetricsC1ERKS_, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QFontMetricsC1ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QFontMetricsD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QFontMetricsD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QFontMetricsD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QFontMetricsD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QFontMetricsD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QFontMetricsD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QFontMetricsD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QFontMetricsD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QFontMetricsD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QFontMetricsD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QFontMetricsD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QFontMetricsD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QFontMetricsaSERKS_
QFontMetrics &
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QFontMetricsaSERKS_ )( void *scorep_libwrap_arg_this, const QFontMetrics & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN12QFontMetricsaSERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QFontMetricsaSERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QFontMetrics & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN12QFontMetricsaSERKS_, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QFontMetricsaSERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QFontMetrics7descentEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QFontMetrics7descentEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QFontMetrics7descentEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QFontMetrics7descentEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QFontMetrics7descentEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QFontMetrics7descentEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QFontMetrics6heightEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QFontMetrics6heightEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QFontMetrics6heightEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QFontMetrics6heightEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QFontMetrics6heightEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QFontMetrics6heightEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QFontMetrics7leadingEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QFontMetrics7leadingEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QFontMetrics7leadingEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QFontMetrics7leadingEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QFontMetrics7leadingEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QFontMetrics7leadingEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QFontMetrics11lineSpacingEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QFontMetrics11lineSpacingEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QFontMetrics11lineSpacingEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QFontMetrics11lineSpacingEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QFontMetrics11lineSpacingEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QFontMetrics11lineSpacingEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QFontMetrics14minLeftBearingEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QFontMetrics14minLeftBearingEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QFontMetrics14minLeftBearingEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QFontMetrics14minLeftBearingEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QFontMetrics14minLeftBearingEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QFontMetrics14minLeftBearingEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QFontMetrics15minRightBearingEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QFontMetrics15minRightBearingEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QFontMetrics15minRightBearingEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QFontMetrics15minRightBearingEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QFontMetrics15minRightBearingEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QFontMetrics15minRightBearingEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QFontMetrics8maxWidthEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QFontMetrics8maxWidthEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QFontMetrics8maxWidthEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QFontMetrics8maxWidthEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QFontMetrics8maxWidthEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QFontMetrics8maxWidthEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QFontMetrics7xHeightEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QFontMetrics7xHeightEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QFontMetrics7xHeightEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QFontMetrics7xHeightEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QFontMetrics7xHeightEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QFontMetrics7xHeightEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QFontMetrics16averageCharWidthEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QFontMetrics16averageCharWidthEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QFontMetrics16averageCharWidthEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QFontMetrics16averageCharWidthEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QFontMetrics16averageCharWidthEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QFontMetrics16averageCharWidthEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QFontMetrics6inFontE5QChar
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QFontMetrics6inFontE5QChar )( void *scorep_libwrap_arg_this, QChar scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZNK12QFontMetrics6inFontE5QChar );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QFontMetrics6inFontE5QChar );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QFontMetrics6inFontE5QChar, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QFontMetrics6inFontE5QChar );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QFontMetrics10inFontUcs4Ej
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QFontMetrics10inFontUcs4Ej )( void *scorep_libwrap_arg_this, uint ucs4 )
{
    LIBWRAP_EARLY_INIT( _ZNK12QFontMetrics10inFontUcs4Ej );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QFontMetrics10inFontUcs4Ej );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QFontMetrics10inFontUcs4Ej, ( scorep_libwrap_arg_this, ucs4 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QFontMetrics10inFontUcs4Ej );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QFontMetrics11leftBearingE5QChar
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QFontMetrics11leftBearingE5QChar )( void *scorep_libwrap_arg_this, QChar scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZNK12QFontMetrics11leftBearingE5QChar );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QFontMetrics11leftBearingE5QChar );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QFontMetrics11leftBearingE5QChar, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QFontMetrics11leftBearingE5QChar );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QFontMetrics12rightBearingE5QChar
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QFontMetrics12rightBearingE5QChar )( void *scorep_libwrap_arg_this, QChar scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZNK12QFontMetrics12rightBearingE5QChar );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QFontMetrics12rightBearingE5QChar );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QFontMetrics12rightBearingE5QChar, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QFontMetrics12rightBearingE5QChar );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QFontMetrics5widthERK7QStringi
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QFontMetrics5widthERK7QStringi )( void *scorep_libwrap_arg_this, const QString & scorep_libwrap_arg_1, int len )
{
    LIBWRAP_EARLY_INIT( _ZNK12QFontMetrics5widthERK7QStringi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QFontMetrics5widthERK7QStringi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QFontMetrics5widthERK7QStringi, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, len ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QFontMetrics5widthERK7QStringi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QFontMetrics5widthERK7QStringii
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QFontMetrics5widthERK7QStringii )( void *scorep_libwrap_arg_this, const QString & scorep_libwrap_arg_1, int len, int flags )
{
    LIBWRAP_EARLY_INIT( _ZNK12QFontMetrics5widthERK7QStringii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QFontMetrics5widthERK7QStringii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QFontMetrics5widthERK7QStringii, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, len, flags ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QFontMetrics5widthERK7QStringii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QFontMetrics5widthE5QChar
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QFontMetrics5widthE5QChar )( void *scorep_libwrap_arg_this, QChar scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZNK12QFontMetrics5widthE5QChar );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QFontMetrics5widthE5QChar );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QFontMetrics5widthE5QChar, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QFontMetrics5widthE5QChar );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QFontMetrics9charWidthERK7QStringi
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QFontMetrics9charWidthERK7QStringi )( void *scorep_libwrap_arg_this, const QString & str, int pos )
{
    LIBWRAP_EARLY_INIT( _ZNK12QFontMetrics9charWidthERK7QStringi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QFontMetrics9charWidthERK7QStringi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QFontMetrics9charWidthERK7QStringi, ( scorep_libwrap_arg_this, str, pos ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QFontMetrics9charWidthERK7QStringi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QFontMetrics12boundingRectE5QChar
QRect
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QFontMetrics12boundingRectE5QChar )( void *scorep_libwrap_arg_this, QChar scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZNK12QFontMetrics12boundingRectE5QChar );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QFontMetrics12boundingRectE5QChar );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRect scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QFontMetrics12boundingRectE5QChar, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QFontMetrics12boundingRectE5QChar );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QFontMetrics12boundingRectERK7QString
QRect
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QFontMetrics12boundingRectERK7QString )( void *scorep_libwrap_arg_this, const QString & text )
{
    LIBWRAP_EARLY_INIT( _ZNK12QFontMetrics12boundingRectERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QFontMetrics12boundingRectERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRect scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QFontMetrics12boundingRectERK7QString, ( scorep_libwrap_arg_this, text ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QFontMetrics12boundingRectERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QFontMetrics12boundingRectERK5QRectiRK7QStringiPi
QRect
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QFontMetrics12boundingRectERK5QRectiRK7QStringiPi )( void *scorep_libwrap_arg_this, const QRect & r, int flags, const QString & text, int tabstops, int * tabarray )
{
    LIBWRAP_EARLY_INIT( _ZNK12QFontMetrics12boundingRectERK5QRectiRK7QStringiPi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QFontMetrics12boundingRectERK5QRectiRK7QStringiPi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRect scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QFontMetrics12boundingRectERK5QRectiRK7QStringiPi, ( scorep_libwrap_arg_this, r, flags, text, tabstops, tabarray ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QFontMetrics12boundingRectERK5QRectiRK7QStringiPi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QFontMetrics4sizeEiRK7QStringiPi
QSize
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QFontMetrics4sizeEiRK7QStringiPi )( void *scorep_libwrap_arg_this, int flags, const QString & str, int tabstops, int * tabarray )
{
    LIBWRAP_EARLY_INIT( _ZNK12QFontMetrics4sizeEiRK7QStringiPi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QFontMetrics4sizeEiRK7QStringiPi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QSize scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QFontMetrics4sizeEiRK7QStringiPi, ( scorep_libwrap_arg_this, flags, str, tabstops, tabarray ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QFontMetrics4sizeEiRK7QStringiPi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QFontMetrics17tightBoundingRectERK7QString
QRect
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QFontMetrics17tightBoundingRectERK7QString )( void *scorep_libwrap_arg_this, const QString & text )
{
    LIBWRAP_EARLY_INIT( _ZNK12QFontMetrics17tightBoundingRectERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QFontMetrics17tightBoundingRectERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRect scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QFontMetrics17tightBoundingRectERK7QString, ( scorep_libwrap_arg_this, text ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QFontMetrics17tightBoundingRectERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QFontMetrics10elidedTextERK7QStringN2Qt13TextElideModeEii
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QFontMetrics10elidedTextERK7QStringN2Qt13TextElideModeEii )( void *scorep_libwrap_arg_this, const QString & text, Qt::TextElideMode mode, int width, int flags )
{
    LIBWRAP_EARLY_INIT( _ZNK12QFontMetrics10elidedTextERK7QStringN2Qt13TextElideModeEii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QFontMetrics10elidedTextERK7QStringN2Qt13TextElideModeEii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QFontMetrics10elidedTextERK7QStringN2Qt13TextElideModeEii, ( scorep_libwrap_arg_this, text, mode, width, flags ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QFontMetrics10elidedTextERK7QStringN2Qt13TextElideModeEii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QFontMetrics12underlinePosEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QFontMetrics12underlinePosEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QFontMetrics12underlinePosEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QFontMetrics12underlinePosEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QFontMetrics12underlinePosEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QFontMetrics12underlinePosEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QFontMetrics11overlinePosEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QFontMetrics11overlinePosEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QFontMetrics11overlinePosEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QFontMetrics11overlinePosEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QFontMetrics11overlinePosEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QFontMetrics11overlinePosEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QFontMetrics12strikeOutPosEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QFontMetrics12strikeOutPosEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QFontMetrics12strikeOutPosEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QFontMetrics12strikeOutPosEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QFontMetrics12strikeOutPosEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QFontMetrics12strikeOutPosEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QFontMetrics9lineWidthEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QFontMetrics9lineWidthEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QFontMetrics9lineWidthEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QFontMetrics9lineWidthEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QFontMetrics9lineWidthEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QFontMetrics9lineWidthEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QFontMetricseqERKS_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QFontMetricseqERKS_ )( void *scorep_libwrap_arg_this, const QFontMetrics & other )
{
    LIBWRAP_EARLY_INIT( _ZNK12QFontMetricseqERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QFontMetricseqERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QFontMetricseqERKS_, ( scorep_libwrap_arg_this, other ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QFontMetricseqERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN8QPainter14PixmapFragment6createERK7QPointFRK6QRectFdddd
QPainter::PixmapFragment
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter14PixmapFragment6createERK7QPointFRK6QRectFdddd )( const QPointF & pos, const QRectF & sourceRect, qreal scaleX, qreal scaleY, qreal rotation, qreal opacity )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter14PixmapFragment6createERK7QPointFRK6QRectFdddd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter14PixmapFragment6createERK7QPointFRK6QRectFdddd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPainter::PixmapFragment scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter14PixmapFragment6createERK7QPointFRK6QRectFdddd, ( pos, sourceRect, scaleX, scaleY, rotation, opacity ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter14PixmapFragment6createERK7QPointFRK6QRectFdddd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN8QPainterC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainterC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainterC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainterC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainterC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainterC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainterC1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainterC1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainterC1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainterC1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainterC1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainterC1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainterC2EP12QPaintDevice
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainterC2EP12QPaintDevice )( void *scorep_libwrap_arg_this, QPaintDevice * scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainterC2EP12QPaintDevice );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainterC2EP12QPaintDevice );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainterC2EP12QPaintDevice, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainterC2EP12QPaintDevice );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainterC1EP12QPaintDevice
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainterC1EP12QPaintDevice )( void *scorep_libwrap_arg_this, QPaintDevice * scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainterC1EP12QPaintDevice );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainterC1EP12QPaintDevice );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainterC1EP12QPaintDevice, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainterC1EP12QPaintDevice );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainterD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainterD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainterD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainterD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainterD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainterD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainterD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainterD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainterD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainterD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainterD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainterD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK8QPainter6deviceEv
QPaintDevice *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QPainter6deviceEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QPainter6deviceEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QPainter6deviceEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPaintDevice * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QPainter6deviceEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QPainter6deviceEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN8QPainter5beginEP12QPaintDevice
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter5beginEP12QPaintDevice )( void *scorep_libwrap_arg_this, QPaintDevice * scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter5beginEP12QPaintDevice );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter5beginEP12QPaintDevice );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter5beginEP12QPaintDevice, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter5beginEP12QPaintDevice );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN8QPainter3endEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter3endEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter3endEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter3endEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter3endEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter3endEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK8QPainter8isActiveEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QPainter8isActiveEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QPainter8isActiveEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QPainter8isActiveEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QPainter8isActiveEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QPainter8isActiveEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN8QPainter8initFromEPK12QPaintDevice
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter8initFromEPK12QPaintDevice )( void *scorep_libwrap_arg_this, const QPaintDevice * device )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter8initFromEPK12QPaintDevice );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter8initFromEPK12QPaintDevice );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter8initFromEPK12QPaintDevice, ( scorep_libwrap_arg_this, device ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter8initFromEPK12QPaintDevice );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter18setCompositionModeENS_15CompositionModeE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter18setCompositionModeENS_15CompositionModeE )( void *scorep_libwrap_arg_this, QPainter::CompositionMode mode )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter18setCompositionModeENS_15CompositionModeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter18setCompositionModeENS_15CompositionModeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter18setCompositionModeENS_15CompositionModeE, ( scorep_libwrap_arg_this, mode ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter18setCompositionModeENS_15CompositionModeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK8QPainter15compositionModeEv
QPainter::CompositionMode
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QPainter15compositionModeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QPainter15compositionModeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QPainter15compositionModeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPainter::CompositionMode scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QPainter15compositionModeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QPainter15compositionModeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK8QPainter4fontEv
const QFont &
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QPainter4fontEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QPainter4fontEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QPainter4fontEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QFont & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QPainter4fontEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QPainter4fontEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN8QPainter7setFontERK5QFont
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter7setFontERK5QFont )( void *scorep_libwrap_arg_this, const QFont & f )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter7setFontERK5QFont );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter7setFontERK5QFont );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter7setFontERK5QFont, ( scorep_libwrap_arg_this, f ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter7setFontERK5QFont );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK8QPainter11fontMetricsEv
QFontMetrics
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QPainter11fontMetricsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QPainter11fontMetricsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QPainter11fontMetricsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QFontMetrics scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QPainter11fontMetricsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QPainter11fontMetricsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK8QPainter8fontInfoEv
QFontInfo
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QPainter8fontInfoEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QPainter8fontInfoEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QPainter8fontInfoEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QFontInfo scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QPainter8fontInfoEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QPainter8fontInfoEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN8QPainter6setPenERK6QColor
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter6setPenERK6QColor )( void *scorep_libwrap_arg_this, const QColor & color )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter6setPenERK6QColor );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter6setPenERK6QColor );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter6setPenERK6QColor, ( scorep_libwrap_arg_this, color ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter6setPenERK6QColor );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter6setPenERK4QPen
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter6setPenERK4QPen )( void *scorep_libwrap_arg_this, const QPen & pen )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter6setPenERK4QPen );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter6setPenERK4QPen );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter6setPenERK4QPen, ( scorep_libwrap_arg_this, pen ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter6setPenERK4QPen );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter6setPenEN2Qt8PenStyleE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter6setPenEN2Qt8PenStyleE )( void *scorep_libwrap_arg_this, Qt::PenStyle style )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter6setPenEN2Qt8PenStyleE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter6setPenEN2Qt8PenStyleE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter6setPenEN2Qt8PenStyleE, ( scorep_libwrap_arg_this, style ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter6setPenEN2Qt8PenStyleE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK8QPainter3penEv
const QPen &
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QPainter3penEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QPainter3penEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QPainter3penEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QPen & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QPainter3penEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QPainter3penEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN8QPainter8setBrushERK6QBrush
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter8setBrushERK6QBrush )( void *scorep_libwrap_arg_this, const QBrush & brush )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter8setBrushERK6QBrush );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter8setBrushERK6QBrush );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter8setBrushERK6QBrush, ( scorep_libwrap_arg_this, brush ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter8setBrushERK6QBrush );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter8setBrushEN2Qt10BrushStyleE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter8setBrushEN2Qt10BrushStyleE )( void *scorep_libwrap_arg_this, Qt::BrushStyle style )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter8setBrushEN2Qt10BrushStyleE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter8setBrushEN2Qt10BrushStyleE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter8setBrushEN2Qt10BrushStyleE, ( scorep_libwrap_arg_this, style ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter8setBrushEN2Qt10BrushStyleE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK8QPainter5brushEv
const QBrush &
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QPainter5brushEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QPainter5brushEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QPainter5brushEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QBrush & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QPainter5brushEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QPainter5brushEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN8QPainter17setBackgroundModeEN2Qt6BGModeE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter17setBackgroundModeEN2Qt6BGModeE )( void *scorep_libwrap_arg_this, Qt::BGMode mode )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter17setBackgroundModeEN2Qt6BGModeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter17setBackgroundModeEN2Qt6BGModeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter17setBackgroundModeEN2Qt6BGModeE, ( scorep_libwrap_arg_this, mode ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter17setBackgroundModeEN2Qt6BGModeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK8QPainter14backgroundModeEv
Qt::BGMode
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QPainter14backgroundModeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QPainter14backgroundModeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QPainter14backgroundModeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    Qt::BGMode scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QPainter14backgroundModeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QPainter14backgroundModeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK8QPainter11brushOriginEv
QPoint
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QPainter11brushOriginEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QPainter11brushOriginEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QPainter11brushOriginEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPoint scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QPainter11brushOriginEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QPainter11brushOriginEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN8QPainter14setBrushOriginERK7QPointF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter14setBrushOriginERK7QPointF )( void *scorep_libwrap_arg_this, const QPointF & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter14setBrushOriginERK7QPointF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter14setBrushOriginERK7QPointF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter14setBrushOriginERK7QPointF, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter14setBrushOriginERK7QPointF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter13setBackgroundERK6QBrush
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter13setBackgroundERK6QBrush )( void *scorep_libwrap_arg_this, const QBrush & bg )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter13setBackgroundERK6QBrush );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter13setBackgroundERK6QBrush );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter13setBackgroundERK6QBrush, ( scorep_libwrap_arg_this, bg ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter13setBackgroundERK6QBrush );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK8QPainter10backgroundEv
const QBrush &
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QPainter10backgroundEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QPainter10backgroundEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QPainter10backgroundEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QBrush & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QPainter10backgroundEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QPainter10backgroundEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK8QPainter7opacityEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QPainter7opacityEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QPainter7opacityEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QPainter7opacityEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QPainter7opacityEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QPainter7opacityEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN8QPainter10setOpacityEd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter10setOpacityEd )( void *scorep_libwrap_arg_this, qreal opacity )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter10setOpacityEd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter10setOpacityEd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter10setOpacityEd, ( scorep_libwrap_arg_this, opacity ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter10setOpacityEd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK8QPainter10clipRegionEv
QRegion
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QPainter10clipRegionEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QPainter10clipRegionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QPainter10clipRegionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRegion scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QPainter10clipRegionEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QPainter10clipRegionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK8QPainter8clipPathEv
QPainterPath
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QPainter8clipPathEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QPainter8clipPathEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QPainter8clipPathEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPainterPath scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QPainter8clipPathEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QPainter8clipPathEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN8QPainter11setClipRectERK6QRectFN2Qt13ClipOperationE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter11setClipRectERK6QRectFN2Qt13ClipOperationE )( void *scorep_libwrap_arg_this, const QRectF & scorep_libwrap_arg_1, Qt::ClipOperation op )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter11setClipRectERK6QRectFN2Qt13ClipOperationE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter11setClipRectERK6QRectFN2Qt13ClipOperationE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter11setClipRectERK6QRectFN2Qt13ClipOperationE, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, op ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter11setClipRectERK6QRectFN2Qt13ClipOperationE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter11setClipRectERK5QRectN2Qt13ClipOperationE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter11setClipRectERK5QRectN2Qt13ClipOperationE )( void *scorep_libwrap_arg_this, const QRect & scorep_libwrap_arg_1, Qt::ClipOperation op )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter11setClipRectERK5QRectN2Qt13ClipOperationE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter11setClipRectERK5QRectN2Qt13ClipOperationE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter11setClipRectERK5QRectN2Qt13ClipOperationE, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, op ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter11setClipRectERK5QRectN2Qt13ClipOperationE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter13setClipRegionERK7QRegionN2Qt13ClipOperationE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter13setClipRegionERK7QRegionN2Qt13ClipOperationE )( void *scorep_libwrap_arg_this, const QRegion & scorep_libwrap_arg_1, Qt::ClipOperation op )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter13setClipRegionERK7QRegionN2Qt13ClipOperationE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter13setClipRegionERK7QRegionN2Qt13ClipOperationE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter13setClipRegionERK7QRegionN2Qt13ClipOperationE, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, op ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter13setClipRegionERK7QRegionN2Qt13ClipOperationE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter11setClipPathERK12QPainterPathN2Qt13ClipOperationE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter11setClipPathERK12QPainterPathN2Qt13ClipOperationE )( void *scorep_libwrap_arg_this, const QPainterPath & path, Qt::ClipOperation op )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter11setClipPathERK12QPainterPathN2Qt13ClipOperationE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter11setClipPathERK12QPainterPathN2Qt13ClipOperationE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter11setClipPathERK12QPainterPathN2Qt13ClipOperationE, ( scorep_libwrap_arg_this, path, op ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter11setClipPathERK12QPainterPathN2Qt13ClipOperationE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter11setClippingEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter11setClippingEb )( void *scorep_libwrap_arg_this, bool enable )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter11setClippingEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter11setClippingEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter11setClippingEb, ( scorep_libwrap_arg_this, enable ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter11setClippingEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK8QPainter11hasClippingEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QPainter11hasClippingEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QPainter11hasClippingEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QPainter11hasClippingEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QPainter11hasClippingEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QPainter11hasClippingEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK8QPainter16clipBoundingRectEv
QRectF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QPainter16clipBoundingRectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QPainter16clipBoundingRectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QPainter16clipBoundingRectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRectF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QPainter16clipBoundingRectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QPainter16clipBoundingRectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN8QPainter4saveEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter4saveEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter4saveEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter4saveEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter4saveEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter4saveEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter7restoreEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter7restoreEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter7restoreEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter7restoreEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter7restoreEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter7restoreEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter9setMatrixERK7QMatrixb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter9setMatrixERK7QMatrixb )( void *scorep_libwrap_arg_this, const QMatrix & matrix, bool combine )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter9setMatrixERK7QMatrixb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter9setMatrixERK7QMatrixb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter9setMatrixERK7QMatrixb, ( scorep_libwrap_arg_this, matrix, combine ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter9setMatrixERK7QMatrixb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK8QPainter6matrixEv
const QMatrix &
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QPainter6matrixEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QPainter6matrixEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QPainter6matrixEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QMatrix & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QPainter6matrixEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QPainter6matrixEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK8QPainter12deviceMatrixEv
const QMatrix &
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QPainter12deviceMatrixEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QPainter12deviceMatrixEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QPainter12deviceMatrixEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QMatrix & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QPainter12deviceMatrixEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QPainter12deviceMatrixEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN8QPainter11resetMatrixEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter11resetMatrixEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter11resetMatrixEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter11resetMatrixEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter11resetMatrixEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter11resetMatrixEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter12setTransformERK10QTransformb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter12setTransformERK10QTransformb )( void *scorep_libwrap_arg_this, const QTransform & transform, bool combine )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter12setTransformERK10QTransformb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter12setTransformERK10QTransformb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter12setTransformERK10QTransformb, ( scorep_libwrap_arg_this, transform, combine ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter12setTransformERK10QTransformb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK8QPainter9transformEv
const QTransform &
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QPainter9transformEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QPainter9transformEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QPainter9transformEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QTransform & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QPainter9transformEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QPainter9transformEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK8QPainter15deviceTransformEv
const QTransform &
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QPainter15deviceTransformEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QPainter15deviceTransformEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QPainter15deviceTransformEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QTransform & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QPainter15deviceTransformEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QPainter15deviceTransformEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN8QPainter14resetTransformEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter14resetTransformEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter14resetTransformEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter14resetTransformEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter14resetTransformEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter14resetTransformEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter14setWorldMatrixERK7QMatrixb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter14setWorldMatrixERK7QMatrixb )( void *scorep_libwrap_arg_this, const QMatrix & matrix, bool combine )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter14setWorldMatrixERK7QMatrixb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter14setWorldMatrixERK7QMatrixb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter14setWorldMatrixERK7QMatrixb, ( scorep_libwrap_arg_this, matrix, combine ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter14setWorldMatrixERK7QMatrixb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK8QPainter11worldMatrixEv
const QMatrix &
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QPainter11worldMatrixEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QPainter11worldMatrixEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QPainter11worldMatrixEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QMatrix & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QPainter11worldMatrixEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QPainter11worldMatrixEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN8QPainter17setWorldTransformERK10QTransformb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter17setWorldTransformERK10QTransformb )( void *scorep_libwrap_arg_this, const QTransform & matrix, bool combine )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter17setWorldTransformERK10QTransformb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter17setWorldTransformERK10QTransformb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter17setWorldTransformERK10QTransformb, ( scorep_libwrap_arg_this, matrix, combine ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter17setWorldTransformERK10QTransformb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK8QPainter14worldTransformEv
const QTransform &
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QPainter14worldTransformEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QPainter14worldTransformEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QPainter14worldTransformEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QTransform & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QPainter14worldTransformEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QPainter14worldTransformEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK8QPainter14combinedMatrixEv
QMatrix
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QPainter14combinedMatrixEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QPainter14combinedMatrixEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QPainter14combinedMatrixEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QMatrix scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QPainter14combinedMatrixEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QPainter14combinedMatrixEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK8QPainter17combinedTransformEv
QTransform
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QPainter17combinedTransformEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QPainter17combinedTransformEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QPainter17combinedTransformEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTransform scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QPainter17combinedTransformEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QPainter17combinedTransformEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN8QPainter16setMatrixEnabledEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter16setMatrixEnabledEb )( void *scorep_libwrap_arg_this, bool enabled )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter16setMatrixEnabledEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter16setMatrixEnabledEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter16setMatrixEnabledEb, ( scorep_libwrap_arg_this, enabled ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter16setMatrixEnabledEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK8QPainter13matrixEnabledEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QPainter13matrixEnabledEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QPainter13matrixEnabledEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QPainter13matrixEnabledEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QPainter13matrixEnabledEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QPainter13matrixEnabledEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN8QPainter21setWorldMatrixEnabledEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter21setWorldMatrixEnabledEb )( void *scorep_libwrap_arg_this, bool enabled )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter21setWorldMatrixEnabledEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter21setWorldMatrixEnabledEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter21setWorldMatrixEnabledEb, ( scorep_libwrap_arg_this, enabled ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter21setWorldMatrixEnabledEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK8QPainter18worldMatrixEnabledEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QPainter18worldMatrixEnabledEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QPainter18worldMatrixEnabledEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QPainter18worldMatrixEnabledEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QPainter18worldMatrixEnabledEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QPainter18worldMatrixEnabledEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN8QPainter5scaleEdd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter5scaleEdd )( void *scorep_libwrap_arg_this, qreal sx, qreal sy )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter5scaleEdd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter5scaleEdd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter5scaleEdd, ( scorep_libwrap_arg_this, sx, sy ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter5scaleEdd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter5shearEdd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter5shearEdd )( void *scorep_libwrap_arg_this, qreal sh, qreal sv )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter5shearEdd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter5shearEdd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter5shearEdd, ( scorep_libwrap_arg_this, sh, sv ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter5shearEdd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter6rotateEd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter6rotateEd )( void *scorep_libwrap_arg_this, qreal a )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter6rotateEd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter6rotateEd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter6rotateEd, ( scorep_libwrap_arg_this, a ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter6rotateEd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter9translateERK7QPointF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter9translateERK7QPointF )( void *scorep_libwrap_arg_this, const QPointF & offset )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter9translateERK7QPointF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter9translateERK7QPointF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter9translateERK7QPointF, ( scorep_libwrap_arg_this, offset ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter9translateERK7QPointF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK8QPainter6windowEv
QRect
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QPainter6windowEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QPainter6windowEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QPainter6windowEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRect scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QPainter6windowEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QPainter6windowEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN8QPainter9setWindowERK5QRect
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter9setWindowERK5QRect )( void *scorep_libwrap_arg_this, const QRect & window )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter9setWindowERK5QRect );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter9setWindowERK5QRect );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter9setWindowERK5QRect, ( scorep_libwrap_arg_this, window ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter9setWindowERK5QRect );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK8QPainter8viewportEv
QRect
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QPainter8viewportEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QPainter8viewportEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QPainter8viewportEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRect scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QPainter8viewportEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QPainter8viewportEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN8QPainter11setViewportERK5QRect
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter11setViewportERK5QRect )( void *scorep_libwrap_arg_this, const QRect & viewport )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter11setViewportERK5QRect );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter11setViewportERK5QRect );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter11setViewportERK5QRect, ( scorep_libwrap_arg_this, viewport ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter11setViewportERK5QRect );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter23setViewTransformEnabledEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter23setViewTransformEnabledEb )( void *scorep_libwrap_arg_this, bool enable )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter23setViewTransformEnabledEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter23setViewTransformEnabledEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter23setViewTransformEnabledEb, ( scorep_libwrap_arg_this, enable ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter23setViewTransformEnabledEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK8QPainter20viewTransformEnabledEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QPainter20viewTransformEnabledEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QPainter20viewTransformEnabledEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QPainter20viewTransformEnabledEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QPainter20viewTransformEnabledEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QPainter20viewTransformEnabledEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN8QPainter10strokePathERK12QPainterPathRK4QPen
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter10strokePathERK12QPainterPathRK4QPen )( void *scorep_libwrap_arg_this, const QPainterPath & path, const QPen & pen )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter10strokePathERK12QPainterPathRK4QPen );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter10strokePathERK12QPainterPathRK4QPen );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter10strokePathERK12QPainterPathRK4QPen, ( scorep_libwrap_arg_this, path, pen ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter10strokePathERK12QPainterPathRK4QPen );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter8fillPathERK12QPainterPathRK6QBrush
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter8fillPathERK12QPainterPathRK6QBrush )( void *scorep_libwrap_arg_this, const QPainterPath & path, const QBrush & brush )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter8fillPathERK12QPainterPathRK6QBrush );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter8fillPathERK12QPainterPathRK6QBrush );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter8fillPathERK12QPainterPathRK6QBrush, ( scorep_libwrap_arg_this, path, brush ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter8fillPathERK12QPainterPathRK6QBrush );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter8drawPathERK12QPainterPath
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter8drawPathERK12QPainterPath )( void *scorep_libwrap_arg_this, const QPainterPath & path )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter8drawPathERK12QPainterPath );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter8drawPathERK12QPainterPath );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter8drawPathERK12QPainterPath, ( scorep_libwrap_arg_this, path ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter8drawPathERK12QPainterPath );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter10drawPointsEPK7QPointFi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter10drawPointsEPK7QPointFi )( void *scorep_libwrap_arg_this, const QPointF * points, int pointCount )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter10drawPointsEPK7QPointFi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter10drawPointsEPK7QPointFi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter10drawPointsEPK7QPointFi, ( scorep_libwrap_arg_this, points, pointCount ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter10drawPointsEPK7QPointFi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter10drawPointsEPK6QPointi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter10drawPointsEPK6QPointi )( void *scorep_libwrap_arg_this, const QPoint * points, int pointCount )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter10drawPointsEPK6QPointi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter10drawPointsEPK6QPointi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter10drawPointsEPK6QPointi, ( scorep_libwrap_arg_this, points, pointCount ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter10drawPointsEPK6QPointi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter9drawLinesEPK6QLineFi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter9drawLinesEPK6QLineFi )( void *scorep_libwrap_arg_this, const QLineF * lines, int lineCount )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter9drawLinesEPK6QLineFi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter9drawLinesEPK6QLineFi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter9drawLinesEPK6QLineFi, ( scorep_libwrap_arg_this, lines, lineCount ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter9drawLinesEPK6QLineFi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter9drawLinesEPK7QPointFi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter9drawLinesEPK7QPointFi )( void *scorep_libwrap_arg_this, const QPointF * pointPairs, int lineCount )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter9drawLinesEPK7QPointFi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter9drawLinesEPK7QPointFi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter9drawLinesEPK7QPointFi, ( scorep_libwrap_arg_this, pointPairs, lineCount ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter9drawLinesEPK7QPointFi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter9drawLinesEPK5QLinei
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter9drawLinesEPK5QLinei )( void *scorep_libwrap_arg_this, const QLine * lines, int lineCount )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter9drawLinesEPK5QLinei );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter9drawLinesEPK5QLinei );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter9drawLinesEPK5QLinei, ( scorep_libwrap_arg_this, lines, lineCount ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter9drawLinesEPK5QLinei );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter9drawLinesEPK6QPointi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter9drawLinesEPK6QPointi )( void *scorep_libwrap_arg_this, const QPoint * pointPairs, int lineCount )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter9drawLinesEPK6QPointi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter9drawLinesEPK6QPointi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter9drawLinesEPK6QPointi, ( scorep_libwrap_arg_this, pointPairs, lineCount ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter9drawLinesEPK6QPointi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter9drawRectsEPK6QRectFi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter9drawRectsEPK6QRectFi )( void *scorep_libwrap_arg_this, const QRectF * rects, int rectCount )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter9drawRectsEPK6QRectFi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter9drawRectsEPK6QRectFi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter9drawRectsEPK6QRectFi, ( scorep_libwrap_arg_this, rects, rectCount ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter9drawRectsEPK6QRectFi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter9drawRectsEPK5QRecti
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter9drawRectsEPK5QRecti )( void *scorep_libwrap_arg_this, const QRect * rects, int rectCount )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter9drawRectsEPK5QRecti );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter9drawRectsEPK5QRecti );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter9drawRectsEPK5QRecti, ( scorep_libwrap_arg_this, rects, rectCount ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter9drawRectsEPK5QRecti );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter11drawEllipseERK6QRectF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter11drawEllipseERK6QRectF )( void *scorep_libwrap_arg_this, const QRectF & r )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter11drawEllipseERK6QRectF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter11drawEllipseERK6QRectF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter11drawEllipseERK6QRectF, ( scorep_libwrap_arg_this, r ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter11drawEllipseERK6QRectF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter11drawEllipseERK5QRect
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter11drawEllipseERK5QRect )( void *scorep_libwrap_arg_this, const QRect & r )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter11drawEllipseERK5QRect );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter11drawEllipseERK5QRect );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter11drawEllipseERK5QRect, ( scorep_libwrap_arg_this, r ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter11drawEllipseERK5QRect );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter12drawPolylineEPK7QPointFi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter12drawPolylineEPK7QPointFi )( void *scorep_libwrap_arg_this, const QPointF * points, int pointCount )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter12drawPolylineEPK7QPointFi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter12drawPolylineEPK7QPointFi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter12drawPolylineEPK7QPointFi, ( scorep_libwrap_arg_this, points, pointCount ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter12drawPolylineEPK7QPointFi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter12drawPolylineEPK6QPointi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter12drawPolylineEPK6QPointi )( void *scorep_libwrap_arg_this, const QPoint * points, int pointCount )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter12drawPolylineEPK6QPointi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter12drawPolylineEPK6QPointi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter12drawPolylineEPK6QPointi, ( scorep_libwrap_arg_this, points, pointCount ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter12drawPolylineEPK6QPointi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter11drawPolygonEPK7QPointFiN2Qt8FillRuleE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter11drawPolygonEPK7QPointFiN2Qt8FillRuleE )( void *scorep_libwrap_arg_this, const QPointF * points, int pointCount, Qt::FillRule fillRule )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter11drawPolygonEPK7QPointFiN2Qt8FillRuleE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter11drawPolygonEPK7QPointFiN2Qt8FillRuleE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter11drawPolygonEPK7QPointFiN2Qt8FillRuleE, ( scorep_libwrap_arg_this, points, pointCount, fillRule ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter11drawPolygonEPK7QPointFiN2Qt8FillRuleE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter11drawPolygonEPK6QPointiN2Qt8FillRuleE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter11drawPolygonEPK6QPointiN2Qt8FillRuleE )( void *scorep_libwrap_arg_this, const QPoint * points, int pointCount, Qt::FillRule fillRule )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter11drawPolygonEPK6QPointiN2Qt8FillRuleE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter11drawPolygonEPK6QPointiN2Qt8FillRuleE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter11drawPolygonEPK6QPointiN2Qt8FillRuleE, ( scorep_libwrap_arg_this, points, pointCount, fillRule ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter11drawPolygonEPK6QPointiN2Qt8FillRuleE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter17drawConvexPolygonEPK7QPointFi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter17drawConvexPolygonEPK7QPointFi )( void *scorep_libwrap_arg_this, const QPointF * points, int pointCount )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter17drawConvexPolygonEPK7QPointFi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter17drawConvexPolygonEPK7QPointFi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter17drawConvexPolygonEPK7QPointFi, ( scorep_libwrap_arg_this, points, pointCount ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter17drawConvexPolygonEPK7QPointFi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter17drawConvexPolygonEPK6QPointi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter17drawConvexPolygonEPK6QPointi )( void *scorep_libwrap_arg_this, const QPoint * points, int pointCount )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter17drawConvexPolygonEPK6QPointi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter17drawConvexPolygonEPK6QPointi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter17drawConvexPolygonEPK6QPointi, ( scorep_libwrap_arg_this, points, pointCount ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter17drawConvexPolygonEPK6QPointi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter7drawArcERK6QRectFii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter7drawArcERK6QRectFii )( void *scorep_libwrap_arg_this, const QRectF & rect, int a, int alen )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter7drawArcERK6QRectFii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter7drawArcERK6QRectFii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter7drawArcERK6QRectFii, ( scorep_libwrap_arg_this, rect, a, alen ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter7drawArcERK6QRectFii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter7drawPieERK6QRectFii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter7drawPieERK6QRectFii )( void *scorep_libwrap_arg_this, const QRectF & rect, int a, int alen )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter7drawPieERK6QRectFii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter7drawPieERK6QRectFii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter7drawPieERK6QRectFii, ( scorep_libwrap_arg_this, rect, a, alen ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter7drawPieERK6QRectFii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter9drawChordERK6QRectFii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter9drawChordERK6QRectFii )( void *scorep_libwrap_arg_this, const QRectF & rect, int a, int alen )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter9drawChordERK6QRectFii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter9drawChordERK6QRectFii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter9drawChordERK6QRectFii, ( scorep_libwrap_arg_this, rect, a, alen ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter9drawChordERK6QRectFii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter15drawRoundedRectERK6QRectFddN2Qt8SizeModeE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter15drawRoundedRectERK6QRectFddN2Qt8SizeModeE )( void *scorep_libwrap_arg_this, const QRectF & rect, qreal xRadius, qreal yRadius, Qt::SizeMode mode )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter15drawRoundedRectERK6QRectFddN2Qt8SizeModeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter15drawRoundedRectERK6QRectFddN2Qt8SizeModeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter15drawRoundedRectERK6QRectFddN2Qt8SizeModeE, ( scorep_libwrap_arg_this, rect, xRadius, yRadius, mode ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter15drawRoundedRectERK6QRectFddN2Qt8SizeModeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter13drawRoundRectERK6QRectFii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter13drawRoundRectERK6QRectFii )( void *scorep_libwrap_arg_this, const QRectF & r, int xround, int yround )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter13drawRoundRectERK6QRectFii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter13drawRoundRectERK6QRectFii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter13drawRoundRectERK6QRectFii, ( scorep_libwrap_arg_this, r, xround, yround ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter13drawRoundRectERK6QRectFii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter15drawTiledPixmapERK6QRectFRK7QPixmapRK7QPointF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter15drawTiledPixmapERK6QRectFRK7QPixmapRK7QPointF )( void *scorep_libwrap_arg_this, const QRectF & rect, const QPixmap & pm, const QPointF & offset )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter15drawTiledPixmapERK6QRectFRK7QPixmapRK7QPointF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter15drawTiledPixmapERK6QRectFRK7QPixmapRK7QPointF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter15drawTiledPixmapERK6QRectFRK7QPixmapRK7QPointF, ( scorep_libwrap_arg_this, rect, pm, offset ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter15drawTiledPixmapERK6QRectFRK7QPixmapRK7QPointF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter11drawPictureERK7QPointFRK8QPicture
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter11drawPictureERK7QPointFRK8QPicture )( void *scorep_libwrap_arg_this, const QPointF & p, const QPicture & picture )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter11drawPictureERK7QPointFRK8QPicture );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter11drawPictureERK7QPointFRK8QPicture );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter11drawPictureERK7QPointFRK8QPicture, ( scorep_libwrap_arg_this, p, picture ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter11drawPictureERK7QPointFRK8QPicture );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter10drawPixmapERK6QRectFRK7QPixmapS2_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter10drawPixmapERK6QRectFRK7QPixmapS2_ )( void *scorep_libwrap_arg_this, const QRectF & targetRect, const QPixmap & pixmap, const QRectF & sourceRect )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter10drawPixmapERK6QRectFRK7QPixmapS2_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter10drawPixmapERK6QRectFRK7QPixmapS2_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter10drawPixmapERK6QRectFRK7QPixmapS2_, ( scorep_libwrap_arg_this, targetRect, pixmap, sourceRect ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter10drawPixmapERK6QRectFRK7QPixmapS2_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter10drawPixmapERK7QPointFRK7QPixmap
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter10drawPixmapERK7QPointFRK7QPixmap )( void *scorep_libwrap_arg_this, const QPointF & p, const QPixmap & pm )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter10drawPixmapERK7QPointFRK7QPixmap );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter10drawPixmapERK7QPointFRK7QPixmap );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter10drawPixmapERK7QPointFRK7QPixmap, ( scorep_libwrap_arg_this, p, pm ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter10drawPixmapERK7QPointFRK7QPixmap );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter19drawPixmapFragmentsEPKNS_14PixmapFragmentEiRK7QPixmap6QFlagsINS_18PixmapFragmentHintEE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter19drawPixmapFragmentsEPKNS_14PixmapFragmentEiRK7QPixmap6QFlagsINS_18PixmapFragmentHintEE )( void *scorep_libwrap_arg_this, const QPainter::PixmapFragment * fragments, int fragmentCount, const QPixmap & pixmap, QPainter::PixmapFragmentHints hints )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter19drawPixmapFragmentsEPKNS_14PixmapFragmentEiRK7QPixmap6QFlagsINS_18PixmapFragmentHintEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter19drawPixmapFragmentsEPKNS_14PixmapFragmentEiRK7QPixmap6QFlagsINS_18PixmapFragmentHintEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter19drawPixmapFragmentsEPKNS_14PixmapFragmentEiRK7QPixmap6QFlagsINS_18PixmapFragmentHintEE, ( scorep_libwrap_arg_this, fragments, fragmentCount, pixmap, hints ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter19drawPixmapFragmentsEPKNS_14PixmapFragmentEiRK7QPixmap6QFlagsINS_18PixmapFragmentHintEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter9drawImageERK6QRectFRK6QImageS2_6QFlagsIN2Qt19ImageConversionFlagEE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter9drawImageERK6QRectFRK6QImageS2_6QFlagsIN2Qt19ImageConversionFlagEE )( void *scorep_libwrap_arg_this, const QRectF & targetRect, const QImage & image, const QRectF & sourceRect, Qt::ImageConversionFlags flags )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter9drawImageERK6QRectFRK6QImageS2_6QFlagsIN2Qt19ImageConversionFlagEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter9drawImageERK6QRectFRK6QImageS2_6QFlagsIN2Qt19ImageConversionFlagEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter9drawImageERK6QRectFRK6QImageS2_6QFlagsIN2Qt19ImageConversionFlagEE, ( scorep_libwrap_arg_this, targetRect, image, sourceRect, flags ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter9drawImageERK6QRectFRK6QImageS2_6QFlagsIN2Qt19ImageConversionFlagEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter9drawImageERK7QPointFRK6QImage
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter9drawImageERK7QPointFRK6QImage )( void *scorep_libwrap_arg_this, const QPointF & p, const QImage & image )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter9drawImageERK7QPointFRK6QImage );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter9drawImageERK7QPointFRK6QImage );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter9drawImageERK7QPointFRK6QImage, ( scorep_libwrap_arg_this, p, image ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter9drawImageERK7QPointFRK6QImage );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter18setLayoutDirectionEN2Qt15LayoutDirectionE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter18setLayoutDirectionEN2Qt15LayoutDirectionE )( void *scorep_libwrap_arg_this, Qt::LayoutDirection direction )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter18setLayoutDirectionEN2Qt15LayoutDirectionE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter18setLayoutDirectionEN2Qt15LayoutDirectionE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter18setLayoutDirectionEN2Qt15LayoutDirectionE, ( scorep_libwrap_arg_this, direction ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter18setLayoutDirectionEN2Qt15LayoutDirectionE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK8QPainter15layoutDirectionEv
Qt::LayoutDirection
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QPainter15layoutDirectionEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QPainter15layoutDirectionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QPainter15layoutDirectionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    Qt::LayoutDirection scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QPainter15layoutDirectionEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QPainter15layoutDirectionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN8QPainter12drawGlyphRunERK7QPointFRK9QGlyphRun
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter12drawGlyphRunERK7QPointFRK9QGlyphRun )( void *scorep_libwrap_arg_this, const QPointF & position, const QGlyphRun & glyphRun )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter12drawGlyphRunERK7QPointFRK9QGlyphRun );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter12drawGlyphRunERK7QPointFRK9QGlyphRun );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter12drawGlyphRunERK7QPointFRK9QGlyphRun, ( scorep_libwrap_arg_this, position, glyphRun ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter12drawGlyphRunERK7QPointFRK9QGlyphRun );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter14drawStaticTextERK7QPointFRK11QStaticText
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter14drawStaticTextERK7QPointFRK11QStaticText )( void *scorep_libwrap_arg_this, const QPointF & topLeftPosition, const QStaticText & staticText )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter14drawStaticTextERK7QPointFRK11QStaticText );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter14drawStaticTextERK7QPointFRK11QStaticText );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter14drawStaticTextERK7QPointFRK11QStaticText, ( scorep_libwrap_arg_this, topLeftPosition, staticText ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter14drawStaticTextERK7QPointFRK11QStaticText );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter8drawTextERK7QPointFRK7QString
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter8drawTextERK7QPointFRK7QString )( void *scorep_libwrap_arg_this, const QPointF & p, const QString & s )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter8drawTextERK7QPointFRK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter8drawTextERK7QPointFRK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter8drawTextERK7QPointFRK7QString, ( scorep_libwrap_arg_this, p, s ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter8drawTextERK7QPointFRK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter8drawTextERK7QPointFRK7QStringii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter8drawTextERK7QPointFRK7QStringii )( void *scorep_libwrap_arg_this, const QPointF & p, const QString & str, int tf, int justificationPadding )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter8drawTextERK7QPointFRK7QStringii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter8drawTextERK7QPointFRK7QStringii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter8drawTextERK7QPointFRK7QStringii, ( scorep_libwrap_arg_this, p, str, tf, justificationPadding ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter8drawTextERK7QPointFRK7QStringii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter8drawTextERK6QRectFiRK7QStringPS0_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter8drawTextERK6QRectFiRK7QStringPS0_ )( void *scorep_libwrap_arg_this, const QRectF & r, int flags, const QString & text, QRectF * br )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter8drawTextERK6QRectFiRK7QStringPS0_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter8drawTextERK6QRectFiRK7QStringPS0_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter8drawTextERK6QRectFiRK7QStringPS0_, ( scorep_libwrap_arg_this, r, flags, text, br ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter8drawTextERK6QRectFiRK7QStringPS0_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter8drawTextERK5QRectiRK7QStringPS0_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter8drawTextERK5QRectiRK7QStringPS0_ )( void *scorep_libwrap_arg_this, const QRect & r, int flags, const QString & text, QRect * br )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter8drawTextERK5QRectiRK7QStringPS0_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter8drawTextERK5QRectiRK7QStringPS0_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter8drawTextERK5QRectiRK7QStringPS0_, ( scorep_libwrap_arg_this, r, flags, text, br ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter8drawTextERK5QRectiRK7QStringPS0_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter8drawTextERK6QRectFRK7QStringRK11QTextOption
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter8drawTextERK6QRectFRK7QStringRK11QTextOption )( void *scorep_libwrap_arg_this, const QRectF & r, const QString & text, const QTextOption & o )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter8drawTextERK6QRectFRK7QStringRK11QTextOption );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter8drawTextERK6QRectFRK7QStringRK11QTextOption );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter8drawTextERK6QRectFRK7QStringRK11QTextOption, ( scorep_libwrap_arg_this, r, text, o ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter8drawTextERK6QRectFRK7QStringRK11QTextOption );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter12boundingRectERK6QRectFiRK7QString
QRectF
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter12boundingRectERK6QRectFiRK7QString )( void *scorep_libwrap_arg_this, const QRectF & rect, int flags, const QString & text )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter12boundingRectERK6QRectFiRK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter12boundingRectERK6QRectFiRK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRectF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter12boundingRectERK6QRectFiRK7QString, ( scorep_libwrap_arg_this, rect, flags, text ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter12boundingRectERK6QRectFiRK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN8QPainter12boundingRectERK5QRectiRK7QString
QRect
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter12boundingRectERK5QRectiRK7QString )( void *scorep_libwrap_arg_this, const QRect & rect, int flags, const QString & text )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter12boundingRectERK5QRectiRK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter12boundingRectERK5QRectiRK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRect scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter12boundingRectERK5QRectiRK7QString, ( scorep_libwrap_arg_this, rect, flags, text ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter12boundingRectERK5QRectiRK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN8QPainter12boundingRectERK6QRectFRK7QStringRK11QTextOption
QRectF
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter12boundingRectERK6QRectFRK7QStringRK11QTextOption )( void *scorep_libwrap_arg_this, const QRectF & rect, const QString & text, const QTextOption & o )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter12boundingRectERK6QRectFRK7QStringRK11QTextOption );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter12boundingRectERK6QRectFRK7QStringRK11QTextOption );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRectF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter12boundingRectERK6QRectFRK7QStringRK11QTextOption, ( scorep_libwrap_arg_this, rect, text, o ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter12boundingRectERK6QRectFRK7QStringRK11QTextOption );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN8QPainter12drawTextItemERK7QPointFRK9QTextItem
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter12drawTextItemERK7QPointFRK9QTextItem )( void *scorep_libwrap_arg_this, const QPointF & p, const QTextItem & ti )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter12drawTextItemERK7QPointFRK9QTextItem );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter12drawTextItemERK7QPointFRK9QTextItem );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter12drawTextItemERK7QPointFRK9QTextItem, ( scorep_libwrap_arg_this, p, ti ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter12drawTextItemERK7QPointFRK9QTextItem );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter8fillRectERK6QRectFRK6QBrush
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter8fillRectERK6QRectFRK6QBrush )( void *scorep_libwrap_arg_this, const QRectF & scorep_libwrap_arg_1, const QBrush & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter8fillRectERK6QRectFRK6QBrush );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter8fillRectERK6QRectFRK6QBrush );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter8fillRectERK6QRectFRK6QBrush, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter8fillRectERK6QRectFRK6QBrush );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter8fillRectERK5QRectRK6QBrush
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter8fillRectERK5QRectRK6QBrush )( void *scorep_libwrap_arg_this, const QRect & scorep_libwrap_arg_1, const QBrush & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter8fillRectERK5QRectRK6QBrush );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter8fillRectERK5QRectRK6QBrush );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter8fillRectERK5QRectRK6QBrush, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter8fillRectERK5QRectRK6QBrush );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter8fillRectERK6QRectFRK6QColor
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter8fillRectERK6QRectFRK6QColor )( void *scorep_libwrap_arg_this, const QRectF & scorep_libwrap_arg_1, const QColor & color )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter8fillRectERK6QRectFRK6QColor );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter8fillRectERK6QRectFRK6QColor );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter8fillRectERK6QRectFRK6QColor, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, color ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter8fillRectERK6QRectFRK6QColor );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter8fillRectERK5QRectRK6QColor
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter8fillRectERK5QRectRK6QColor )( void *scorep_libwrap_arg_this, const QRect & scorep_libwrap_arg_1, const QColor & color )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter8fillRectERK5QRectRK6QColor );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter8fillRectERK5QRectRK6QColor );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter8fillRectERK5QRectRK6QColor, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, color ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter8fillRectERK5QRectRK6QColor );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter9eraseRectERK6QRectF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter9eraseRectERK6QRectF )( void *scorep_libwrap_arg_this, const QRectF & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter9eraseRectERK6QRectF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter9eraseRectERK6QRectF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter9eraseRectERK6QRectF, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter9eraseRectERK6QRectF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter13setRenderHintENS_10RenderHintEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter13setRenderHintENS_10RenderHintEb )( void *scorep_libwrap_arg_this, QPainter::RenderHint hint, bool on )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter13setRenderHintENS_10RenderHintEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter13setRenderHintENS_10RenderHintEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter13setRenderHintENS_10RenderHintEb, ( scorep_libwrap_arg_this, hint, on ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter13setRenderHintENS_10RenderHintEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter14setRenderHintsE6QFlagsINS_10RenderHintEEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter14setRenderHintsE6QFlagsINS_10RenderHintEEb )( void *scorep_libwrap_arg_this, QPainter::RenderHints hints, bool on )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter14setRenderHintsE6QFlagsINS_10RenderHintEEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter14setRenderHintsE6QFlagsINS_10RenderHintEEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter14setRenderHintsE6QFlagsINS_10RenderHintEEb, ( scorep_libwrap_arg_this, hints, on ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter14setRenderHintsE6QFlagsINS_10RenderHintEEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK8QPainter11renderHintsEv
QPainter::RenderHints
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QPainter11renderHintsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QPainter11renderHintsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QPainter11renderHintsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPainter::RenderHints scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QPainter11renderHintsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QPainter11renderHintsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK8QPainter11paintEngineEv
QPaintEngine *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QPainter11paintEngineEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QPainter11paintEngineEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QPainter11paintEngineEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPaintEngine * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QPainter11paintEngineEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QPainter11paintEngineEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN8QPainter13setRedirectedEPK12QPaintDevicePS0_RK6QPoint
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter13setRedirectedEPK12QPaintDevicePS0_RK6QPoint )( const QPaintDevice * device, QPaintDevice * replacement, const QPoint & offset )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter13setRedirectedEPK12QPaintDevicePS0_RK6QPoint );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter13setRedirectedEPK12QPaintDevicePS0_RK6QPoint );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter13setRedirectedEPK12QPaintDevicePS0_RK6QPoint, ( device, replacement, offset ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter13setRedirectedEPK12QPaintDevicePS0_RK6QPoint );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter10redirectedEPK12QPaintDeviceP6QPoint
QPaintDevice *
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter10redirectedEPK12QPaintDeviceP6QPoint )( const QPaintDevice * device, QPoint * offset )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter10redirectedEPK12QPaintDeviceP6QPoint );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter10redirectedEPK12QPaintDeviceP6QPoint );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPaintDevice * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter10redirectedEPK12QPaintDeviceP6QPoint, ( device, offset ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter10redirectedEPK12QPaintDeviceP6QPoint );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN8QPainter17restoreRedirectedEPK12QPaintDevice
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter17restoreRedirectedEPK12QPaintDevice )( const QPaintDevice * device )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter17restoreRedirectedEPK12QPaintDevice );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter17restoreRedirectedEPK12QPaintDevice );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter17restoreRedirectedEPK12QPaintDevice, ( device ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter17restoreRedirectedEPK12QPaintDevice );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter19beginNativePaintingEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter19beginNativePaintingEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter19beginNativePaintingEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter19beginNativePaintingEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter19beginNativePaintingEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter19beginNativePaintingEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QPainter17endNativePaintingEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QPainter17endNativePaintingEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN8QPainter17endNativePaintingEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QPainter17endNativePaintingEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QPainter17endNativePaintingEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QPainter17endNativePaintingEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK9QTextItem7descentEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QTextItem7descentEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QTextItem7descentEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QTextItem7descentEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QTextItem7descentEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QTextItem7descentEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QTextItem6ascentEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QTextItem6ascentEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QTextItem6ascentEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QTextItem6ascentEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QTextItem6ascentEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QTextItem6ascentEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QTextItem5widthEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QTextItem5widthEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QTextItem5widthEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QTextItem5widthEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QTextItem5widthEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QTextItem5widthEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QTextItem11renderFlagsEv
QTextItem::RenderFlags
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QTextItem11renderFlagsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QTextItem11renderFlagsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QTextItem11renderFlagsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextItem::RenderFlags scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QTextItem11renderFlagsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QTextItem11renderFlagsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QTextItem4textEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QTextItem4textEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QTextItem4textEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QTextItem4textEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QTextItem4textEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QTextItem4textEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QTextItem4fontEv
QFont
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QTextItem4fontEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QTextItem4fontEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QTextItem4fontEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QFont scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QTextItem4fontEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QTextItem4fontEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QPaintEngineC2E6QFlagsINS_18PaintEngineFeatureEE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPaintEngineC2E6QFlagsINS_18PaintEngineFeatureEE )( void *scorep_libwrap_arg_this, QPaintEngine::PaintEngineFeatures features )
{
    LIBWRAP_EARLY_INIT( _ZN12QPaintEngineC2E6QFlagsINS_18PaintEngineFeatureEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPaintEngineC2E6QFlagsINS_18PaintEngineFeatureEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPaintEngineC2E6QFlagsINS_18PaintEngineFeatureEE, ( scorep_libwrap_arg_this, features ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPaintEngineC2E6QFlagsINS_18PaintEngineFeatureEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QPaintEngineD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPaintEngineD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QPaintEngineD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPaintEngineD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPaintEngineD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPaintEngineD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QPaintEngineD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPaintEngineD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QPaintEngineD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPaintEngineD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPaintEngineD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPaintEngineD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QPaintEngineD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPaintEngineD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QPaintEngineD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPaintEngineD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPaintEngineD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPaintEngineD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QPaintEngine9drawRectsEPK5QRecti
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPaintEngine9drawRectsEPK5QRecti )( void *scorep_libwrap_arg_this, const QRect * rects, int rectCount )
{
    LIBWRAP_EARLY_INIT( _ZN12QPaintEngine9drawRectsEPK5QRecti );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPaintEngine9drawRectsEPK5QRecti );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPaintEngine9drawRectsEPK5QRecti, ( scorep_libwrap_arg_this, rects, rectCount ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPaintEngine9drawRectsEPK5QRecti );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QPaintEngine9drawRectsEPK6QRectFi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPaintEngine9drawRectsEPK6QRectFi )( void *scorep_libwrap_arg_this, const QRectF * rects, int rectCount )
{
    LIBWRAP_EARLY_INIT( _ZN12QPaintEngine9drawRectsEPK6QRectFi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPaintEngine9drawRectsEPK6QRectFi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPaintEngine9drawRectsEPK6QRectFi, ( scorep_libwrap_arg_this, rects, rectCount ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPaintEngine9drawRectsEPK6QRectFi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QPaintEngine9drawLinesEPK5QLinei
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPaintEngine9drawLinesEPK5QLinei )( void *scorep_libwrap_arg_this, const QLine * lines, int lineCount )
{
    LIBWRAP_EARLY_INIT( _ZN12QPaintEngine9drawLinesEPK5QLinei );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPaintEngine9drawLinesEPK5QLinei );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPaintEngine9drawLinesEPK5QLinei, ( scorep_libwrap_arg_this, lines, lineCount ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPaintEngine9drawLinesEPK5QLinei );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QPaintEngine9drawLinesEPK6QLineFi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPaintEngine9drawLinesEPK6QLineFi )( void *scorep_libwrap_arg_this, const QLineF * lines, int lineCount )
{
    LIBWRAP_EARLY_INIT( _ZN12QPaintEngine9drawLinesEPK6QLineFi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPaintEngine9drawLinesEPK6QLineFi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPaintEngine9drawLinesEPK6QLineFi, ( scorep_libwrap_arg_this, lines, lineCount ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPaintEngine9drawLinesEPK6QLineFi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QPaintEngine11drawEllipseERK6QRectF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPaintEngine11drawEllipseERK6QRectF )( void *scorep_libwrap_arg_this, const QRectF & r )
{
    LIBWRAP_EARLY_INIT( _ZN12QPaintEngine11drawEllipseERK6QRectF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPaintEngine11drawEllipseERK6QRectF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPaintEngine11drawEllipseERK6QRectF, ( scorep_libwrap_arg_this, r ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPaintEngine11drawEllipseERK6QRectF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QPaintEngine11drawEllipseERK5QRect
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPaintEngine11drawEllipseERK5QRect )( void *scorep_libwrap_arg_this, const QRect & r )
{
    LIBWRAP_EARLY_INIT( _ZN12QPaintEngine11drawEllipseERK5QRect );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPaintEngine11drawEllipseERK5QRect );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPaintEngine11drawEllipseERK5QRect, ( scorep_libwrap_arg_this, r ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPaintEngine11drawEllipseERK5QRect );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QPaintEngine8drawPathERK12QPainterPath
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPaintEngine8drawPathERK12QPainterPath )( void *scorep_libwrap_arg_this, const QPainterPath & path )
{
    LIBWRAP_EARLY_INIT( _ZN12QPaintEngine8drawPathERK12QPainterPath );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPaintEngine8drawPathERK12QPainterPath );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPaintEngine8drawPathERK12QPainterPath, ( scorep_libwrap_arg_this, path ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPaintEngine8drawPathERK12QPainterPath );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QPaintEngine10drawPointsEPK7QPointFi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPaintEngine10drawPointsEPK7QPointFi )( void *scorep_libwrap_arg_this, const QPointF * points, int pointCount )
{
    LIBWRAP_EARLY_INIT( _ZN12QPaintEngine10drawPointsEPK7QPointFi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPaintEngine10drawPointsEPK7QPointFi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPaintEngine10drawPointsEPK7QPointFi, ( scorep_libwrap_arg_this, points, pointCount ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPaintEngine10drawPointsEPK7QPointFi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QPaintEngine10drawPointsEPK6QPointi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPaintEngine10drawPointsEPK6QPointi )( void *scorep_libwrap_arg_this, const QPoint * points, int pointCount )
{
    LIBWRAP_EARLY_INIT( _ZN12QPaintEngine10drawPointsEPK6QPointi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPaintEngine10drawPointsEPK6QPointi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPaintEngine10drawPointsEPK6QPointi, ( scorep_libwrap_arg_this, points, pointCount ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPaintEngine10drawPointsEPK6QPointi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QPaintEngine11drawPolygonEPK7QPointFiNS_15PolygonDrawModeE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPaintEngine11drawPolygonEPK7QPointFiNS_15PolygonDrawModeE )( void *scorep_libwrap_arg_this, const QPointF * points, int pointCount, QPaintEngine::PolygonDrawMode mode )
{
    LIBWRAP_EARLY_INIT( _ZN12QPaintEngine11drawPolygonEPK7QPointFiNS_15PolygonDrawModeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPaintEngine11drawPolygonEPK7QPointFiNS_15PolygonDrawModeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPaintEngine11drawPolygonEPK7QPointFiNS_15PolygonDrawModeE, ( scorep_libwrap_arg_this, points, pointCount, mode ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPaintEngine11drawPolygonEPK7QPointFiNS_15PolygonDrawModeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QPaintEngine11drawPolygonEPK6QPointiNS_15PolygonDrawModeE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPaintEngine11drawPolygonEPK6QPointiNS_15PolygonDrawModeE )( void *scorep_libwrap_arg_this, const QPoint * points, int pointCount, QPaintEngine::PolygonDrawMode mode )
{
    LIBWRAP_EARLY_INIT( _ZN12QPaintEngine11drawPolygonEPK6QPointiNS_15PolygonDrawModeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPaintEngine11drawPolygonEPK6QPointiNS_15PolygonDrawModeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPaintEngine11drawPolygonEPK6QPointiNS_15PolygonDrawModeE, ( scorep_libwrap_arg_this, points, pointCount, mode ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPaintEngine11drawPolygonEPK6QPointiNS_15PolygonDrawModeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QPaintEngine12drawTextItemERK7QPointFRK9QTextItem
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPaintEngine12drawTextItemERK7QPointFRK9QTextItem )( void *scorep_libwrap_arg_this, const QPointF & p, const QTextItem & textItem )
{
    LIBWRAP_EARLY_INIT( _ZN12QPaintEngine12drawTextItemERK7QPointFRK9QTextItem );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPaintEngine12drawTextItemERK7QPointFRK9QTextItem );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPaintEngine12drawTextItemERK7QPointFRK9QTextItem, ( scorep_libwrap_arg_this, p, textItem ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPaintEngine12drawTextItemERK7QPointFRK9QTextItem );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QPaintEngine15drawTiledPixmapERK6QRectFRK7QPixmapRK7QPointF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPaintEngine15drawTiledPixmapERK6QRectFRK7QPixmapRK7QPointF )( void *scorep_libwrap_arg_this, const QRectF & r, const QPixmap & pixmap, const QPointF & s )
{
    LIBWRAP_EARLY_INIT( _ZN12QPaintEngine15drawTiledPixmapERK6QRectFRK7QPixmapRK7QPointF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPaintEngine15drawTiledPixmapERK6QRectFRK7QPixmapRK7QPointF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPaintEngine15drawTiledPixmapERK6QRectFRK7QPixmapRK7QPointF, ( scorep_libwrap_arg_this, r, pixmap, s ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPaintEngine15drawTiledPixmapERK6QRectFRK7QPixmapRK7QPointF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QPaintEngine9drawImageERK6QRectFRK6QImageS2_6QFlagsIN2Qt19ImageConversionFlagEE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPaintEngine9drawImageERK6QRectFRK6QImageS2_6QFlagsIN2Qt19ImageConversionFlagEE )( void *scorep_libwrap_arg_this, const QRectF & r, const QImage & pm, const QRectF & sr, Qt::ImageConversionFlags flags )
{
    LIBWRAP_EARLY_INIT( _ZN12QPaintEngine9drawImageERK6QRectFRK6QImageS2_6QFlagsIN2Qt19ImageConversionFlagEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPaintEngine9drawImageERK6QRectFRK6QImageS2_6QFlagsIN2Qt19ImageConversionFlagEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPaintEngine9drawImageERK6QRectFRK6QImageS2_6QFlagsIN2Qt19ImageConversionFlagEE, ( scorep_libwrap_arg_this, r, pm, sr, flags ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPaintEngine9drawImageERK6QRectFRK6QImageS2_6QFlagsIN2Qt19ImageConversionFlagEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN12QPaintEngine14setPaintDeviceEP12QPaintDevice
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPaintEngine14setPaintDeviceEP12QPaintDevice )( void *scorep_libwrap_arg_this, QPaintDevice * device )
{
    LIBWRAP_EARLY_INIT( _ZN12QPaintEngine14setPaintDeviceEP12QPaintDevice );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPaintEngine14setPaintDeviceEP12QPaintDevice );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPaintEngine14setPaintDeviceEP12QPaintDevice, ( scorep_libwrap_arg_this, device ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPaintEngine14setPaintDeviceEP12QPaintDevice );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK12QPaintEngine11paintDeviceEv
QPaintDevice *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QPaintEngine11paintDeviceEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QPaintEngine11paintDeviceEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QPaintEngine11paintDeviceEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPaintDevice * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QPaintEngine11paintDeviceEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QPaintEngine11paintDeviceEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QPaintEngine13setSystemClipERK7QRegion
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPaintEngine13setSystemClipERK7QRegion )( void *scorep_libwrap_arg_this, const QRegion & baseClip )
{
    LIBWRAP_EARLY_INIT( _ZN12QPaintEngine13setSystemClipERK7QRegion );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPaintEngine13setSystemClipERK7QRegion );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPaintEngine13setSystemClipERK7QRegion, ( scorep_libwrap_arg_this, baseClip ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPaintEngine13setSystemClipERK7QRegion );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK12QPaintEngine10systemClipEv
QRegion
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QPaintEngine10systemClipEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QPaintEngine10systemClipEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QPaintEngine10systemClipEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRegion scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QPaintEngine10systemClipEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QPaintEngine10systemClipEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QPaintEngine13setSystemRectERK5QRect
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPaintEngine13setSystemRectERK5QRect )( void *scorep_libwrap_arg_this, const QRect & rect )
{
    LIBWRAP_EARLY_INIT( _ZN12QPaintEngine13setSystemRectERK5QRect );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPaintEngine13setSystemRectERK5QRect );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPaintEngine13setSystemRectERK5QRect, ( scorep_libwrap_arg_this, rect ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPaintEngine13setSystemRectERK5QRect );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK12QPaintEngine10systemRectEv
QRect
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QPaintEngine10systemRectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QPaintEngine10systemRectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QPaintEngine10systemRectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRect scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QPaintEngine10systemRectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QPaintEngine10systemRectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QPaintEngine16coordinateOffsetEv
QPoint
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QPaintEngine16coordinateOffsetEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QPaintEngine16coordinateOffsetEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QPaintEngine16coordinateOffsetEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPoint scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QPaintEngine16coordinateOffsetEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QPaintEngine16coordinateOffsetEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK12QPaintEngine7painterEv
QPainter *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK12QPaintEngine7painterEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK12QPaintEngine7painterEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK12QPaintEngine7painterEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPainter * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK12QPaintEngine7painterEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK12QPaintEngine7painterEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN12QPaintEngine9syncStateEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN12QPaintEngine9syncStateEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN12QPaintEngine9syncStateEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN12QPaintEngine9syncStateEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN12QPaintEngine9syncStateEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN12QPaintEngine9syncStateEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK17QPaintEngineState3penEv
QPen
SCOREP_LIBWRAP_FUNC_NAME( _ZNK17QPaintEngineState3penEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK17QPaintEngineState3penEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK17QPaintEngineState3penEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPen scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK17QPaintEngineState3penEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK17QPaintEngineState3penEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK17QPaintEngineState5brushEv
QBrush
SCOREP_LIBWRAP_FUNC_NAME( _ZNK17QPaintEngineState5brushEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK17QPaintEngineState5brushEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK17QPaintEngineState5brushEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QBrush scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK17QPaintEngineState5brushEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK17QPaintEngineState5brushEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK17QPaintEngineState11brushOriginEv
QPointF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK17QPaintEngineState11brushOriginEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK17QPaintEngineState11brushOriginEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK17QPaintEngineState11brushOriginEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPointF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK17QPaintEngineState11brushOriginEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK17QPaintEngineState11brushOriginEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK17QPaintEngineState15backgroundBrushEv
QBrush
SCOREP_LIBWRAP_FUNC_NAME( _ZNK17QPaintEngineState15backgroundBrushEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK17QPaintEngineState15backgroundBrushEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK17QPaintEngineState15backgroundBrushEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QBrush scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK17QPaintEngineState15backgroundBrushEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK17QPaintEngineState15backgroundBrushEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK17QPaintEngineState14backgroundModeEv
Qt::BGMode
SCOREP_LIBWRAP_FUNC_NAME( _ZNK17QPaintEngineState14backgroundModeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK17QPaintEngineState14backgroundModeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK17QPaintEngineState14backgroundModeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    Qt::BGMode scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK17QPaintEngineState14backgroundModeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK17QPaintEngineState14backgroundModeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK17QPaintEngineState4fontEv
QFont
SCOREP_LIBWRAP_FUNC_NAME( _ZNK17QPaintEngineState4fontEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK17QPaintEngineState4fontEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK17QPaintEngineState4fontEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QFont scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK17QPaintEngineState4fontEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK17QPaintEngineState4fontEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK17QPaintEngineState6matrixEv
QMatrix
SCOREP_LIBWRAP_FUNC_NAME( _ZNK17QPaintEngineState6matrixEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK17QPaintEngineState6matrixEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK17QPaintEngineState6matrixEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QMatrix scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK17QPaintEngineState6matrixEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK17QPaintEngineState6matrixEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK17QPaintEngineState9transformEv
QTransform
SCOREP_LIBWRAP_FUNC_NAME( _ZNK17QPaintEngineState9transformEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK17QPaintEngineState9transformEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK17QPaintEngineState9transformEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTransform scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK17QPaintEngineState9transformEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK17QPaintEngineState9transformEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK17QPaintEngineState13clipOperationEv
Qt::ClipOperation
SCOREP_LIBWRAP_FUNC_NAME( _ZNK17QPaintEngineState13clipOperationEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK17QPaintEngineState13clipOperationEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK17QPaintEngineState13clipOperationEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    Qt::ClipOperation scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK17QPaintEngineState13clipOperationEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK17QPaintEngineState13clipOperationEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK17QPaintEngineState10clipRegionEv
QRegion
SCOREP_LIBWRAP_FUNC_NAME( _ZNK17QPaintEngineState10clipRegionEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK17QPaintEngineState10clipRegionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK17QPaintEngineState10clipRegionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRegion scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK17QPaintEngineState10clipRegionEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK17QPaintEngineState10clipRegionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK17QPaintEngineState8clipPathEv
QPainterPath
SCOREP_LIBWRAP_FUNC_NAME( _ZNK17QPaintEngineState8clipPathEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK17QPaintEngineState8clipPathEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK17QPaintEngineState8clipPathEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPainterPath scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK17QPaintEngineState8clipPathEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK17QPaintEngineState8clipPathEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK17QPaintEngineState13isClipEnabledEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK17QPaintEngineState13isClipEnabledEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK17QPaintEngineState13isClipEnabledEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK17QPaintEngineState13isClipEnabledEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK17QPaintEngineState13isClipEnabledEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK17QPaintEngineState13isClipEnabledEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK17QPaintEngineState11renderHintsEv
QPainter::RenderHints
SCOREP_LIBWRAP_FUNC_NAME( _ZNK17QPaintEngineState11renderHintsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK17QPaintEngineState11renderHintsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK17QPaintEngineState11renderHintsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPainter::RenderHints scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK17QPaintEngineState11renderHintsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK17QPaintEngineState11renderHintsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK17QPaintEngineState15compositionModeEv
QPainter::CompositionMode
SCOREP_LIBWRAP_FUNC_NAME( _ZNK17QPaintEngineState15compositionModeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK17QPaintEngineState15compositionModeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK17QPaintEngineState15compositionModeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPainter::CompositionMode scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK17QPaintEngineState15compositionModeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK17QPaintEngineState15compositionModeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK17QPaintEngineState7opacityEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK17QPaintEngineState7opacityEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK17QPaintEngineState7opacityEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK17QPaintEngineState7opacityEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK17QPaintEngineState7opacityEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK17QPaintEngineState7opacityEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK17QPaintEngineState7painterEv
QPainter *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK17QPaintEngineState7painterEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK17QPaintEngineState7painterEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK17QPaintEngineState7painterEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPainter * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK17QPaintEngineState7painterEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK17QPaintEngineState7painterEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK17QPaintEngineState19brushNeedsResolvingEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK17QPaintEngineState19brushNeedsResolvingEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK17QPaintEngineState19brushNeedsResolvingEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK17QPaintEngineState19brushNeedsResolvingEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK17QPaintEngineState19brushNeedsResolvingEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK17QPaintEngineState19brushNeedsResolvingEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK17QPaintEngineState17penNeedsResolvingEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK17QPaintEngineState17penNeedsResolvingEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK17QPaintEngineState17penNeedsResolvingEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK17QPaintEngineState17penNeedsResolvingEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK17QPaintEngineState17penNeedsResolvingEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK17QPaintEngineState17penNeedsResolvingEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QPdfWriter10metaObjectEv
const QMetaObject *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QPdfWriter10metaObjectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QPdfWriter10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QPdfWriter10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QMetaObject * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QPdfWriter10metaObjectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QPdfWriter10metaObjectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QPdfWriter11qt_metacastEPKc
void *
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QPdfWriter11qt_metacastEPKc )( void *scorep_libwrap_arg_this, const char * scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN10QPdfWriter11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QPdfWriter11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    void * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN10QPdfWriter11qt_metacastEPKc, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QPdfWriter11qt_metacastEPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QPdfWriter11qt_metacallEN11QMetaObject4CallEiPPv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QPdfWriter11qt_metacallEN11QMetaObject4CallEiPPv )( void *scorep_libwrap_arg_this, QMetaObject::Call scorep_libwrap_arg_1, int scorep_libwrap_arg_2, void ** scorep_libwrap_arg_3 )
{
    LIBWRAP_EARLY_INIT( _ZN10QPdfWriter11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QPdfWriter11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN10QPdfWriter11qt_metacallEN11QMetaObject4CallEiPPv, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, scorep_libwrap_arg_2, scorep_libwrap_arg_3 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QPdfWriter11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QPdfWriterC2ERK7QString
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QPdfWriterC2ERK7QString )( void *scorep_libwrap_arg_this, const QString & filename )
{
    LIBWRAP_EARLY_INIT( _ZN10QPdfWriterC2ERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QPdfWriterC2ERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QPdfWriterC2ERK7QString, ( scorep_libwrap_arg_this, filename ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QPdfWriterC2ERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QPdfWriterC1ERK7QString
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QPdfWriterC1ERK7QString )( void *scorep_libwrap_arg_this, const QString & filename )
{
    LIBWRAP_EARLY_INIT( _ZN10QPdfWriterC1ERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QPdfWriterC1ERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QPdfWriterC1ERK7QString, ( scorep_libwrap_arg_this, filename ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QPdfWriterC1ERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QPdfWriterC2EP9QIODevice
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QPdfWriterC2EP9QIODevice )( void *scorep_libwrap_arg_this, QIODevice * device )
{
    LIBWRAP_EARLY_INIT( _ZN10QPdfWriterC2EP9QIODevice );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QPdfWriterC2EP9QIODevice );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QPdfWriterC2EP9QIODevice, ( scorep_libwrap_arg_this, device ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QPdfWriterC2EP9QIODevice );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QPdfWriterC1EP9QIODevice
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QPdfWriterC1EP9QIODevice )( void *scorep_libwrap_arg_this, QIODevice * device )
{
    LIBWRAP_EARLY_INIT( _ZN10QPdfWriterC1EP9QIODevice );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QPdfWriterC1EP9QIODevice );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QPdfWriterC1EP9QIODevice, ( scorep_libwrap_arg_this, device ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QPdfWriterC1EP9QIODevice );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QPdfWriterD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QPdfWriterD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN10QPdfWriterD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QPdfWriterD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QPdfWriterD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QPdfWriterD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QPdfWriterD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QPdfWriterD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN10QPdfWriterD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QPdfWriterD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QPdfWriterD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QPdfWriterD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QPdfWriterD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QPdfWriterD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN10QPdfWriterD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QPdfWriterD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QPdfWriterD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QPdfWriterD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK10QPdfWriter5titleEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QPdfWriter5titleEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QPdfWriter5titleEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QPdfWriter5titleEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QPdfWriter5titleEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QPdfWriter5titleEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QPdfWriter8setTitleERK7QString
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QPdfWriter8setTitleERK7QString )( void *scorep_libwrap_arg_this, const QString & title )
{
    LIBWRAP_EARLY_INIT( _ZN10QPdfWriter8setTitleERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QPdfWriter8setTitleERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QPdfWriter8setTitleERK7QString, ( scorep_libwrap_arg_this, title ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QPdfWriter8setTitleERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK10QPdfWriter7creatorEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QPdfWriter7creatorEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QPdfWriter7creatorEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QPdfWriter7creatorEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QPdfWriter7creatorEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QPdfWriter7creatorEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QPdfWriter10setCreatorERK7QString
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QPdfWriter10setCreatorERK7QString )( void *scorep_libwrap_arg_this, const QString & creator )
{
    LIBWRAP_EARLY_INIT( _ZN10QPdfWriter10setCreatorERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QPdfWriter10setCreatorERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QPdfWriter10setCreatorERK7QString, ( scorep_libwrap_arg_this, creator ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QPdfWriter10setCreatorERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QPdfWriter7newPageEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QPdfWriter7newPageEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN10QPdfWriter7newPageEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QPdfWriter7newPageEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN10QPdfWriter7newPageEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QPdfWriter7newPageEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QPdfWriter13setResolutionEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QPdfWriter13setResolutionEi )( void *scorep_libwrap_arg_this, int resolution )
{
    LIBWRAP_EARLY_INIT( _ZN10QPdfWriter13setResolutionEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QPdfWriter13setResolutionEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QPdfWriter13setResolutionEi, ( scorep_libwrap_arg_this, resolution ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QPdfWriter13setResolutionEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK10QPdfWriter10resolutionEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QPdfWriter10resolutionEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QPdfWriter10resolutionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QPdfWriter10resolutionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QPdfWriter10resolutionEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QPdfWriter10resolutionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QPdfWriter11setPageSizeEN17QPagedPaintDevice8PageSizeE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QPdfWriter11setPageSizeEN17QPagedPaintDevice8PageSizeE )( void *scorep_libwrap_arg_this, QPagedPaintDevice::PageSize size )
{
    LIBWRAP_EARLY_INIT( _ZN10QPdfWriter11setPageSizeEN17QPagedPaintDevice8PageSizeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QPdfWriter11setPageSizeEN17QPagedPaintDevice8PageSizeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QPdfWriter11setPageSizeEN17QPagedPaintDevice8PageSizeE, ( scorep_libwrap_arg_this, size ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QPdfWriter11setPageSizeEN17QPagedPaintDevice8PageSizeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QPdfWriter13setPageSizeMMERK6QSizeF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QPdfWriter13setPageSizeMMERK6QSizeF )( void *scorep_libwrap_arg_this, const QSizeF & size )
{
    LIBWRAP_EARLY_INIT( _ZN10QPdfWriter13setPageSizeMMERK6QSizeF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QPdfWriter13setPageSizeMMERK6QSizeF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QPdfWriter13setPageSizeMMERK6QSizeF, ( scorep_libwrap_arg_this, size ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QPdfWriter13setPageSizeMMERK6QSizeF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QPdfWriter10setMarginsERKN17QPagedPaintDevice7MarginsE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QPdfWriter10setMarginsERKN17QPagedPaintDevice7MarginsE )( void *scorep_libwrap_arg_this, const QPagedPaintDevice::Margins & m )
{
    LIBWRAP_EARLY_INIT( _ZN10QPdfWriter10setMarginsERKN17QPagedPaintDevice7MarginsE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QPdfWriter10setMarginsERKN17QPagedPaintDevice7MarginsE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QPdfWriter10setMarginsERKN17QPagedPaintDevice7MarginsE, ( scorep_libwrap_arg_this, m ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QPdfWriter10setMarginsERKN17QPagedPaintDevice7MarginsE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZlsR11QDataStreamRK11QTextLength
QDataStream &
SCOREP_LIBWRAP_FUNC_NAME( _ZlsR11QDataStreamRK11QTextLength )( QDataStream & scorep_libwrap_arg_1, const QTextLength & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _ZlsR11QDataStreamRK11QTextLength );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZlsR11QDataStreamRK11QTextLength );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDataStream & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZlsR11QDataStreamRK11QTextLength, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZlsR11QDataStreamRK11QTextLength );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZrsR11QDataStreamR11QTextLength
QDataStream &
SCOREP_LIBWRAP_FUNC_NAME( _ZrsR11QDataStreamR11QTextLength )( QDataStream & scorep_libwrap_arg_1, QTextLength & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _ZrsR11QDataStreamR11QTextLength );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZrsR11QDataStreamR11QTextLength );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDataStream & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZrsR11QDataStreamR11QTextLength, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZrsR11QDataStreamR11QTextLength );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _Zls6QDebugRK11QTextLength
QDebug
SCOREP_LIBWRAP_FUNC_NAME( _Zls6QDebugRK11QTextLength )( QDebug scorep_libwrap_arg_1, const QTextLength & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _Zls6QDebugRK11QTextLength );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _Zls6QDebugRK11QTextLength );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDebug scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _Zls6QDebugRK11QTextLength, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _Zls6QDebugRK11QTextLength );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZlsR11QDataStreamRK11QTextFormat
QDataStream &
SCOREP_LIBWRAP_FUNC_NAME( _ZlsR11QDataStreamRK11QTextFormat )( QDataStream & scorep_libwrap_arg_1, const QTextFormat & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _ZlsR11QDataStreamRK11QTextFormat );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZlsR11QDataStreamRK11QTextFormat );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDataStream & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZlsR11QDataStreamRK11QTextFormat, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZlsR11QDataStreamRK11QTextFormat );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZrsR11QDataStreamR11QTextFormat
QDataStream &
SCOREP_LIBWRAP_FUNC_NAME( _ZrsR11QDataStreamR11QTextFormat )( QDataStream & scorep_libwrap_arg_1, QTextFormat & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _ZrsR11QDataStreamR11QTextFormat );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZrsR11QDataStreamR11QTextFormat );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDataStream & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZrsR11QDataStreamR11QTextFormat, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZrsR11QDataStreamR11QTextFormat );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _Zls6QDebugRK11QTextFormat
QDebug
SCOREP_LIBWRAP_FUNC_NAME( _Zls6QDebugRK11QTextFormat )( QDebug scorep_libwrap_arg_1, const QTextFormat & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _Zls6QDebugRK11QTextFormat );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _Zls6QDebugRK11QTextFormat );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDebug scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _Zls6QDebugRK11QTextFormat, ( scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _Zls6QDebugRK11QTextFormat );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QTextFormatC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextFormatC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextFormatC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextFormatC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextFormatC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextFormatC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextFormatC1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextFormatC1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextFormatC1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextFormatC1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextFormatC1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextFormatC1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextFormatC2Ei
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextFormatC2Ei )( void *scorep_libwrap_arg_this, int type )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextFormatC2Ei );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextFormatC2Ei );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextFormatC2Ei, ( scorep_libwrap_arg_this, type ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextFormatC2Ei );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextFormatC1Ei
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextFormatC1Ei )( void *scorep_libwrap_arg_this, int type )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextFormatC1Ei );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextFormatC1Ei );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextFormatC1Ei, ( scorep_libwrap_arg_this, type ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextFormatC1Ei );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextFormatC2ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextFormatC2ERKS_ )( void *scorep_libwrap_arg_this, const QTextFormat & rhs )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextFormatC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextFormatC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextFormatC2ERKS_, ( scorep_libwrap_arg_this, rhs ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextFormatC2ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextFormatC1ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextFormatC1ERKS_ )( void *scorep_libwrap_arg_this, const QTextFormat & rhs )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextFormatC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextFormatC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextFormatC1ERKS_, ( scorep_libwrap_arg_this, rhs ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextFormatC1ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextFormataSERKS_
QTextFormat &
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextFormataSERKS_ )( void *scorep_libwrap_arg_this, const QTextFormat & rhs )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextFormataSERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextFormataSERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextFormat & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextFormataSERKS_, ( scorep_libwrap_arg_this, rhs ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextFormataSERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QTextFormatD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextFormatD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextFormatD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextFormatD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextFormatD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextFormatD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextFormatD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextFormatD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextFormatD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextFormatD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextFormatD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextFormatD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextFormat5mergeERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextFormat5mergeERKS_ )( void *scorep_libwrap_arg_this, const QTextFormat & other )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextFormat5mergeERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextFormat5mergeERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextFormat5mergeERKS_, ( scorep_libwrap_arg_this, other ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextFormat5mergeERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK11QTextFormat4typeEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextFormat4typeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextFormat4typeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextFormat4typeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextFormat4typeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextFormat4typeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextFormat11objectIndexEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextFormat11objectIndexEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextFormat11objectIndexEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextFormat11objectIndexEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextFormat11objectIndexEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextFormat11objectIndexEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QTextFormat14setObjectIndexEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextFormat14setObjectIndexEi )( void *scorep_libwrap_arg_this, int object )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextFormat14setObjectIndexEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextFormat14setObjectIndexEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextFormat14setObjectIndexEi, ( scorep_libwrap_arg_this, object ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextFormat14setObjectIndexEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK11QTextFormat8propertyEi
QVariant
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextFormat8propertyEi )( void *scorep_libwrap_arg_this, int propertyId )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextFormat8propertyEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextFormat8propertyEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QVariant scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextFormat8propertyEi, ( scorep_libwrap_arg_this, propertyId ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextFormat8propertyEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QTextFormat11setPropertyEiRK8QVariant
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextFormat11setPropertyEiRK8QVariant )( void *scorep_libwrap_arg_this, int propertyId, const QVariant & value )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextFormat11setPropertyEiRK8QVariant );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextFormat11setPropertyEiRK8QVariant );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextFormat11setPropertyEiRK8QVariant, ( scorep_libwrap_arg_this, propertyId, value ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextFormat11setPropertyEiRK8QVariant );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextFormat13clearPropertyEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextFormat13clearPropertyEi )( void *scorep_libwrap_arg_this, int propertyId )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextFormat13clearPropertyEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextFormat13clearPropertyEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextFormat13clearPropertyEi, ( scorep_libwrap_arg_this, propertyId ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextFormat13clearPropertyEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK11QTextFormat11hasPropertyEi
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextFormat11hasPropertyEi )( void *scorep_libwrap_arg_this, int propertyId )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextFormat11hasPropertyEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextFormat11hasPropertyEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextFormat11hasPropertyEi, ( scorep_libwrap_arg_this, propertyId ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextFormat11hasPropertyEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextFormat12boolPropertyEi
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextFormat12boolPropertyEi )( void *scorep_libwrap_arg_this, int propertyId )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextFormat12boolPropertyEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextFormat12boolPropertyEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextFormat12boolPropertyEi, ( scorep_libwrap_arg_this, propertyId ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextFormat12boolPropertyEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextFormat11intPropertyEi
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextFormat11intPropertyEi )( void *scorep_libwrap_arg_this, int propertyId )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextFormat11intPropertyEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextFormat11intPropertyEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextFormat11intPropertyEi, ( scorep_libwrap_arg_this, propertyId ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextFormat11intPropertyEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextFormat14doublePropertyEi
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextFormat14doublePropertyEi )( void *scorep_libwrap_arg_this, int propertyId )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextFormat14doublePropertyEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextFormat14doublePropertyEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextFormat14doublePropertyEi, ( scorep_libwrap_arg_this, propertyId ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextFormat14doublePropertyEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextFormat14stringPropertyEi
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextFormat14stringPropertyEi )( void *scorep_libwrap_arg_this, int propertyId )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextFormat14stringPropertyEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextFormat14stringPropertyEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextFormat14stringPropertyEi, ( scorep_libwrap_arg_this, propertyId ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextFormat14stringPropertyEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextFormat13colorPropertyEi
QColor
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextFormat13colorPropertyEi )( void *scorep_libwrap_arg_this, int propertyId )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextFormat13colorPropertyEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextFormat13colorPropertyEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QColor scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextFormat13colorPropertyEi, ( scorep_libwrap_arg_this, propertyId ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextFormat13colorPropertyEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextFormat11penPropertyEi
QPen
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextFormat11penPropertyEi )( void *scorep_libwrap_arg_this, int propertyId )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextFormat11penPropertyEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextFormat11penPropertyEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPen scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextFormat11penPropertyEi, ( scorep_libwrap_arg_this, propertyId ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextFormat11penPropertyEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextFormat13brushPropertyEi
QBrush
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextFormat13brushPropertyEi )( void *scorep_libwrap_arg_this, int propertyId )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextFormat13brushPropertyEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextFormat13brushPropertyEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QBrush scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextFormat13brushPropertyEi, ( scorep_libwrap_arg_this, propertyId ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextFormat13brushPropertyEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextFormat14lengthPropertyEi
QTextLength
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextFormat14lengthPropertyEi )( void *scorep_libwrap_arg_this, int propertyId )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextFormat14lengthPropertyEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextFormat14lengthPropertyEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextLength scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextFormat14lengthPropertyEi, ( scorep_libwrap_arg_this, propertyId ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextFormat14lengthPropertyEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextFormat20lengthVectorPropertyEi
QVector<QTextLength>
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextFormat20lengthVectorPropertyEi )( void *scorep_libwrap_arg_this, int propertyId )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextFormat20lengthVectorPropertyEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextFormat20lengthVectorPropertyEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QVector<QTextLength> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextFormat20lengthVectorPropertyEi, ( scorep_libwrap_arg_this, propertyId ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextFormat20lengthVectorPropertyEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QTextFormat11setPropertyEiRK7QVectorI11QTextLengthE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextFormat11setPropertyEiRK7QVectorI11QTextLengthE )( void *scorep_libwrap_arg_this, int propertyId, const QVector<QTextLength> & lengths )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextFormat11setPropertyEiRK7QVectorI11QTextLengthE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextFormat11setPropertyEiRK7QVectorI11QTextLengthE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextFormat11setPropertyEiRK7QVectorI11QTextLengthE, ( scorep_libwrap_arg_this, propertyId, lengths ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextFormat11setPropertyEiRK7QVectorI11QTextLengthE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK11QTextFormat10propertiesEv
QMap<int, QVariant>
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextFormat10propertiesEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextFormat10propertiesEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextFormat10propertiesEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QMap<int, QVariant> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextFormat10propertiesEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextFormat10propertiesEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextFormat13propertyCountEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextFormat13propertyCountEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextFormat13propertyCountEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextFormat13propertyCountEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextFormat13propertyCountEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextFormat13propertyCountEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextFormat13toBlockFormatEv
QTextBlockFormat
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextFormat13toBlockFormatEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextFormat13toBlockFormatEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextFormat13toBlockFormatEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextBlockFormat scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextFormat13toBlockFormatEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextFormat13toBlockFormatEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextFormat12toCharFormatEv
QTextCharFormat
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextFormat12toCharFormatEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextFormat12toCharFormatEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextFormat12toCharFormatEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextCharFormat scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextFormat12toCharFormatEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextFormat12toCharFormatEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextFormat12toListFormatEv
QTextListFormat
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextFormat12toListFormatEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextFormat12toListFormatEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextFormat12toListFormatEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextListFormat scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextFormat12toListFormatEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextFormat12toListFormatEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextFormat13toTableFormatEv
QTextTableFormat
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextFormat13toTableFormatEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextFormat13toTableFormatEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextFormat13toTableFormatEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextTableFormat scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextFormat13toTableFormatEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextFormat13toTableFormatEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextFormat13toFrameFormatEv
QTextFrameFormat
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextFormat13toFrameFormatEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextFormat13toFrameFormatEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextFormat13toFrameFormatEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextFrameFormat scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextFormat13toFrameFormatEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextFormat13toFrameFormatEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextFormat13toImageFormatEv
QTextImageFormat
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextFormat13toImageFormatEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextFormat13toImageFormatEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextFormat13toImageFormatEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextImageFormat scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextFormat13toImageFormatEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextFormat13toImageFormatEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextFormat17toTableCellFormatEv
QTextTableCellFormat
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextFormat17toTableCellFormatEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextFormat17toTableCellFormatEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextFormat17toTableCellFormatEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextTableCellFormat scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextFormat17toTableCellFormatEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextFormat17toTableCellFormatEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextFormateqERKS_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextFormateqERKS_ )( void *scorep_libwrap_arg_this, const QTextFormat & rhs )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextFormateqERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextFormateqERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextFormateqERKS_, ( scorep_libwrap_arg_this, rhs ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextFormateqERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QFontDatabaseC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QFontDatabaseC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN13QFontDatabaseC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QFontDatabaseC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QFontDatabaseC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QFontDatabaseC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QFontDatabaseC1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QFontDatabaseC1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN13QFontDatabaseC1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QFontDatabaseC1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QFontDatabaseC1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QFontDatabaseC1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK13QFontDatabase14writingSystemsEv
QList<QFontDatabase::WritingSystem>
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QFontDatabase14writingSystemsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QFontDatabase14writingSystemsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QFontDatabase14writingSystemsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QList<QFontDatabase::WritingSystem> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QFontDatabase14writingSystemsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QFontDatabase14writingSystemsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QFontDatabase14writingSystemsERK7QString
QList<QFontDatabase::WritingSystem>
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QFontDatabase14writingSystemsERK7QString )( void *scorep_libwrap_arg_this, const QString & family )
{
    LIBWRAP_EARLY_INIT( _ZNK13QFontDatabase14writingSystemsERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QFontDatabase14writingSystemsERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QList<QFontDatabase::WritingSystem> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QFontDatabase14writingSystemsERK7QString, ( scorep_libwrap_arg_this, family ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QFontDatabase14writingSystemsERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QFontDatabase8familiesENS_13WritingSystemE
QStringList
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QFontDatabase8familiesENS_13WritingSystemE )( void *scorep_libwrap_arg_this, QFontDatabase::WritingSystem writingSystem )
{
    LIBWRAP_EARLY_INIT( _ZNK13QFontDatabase8familiesENS_13WritingSystemE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QFontDatabase8familiesENS_13WritingSystemE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QStringList scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QFontDatabase8familiesENS_13WritingSystemE, ( scorep_libwrap_arg_this, writingSystem ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QFontDatabase8familiesENS_13WritingSystemE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QFontDatabase6stylesERK7QString
QStringList
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QFontDatabase6stylesERK7QString )( void *scorep_libwrap_arg_this, const QString & family )
{
    LIBWRAP_EARLY_INIT( _ZNK13QFontDatabase6stylesERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QFontDatabase6stylesERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QStringList scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QFontDatabase6stylesERK7QString, ( scorep_libwrap_arg_this, family ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QFontDatabase6stylesERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QFontDatabase10pointSizesERK7QStringS2_
QList<int>
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QFontDatabase10pointSizesERK7QStringS2_ )( void *scorep_libwrap_arg_this, const QString & family, const QString & style )
{
    LIBWRAP_EARLY_INIT( _ZN13QFontDatabase10pointSizesERK7QStringS2_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QFontDatabase10pointSizesERK7QStringS2_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QList<int> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN13QFontDatabase10pointSizesERK7QStringS2_, ( scorep_libwrap_arg_this, family, style ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QFontDatabase10pointSizesERK7QStringS2_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QFontDatabase11smoothSizesERK7QStringS2_
QList<int>
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QFontDatabase11smoothSizesERK7QStringS2_ )( void *scorep_libwrap_arg_this, const QString & family, const QString & style )
{
    LIBWRAP_EARLY_INIT( _ZN13QFontDatabase11smoothSizesERK7QStringS2_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QFontDatabase11smoothSizesERK7QStringS2_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QList<int> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN13QFontDatabase11smoothSizesERK7QStringS2_, ( scorep_libwrap_arg_this, family, style ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QFontDatabase11smoothSizesERK7QStringS2_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QFontDatabase11styleStringERK5QFont
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QFontDatabase11styleStringERK5QFont )( void *scorep_libwrap_arg_this, const QFont & font )
{
    LIBWRAP_EARLY_INIT( _ZN13QFontDatabase11styleStringERK5QFont );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QFontDatabase11styleStringERK5QFont );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN13QFontDatabase11styleStringERK5QFont, ( scorep_libwrap_arg_this, font ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QFontDatabase11styleStringERK5QFont );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QFontDatabase11styleStringERK9QFontInfo
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QFontDatabase11styleStringERK9QFontInfo )( void *scorep_libwrap_arg_this, const QFontInfo & fontInfo )
{
    LIBWRAP_EARLY_INIT( _ZN13QFontDatabase11styleStringERK9QFontInfo );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QFontDatabase11styleStringERK9QFontInfo );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN13QFontDatabase11styleStringERK9QFontInfo, ( scorep_libwrap_arg_this, fontInfo ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QFontDatabase11styleStringERK9QFontInfo );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QFontDatabase4fontERK7QStringS2_i
QFont
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QFontDatabase4fontERK7QStringS2_i )( void *scorep_libwrap_arg_this, const QString & family, const QString & style, int pointSize )
{
    LIBWRAP_EARLY_INIT( _ZNK13QFontDatabase4fontERK7QStringS2_i );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QFontDatabase4fontERK7QStringS2_i );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QFont scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QFontDatabase4fontERK7QStringS2_i, ( scorep_libwrap_arg_this, family, style, pointSize ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QFontDatabase4fontERK7QStringS2_i );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QFontDatabase16isBitmapScalableERK7QStringS2_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QFontDatabase16isBitmapScalableERK7QStringS2_ )( void *scorep_libwrap_arg_this, const QString & family, const QString & style )
{
    LIBWRAP_EARLY_INIT( _ZNK13QFontDatabase16isBitmapScalableERK7QStringS2_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QFontDatabase16isBitmapScalableERK7QStringS2_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QFontDatabase16isBitmapScalableERK7QStringS2_, ( scorep_libwrap_arg_this, family, style ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QFontDatabase16isBitmapScalableERK7QStringS2_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QFontDatabase18isSmoothlyScalableERK7QStringS2_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QFontDatabase18isSmoothlyScalableERK7QStringS2_ )( void *scorep_libwrap_arg_this, const QString & family, const QString & style )
{
    LIBWRAP_EARLY_INIT( _ZNK13QFontDatabase18isSmoothlyScalableERK7QStringS2_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QFontDatabase18isSmoothlyScalableERK7QStringS2_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QFontDatabase18isSmoothlyScalableERK7QStringS2_, ( scorep_libwrap_arg_this, family, style ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QFontDatabase18isSmoothlyScalableERK7QStringS2_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QFontDatabase10isScalableERK7QStringS2_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QFontDatabase10isScalableERK7QStringS2_ )( void *scorep_libwrap_arg_this, const QString & family, const QString & style )
{
    LIBWRAP_EARLY_INIT( _ZNK13QFontDatabase10isScalableERK7QStringS2_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QFontDatabase10isScalableERK7QStringS2_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QFontDatabase10isScalableERK7QStringS2_, ( scorep_libwrap_arg_this, family, style ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QFontDatabase10isScalableERK7QStringS2_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QFontDatabase12isFixedPitchERK7QStringS2_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QFontDatabase12isFixedPitchERK7QStringS2_ )( void *scorep_libwrap_arg_this, const QString & family, const QString & style )
{
    LIBWRAP_EARLY_INIT( _ZNK13QFontDatabase12isFixedPitchERK7QStringS2_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QFontDatabase12isFixedPitchERK7QStringS2_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QFontDatabase12isFixedPitchERK7QStringS2_, ( scorep_libwrap_arg_this, family, style ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QFontDatabase12isFixedPitchERK7QStringS2_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QFontDatabase6italicERK7QStringS2_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QFontDatabase6italicERK7QStringS2_ )( void *scorep_libwrap_arg_this, const QString & family, const QString & style )
{
    LIBWRAP_EARLY_INIT( _ZNK13QFontDatabase6italicERK7QStringS2_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QFontDatabase6italicERK7QStringS2_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QFontDatabase6italicERK7QStringS2_, ( scorep_libwrap_arg_this, family, style ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QFontDatabase6italicERK7QStringS2_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QFontDatabase4boldERK7QStringS2_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QFontDatabase4boldERK7QStringS2_ )( void *scorep_libwrap_arg_this, const QString & family, const QString & style )
{
    LIBWRAP_EARLY_INIT( _ZNK13QFontDatabase4boldERK7QStringS2_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QFontDatabase4boldERK7QStringS2_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QFontDatabase4boldERK7QStringS2_, ( scorep_libwrap_arg_this, family, style ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QFontDatabase4boldERK7QStringS2_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QFontDatabase6weightERK7QStringS2_
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QFontDatabase6weightERK7QStringS2_ )( void *scorep_libwrap_arg_this, const QString & family, const QString & style )
{
    LIBWRAP_EARLY_INIT( _ZNK13QFontDatabase6weightERK7QStringS2_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QFontDatabase6weightERK7QStringS2_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QFontDatabase6weightERK7QStringS2_, ( scorep_libwrap_arg_this, family, style ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QFontDatabase6weightERK7QStringS2_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QFontDatabase9hasFamilyERK7QString
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QFontDatabase9hasFamilyERK7QString )( void *scorep_libwrap_arg_this, const QString & family )
{
    LIBWRAP_EARLY_INIT( _ZNK13QFontDatabase9hasFamilyERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QFontDatabase9hasFamilyERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QFontDatabase9hasFamilyERK7QString, ( scorep_libwrap_arg_this, family ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QFontDatabase9hasFamilyERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QFontDatabase15isPrivateFamilyERK7QString
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QFontDatabase15isPrivateFamilyERK7QString )( void *scorep_libwrap_arg_this, const QString & family )
{
    LIBWRAP_EARLY_INIT( _ZNK13QFontDatabase15isPrivateFamilyERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QFontDatabase15isPrivateFamilyERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QFontDatabase15isPrivateFamilyERK7QString, ( scorep_libwrap_arg_this, family ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QFontDatabase15isPrivateFamilyERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QFontDatabase17writingSystemNameENS_13WritingSystemE
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QFontDatabase17writingSystemNameENS_13WritingSystemE )( QFontDatabase::WritingSystem writingSystem )
{
    LIBWRAP_EARLY_INIT( _ZN13QFontDatabase17writingSystemNameENS_13WritingSystemE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QFontDatabase17writingSystemNameENS_13WritingSystemE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN13QFontDatabase17writingSystemNameENS_13WritingSystemE, ( writingSystem ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QFontDatabase17writingSystemNameENS_13WritingSystemE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QFontDatabase19writingSystemSampleENS_13WritingSystemE
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QFontDatabase19writingSystemSampleENS_13WritingSystemE )( QFontDatabase::WritingSystem writingSystem )
{
    LIBWRAP_EARLY_INIT( _ZN13QFontDatabase19writingSystemSampleENS_13WritingSystemE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QFontDatabase19writingSystemSampleENS_13WritingSystemE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN13QFontDatabase19writingSystemSampleENS_13WritingSystemE, ( writingSystem ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QFontDatabase19writingSystemSampleENS_13WritingSystemE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QFontDatabase18addApplicationFontERK7QString
int
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QFontDatabase18addApplicationFontERK7QString )( const QString & fileName )
{
    LIBWRAP_EARLY_INIT( _ZN13QFontDatabase18addApplicationFontERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QFontDatabase18addApplicationFontERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN13QFontDatabase18addApplicationFontERK7QString, ( fileName ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QFontDatabase18addApplicationFontERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QFontDatabase26addApplicationFontFromDataERK10QByteArray
int
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QFontDatabase26addApplicationFontFromDataERK10QByteArray )( const QByteArray & fontData )
{
    LIBWRAP_EARLY_INIT( _ZN13QFontDatabase26addApplicationFontFromDataERK10QByteArray );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QFontDatabase26addApplicationFontFromDataERK10QByteArray );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN13QFontDatabase26addApplicationFontFromDataERK10QByteArray, ( fontData ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QFontDatabase26addApplicationFontFromDataERK10QByteArray );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QFontDatabase23applicationFontFamiliesEi
QStringList
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QFontDatabase23applicationFontFamiliesEi )( int id )
{
    LIBWRAP_EARLY_INIT( _ZN13QFontDatabase23applicationFontFamiliesEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QFontDatabase23applicationFontFamiliesEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QStringList scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN13QFontDatabase23applicationFontFamiliesEi, ( id ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QFontDatabase23applicationFontFamiliesEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QFontDatabase21removeApplicationFontEi
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QFontDatabase21removeApplicationFontEi )( int id )
{
    LIBWRAP_EARLY_INIT( _ZN13QFontDatabase21removeApplicationFontEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QFontDatabase21removeApplicationFontEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN13QFontDatabase21removeApplicationFontEi, ( id ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QFontDatabase21removeApplicationFontEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QFontDatabase25removeAllApplicationFontsEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QFontDatabase25removeAllApplicationFontsEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN13QFontDatabase25removeAllApplicationFontsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QFontDatabase25removeAllApplicationFontsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN13QFontDatabase25removeAllApplicationFontsEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QFontDatabase25removeAllApplicationFontsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QFontDatabase29supportsThreadedFontRenderingEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QFontDatabase29supportsThreadedFontRenderingEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN13QFontDatabase29supportsThreadedFontRenderingEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QFontDatabase29supportsThreadedFontRenderingEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN13QFontDatabase29supportsThreadedFontRenderingEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QFontDatabase29supportsThreadedFontRenderingEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN8QRawFontC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QRawFontC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN8QRawFontC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QRawFontC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QRawFontC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QRawFontC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QRawFontC1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QRawFontC1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN8QRawFontC1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QRawFontC1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QRawFontC1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QRawFontC1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QRawFontC2ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QRawFontC2ERKS_ )( void *scorep_libwrap_arg_this, const QRawFont & other )
{
    LIBWRAP_EARLY_INIT( _ZN8QRawFontC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QRawFontC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QRawFontC2ERKS_, ( scorep_libwrap_arg_this, other ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QRawFontC2ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QRawFontC1ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QRawFontC1ERKS_ )( void *scorep_libwrap_arg_this, const QRawFont & other )
{
    LIBWRAP_EARLY_INIT( _ZN8QRawFontC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QRawFontC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QRawFontC1ERKS_, ( scorep_libwrap_arg_this, other ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QRawFontC1ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QRawFontD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QRawFontD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN8QRawFontD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QRawFontD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QRawFontD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QRawFontD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN8QRawFontD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QRawFontD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN8QRawFontD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QRawFontD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QRawFontD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QRawFontD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK8QRawFonteqERKS_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QRawFonteqERKS_ )( void *scorep_libwrap_arg_this, const QRawFont & other )
{
    LIBWRAP_EARLY_INIT( _ZNK8QRawFonteqERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QRawFonteqERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QRawFonteqERKS_, ( scorep_libwrap_arg_this, other ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QRawFonteqERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK8QRawFont10familyNameEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QRawFont10familyNameEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QRawFont10familyNameEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QRawFont10familyNameEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QRawFont10familyNameEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QRawFont10familyNameEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK8QRawFont9styleNameEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QRawFont9styleNameEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QRawFont9styleNameEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QRawFont9styleNameEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QRawFont9styleNameEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QRawFont9styleNameEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK8QRawFont5styleEv
QFont::Style
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QRawFont5styleEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QRawFont5styleEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QRawFont5styleEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QFont::Style scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QRawFont5styleEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QRawFont5styleEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK8QRawFont6weightEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QRawFont6weightEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QRawFont6weightEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QRawFont6weightEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QRawFont6weightEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QRawFont6weightEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK8QRawFont21glyphIndexesForStringERK7QString
QVector<quint32>
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QRawFont21glyphIndexesForStringERK7QString )( void *scorep_libwrap_arg_this, const QString & text )
{
    LIBWRAP_EARLY_INIT( _ZNK8QRawFont21glyphIndexesForStringERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QRawFont21glyphIndexesForStringERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QVector<quint32> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QRawFont21glyphIndexesForStringERK7QString, ( scorep_libwrap_arg_this, text ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QRawFont21glyphIndexesForStringERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK8QRawFont20glyphIndexesForCharsEPK5QChariPjPi
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QRawFont20glyphIndexesForCharsEPK5QChariPjPi )( void *scorep_libwrap_arg_this, const QChar * chars, int numChars, quint32 * glyphIndexes, int * numGlyphs )
{
    LIBWRAP_EARLY_INIT( _ZNK8QRawFont20glyphIndexesForCharsEPK5QChariPjPi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QRawFont20glyphIndexesForCharsEPK5QChariPjPi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QRawFont20glyphIndexesForCharsEPK5QChariPjPi, ( scorep_libwrap_arg_this, chars, numChars, glyphIndexes, numGlyphs ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QRawFont20glyphIndexesForCharsEPK5QChariPjPi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK8QRawFont23advancesForGlyphIndexesEPKjP7QPointFi
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QRawFont23advancesForGlyphIndexesEPKjP7QPointFi )( void *scorep_libwrap_arg_this, const quint32 * glyphIndexes, QPointF * advances, int numGlyphs )
{
    LIBWRAP_EARLY_INIT( _ZNK8QRawFont23advancesForGlyphIndexesEPKjP7QPointFi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QRawFont23advancesForGlyphIndexesEPKjP7QPointFi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QRawFont23advancesForGlyphIndexesEPKjP7QPointFi, ( scorep_libwrap_arg_this, glyphIndexes, advances, numGlyphs ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QRawFont23advancesForGlyphIndexesEPKjP7QPointFi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK8QRawFont23advancesForGlyphIndexesEPKjP7QPointFi6QFlagsINS_10LayoutFlagEE
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QRawFont23advancesForGlyphIndexesEPKjP7QPointFi6QFlagsINS_10LayoutFlagEE )( void *scorep_libwrap_arg_this, const quint32 * glyphIndexes, QPointF * advances, int numGlyphs, QRawFont::LayoutFlags layoutFlags )
{
    LIBWRAP_EARLY_INIT( _ZNK8QRawFont23advancesForGlyphIndexesEPKjP7QPointFi6QFlagsINS_10LayoutFlagEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QRawFont23advancesForGlyphIndexesEPKjP7QPointFi6QFlagsINS_10LayoutFlagEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QRawFont23advancesForGlyphIndexesEPKjP7QPointFi6QFlagsINS_10LayoutFlagEE, ( scorep_libwrap_arg_this, glyphIndexes, advances, numGlyphs, layoutFlags ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QRawFont23advancesForGlyphIndexesEPKjP7QPointFi6QFlagsINS_10LayoutFlagEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK8QRawFont16alphaMapForGlyphEjNS_16AntialiasingTypeERK10QTransform
QImage
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QRawFont16alphaMapForGlyphEjNS_16AntialiasingTypeERK10QTransform )( void *scorep_libwrap_arg_this, quint32 glyphIndex, QRawFont::AntialiasingType antialiasingType, const QTransform & transform )
{
    LIBWRAP_EARLY_INIT( _ZNK8QRawFont16alphaMapForGlyphEjNS_16AntialiasingTypeERK10QTransform );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QRawFont16alphaMapForGlyphEjNS_16AntialiasingTypeERK10QTransform );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QImage scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QRawFont16alphaMapForGlyphEjNS_16AntialiasingTypeERK10QTransform, ( scorep_libwrap_arg_this, glyphIndex, antialiasingType, transform ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QRawFont16alphaMapForGlyphEjNS_16AntialiasingTypeERK10QTransform );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK8QRawFont12pathForGlyphEj
QPainterPath
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QRawFont12pathForGlyphEj )( void *scorep_libwrap_arg_this, quint32 glyphIndex )
{
    LIBWRAP_EARLY_INIT( _ZNK8QRawFont12pathForGlyphEj );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QRawFont12pathForGlyphEj );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPainterPath scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QRawFont12pathForGlyphEj, ( scorep_libwrap_arg_this, glyphIndex ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QRawFont12pathForGlyphEj );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK8QRawFont12boundingRectEj
QRectF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QRawFont12boundingRectEj )( void *scorep_libwrap_arg_this, quint32 glyphIndex )
{
    LIBWRAP_EARLY_INIT( _ZNK8QRawFont12boundingRectEj );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QRawFont12boundingRectEj );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRectF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QRawFont12boundingRectEj, ( scorep_libwrap_arg_this, glyphIndex ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QRawFont12boundingRectEj );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN8QRawFont12setPixelSizeEd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QRawFont12setPixelSizeEd )( void *scorep_libwrap_arg_this, qreal pixelSize )
{
    LIBWRAP_EARLY_INIT( _ZN8QRawFont12setPixelSizeEd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QRawFont12setPixelSizeEd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN8QRawFont12setPixelSizeEd, ( scorep_libwrap_arg_this, pixelSize ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QRawFont12setPixelSizeEd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK8QRawFont9pixelSizeEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QRawFont9pixelSizeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QRawFont9pixelSizeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QRawFont9pixelSizeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QRawFont9pixelSizeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QRawFont9pixelSizeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK8QRawFont17hintingPreferenceEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QRawFont17hintingPreferenceEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QRawFont17hintingPreferenceEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QRawFont17hintingPreferenceEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QRawFont17hintingPreferenceEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QRawFont17hintingPreferenceEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK8QRawFont6ascentEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QRawFont6ascentEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QRawFont6ascentEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QRawFont6ascentEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QRawFont6ascentEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QRawFont6ascentEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK8QRawFont7descentEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QRawFont7descentEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QRawFont7descentEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QRawFont7descentEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QRawFont7descentEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QRawFont7descentEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK8QRawFont7leadingEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QRawFont7leadingEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QRawFont7leadingEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QRawFont7leadingEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QRawFont7leadingEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QRawFont7leadingEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK8QRawFont7xHeightEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QRawFont7xHeightEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QRawFont7xHeightEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QRawFont7xHeightEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QRawFont7xHeightEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QRawFont7xHeightEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK8QRawFont16averageCharWidthEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QRawFont16averageCharWidthEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QRawFont16averageCharWidthEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QRawFont16averageCharWidthEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QRawFont16averageCharWidthEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QRawFont16averageCharWidthEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK8QRawFont12maxCharWidthEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QRawFont12maxCharWidthEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QRawFont12maxCharWidthEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QRawFont12maxCharWidthEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QRawFont12maxCharWidthEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QRawFont12maxCharWidthEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK8QRawFont13lineThicknessEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QRawFont13lineThicknessEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QRawFont13lineThicknessEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QRawFont13lineThicknessEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QRawFont13lineThicknessEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QRawFont13lineThicknessEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK8QRawFont17underlinePositionEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QRawFont17underlinePositionEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QRawFont17underlinePositionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QRawFont17underlinePositionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QRawFont17underlinePositionEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QRawFont17underlinePositionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK8QRawFont10unitsPerEmEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QRawFont10unitsPerEmEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QRawFont10unitsPerEmEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QRawFont10unitsPerEmEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QRawFont10unitsPerEmEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QRawFont10unitsPerEmEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK8QRawFont17supportsCharacterEj
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QRawFont17supportsCharacterEj )( void *scorep_libwrap_arg_this, uint ucs4 )
{
    LIBWRAP_EARLY_INIT( _ZNK8QRawFont17supportsCharacterEj );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QRawFont17supportsCharacterEj );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QRawFont17supportsCharacterEj, ( scorep_libwrap_arg_this, ucs4 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QRawFont17supportsCharacterEj );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK8QRawFont17supportsCharacterE5QChar
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QRawFont17supportsCharacterE5QChar )( void *scorep_libwrap_arg_this, QChar character )
{
    LIBWRAP_EARLY_INIT( _ZNK8QRawFont17supportsCharacterE5QChar );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QRawFont17supportsCharacterE5QChar );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QRawFont17supportsCharacterE5QChar, ( scorep_libwrap_arg_this, character ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QRawFont17supportsCharacterE5QChar );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK8QRawFont23supportedWritingSystemsEv
QList<QFontDatabase::WritingSystem>
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QRawFont23supportedWritingSystemsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK8QRawFont23supportedWritingSystemsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QRawFont23supportedWritingSystemsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QList<QFontDatabase::WritingSystem> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QRawFont23supportedWritingSystemsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QRawFont23supportedWritingSystemsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK8QRawFont9fontTableEPKc
QByteArray
SCOREP_LIBWRAP_FUNC_NAME( _ZNK8QRawFont9fontTableEPKc )( void *scorep_libwrap_arg_this, const char * tagName )
{
    LIBWRAP_EARLY_INIT( _ZNK8QRawFont9fontTableEPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK8QRawFont9fontTableEPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QByteArray scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK8QRawFont9fontTableEPKc, ( scorep_libwrap_arg_this, tagName ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK8QRawFont9fontTableEPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN8QRawFont8fromFontERK5QFontN13QFontDatabase13WritingSystemE
QRawFont
SCOREP_LIBWRAP_FUNC_NAME( _ZN8QRawFont8fromFontERK5QFontN13QFontDatabase13WritingSystemE )( const QFont & font, QFontDatabase::WritingSystem writingSystem )
{
    LIBWRAP_EARLY_INIT( _ZN8QRawFont8fromFontERK5QFontN13QFontDatabase13WritingSystemE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN8QRawFont8fromFontERK5QFontN13QFontDatabase13WritingSystemE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRawFont scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN8QRawFont8fromFontERK5QFontN13QFontDatabase13WritingSystemE, ( font, writingSystem ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN8QRawFont8fromFontERK5QFontN13QFontDatabase13WritingSystemE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN9QGlyphRunC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QGlyphRunC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN9QGlyphRunC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QGlyphRunC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QGlyphRunC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QGlyphRunC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QGlyphRunC1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QGlyphRunC1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN9QGlyphRunC1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QGlyphRunC1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QGlyphRunC1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QGlyphRunC1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QGlyphRunC2ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QGlyphRunC2ERKS_ )( void *scorep_libwrap_arg_this, const QGlyphRun & other )
{
    LIBWRAP_EARLY_INIT( _ZN9QGlyphRunC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QGlyphRunC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QGlyphRunC2ERKS_, ( scorep_libwrap_arg_this, other ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QGlyphRunC2ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QGlyphRunC1ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QGlyphRunC1ERKS_ )( void *scorep_libwrap_arg_this, const QGlyphRun & other )
{
    LIBWRAP_EARLY_INIT( _ZN9QGlyphRunC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QGlyphRunC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QGlyphRunC1ERKS_, ( scorep_libwrap_arg_this, other ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QGlyphRunC1ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QGlyphRunD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QGlyphRunD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN9QGlyphRunD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QGlyphRunD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QGlyphRunD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QGlyphRunD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QGlyphRunD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QGlyphRunD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN9QGlyphRunD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QGlyphRunD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QGlyphRunD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QGlyphRunD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QGlyphRun10setRawFontERK8QRawFont
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QGlyphRun10setRawFontERK8QRawFont )( void *scorep_libwrap_arg_this, const QRawFont & rawFont )
{
    LIBWRAP_EARLY_INIT( _ZN9QGlyphRun10setRawFontERK8QRawFont );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QGlyphRun10setRawFontERK8QRawFont );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QGlyphRun10setRawFontERK8QRawFont, ( scorep_libwrap_arg_this, rawFont ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QGlyphRun10setRawFontERK8QRawFont );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QGlyphRun10setRawDataEPKjPK7QPointFi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QGlyphRun10setRawDataEPKjPK7QPointFi )( void *scorep_libwrap_arg_this, const quint32 * glyphIndexArray, const QPointF * glyphPositionArray, int size )
{
    LIBWRAP_EARLY_INIT( _ZN9QGlyphRun10setRawDataEPKjPK7QPointFi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QGlyphRun10setRawDataEPKjPK7QPointFi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QGlyphRun10setRawDataEPKjPK7QPointFi, ( scorep_libwrap_arg_this, glyphIndexArray, glyphPositionArray, size ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QGlyphRun10setRawDataEPKjPK7QPointFi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK9QGlyphRun12glyphIndexesEv
QVector<quint32>
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QGlyphRun12glyphIndexesEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QGlyphRun12glyphIndexesEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QGlyphRun12glyphIndexesEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QVector<quint32> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QGlyphRun12glyphIndexesEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QGlyphRun12glyphIndexesEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN9QGlyphRun15setGlyphIndexesERK7QVectorIjE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QGlyphRun15setGlyphIndexesERK7QVectorIjE )( void *scorep_libwrap_arg_this, const QVector<quint32> & glyphIndexes )
{
    LIBWRAP_EARLY_INIT( _ZN9QGlyphRun15setGlyphIndexesERK7QVectorIjE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QGlyphRun15setGlyphIndexesERK7QVectorIjE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QGlyphRun15setGlyphIndexesERK7QVectorIjE, ( scorep_libwrap_arg_this, glyphIndexes ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QGlyphRun15setGlyphIndexesERK7QVectorIjE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK9QGlyphRun9positionsEv
QVector<QPointF>
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QGlyphRun9positionsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QGlyphRun9positionsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QGlyphRun9positionsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QVector<QPointF> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QGlyphRun9positionsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QGlyphRun9positionsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN9QGlyphRun12setPositionsERK7QVectorI7QPointFE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QGlyphRun12setPositionsERK7QVectorI7QPointFE )( void *scorep_libwrap_arg_this, const QVector<QPointF> & positions )
{
    LIBWRAP_EARLY_INIT( _ZN9QGlyphRun12setPositionsERK7QVectorI7QPointFE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QGlyphRun12setPositionsERK7QVectorI7QPointFE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QGlyphRun12setPositionsERK7QVectorI7QPointFE, ( scorep_libwrap_arg_this, positions ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QGlyphRun12setPositionsERK7QVectorI7QPointFE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QGlyphRun5clearEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QGlyphRun5clearEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN9QGlyphRun5clearEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QGlyphRun5clearEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QGlyphRun5clearEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QGlyphRun5clearEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK9QGlyphRuneqERKS_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QGlyphRuneqERKS_ )( void *scorep_libwrap_arg_this, const QGlyphRun & other )
{
    LIBWRAP_EARLY_INIT( _ZNK9QGlyphRuneqERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QGlyphRuneqERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QGlyphRuneqERKS_, ( scorep_libwrap_arg_this, other ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QGlyphRuneqERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN9QGlyphRun11setOverlineEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QGlyphRun11setOverlineEb )( void *scorep_libwrap_arg_this, bool overline )
{
    LIBWRAP_EARLY_INIT( _ZN9QGlyphRun11setOverlineEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QGlyphRun11setOverlineEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QGlyphRun11setOverlineEb, ( scorep_libwrap_arg_this, overline ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QGlyphRun11setOverlineEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK9QGlyphRun8overlineEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QGlyphRun8overlineEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QGlyphRun8overlineEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QGlyphRun8overlineEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QGlyphRun8overlineEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QGlyphRun8overlineEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN9QGlyphRun12setUnderlineEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QGlyphRun12setUnderlineEb )( void *scorep_libwrap_arg_this, bool underline )
{
    LIBWRAP_EARLY_INIT( _ZN9QGlyphRun12setUnderlineEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QGlyphRun12setUnderlineEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QGlyphRun12setUnderlineEb, ( scorep_libwrap_arg_this, underline ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QGlyphRun12setUnderlineEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK9QGlyphRun9underlineEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QGlyphRun9underlineEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QGlyphRun9underlineEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QGlyphRun9underlineEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QGlyphRun9underlineEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QGlyphRun9underlineEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN9QGlyphRun12setStrikeOutEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QGlyphRun12setStrikeOutEb )( void *scorep_libwrap_arg_this, bool strikeOut )
{
    LIBWRAP_EARLY_INIT( _ZN9QGlyphRun12setStrikeOutEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QGlyphRun12setStrikeOutEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QGlyphRun12setStrikeOutEb, ( scorep_libwrap_arg_this, strikeOut ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QGlyphRun12setStrikeOutEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK9QGlyphRun9strikeOutEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QGlyphRun9strikeOutEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QGlyphRun9strikeOutEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QGlyphRun9strikeOutEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QGlyphRun9strikeOutEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QGlyphRun9strikeOutEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN9QGlyphRun14setRightToLeftEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QGlyphRun14setRightToLeftEb )( void *scorep_libwrap_arg_this, bool on )
{
    LIBWRAP_EARLY_INIT( _ZN9QGlyphRun14setRightToLeftEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QGlyphRun14setRightToLeftEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QGlyphRun14setRightToLeftEb, ( scorep_libwrap_arg_this, on ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QGlyphRun14setRightToLeftEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK9QGlyphRun13isRightToLeftEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QGlyphRun13isRightToLeftEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QGlyphRun13isRightToLeftEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QGlyphRun13isRightToLeftEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QGlyphRun13isRightToLeftEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QGlyphRun13isRightToLeftEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN9QGlyphRun7setFlagENS_12GlyphRunFlagEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QGlyphRun7setFlagENS_12GlyphRunFlagEb )( void *scorep_libwrap_arg_this, QGlyphRun::GlyphRunFlag flag, bool enabled )
{
    LIBWRAP_EARLY_INIT( _ZN9QGlyphRun7setFlagENS_12GlyphRunFlagEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QGlyphRun7setFlagENS_12GlyphRunFlagEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QGlyphRun7setFlagENS_12GlyphRunFlagEb, ( scorep_libwrap_arg_this, flag, enabled ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QGlyphRun7setFlagENS_12GlyphRunFlagEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QGlyphRun8setFlagsE6QFlagsINS_12GlyphRunFlagEE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QGlyphRun8setFlagsE6QFlagsINS_12GlyphRunFlagEE )( void *scorep_libwrap_arg_this, QGlyphRun::GlyphRunFlags flags )
{
    LIBWRAP_EARLY_INIT( _ZN9QGlyphRun8setFlagsE6QFlagsINS_12GlyphRunFlagEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QGlyphRun8setFlagsE6QFlagsINS_12GlyphRunFlagEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QGlyphRun8setFlagsE6QFlagsINS_12GlyphRunFlagEE, ( scorep_libwrap_arg_this, flags ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QGlyphRun8setFlagsE6QFlagsINS_12GlyphRunFlagEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK9QGlyphRun5flagsEv
QGlyphRun::GlyphRunFlags
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QGlyphRun5flagsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QGlyphRun5flagsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QGlyphRun5flagsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QGlyphRun::GlyphRunFlags scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QGlyphRun5flagsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QGlyphRun5flagsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN9QGlyphRun15setBoundingRectERK6QRectF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QGlyphRun15setBoundingRectERK6QRectF )( void *scorep_libwrap_arg_this, const QRectF & boundingRect )
{
    LIBWRAP_EARLY_INIT( _ZN9QGlyphRun15setBoundingRectERK6QRectF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QGlyphRun15setBoundingRectERK6QRectF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QGlyphRun15setBoundingRectERK6QRectF, ( scorep_libwrap_arg_this, boundingRect ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QGlyphRun15setBoundingRectERK6QRectF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK9QGlyphRun12boundingRectEv
QRectF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QGlyphRun12boundingRectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QGlyphRun12boundingRectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QGlyphRun12boundingRectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRectF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QGlyphRun12boundingRectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QGlyphRun12boundingRectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QGlyphRun7isEmptyEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QGlyphRun7isEmptyEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QGlyphRun7isEmptyEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QGlyphRun7isEmptyEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QGlyphRun7isEmptyEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QGlyphRun7isEmptyEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QTextCursorC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextCursorC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextCursorC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextCursorC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextCursorC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextCursorC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextCursorC1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextCursorC1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextCursorC1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextCursorC1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextCursorC1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextCursorC1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextCursorC2EP13QTextDocument
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextCursorC2EP13QTextDocument )( void *scorep_libwrap_arg_this, QTextDocument * document )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextCursorC2EP13QTextDocument );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextCursorC2EP13QTextDocument );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextCursorC2EP13QTextDocument, ( scorep_libwrap_arg_this, document ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextCursorC2EP13QTextDocument );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextCursorC1EP13QTextDocument
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextCursorC1EP13QTextDocument )( void *scorep_libwrap_arg_this, QTextDocument * document )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextCursorC1EP13QTextDocument );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextCursorC1EP13QTextDocument );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextCursorC1EP13QTextDocument, ( scorep_libwrap_arg_this, document ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextCursorC1EP13QTextDocument );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextCursorC2EP20QTextDocumentPrivatei
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextCursorC2EP20QTextDocumentPrivatei )( void *scorep_libwrap_arg_this, QTextDocumentPrivate * p, int pos )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextCursorC2EP20QTextDocumentPrivatei );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextCursorC2EP20QTextDocumentPrivatei );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextCursorC2EP20QTextDocumentPrivatei, ( scorep_libwrap_arg_this, p, pos ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextCursorC2EP20QTextDocumentPrivatei );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextCursorC1EP20QTextDocumentPrivatei
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextCursorC1EP20QTextDocumentPrivatei )( void *scorep_libwrap_arg_this, QTextDocumentPrivate * p, int pos )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextCursorC1EP20QTextDocumentPrivatei );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextCursorC1EP20QTextDocumentPrivatei );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextCursorC1EP20QTextDocumentPrivatei, ( scorep_libwrap_arg_this, p, pos ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextCursorC1EP20QTextDocumentPrivatei );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextCursorC2EP18QTextCursorPrivate
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextCursorC2EP18QTextCursorPrivate )( void *scorep_libwrap_arg_this, QTextCursorPrivate * d )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextCursorC2EP18QTextCursorPrivate );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextCursorC2EP18QTextCursorPrivate );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextCursorC2EP18QTextCursorPrivate, ( scorep_libwrap_arg_this, d ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextCursorC2EP18QTextCursorPrivate );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextCursorC1EP18QTextCursorPrivate
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextCursorC1EP18QTextCursorPrivate )( void *scorep_libwrap_arg_this, QTextCursorPrivate * d )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextCursorC1EP18QTextCursorPrivate );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextCursorC1EP18QTextCursorPrivate );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextCursorC1EP18QTextCursorPrivate, ( scorep_libwrap_arg_this, d ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextCursorC1EP18QTextCursorPrivate );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextCursorC2EP10QTextFrame
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextCursorC2EP10QTextFrame )( void *scorep_libwrap_arg_this, QTextFrame * frame )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextCursorC2EP10QTextFrame );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextCursorC2EP10QTextFrame );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextCursorC2EP10QTextFrame, ( scorep_libwrap_arg_this, frame ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextCursorC2EP10QTextFrame );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextCursorC1EP10QTextFrame
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextCursorC1EP10QTextFrame )( void *scorep_libwrap_arg_this, QTextFrame * frame )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextCursorC1EP10QTextFrame );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextCursorC1EP10QTextFrame );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextCursorC1EP10QTextFrame, ( scorep_libwrap_arg_this, frame ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextCursorC1EP10QTextFrame );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextCursorC2ERK10QTextBlock
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextCursorC2ERK10QTextBlock )( void *scorep_libwrap_arg_this, const QTextBlock & block )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextCursorC2ERK10QTextBlock );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextCursorC2ERK10QTextBlock );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextCursorC2ERK10QTextBlock, ( scorep_libwrap_arg_this, block ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextCursorC2ERK10QTextBlock );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextCursorC1ERK10QTextBlock
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextCursorC1ERK10QTextBlock )( void *scorep_libwrap_arg_this, const QTextBlock & block )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextCursorC1ERK10QTextBlock );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextCursorC1ERK10QTextBlock );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextCursorC1ERK10QTextBlock, ( scorep_libwrap_arg_this, block ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextCursorC1ERK10QTextBlock );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextCursorC2ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextCursorC2ERKS_ )( void *scorep_libwrap_arg_this, const QTextCursor & cursor )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextCursorC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextCursorC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextCursorC2ERKS_, ( scorep_libwrap_arg_this, cursor ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextCursorC2ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextCursorC1ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextCursorC1ERKS_ )( void *scorep_libwrap_arg_this, const QTextCursor & cursor )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextCursorC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextCursorC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextCursorC1ERKS_, ( scorep_libwrap_arg_this, cursor ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextCursorC1ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextCursorD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextCursorD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextCursorD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextCursorD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextCursorD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextCursorD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextCursorD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextCursorD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextCursorD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextCursorD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextCursorD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextCursorD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextCursor11setPositionEiNS_8MoveModeE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextCursor11setPositionEiNS_8MoveModeE )( void *scorep_libwrap_arg_this, int pos, QTextCursor::MoveMode mode )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextCursor11setPositionEiNS_8MoveModeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextCursor11setPositionEiNS_8MoveModeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextCursor11setPositionEiNS_8MoveModeE, ( scorep_libwrap_arg_this, pos, mode ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextCursor11setPositionEiNS_8MoveModeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK11QTextCursor8positionEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextCursor8positionEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextCursor8positionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextCursor8positionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextCursor8positionEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextCursor8positionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextCursor15positionInBlockEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextCursor15positionInBlockEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextCursor15positionInBlockEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextCursor15positionInBlockEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextCursor15positionInBlockEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextCursor15positionInBlockEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextCursor6anchorEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextCursor6anchorEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextCursor6anchorEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextCursor6anchorEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextCursor6anchorEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextCursor6anchorEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QTextCursor10insertTextERK7QString
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextCursor10insertTextERK7QString )( void *scorep_libwrap_arg_this, const QString & text )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextCursor10insertTextERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextCursor10insertTextERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextCursor10insertTextERK7QString, ( scorep_libwrap_arg_this, text ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextCursor10insertTextERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextCursor10insertTextERK7QStringRK15QTextCharFormat
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextCursor10insertTextERK7QStringRK15QTextCharFormat )( void *scorep_libwrap_arg_this, const QString & text, const QTextCharFormat & format )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextCursor10insertTextERK7QStringRK15QTextCharFormat );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextCursor10insertTextERK7QStringRK15QTextCharFormat );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextCursor10insertTextERK7QStringRK15QTextCharFormat, ( scorep_libwrap_arg_this, text, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextCursor10insertTextERK7QStringRK15QTextCharFormat );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextCursor12movePositionENS_13MoveOperationENS_8MoveModeEi
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextCursor12movePositionENS_13MoveOperationENS_8MoveModeEi )( void *scorep_libwrap_arg_this, QTextCursor::MoveOperation op, QTextCursor::MoveMode scorep_libwrap_arg_2, int n )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextCursor12movePositionENS_13MoveOperationENS_8MoveModeEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextCursor12movePositionENS_13MoveOperationENS_8MoveModeEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextCursor12movePositionENS_13MoveOperationENS_8MoveModeEi, ( scorep_libwrap_arg_this, op, scorep_libwrap_arg_2, n ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextCursor12movePositionENS_13MoveOperationENS_8MoveModeEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextCursor16visualNavigationEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextCursor16visualNavigationEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextCursor16visualNavigationEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextCursor16visualNavigationEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextCursor16visualNavigationEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextCursor16visualNavigationEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QTextCursor19setVisualNavigationEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextCursor19setVisualNavigationEb )( void *scorep_libwrap_arg_this, bool b )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextCursor19setVisualNavigationEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextCursor19setVisualNavigationEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextCursor19setVisualNavigationEb, ( scorep_libwrap_arg_this, b ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextCursor19setVisualNavigationEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextCursor20setVerticalMovementXEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextCursor20setVerticalMovementXEi )( void *scorep_libwrap_arg_this, int x )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextCursor20setVerticalMovementXEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextCursor20setVerticalMovementXEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextCursor20setVerticalMovementXEi, ( scorep_libwrap_arg_this, x ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextCursor20setVerticalMovementXEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK11QTextCursor17verticalMovementXEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextCursor17verticalMovementXEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextCursor17verticalMovementXEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextCursor17verticalMovementXEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextCursor17verticalMovementXEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextCursor17verticalMovementXEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QTextCursor23setKeepPositionOnInsertEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextCursor23setKeepPositionOnInsertEb )( void *scorep_libwrap_arg_this, bool b )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextCursor23setKeepPositionOnInsertEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextCursor23setKeepPositionOnInsertEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextCursor23setKeepPositionOnInsertEb, ( scorep_libwrap_arg_this, b ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextCursor23setKeepPositionOnInsertEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK11QTextCursor20keepPositionOnInsertEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextCursor20keepPositionOnInsertEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextCursor20keepPositionOnInsertEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextCursor20keepPositionOnInsertEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextCursor20keepPositionOnInsertEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextCursor20keepPositionOnInsertEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QTextCursor10deleteCharEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextCursor10deleteCharEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextCursor10deleteCharEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextCursor10deleteCharEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextCursor10deleteCharEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextCursor10deleteCharEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextCursor18deletePreviousCharEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextCursor18deletePreviousCharEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextCursor18deletePreviousCharEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextCursor18deletePreviousCharEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextCursor18deletePreviousCharEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextCursor18deletePreviousCharEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextCursor6selectENS_13SelectionTypeE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextCursor6selectENS_13SelectionTypeE )( void *scorep_libwrap_arg_this, QTextCursor::SelectionType selection )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextCursor6selectENS_13SelectionTypeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextCursor6selectENS_13SelectionTypeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextCursor6selectENS_13SelectionTypeE, ( scorep_libwrap_arg_this, selection ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextCursor6selectENS_13SelectionTypeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK11QTextCursor12hasSelectionEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextCursor12hasSelectionEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextCursor12hasSelectionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextCursor12hasSelectionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextCursor12hasSelectionEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextCursor12hasSelectionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextCursor19hasComplexSelectionEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextCursor19hasComplexSelectionEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextCursor19hasComplexSelectionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextCursor19hasComplexSelectionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextCursor19hasComplexSelectionEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextCursor19hasComplexSelectionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QTextCursor18removeSelectedTextEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextCursor18removeSelectedTextEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextCursor18removeSelectedTextEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextCursor18removeSelectedTextEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextCursor18removeSelectedTextEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextCursor18removeSelectedTextEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextCursor14clearSelectionEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextCursor14clearSelectionEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextCursor14clearSelectionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextCursor14clearSelectionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextCursor14clearSelectionEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextCursor14clearSelectionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK11QTextCursor14selectionStartEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextCursor14selectionStartEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextCursor14selectionStartEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextCursor14selectionStartEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextCursor14selectionStartEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextCursor14selectionStartEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextCursor12selectionEndEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextCursor12selectionEndEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextCursor12selectionEndEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextCursor12selectionEndEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextCursor12selectionEndEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextCursor12selectionEndEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextCursor12selectedTextEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextCursor12selectedTextEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextCursor12selectedTextEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextCursor12selectedTextEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextCursor12selectedTextEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextCursor12selectedTextEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextCursor9selectionEv
QTextDocumentFragment
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextCursor9selectionEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextCursor9selectionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextCursor9selectionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextDocumentFragment scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextCursor9selectionEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextCursor9selectionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextCursor18selectedTableCellsEPiS0_S0_S0_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextCursor18selectedTableCellsEPiS0_S0_S0_ )( void *scorep_libwrap_arg_this, int * firstRow, int * numRows, int * firstColumn, int * numColumns )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextCursor18selectedTableCellsEPiS0_S0_S0_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextCursor18selectedTableCellsEPiS0_S0_S0_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextCursor18selectedTableCellsEPiS0_S0_S0_, ( scorep_libwrap_arg_this, firstRow, numRows, firstColumn, numColumns ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextCursor18selectedTableCellsEPiS0_S0_S0_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK11QTextCursor5blockEv
QTextBlock
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextCursor5blockEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextCursor5blockEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextCursor5blockEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextBlock scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextCursor5blockEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextCursor5blockEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextCursor10charFormatEv
QTextCharFormat
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextCursor10charFormatEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextCursor10charFormatEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextCursor10charFormatEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextCharFormat scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextCursor10charFormatEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextCursor10charFormatEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QTextCursor13setCharFormatERK15QTextCharFormat
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextCursor13setCharFormatERK15QTextCharFormat )( void *scorep_libwrap_arg_this, const QTextCharFormat & format )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextCursor13setCharFormatERK15QTextCharFormat );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextCursor13setCharFormatERK15QTextCharFormat );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextCursor13setCharFormatERK15QTextCharFormat, ( scorep_libwrap_arg_this, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextCursor13setCharFormatERK15QTextCharFormat );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextCursor15mergeCharFormatERK15QTextCharFormat
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextCursor15mergeCharFormatERK15QTextCharFormat )( void *scorep_libwrap_arg_this, const QTextCharFormat & modifier )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextCursor15mergeCharFormatERK15QTextCharFormat );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextCursor15mergeCharFormatERK15QTextCharFormat );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextCursor15mergeCharFormatERK15QTextCharFormat, ( scorep_libwrap_arg_this, modifier ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextCursor15mergeCharFormatERK15QTextCharFormat );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK11QTextCursor11blockFormatEv
QTextBlockFormat
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextCursor11blockFormatEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextCursor11blockFormatEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextCursor11blockFormatEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextBlockFormat scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextCursor11blockFormatEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextCursor11blockFormatEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QTextCursor14setBlockFormatERK16QTextBlockFormat
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextCursor14setBlockFormatERK16QTextBlockFormat )( void *scorep_libwrap_arg_this, const QTextBlockFormat & format )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextCursor14setBlockFormatERK16QTextBlockFormat );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextCursor14setBlockFormatERK16QTextBlockFormat );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextCursor14setBlockFormatERK16QTextBlockFormat, ( scorep_libwrap_arg_this, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextCursor14setBlockFormatERK16QTextBlockFormat );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextCursor16mergeBlockFormatERK16QTextBlockFormat
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextCursor16mergeBlockFormatERK16QTextBlockFormat )( void *scorep_libwrap_arg_this, const QTextBlockFormat & modifier )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextCursor16mergeBlockFormatERK16QTextBlockFormat );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextCursor16mergeBlockFormatERK16QTextBlockFormat );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextCursor16mergeBlockFormatERK16QTextBlockFormat, ( scorep_libwrap_arg_this, modifier ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextCursor16mergeBlockFormatERK16QTextBlockFormat );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK11QTextCursor15blockCharFormatEv
QTextCharFormat
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextCursor15blockCharFormatEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextCursor15blockCharFormatEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextCursor15blockCharFormatEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextCharFormat scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextCursor15blockCharFormatEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextCursor15blockCharFormatEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QTextCursor18setBlockCharFormatERK15QTextCharFormat
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextCursor18setBlockCharFormatERK15QTextCharFormat )( void *scorep_libwrap_arg_this, const QTextCharFormat & format )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextCursor18setBlockCharFormatERK15QTextCharFormat );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextCursor18setBlockCharFormatERK15QTextCharFormat );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextCursor18setBlockCharFormatERK15QTextCharFormat, ( scorep_libwrap_arg_this, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextCursor18setBlockCharFormatERK15QTextCharFormat );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextCursor20mergeBlockCharFormatERK15QTextCharFormat
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextCursor20mergeBlockCharFormatERK15QTextCharFormat )( void *scorep_libwrap_arg_this, const QTextCharFormat & modifier )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextCursor20mergeBlockCharFormatERK15QTextCharFormat );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextCursor20mergeBlockCharFormatERK15QTextCharFormat );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextCursor20mergeBlockCharFormatERK15QTextCharFormat, ( scorep_libwrap_arg_this, modifier ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextCursor20mergeBlockCharFormatERK15QTextCharFormat );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK11QTextCursor12atBlockStartEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextCursor12atBlockStartEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextCursor12atBlockStartEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextCursor12atBlockStartEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextCursor12atBlockStartEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextCursor12atBlockStartEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextCursor10atBlockEndEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextCursor10atBlockEndEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextCursor10atBlockEndEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextCursor10atBlockEndEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextCursor10atBlockEndEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextCursor10atBlockEndEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextCursor7atStartEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextCursor7atStartEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextCursor7atStartEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextCursor7atStartEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextCursor7atStartEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextCursor7atStartEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextCursor5atEndEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextCursor5atEndEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextCursor5atEndEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextCursor5atEndEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextCursor5atEndEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextCursor5atEndEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QTextCursor11insertBlockEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextCursor11insertBlockEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextCursor11insertBlockEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextCursor11insertBlockEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextCursor11insertBlockEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextCursor11insertBlockEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextCursor11insertBlockERK16QTextBlockFormat
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextCursor11insertBlockERK16QTextBlockFormat )( void *scorep_libwrap_arg_this, const QTextBlockFormat & format )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextCursor11insertBlockERK16QTextBlockFormat );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextCursor11insertBlockERK16QTextBlockFormat );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextCursor11insertBlockERK16QTextBlockFormat, ( scorep_libwrap_arg_this, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextCursor11insertBlockERK16QTextBlockFormat );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextCursor11insertBlockERK16QTextBlockFormatRK15QTextCharFormat
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextCursor11insertBlockERK16QTextBlockFormatRK15QTextCharFormat )( void *scorep_libwrap_arg_this, const QTextBlockFormat & format, const QTextCharFormat & charFormat )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextCursor11insertBlockERK16QTextBlockFormatRK15QTextCharFormat );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextCursor11insertBlockERK16QTextBlockFormatRK15QTextCharFormat );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextCursor11insertBlockERK16QTextBlockFormatRK15QTextCharFormat, ( scorep_libwrap_arg_this, format, charFormat ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextCursor11insertBlockERK16QTextBlockFormatRK15QTextCharFormat );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextCursor10insertListERK15QTextListFormat
QTextList *
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextCursor10insertListERK15QTextListFormat )( void *scorep_libwrap_arg_this, const QTextListFormat & format )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextCursor10insertListERK15QTextListFormat );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextCursor10insertListERK15QTextListFormat );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextList * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextCursor10insertListERK15QTextListFormat, ( scorep_libwrap_arg_this, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextCursor10insertListERK15QTextListFormat );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QTextCursor10createListERK15QTextListFormat
QTextList *
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextCursor10createListERK15QTextListFormat )( void *scorep_libwrap_arg_this, const QTextListFormat & format )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextCursor10createListERK15QTextListFormat );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextCursor10createListERK15QTextListFormat );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextList * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextCursor10createListERK15QTextListFormat, ( scorep_libwrap_arg_this, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextCursor10createListERK15QTextListFormat );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextCursor11currentListEv
QTextList *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextCursor11currentListEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextCursor11currentListEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextCursor11currentListEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextList * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextCursor11currentListEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextCursor11currentListEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QTextCursor11insertTableEiiRK16QTextTableFormat
QTextTable *
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextCursor11insertTableEiiRK16QTextTableFormat )( void *scorep_libwrap_arg_this, int rows, int cols, const QTextTableFormat & format )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextCursor11insertTableEiiRK16QTextTableFormat );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextCursor11insertTableEiiRK16QTextTableFormat );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextTable * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextCursor11insertTableEiiRK16QTextTableFormat, ( scorep_libwrap_arg_this, rows, cols, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextCursor11insertTableEiiRK16QTextTableFormat );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QTextCursor11insertTableEii
QTextTable *
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextCursor11insertTableEii )( void *scorep_libwrap_arg_this, int rows, int cols )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextCursor11insertTableEii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextCursor11insertTableEii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextTable * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextCursor11insertTableEii, ( scorep_libwrap_arg_this, rows, cols ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextCursor11insertTableEii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextCursor12currentTableEv
QTextTable *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextCursor12currentTableEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextCursor12currentTableEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextCursor12currentTableEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextTable * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextCursor12currentTableEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextCursor12currentTableEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QTextCursor11insertFrameERK16QTextFrameFormat
QTextFrame *
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextCursor11insertFrameERK16QTextFrameFormat )( void *scorep_libwrap_arg_this, const QTextFrameFormat & format )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextCursor11insertFrameERK16QTextFrameFormat );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextCursor11insertFrameERK16QTextFrameFormat );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextFrame * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextCursor11insertFrameERK16QTextFrameFormat, ( scorep_libwrap_arg_this, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextCursor11insertFrameERK16QTextFrameFormat );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextCursor12currentFrameEv
QTextFrame *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextCursor12currentFrameEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextCursor12currentFrameEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextCursor12currentFrameEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextFrame * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextCursor12currentFrameEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextCursor12currentFrameEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QTextCursor14insertFragmentERK21QTextDocumentFragment
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextCursor14insertFragmentERK21QTextDocumentFragment )( void *scorep_libwrap_arg_this, const QTextDocumentFragment & fragment )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextCursor14insertFragmentERK21QTextDocumentFragment );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextCursor14insertFragmentERK21QTextDocumentFragment );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextCursor14insertFragmentERK21QTextDocumentFragment, ( scorep_libwrap_arg_this, fragment ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextCursor14insertFragmentERK21QTextDocumentFragment );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextCursor10insertHtmlERK7QString
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextCursor10insertHtmlERK7QString )( void *scorep_libwrap_arg_this, const QString & html )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextCursor10insertHtmlERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextCursor10insertHtmlERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextCursor10insertHtmlERK7QString, ( scorep_libwrap_arg_this, html ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextCursor10insertHtmlERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextCursor11insertImageERK16QTextImageFormat
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextCursor11insertImageERK16QTextImageFormat )( void *scorep_libwrap_arg_this, const QTextImageFormat & format )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextCursor11insertImageERK16QTextImageFormat );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextCursor11insertImageERK16QTextImageFormat );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextCursor11insertImageERK16QTextImageFormat, ( scorep_libwrap_arg_this, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextCursor11insertImageERK16QTextImageFormat );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextCursor11insertImageERK7QString
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextCursor11insertImageERK7QString )( void *scorep_libwrap_arg_this, const QString & name )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextCursor11insertImageERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextCursor11insertImageERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextCursor11insertImageERK7QString, ( scorep_libwrap_arg_this, name ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextCursor11insertImageERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextCursor11insertImageERK6QImageRK7QString
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextCursor11insertImageERK6QImageRK7QString )( void *scorep_libwrap_arg_this, const QImage & image, const QString & name )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextCursor11insertImageERK6QImageRK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextCursor11insertImageERK6QImageRK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextCursor11insertImageERK6QImageRK7QString, ( scorep_libwrap_arg_this, image, name ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextCursor11insertImageERK6QImageRK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextCursor14beginEditBlockEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextCursor14beginEditBlockEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextCursor14beginEditBlockEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextCursor14beginEditBlockEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextCursor14beginEditBlockEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextCursor14beginEditBlockEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextCursor21joinPreviousEditBlockEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextCursor21joinPreviousEditBlockEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextCursor21joinPreviousEditBlockEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextCursor21joinPreviousEditBlockEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextCursor21joinPreviousEditBlockEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextCursor21joinPreviousEditBlockEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextCursor12endEditBlockEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextCursor12endEditBlockEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextCursor12endEditBlockEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextCursor12endEditBlockEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextCursor12endEditBlockEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextCursor12endEditBlockEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK11QTextCursorneERKS_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextCursorneERKS_ )( void *scorep_libwrap_arg_this, const QTextCursor & rhs )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextCursorneERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextCursorneERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextCursorneERKS_, ( scorep_libwrap_arg_this, rhs ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextCursorneERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextCursorltERKS_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextCursorltERKS_ )( void *scorep_libwrap_arg_this, const QTextCursor & rhs )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextCursorltERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextCursorltERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextCursorltERKS_, ( scorep_libwrap_arg_this, rhs ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextCursorltERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextCursorleERKS_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextCursorleERKS_ )( void *scorep_libwrap_arg_this, const QTextCursor & rhs )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextCursorleERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextCursorleERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextCursorleERKS_, ( scorep_libwrap_arg_this, rhs ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextCursorleERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextCursoreqERKS_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextCursoreqERKS_ )( void *scorep_libwrap_arg_this, const QTextCursor & rhs )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextCursoreqERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextCursoreqERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextCursoreqERKS_, ( scorep_libwrap_arg_this, rhs ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextCursoreqERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextCursorgeERKS_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextCursorgeERKS_ )( void *scorep_libwrap_arg_this, const QTextCursor & rhs )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextCursorgeERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextCursorgeERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextCursorgeERKS_, ( scorep_libwrap_arg_this, rhs ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextCursorgeERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextCursorgtERKS_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextCursorgtERKS_ )( void *scorep_libwrap_arg_this, const QTextCursor & rhs )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextCursorgtERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextCursorgtERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextCursorgtERKS_, ( scorep_libwrap_arg_this, rhs ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextCursorgtERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextCursor8isCopyOfERKS_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextCursor8isCopyOfERKS_ )( void *scorep_libwrap_arg_this, const QTextCursor & other )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextCursor8isCopyOfERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextCursor8isCopyOfERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextCursor8isCopyOfERKS_, ( scorep_libwrap_arg_this, other ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextCursor8isCopyOfERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextCursor11blockNumberEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextCursor11blockNumberEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextCursor11blockNumberEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextCursor11blockNumberEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextCursor11blockNumberEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextCursor11blockNumberEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextCursor12columnNumberEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextCursor12columnNumberEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextCursor12columnNumberEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextCursor12columnNumberEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextCursor12columnNumberEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextCursor12columnNumberEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextCursor8documentEv
QTextDocument *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextCursor8documentEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextCursor8documentEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextCursor8documentEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextDocument * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextCursor8documentEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextCursor8documentEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK17QTextInlineObject4rectEv
QRectF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK17QTextInlineObject4rectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK17QTextInlineObject4rectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK17QTextInlineObject4rectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRectF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK17QTextInlineObject4rectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK17QTextInlineObject4rectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK17QTextInlineObject5widthEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK17QTextInlineObject5widthEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK17QTextInlineObject5widthEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK17QTextInlineObject5widthEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK17QTextInlineObject5widthEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK17QTextInlineObject5widthEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK17QTextInlineObject6ascentEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK17QTextInlineObject6ascentEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK17QTextInlineObject6ascentEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK17QTextInlineObject6ascentEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK17QTextInlineObject6ascentEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK17QTextInlineObject6ascentEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK17QTextInlineObject7descentEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK17QTextInlineObject7descentEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK17QTextInlineObject7descentEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK17QTextInlineObject7descentEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK17QTextInlineObject7descentEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK17QTextInlineObject7descentEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK17QTextInlineObject6heightEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK17QTextInlineObject6heightEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK17QTextInlineObject6heightEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK17QTextInlineObject6heightEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK17QTextInlineObject6heightEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK17QTextInlineObject6heightEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK17QTextInlineObject13textDirectionEv
Qt::LayoutDirection
SCOREP_LIBWRAP_FUNC_NAME( _ZNK17QTextInlineObject13textDirectionEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK17QTextInlineObject13textDirectionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK17QTextInlineObject13textDirectionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    Qt::LayoutDirection scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK17QTextInlineObject13textDirectionEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK17QTextInlineObject13textDirectionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN17QTextInlineObject8setWidthEd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QTextInlineObject8setWidthEd )( void *scorep_libwrap_arg_this, qreal w )
{
    LIBWRAP_EARLY_INIT( _ZN17QTextInlineObject8setWidthEd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QTextInlineObject8setWidthEd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QTextInlineObject8setWidthEd, ( scorep_libwrap_arg_this, w ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QTextInlineObject8setWidthEd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN17QTextInlineObject9setAscentEd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QTextInlineObject9setAscentEd )( void *scorep_libwrap_arg_this, qreal a )
{
    LIBWRAP_EARLY_INIT( _ZN17QTextInlineObject9setAscentEd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QTextInlineObject9setAscentEd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QTextInlineObject9setAscentEd, ( scorep_libwrap_arg_this, a ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QTextInlineObject9setAscentEd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN17QTextInlineObject10setDescentEd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN17QTextInlineObject10setDescentEd )( void *scorep_libwrap_arg_this, qreal d )
{
    LIBWRAP_EARLY_INIT( _ZN17QTextInlineObject10setDescentEd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN17QTextInlineObject10setDescentEd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN17QTextInlineObject10setDescentEd, ( scorep_libwrap_arg_this, d ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN17QTextInlineObject10setDescentEd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK17QTextInlineObject12textPositionEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK17QTextInlineObject12textPositionEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK17QTextInlineObject12textPositionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK17QTextInlineObject12textPositionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK17QTextInlineObject12textPositionEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK17QTextInlineObject12textPositionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK17QTextInlineObject11formatIndexEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK17QTextInlineObject11formatIndexEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK17QTextInlineObject11formatIndexEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK17QTextInlineObject11formatIndexEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK17QTextInlineObject11formatIndexEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK17QTextInlineObject11formatIndexEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK17QTextInlineObject6formatEv
QTextFormat
SCOREP_LIBWRAP_FUNC_NAME( _ZNK17QTextInlineObject6formatEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK17QTextInlineObject6formatEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK17QTextInlineObject6formatEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextFormat scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK17QTextInlineObject6formatEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK17QTextInlineObject6formatEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QTextLayoutC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextLayoutC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextLayoutC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextLayoutC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextLayoutC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextLayoutC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextLayoutC1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextLayoutC1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextLayoutC1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextLayoutC1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextLayoutC1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextLayoutC1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextLayoutC2ERK7QString
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextLayoutC2ERK7QString )( void *scorep_libwrap_arg_this, const QString & text )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextLayoutC2ERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextLayoutC2ERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextLayoutC2ERK7QString, ( scorep_libwrap_arg_this, text ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextLayoutC2ERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextLayoutC1ERK7QString
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextLayoutC1ERK7QString )( void *scorep_libwrap_arg_this, const QString & text )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextLayoutC1ERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextLayoutC1ERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextLayoutC1ERK7QString, ( scorep_libwrap_arg_this, text ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextLayoutC1ERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextLayoutC2ERK7QStringRK5QFontP12QPaintDevice
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextLayoutC2ERK7QStringRK5QFontP12QPaintDevice )( void *scorep_libwrap_arg_this, const QString & text, const QFont & font, QPaintDevice * paintdevice )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextLayoutC2ERK7QStringRK5QFontP12QPaintDevice );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextLayoutC2ERK7QStringRK5QFontP12QPaintDevice );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextLayoutC2ERK7QStringRK5QFontP12QPaintDevice, ( scorep_libwrap_arg_this, text, font, paintdevice ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextLayoutC2ERK7QStringRK5QFontP12QPaintDevice );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextLayoutC1ERK7QStringRK5QFontP12QPaintDevice
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextLayoutC1ERK7QStringRK5QFontP12QPaintDevice )( void *scorep_libwrap_arg_this, const QString & text, const QFont & font, QPaintDevice * paintdevice )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextLayoutC1ERK7QStringRK5QFontP12QPaintDevice );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextLayoutC1ERK7QStringRK5QFontP12QPaintDevice );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextLayoutC1ERK7QStringRK5QFontP12QPaintDevice, ( scorep_libwrap_arg_this, text, font, paintdevice ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextLayoutC1ERK7QStringRK5QFontP12QPaintDevice );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextLayoutC2ERK10QTextBlock
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextLayoutC2ERK10QTextBlock )( void *scorep_libwrap_arg_this, const QTextBlock & b )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextLayoutC2ERK10QTextBlock );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextLayoutC2ERK10QTextBlock );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextLayoutC2ERK10QTextBlock, ( scorep_libwrap_arg_this, b ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextLayoutC2ERK10QTextBlock );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextLayoutC1ERK10QTextBlock
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextLayoutC1ERK10QTextBlock )( void *scorep_libwrap_arg_this, const QTextBlock & b )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextLayoutC1ERK10QTextBlock );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextLayoutC1ERK10QTextBlock );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextLayoutC1ERK10QTextBlock, ( scorep_libwrap_arg_this, b ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextLayoutC1ERK10QTextBlock );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextLayoutD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextLayoutD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextLayoutD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextLayoutD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextLayoutD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextLayoutD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextLayoutD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextLayoutD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextLayoutD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextLayoutD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextLayoutD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextLayoutD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextLayout7setFontERK5QFont
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextLayout7setFontERK5QFont )( void *scorep_libwrap_arg_this, const QFont & f )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextLayout7setFontERK5QFont );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextLayout7setFontERK5QFont );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextLayout7setFontERK5QFont, ( scorep_libwrap_arg_this, f ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextLayout7setFontERK5QFont );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK11QTextLayout4fontEv
QFont
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextLayout4fontEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextLayout4fontEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextLayout4fontEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QFont scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextLayout4fontEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextLayout4fontEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QTextLayout10setRawFontERK8QRawFont
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextLayout10setRawFontERK8QRawFont )( void *scorep_libwrap_arg_this, const QRawFont & rawFont )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextLayout10setRawFontERK8QRawFont );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextLayout10setRawFontERK8QRawFont );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextLayout10setRawFontERK8QRawFont, ( scorep_libwrap_arg_this, rawFont ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextLayout10setRawFontERK8QRawFont );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextLayout7setTextERK7QString
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextLayout7setTextERK7QString )( void *scorep_libwrap_arg_this, const QString & string )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextLayout7setTextERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextLayout7setTextERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextLayout7setTextERK7QString, ( scorep_libwrap_arg_this, string ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextLayout7setTextERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK11QTextLayout4textEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextLayout4textEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextLayout4textEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextLayout4textEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextLayout4textEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextLayout4textEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QTextLayout13setTextOptionERK11QTextOption
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextLayout13setTextOptionERK11QTextOption )( void *scorep_libwrap_arg_this, const QTextOption & option )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextLayout13setTextOptionERK11QTextOption );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextLayout13setTextOptionERK11QTextOption );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextLayout13setTextOptionERK11QTextOption, ( scorep_libwrap_arg_this, option ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextLayout13setTextOptionERK11QTextOption );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK11QTextLayout10textOptionEv
const QTextOption &
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextLayout10textOptionEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextLayout10textOptionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextLayout10textOptionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QTextOption & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextLayout10textOptionEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextLayout10textOptionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QTextLayout14setPreeditAreaEiRK7QString
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextLayout14setPreeditAreaEiRK7QString )( void *scorep_libwrap_arg_this, int position, const QString & text )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextLayout14setPreeditAreaEiRK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextLayout14setPreeditAreaEiRK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextLayout14setPreeditAreaEiRK7QString, ( scorep_libwrap_arg_this, position, text ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextLayout14setPreeditAreaEiRK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK11QTextLayout19preeditAreaPositionEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextLayout19preeditAreaPositionEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextLayout19preeditAreaPositionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextLayout19preeditAreaPositionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextLayout19preeditAreaPositionEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextLayout19preeditAreaPositionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextLayout15preeditAreaTextEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextLayout15preeditAreaTextEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextLayout15preeditAreaTextEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextLayout15preeditAreaTextEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextLayout15preeditAreaTextEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextLayout15preeditAreaTextEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QTextLayout20setAdditionalFormatsERK5QListINS_11FormatRangeEE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextLayout20setAdditionalFormatsERK5QListINS_11FormatRangeEE )( void *scorep_libwrap_arg_this, const QList<QTextLayout::FormatRange> & overrides )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextLayout20setAdditionalFormatsERK5QListINS_11FormatRangeEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextLayout20setAdditionalFormatsERK5QListINS_11FormatRangeEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextLayout20setAdditionalFormatsERK5QListINS_11FormatRangeEE, ( scorep_libwrap_arg_this, overrides ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextLayout20setAdditionalFormatsERK5QListINS_11FormatRangeEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK11QTextLayout17additionalFormatsEv
QList<QTextLayout::FormatRange>
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextLayout17additionalFormatsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextLayout17additionalFormatsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextLayout17additionalFormatsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QList<QTextLayout::FormatRange> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextLayout17additionalFormatsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextLayout17additionalFormatsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QTextLayout22clearAdditionalFormatsEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextLayout22clearAdditionalFormatsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextLayout22clearAdditionalFormatsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextLayout22clearAdditionalFormatsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextLayout22clearAdditionalFormatsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextLayout22clearAdditionalFormatsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextLayout10setFormatsERK7QVectorINS_11FormatRangeEE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextLayout10setFormatsERK7QVectorINS_11FormatRangeEE )( void *scorep_libwrap_arg_this, const QVector<QTextLayout::FormatRange> & overrides )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextLayout10setFormatsERK7QVectorINS_11FormatRangeEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextLayout10setFormatsERK7QVectorINS_11FormatRangeEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextLayout10setFormatsERK7QVectorINS_11FormatRangeEE, ( scorep_libwrap_arg_this, overrides ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextLayout10setFormatsERK7QVectorINS_11FormatRangeEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK11QTextLayout7formatsEv
QVector<QTextLayout::FormatRange>
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextLayout7formatsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextLayout7formatsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextLayout7formatsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QVector<QTextLayout::FormatRange> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextLayout7formatsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextLayout7formatsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QTextLayout12clearFormatsEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextLayout12clearFormatsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextLayout12clearFormatsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextLayout12clearFormatsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextLayout12clearFormatsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextLayout12clearFormatsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextLayout15setCacheEnabledEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextLayout15setCacheEnabledEb )( void *scorep_libwrap_arg_this, bool enable )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextLayout15setCacheEnabledEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextLayout15setCacheEnabledEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextLayout15setCacheEnabledEb, ( scorep_libwrap_arg_this, enable ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextLayout15setCacheEnabledEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK11QTextLayout12cacheEnabledEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextLayout12cacheEnabledEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextLayout12cacheEnabledEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextLayout12cacheEnabledEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextLayout12cacheEnabledEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextLayout12cacheEnabledEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QTextLayout18setCursorMoveStyleEN2Qt15CursorMoveStyleE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextLayout18setCursorMoveStyleEN2Qt15CursorMoveStyleE )( void *scorep_libwrap_arg_this, Qt::CursorMoveStyle style )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextLayout18setCursorMoveStyleEN2Qt15CursorMoveStyleE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextLayout18setCursorMoveStyleEN2Qt15CursorMoveStyleE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextLayout18setCursorMoveStyleEN2Qt15CursorMoveStyleE, ( scorep_libwrap_arg_this, style ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextLayout18setCursorMoveStyleEN2Qt15CursorMoveStyleE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK11QTextLayout15cursorMoveStyleEv
Qt::CursorMoveStyle
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextLayout15cursorMoveStyleEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextLayout15cursorMoveStyleEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextLayout15cursorMoveStyleEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    Qt::CursorMoveStyle scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextLayout15cursorMoveStyleEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextLayout15cursorMoveStyleEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QTextLayout11beginLayoutEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextLayout11beginLayoutEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextLayout11beginLayoutEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextLayout11beginLayoutEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextLayout11beginLayoutEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextLayout11beginLayoutEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextLayout9endLayoutEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextLayout9endLayoutEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextLayout9endLayoutEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextLayout9endLayoutEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextLayout9endLayoutEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextLayout9endLayoutEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextLayout11clearLayoutEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextLayout11clearLayoutEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextLayout11clearLayoutEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextLayout11clearLayoutEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextLayout11clearLayoutEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextLayout11clearLayoutEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QTextLayout10createLineEv
QTextLine
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextLayout10createLineEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextLayout10createLineEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextLayout10createLineEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextLine scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextLayout10createLineEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextLayout10createLineEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextLayout9lineCountEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextLayout9lineCountEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextLayout9lineCountEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextLayout9lineCountEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextLayout9lineCountEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextLayout9lineCountEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextLayout6lineAtEi
QTextLine
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextLayout6lineAtEi )( void *scorep_libwrap_arg_this, int i )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextLayout6lineAtEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextLayout6lineAtEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextLine scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextLayout6lineAtEi, ( scorep_libwrap_arg_this, i ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextLayout6lineAtEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextLayout19lineForTextPositionEi
QTextLine
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextLayout19lineForTextPositionEi )( void *scorep_libwrap_arg_this, int pos )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextLayout19lineForTextPositionEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextLayout19lineForTextPositionEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextLine scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextLayout19lineForTextPositionEi, ( scorep_libwrap_arg_this, pos ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextLayout19lineForTextPositionEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextLayout21isValidCursorPositionEi
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextLayout21isValidCursorPositionEi )( void *scorep_libwrap_arg_this, int pos )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextLayout21isValidCursorPositionEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextLayout21isValidCursorPositionEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextLayout21isValidCursorPositionEi, ( scorep_libwrap_arg_this, pos ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextLayout21isValidCursorPositionEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextLayout18nextCursorPositionEiNS_10CursorModeE
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextLayout18nextCursorPositionEiNS_10CursorModeE )( void *scorep_libwrap_arg_this, int oldPos, QTextLayout::CursorMode mode )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextLayout18nextCursorPositionEiNS_10CursorModeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextLayout18nextCursorPositionEiNS_10CursorModeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextLayout18nextCursorPositionEiNS_10CursorModeE, ( scorep_libwrap_arg_this, oldPos, mode ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextLayout18nextCursorPositionEiNS_10CursorModeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextLayout22previousCursorPositionEiNS_10CursorModeE
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextLayout22previousCursorPositionEiNS_10CursorModeE )( void *scorep_libwrap_arg_this, int oldPos, QTextLayout::CursorMode mode )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextLayout22previousCursorPositionEiNS_10CursorModeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextLayout22previousCursorPositionEiNS_10CursorModeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextLayout22previousCursorPositionEiNS_10CursorModeE, ( scorep_libwrap_arg_this, oldPos, mode ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextLayout22previousCursorPositionEiNS_10CursorModeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextLayout18leftCursorPositionEi
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextLayout18leftCursorPositionEi )( void *scorep_libwrap_arg_this, int oldPos )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextLayout18leftCursorPositionEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextLayout18leftCursorPositionEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextLayout18leftCursorPositionEi, ( scorep_libwrap_arg_this, oldPos ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextLayout18leftCursorPositionEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextLayout19rightCursorPositionEi
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextLayout19rightCursorPositionEi )( void *scorep_libwrap_arg_this, int oldPos )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextLayout19rightCursorPositionEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextLayout19rightCursorPositionEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextLayout19rightCursorPositionEi, ( scorep_libwrap_arg_this, oldPos ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextLayout19rightCursorPositionEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextLayout4drawEP8QPainterRK7QPointFRK7QVectorINS_11FormatRangeEERK6QRectF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextLayout4drawEP8QPainterRK7QPointFRK7QVectorINS_11FormatRangeEERK6QRectF )( void *scorep_libwrap_arg_this, QPainter * p, const QPointF & pos, const QVector<QTextLayout::FormatRange> & selections, const QRectF & clip )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextLayout4drawEP8QPainterRK7QPointFRK7QVectorINS_11FormatRangeEERK6QRectF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextLayout4drawEP8QPainterRK7QPointFRK7QVectorINS_11FormatRangeEERK6QRectF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextLayout4drawEP8QPainterRK7QPointFRK7QVectorINS_11FormatRangeEERK6QRectF, ( scorep_libwrap_arg_this, p, pos, selections, clip ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextLayout4drawEP8QPainterRK7QPointFRK7QVectorINS_11FormatRangeEERK6QRectF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK11QTextLayout10drawCursorEP8QPainterRK7QPointFi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextLayout10drawCursorEP8QPainterRK7QPointFi )( void *scorep_libwrap_arg_this, QPainter * p, const QPointF & pos, int cursorPosition )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextLayout10drawCursorEP8QPainterRK7QPointFi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextLayout10drawCursorEP8QPainterRK7QPointFi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextLayout10drawCursorEP8QPainterRK7QPointFi, ( scorep_libwrap_arg_this, p, pos, cursorPosition ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextLayout10drawCursorEP8QPainterRK7QPointFi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK11QTextLayout10drawCursorEP8QPainterRK7QPointFii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextLayout10drawCursorEP8QPainterRK7QPointFii )( void *scorep_libwrap_arg_this, QPainter * p, const QPointF & pos, int cursorPosition, int width )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextLayout10drawCursorEP8QPainterRK7QPointFii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextLayout10drawCursorEP8QPainterRK7QPointFii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextLayout10drawCursorEP8QPainterRK7QPointFii, ( scorep_libwrap_arg_this, p, pos, cursorPosition, width ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextLayout10drawCursorEP8QPainterRK7QPointFii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK11QTextLayout8positionEv
QPointF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextLayout8positionEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextLayout8positionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextLayout8positionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPointF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextLayout8positionEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextLayout8positionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QTextLayout11setPositionERK7QPointF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextLayout11setPositionERK7QPointF )( void *scorep_libwrap_arg_this, const QPointF & p )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextLayout11setPositionERK7QPointF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextLayout11setPositionERK7QPointF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextLayout11setPositionERK7QPointF, ( scorep_libwrap_arg_this, p ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextLayout11setPositionERK7QPointF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK11QTextLayout12boundingRectEv
QRectF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextLayout12boundingRectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextLayout12boundingRectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextLayout12boundingRectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRectF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextLayout12boundingRectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextLayout12boundingRectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextLayout12minimumWidthEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextLayout12minimumWidthEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextLayout12minimumWidthEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextLayout12minimumWidthEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextLayout12minimumWidthEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextLayout12minimumWidthEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextLayout12maximumWidthEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextLayout12maximumWidthEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextLayout12maximumWidthEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextLayout12maximumWidthEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextLayout12maximumWidthEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextLayout12maximumWidthEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextLayout9glyphRunsEii
QList<QGlyphRun>
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextLayout9glyphRunsEii )( void *scorep_libwrap_arg_this, int from, int length )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextLayout9glyphRunsEii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextLayout9glyphRunsEii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QList<QGlyphRun> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextLayout9glyphRunsEii, ( scorep_libwrap_arg_this, from, length ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextLayout9glyphRunsEii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QTextLayout8setFlagsEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextLayout8setFlagsEi )( void *scorep_libwrap_arg_this, int flags )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextLayout8setFlagsEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextLayout8setFlagsEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextLayout8setFlagsEi, ( scorep_libwrap_arg_this, flags ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextLayout8setFlagsEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK9QTextLine4rectEv
QRectF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QTextLine4rectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QTextLine4rectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QTextLine4rectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRectF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QTextLine4rectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QTextLine4rectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QTextLine1xEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QTextLine1xEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QTextLine1xEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QTextLine1xEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QTextLine1xEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QTextLine1xEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QTextLine1yEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QTextLine1yEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QTextLine1yEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QTextLine1yEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QTextLine1yEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QTextLine1yEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QTextLine5widthEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QTextLine5widthEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QTextLine5widthEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QTextLine5widthEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QTextLine5widthEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QTextLine5widthEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QTextLine6ascentEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QTextLine6ascentEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QTextLine6ascentEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QTextLine6ascentEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QTextLine6ascentEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QTextLine6ascentEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QTextLine7descentEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QTextLine7descentEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QTextLine7descentEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QTextLine7descentEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QTextLine7descentEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QTextLine7descentEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QTextLine6heightEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QTextLine6heightEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QTextLine6heightEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QTextLine6heightEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QTextLine6heightEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QTextLine6heightEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QTextLine7leadingEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QTextLine7leadingEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QTextLine7leadingEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QTextLine7leadingEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QTextLine7leadingEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QTextLine7leadingEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN9QTextLine18setLeadingIncludedEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QTextLine18setLeadingIncludedEb )( void *scorep_libwrap_arg_this, bool included )
{
    LIBWRAP_EARLY_INIT( _ZN9QTextLine18setLeadingIncludedEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QTextLine18setLeadingIncludedEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QTextLine18setLeadingIncludedEb, ( scorep_libwrap_arg_this, included ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QTextLine18setLeadingIncludedEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK9QTextLine15leadingIncludedEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QTextLine15leadingIncludedEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QTextLine15leadingIncludedEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QTextLine15leadingIncludedEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QTextLine15leadingIncludedEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QTextLine15leadingIncludedEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QTextLine16naturalTextWidthEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QTextLine16naturalTextWidthEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QTextLine16naturalTextWidthEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QTextLine16naturalTextWidthEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QTextLine16naturalTextWidthEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QTextLine16naturalTextWidthEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QTextLine17horizontalAdvanceEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QTextLine17horizontalAdvanceEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QTextLine17horizontalAdvanceEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QTextLine17horizontalAdvanceEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QTextLine17horizontalAdvanceEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QTextLine17horizontalAdvanceEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QTextLine15naturalTextRectEv
QRectF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QTextLine15naturalTextRectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QTextLine15naturalTextRectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QTextLine15naturalTextRectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRectF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QTextLine15naturalTextRectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QTextLine15naturalTextRectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QTextLine9cursorToXEPiNS_4EdgeE
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QTextLine9cursorToXEPiNS_4EdgeE )( void *scorep_libwrap_arg_this, int * cursorPos, QTextLine::Edge edge )
{
    LIBWRAP_EARLY_INIT( _ZNK9QTextLine9cursorToXEPiNS_4EdgeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QTextLine9cursorToXEPiNS_4EdgeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QTextLine9cursorToXEPiNS_4EdgeE, ( scorep_libwrap_arg_this, cursorPos, edge ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QTextLine9cursorToXEPiNS_4EdgeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QTextLine9xToCursorEdNS_14CursorPositionE
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QTextLine9xToCursorEdNS_14CursorPositionE )( void *scorep_libwrap_arg_this, qreal x, QTextLine::CursorPosition scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _ZNK9QTextLine9xToCursorEdNS_14CursorPositionE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QTextLine9xToCursorEdNS_14CursorPositionE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QTextLine9xToCursorEdNS_14CursorPositionE, ( scorep_libwrap_arg_this, x, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QTextLine9xToCursorEdNS_14CursorPositionE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN9QTextLine12setLineWidthEd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QTextLine12setLineWidthEd )( void *scorep_libwrap_arg_this, qreal width )
{
    LIBWRAP_EARLY_INIT( _ZN9QTextLine12setLineWidthEd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QTextLine12setLineWidthEd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QTextLine12setLineWidthEd, ( scorep_libwrap_arg_this, width ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QTextLine12setLineWidthEd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QTextLine13setNumColumnsEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QTextLine13setNumColumnsEi )( void *scorep_libwrap_arg_this, int columns )
{
    LIBWRAP_EARLY_INIT( _ZN9QTextLine13setNumColumnsEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QTextLine13setNumColumnsEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QTextLine13setNumColumnsEi, ( scorep_libwrap_arg_this, columns ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QTextLine13setNumColumnsEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QTextLine13setNumColumnsEid
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QTextLine13setNumColumnsEid )( void *scorep_libwrap_arg_this, int columns, qreal alignmentWidth )
{
    LIBWRAP_EARLY_INIT( _ZN9QTextLine13setNumColumnsEid );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QTextLine13setNumColumnsEid );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QTextLine13setNumColumnsEid, ( scorep_libwrap_arg_this, columns, alignmentWidth ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QTextLine13setNumColumnsEid );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QTextLine11setPositionERK7QPointF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QTextLine11setPositionERK7QPointF )( void *scorep_libwrap_arg_this, const QPointF & pos )
{
    LIBWRAP_EARLY_INIT( _ZN9QTextLine11setPositionERK7QPointF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QTextLine11setPositionERK7QPointF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QTextLine11setPositionERK7QPointF, ( scorep_libwrap_arg_this, pos ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QTextLine11setPositionERK7QPointF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK9QTextLine8positionEv
QPointF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QTextLine8positionEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QTextLine8positionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QTextLine8positionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPointF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QTextLine8positionEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QTextLine8positionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QTextLine9textStartEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QTextLine9textStartEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QTextLine9textStartEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QTextLine9textStartEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QTextLine9textStartEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QTextLine9textStartEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QTextLine10textLengthEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QTextLine10textLengthEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QTextLine10textLengthEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QTextLine10textLengthEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QTextLine10textLengthEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QTextLine10textLengthEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QTextLine4drawEP8QPainterRK7QPointFPKN11QTextLayout11FormatRangeE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QTextLine4drawEP8QPainterRK7QPointFPKN11QTextLayout11FormatRangeE )( void *scorep_libwrap_arg_this, QPainter * p, const QPointF & point, const QTextLayout::FormatRange * selection )
{
    LIBWRAP_EARLY_INIT( _ZNK9QTextLine4drawEP8QPainterRK7QPointFPKN11QTextLayout11FormatRangeE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QTextLine4drawEP8QPainterRK7QPointFPKN11QTextLayout11FormatRangeE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QTextLine4drawEP8QPainterRK7QPointFPKN11QTextLayout11FormatRangeE, ( scorep_libwrap_arg_this, p, point, selection ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QTextLine4drawEP8QPainterRK7QPointFPKN11QTextLayout11FormatRangeE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK9QTextLine9glyphRunsEii
QList<QGlyphRun>
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QTextLine9glyphRunsEii )( void *scorep_libwrap_arg_this, int from, int length )
{
    LIBWRAP_EARLY_INIT( _ZNK9QTextLine9glyphRunsEii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QTextLine9glyphRunsEii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QList<QGlyphRun> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QTextLine9glyphRunsEii, ( scorep_libwrap_arg_this, from, length ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QTextLine9glyphRunsEii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QTextDocument10metaObjectEv
const QMetaObject *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextDocument10metaObjectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextDocument10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextDocument10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QMetaObject * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextDocument10metaObjectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextDocument10metaObjectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QTextDocument11qt_metacastEPKc
void *
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QTextDocument11qt_metacastEPKc )( void *scorep_libwrap_arg_this, const char * scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN13QTextDocument11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QTextDocument11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    void * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN13QTextDocument11qt_metacastEPKc, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QTextDocument11qt_metacastEPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QTextDocument11qt_metacallEN11QMetaObject4CallEiPPv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QTextDocument11qt_metacallEN11QMetaObject4CallEiPPv )( void *scorep_libwrap_arg_this, QMetaObject::Call scorep_libwrap_arg_1, int scorep_libwrap_arg_2, void ** scorep_libwrap_arg_3 )
{
    LIBWRAP_EARLY_INIT( _ZN13QTextDocument11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QTextDocument11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN13QTextDocument11qt_metacallEN11QMetaObject4CallEiPPv, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, scorep_libwrap_arg_2, scorep_libwrap_arg_3 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QTextDocument11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QTextDocumentC2EP7QObject
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QTextDocumentC2EP7QObject )( void *scorep_libwrap_arg_this, QObject * parent )
{
    LIBWRAP_EARLY_INIT( _ZN13QTextDocumentC2EP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QTextDocumentC2EP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QTextDocumentC2EP7QObject, ( scorep_libwrap_arg_this, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QTextDocumentC2EP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QTextDocumentC1EP7QObject
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QTextDocumentC1EP7QObject )( void *scorep_libwrap_arg_this, QObject * parent )
{
    LIBWRAP_EARLY_INIT( _ZN13QTextDocumentC1EP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QTextDocumentC1EP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QTextDocumentC1EP7QObject, ( scorep_libwrap_arg_this, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QTextDocumentC1EP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QTextDocumentC2ERK7QStringP7QObject
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QTextDocumentC2ERK7QStringP7QObject )( void *scorep_libwrap_arg_this, const QString & text, QObject * parent )
{
    LIBWRAP_EARLY_INIT( _ZN13QTextDocumentC2ERK7QStringP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QTextDocumentC2ERK7QStringP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QTextDocumentC2ERK7QStringP7QObject, ( scorep_libwrap_arg_this, text, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QTextDocumentC2ERK7QStringP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QTextDocumentC1ERK7QStringP7QObject
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QTextDocumentC1ERK7QStringP7QObject )( void *scorep_libwrap_arg_this, const QString & text, QObject * parent )
{
    LIBWRAP_EARLY_INIT( _ZN13QTextDocumentC1ERK7QStringP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QTextDocumentC1ERK7QStringP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QTextDocumentC1ERK7QStringP7QObject, ( scorep_libwrap_arg_this, text, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QTextDocumentC1ERK7QStringP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QTextDocumentD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QTextDocumentD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN13QTextDocumentD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QTextDocumentD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QTextDocumentD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QTextDocumentD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QTextDocumentD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QTextDocumentD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN13QTextDocumentD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QTextDocumentD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QTextDocumentD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QTextDocumentD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QTextDocumentD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QTextDocumentD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN13QTextDocumentD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QTextDocumentD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QTextDocumentD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QTextDocumentD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK13QTextDocument5cloneEP7QObject
QTextDocument *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextDocument5cloneEP7QObject )( void *scorep_libwrap_arg_this, QObject * parent )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextDocument5cloneEP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextDocument5cloneEP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextDocument * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextDocument5cloneEP7QObject, ( scorep_libwrap_arg_this, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextDocument5cloneEP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QTextDocument7isEmptyEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextDocument7isEmptyEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextDocument7isEmptyEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextDocument7isEmptyEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextDocument7isEmptyEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextDocument7isEmptyEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QTextDocument5clearEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QTextDocument5clearEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN13QTextDocument5clearEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QTextDocument5clearEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QTextDocument5clearEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QTextDocument5clearEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QTextDocument18setUndoRedoEnabledEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QTextDocument18setUndoRedoEnabledEb )( void *scorep_libwrap_arg_this, bool enable )
{
    LIBWRAP_EARLY_INIT( _ZN13QTextDocument18setUndoRedoEnabledEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QTextDocument18setUndoRedoEnabledEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QTextDocument18setUndoRedoEnabledEb, ( scorep_libwrap_arg_this, enable ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QTextDocument18setUndoRedoEnabledEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK13QTextDocument17isUndoRedoEnabledEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextDocument17isUndoRedoEnabledEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextDocument17isUndoRedoEnabledEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextDocument17isUndoRedoEnabledEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextDocument17isUndoRedoEnabledEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextDocument17isUndoRedoEnabledEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QTextDocument15isUndoAvailableEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextDocument15isUndoAvailableEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextDocument15isUndoAvailableEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextDocument15isUndoAvailableEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextDocument15isUndoAvailableEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextDocument15isUndoAvailableEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QTextDocument15isRedoAvailableEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextDocument15isRedoAvailableEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextDocument15isRedoAvailableEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextDocument15isRedoAvailableEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextDocument15isRedoAvailableEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextDocument15isRedoAvailableEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QTextDocument18availableUndoStepsEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextDocument18availableUndoStepsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextDocument18availableUndoStepsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextDocument18availableUndoStepsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextDocument18availableUndoStepsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextDocument18availableUndoStepsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QTextDocument18availableRedoStepsEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextDocument18availableRedoStepsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextDocument18availableRedoStepsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextDocument18availableRedoStepsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextDocument18availableRedoStepsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextDocument18availableRedoStepsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QTextDocument8revisionEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextDocument8revisionEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextDocument8revisionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextDocument8revisionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextDocument8revisionEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextDocument8revisionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QTextDocument17setDocumentLayoutEP27QAbstractTextDocumentLayout
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QTextDocument17setDocumentLayoutEP27QAbstractTextDocumentLayout )( void *scorep_libwrap_arg_this, QAbstractTextDocumentLayout * layout )
{
    LIBWRAP_EARLY_INIT( _ZN13QTextDocument17setDocumentLayoutEP27QAbstractTextDocumentLayout );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QTextDocument17setDocumentLayoutEP27QAbstractTextDocumentLayout );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QTextDocument17setDocumentLayoutEP27QAbstractTextDocumentLayout, ( scorep_libwrap_arg_this, layout ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QTextDocument17setDocumentLayoutEP27QAbstractTextDocumentLayout );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK13QTextDocument14documentLayoutEv
QAbstractTextDocumentLayout *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextDocument14documentLayoutEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextDocument14documentLayoutEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextDocument14documentLayoutEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QAbstractTextDocumentLayout * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextDocument14documentLayoutEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextDocument14documentLayoutEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QTextDocument18setMetaInformationENS_15MetaInformationERK7QString
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QTextDocument18setMetaInformationENS_15MetaInformationERK7QString )( void *scorep_libwrap_arg_this, QTextDocument::MetaInformation info, const QString & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _ZN13QTextDocument18setMetaInformationENS_15MetaInformationERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QTextDocument18setMetaInformationENS_15MetaInformationERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QTextDocument18setMetaInformationENS_15MetaInformationERK7QString, ( scorep_libwrap_arg_this, info, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QTextDocument18setMetaInformationENS_15MetaInformationERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK13QTextDocument15metaInformationENS_15MetaInformationE
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextDocument15metaInformationENS_15MetaInformationE )( void *scorep_libwrap_arg_this, QTextDocument::MetaInformation info )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextDocument15metaInformationENS_15MetaInformationE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextDocument15metaInformationENS_15MetaInformationE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextDocument15metaInformationENS_15MetaInformationE, ( scorep_libwrap_arg_this, info ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextDocument15metaInformationENS_15MetaInformationE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QTextDocument6toHtmlERK10QByteArray
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextDocument6toHtmlERK10QByteArray )( void *scorep_libwrap_arg_this, const QByteArray & encoding )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextDocument6toHtmlERK10QByteArray );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextDocument6toHtmlERK10QByteArray );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextDocument6toHtmlERK10QByteArray, ( scorep_libwrap_arg_this, encoding ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextDocument6toHtmlERK10QByteArray );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QTextDocument7setHtmlERK7QString
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QTextDocument7setHtmlERK7QString )( void *scorep_libwrap_arg_this, const QString & html )
{
    LIBWRAP_EARLY_INIT( _ZN13QTextDocument7setHtmlERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QTextDocument7setHtmlERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QTextDocument7setHtmlERK7QString, ( scorep_libwrap_arg_this, html ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QTextDocument7setHtmlERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK13QTextDocument11toPlainTextEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextDocument11toPlainTextEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextDocument11toPlainTextEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextDocument11toPlainTextEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextDocument11toPlainTextEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextDocument11toPlainTextEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QTextDocument12setPlainTextERK7QString
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QTextDocument12setPlainTextERK7QString )( void *scorep_libwrap_arg_this, const QString & text )
{
    LIBWRAP_EARLY_INIT( _ZN13QTextDocument12setPlainTextERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QTextDocument12setPlainTextERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QTextDocument12setPlainTextERK7QString, ( scorep_libwrap_arg_this, text ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QTextDocument12setPlainTextERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK13QTextDocument11characterAtEi
QChar
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextDocument11characterAtEi )( void *scorep_libwrap_arg_this, int pos )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextDocument11characterAtEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextDocument11characterAtEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QChar scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextDocument11characterAtEi, ( scorep_libwrap_arg_this, pos ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextDocument11characterAtEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QTextDocument4findERK7QStringi6QFlagsINS_8FindFlagEE
QTextCursor
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextDocument4findERK7QStringi6QFlagsINS_8FindFlagEE )( void *scorep_libwrap_arg_this, const QString & subString, int from, QTextDocument::FindFlags options )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextDocument4findERK7QStringi6QFlagsINS_8FindFlagEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextDocument4findERK7QStringi6QFlagsINS_8FindFlagEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextCursor scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextDocument4findERK7QStringi6QFlagsINS_8FindFlagEE, ( scorep_libwrap_arg_this, subString, from, options ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextDocument4findERK7QStringi6QFlagsINS_8FindFlagEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QTextDocument4findERK7QStringRK11QTextCursor6QFlagsINS_8FindFlagEE
QTextCursor
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextDocument4findERK7QStringRK11QTextCursor6QFlagsINS_8FindFlagEE )( void *scorep_libwrap_arg_this, const QString & subString, const QTextCursor & cursor, QTextDocument::FindFlags options )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextDocument4findERK7QStringRK11QTextCursor6QFlagsINS_8FindFlagEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextDocument4findERK7QStringRK11QTextCursor6QFlagsINS_8FindFlagEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextCursor scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextDocument4findERK7QStringRK11QTextCursor6QFlagsINS_8FindFlagEE, ( scorep_libwrap_arg_this, subString, cursor, options ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextDocument4findERK7QStringRK11QTextCursor6QFlagsINS_8FindFlagEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QTextDocument4findERK7QRegExpi6QFlagsINS_8FindFlagEE
QTextCursor
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextDocument4findERK7QRegExpi6QFlagsINS_8FindFlagEE )( void *scorep_libwrap_arg_this, const QRegExp & expr, int from, QTextDocument::FindFlags options )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextDocument4findERK7QRegExpi6QFlagsINS_8FindFlagEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextDocument4findERK7QRegExpi6QFlagsINS_8FindFlagEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextCursor scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextDocument4findERK7QRegExpi6QFlagsINS_8FindFlagEE, ( scorep_libwrap_arg_this, expr, from, options ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextDocument4findERK7QRegExpi6QFlagsINS_8FindFlagEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QTextDocument4findERK7QRegExpRK11QTextCursor6QFlagsINS_8FindFlagEE
QTextCursor
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextDocument4findERK7QRegExpRK11QTextCursor6QFlagsINS_8FindFlagEE )( void *scorep_libwrap_arg_this, const QRegExp & expr, const QTextCursor & cursor, QTextDocument::FindFlags options )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextDocument4findERK7QRegExpRK11QTextCursor6QFlagsINS_8FindFlagEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextDocument4findERK7QRegExpRK11QTextCursor6QFlagsINS_8FindFlagEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextCursor scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextDocument4findERK7QRegExpRK11QTextCursor6QFlagsINS_8FindFlagEE, ( scorep_libwrap_arg_this, expr, cursor, options ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextDocument4findERK7QRegExpRK11QTextCursor6QFlagsINS_8FindFlagEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QTextDocument4findERK18QRegularExpressioni6QFlagsINS_8FindFlagEE
QTextCursor
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextDocument4findERK18QRegularExpressioni6QFlagsINS_8FindFlagEE )( void *scorep_libwrap_arg_this, const QRegularExpression & expr, int from, QTextDocument::FindFlags options )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextDocument4findERK18QRegularExpressioni6QFlagsINS_8FindFlagEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextDocument4findERK18QRegularExpressioni6QFlagsINS_8FindFlagEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextCursor scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextDocument4findERK18QRegularExpressioni6QFlagsINS_8FindFlagEE, ( scorep_libwrap_arg_this, expr, from, options ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextDocument4findERK18QRegularExpressioni6QFlagsINS_8FindFlagEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QTextDocument4findERK18QRegularExpressionRK11QTextCursor6QFlagsINS_8FindFlagEE
QTextCursor
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextDocument4findERK18QRegularExpressionRK11QTextCursor6QFlagsINS_8FindFlagEE )( void *scorep_libwrap_arg_this, const QRegularExpression & expr, const QTextCursor & cursor, QTextDocument::FindFlags options )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextDocument4findERK18QRegularExpressionRK11QTextCursor6QFlagsINS_8FindFlagEE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextDocument4findERK18QRegularExpressionRK11QTextCursor6QFlagsINS_8FindFlagEE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextCursor scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextDocument4findERK18QRegularExpressionRK11QTextCursor6QFlagsINS_8FindFlagEE, ( scorep_libwrap_arg_this, expr, cursor, options ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextDocument4findERK18QRegularExpressionRK11QTextCursor6QFlagsINS_8FindFlagEE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QTextDocument7frameAtEi
QTextFrame *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextDocument7frameAtEi )( void *scorep_libwrap_arg_this, int pos )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextDocument7frameAtEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextDocument7frameAtEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextFrame * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextDocument7frameAtEi, ( scorep_libwrap_arg_this, pos ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextDocument7frameAtEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QTextDocument9rootFrameEv
QTextFrame *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextDocument9rootFrameEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextDocument9rootFrameEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextDocument9rootFrameEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextFrame * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextDocument9rootFrameEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextDocument9rootFrameEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QTextDocument6objectEi
QTextObject *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextDocument6objectEi )( void *scorep_libwrap_arg_this, int objectIndex )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextDocument6objectEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextDocument6objectEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextObject * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextDocument6objectEi, ( scorep_libwrap_arg_this, objectIndex ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextDocument6objectEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QTextDocument15objectForFormatERK11QTextFormat
QTextObject *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextDocument15objectForFormatERK11QTextFormat )( void *scorep_libwrap_arg_this, const QTextFormat & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextDocument15objectForFormatERK11QTextFormat );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextDocument15objectForFormatERK11QTextFormat );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextObject * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextDocument15objectForFormatERK11QTextFormat, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextDocument15objectForFormatERK11QTextFormat );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QTextDocument9findBlockEi
QTextBlock
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextDocument9findBlockEi )( void *scorep_libwrap_arg_this, int pos )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextDocument9findBlockEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextDocument9findBlockEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextBlock scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextDocument9findBlockEi, ( scorep_libwrap_arg_this, pos ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextDocument9findBlockEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QTextDocument17findBlockByNumberEi
QTextBlock
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextDocument17findBlockByNumberEi )( void *scorep_libwrap_arg_this, int blockNumber )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextDocument17findBlockByNumberEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextDocument17findBlockByNumberEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextBlock scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextDocument17findBlockByNumberEi, ( scorep_libwrap_arg_this, blockNumber ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextDocument17findBlockByNumberEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QTextDocument21findBlockByLineNumberEi
QTextBlock
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextDocument21findBlockByLineNumberEi )( void *scorep_libwrap_arg_this, int blockNumber )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextDocument21findBlockByLineNumberEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextDocument21findBlockByLineNumberEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextBlock scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextDocument21findBlockByLineNumberEi, ( scorep_libwrap_arg_this, blockNumber ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextDocument21findBlockByLineNumberEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QTextDocument5beginEv
QTextBlock
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextDocument5beginEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextDocument5beginEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextDocument5beginEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextBlock scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextDocument5beginEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextDocument5beginEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QTextDocument3endEv
QTextBlock
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextDocument3endEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextDocument3endEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextDocument3endEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextBlock scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextDocument3endEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextDocument3endEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QTextDocument10firstBlockEv
QTextBlock
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextDocument10firstBlockEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextDocument10firstBlockEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextDocument10firstBlockEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextBlock scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextDocument10firstBlockEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextDocument10firstBlockEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QTextDocument9lastBlockEv
QTextBlock
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextDocument9lastBlockEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextDocument9lastBlockEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextDocument9lastBlockEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextBlock scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextDocument9lastBlockEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextDocument9lastBlockEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QTextDocument11setPageSizeERK6QSizeF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QTextDocument11setPageSizeERK6QSizeF )( void *scorep_libwrap_arg_this, const QSizeF & size )
{
    LIBWRAP_EARLY_INIT( _ZN13QTextDocument11setPageSizeERK6QSizeF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QTextDocument11setPageSizeERK6QSizeF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QTextDocument11setPageSizeERK6QSizeF, ( scorep_libwrap_arg_this, size ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QTextDocument11setPageSizeERK6QSizeF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK13QTextDocument8pageSizeEv
QSizeF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextDocument8pageSizeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextDocument8pageSizeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextDocument8pageSizeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QSizeF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextDocument8pageSizeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextDocument8pageSizeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QTextDocument14setDefaultFontERK5QFont
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QTextDocument14setDefaultFontERK5QFont )( void *scorep_libwrap_arg_this, const QFont & font )
{
    LIBWRAP_EARLY_INIT( _ZN13QTextDocument14setDefaultFontERK5QFont );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QTextDocument14setDefaultFontERK5QFont );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QTextDocument14setDefaultFontERK5QFont, ( scorep_libwrap_arg_this, font ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QTextDocument14setDefaultFontERK5QFont );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK13QTextDocument11defaultFontEv
QFont
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextDocument11defaultFontEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextDocument11defaultFontEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextDocument11defaultFontEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QFont scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextDocument11defaultFontEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextDocument11defaultFontEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QTextDocument9pageCountEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextDocument9pageCountEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextDocument9pageCountEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextDocument9pageCountEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextDocument9pageCountEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextDocument9pageCountEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QTextDocument10isModifiedEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextDocument10isModifiedEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextDocument10isModifiedEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextDocument10isModifiedEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextDocument10isModifiedEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextDocument10isModifiedEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QTextDocument5printEP17QPagedPaintDevice
void
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextDocument5printEP17QPagedPaintDevice )( void *scorep_libwrap_arg_this, QPagedPaintDevice * printer )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextDocument5printEP17QPagedPaintDevice );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextDocument5printEP17QPagedPaintDevice );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextDocument5printEP17QPagedPaintDevice, ( scorep_libwrap_arg_this, printer ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextDocument5printEP17QPagedPaintDevice );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK13QTextDocument8resourceEiRK4QUrl
QVariant
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextDocument8resourceEiRK4QUrl )( void *scorep_libwrap_arg_this, int type, const QUrl & name )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextDocument8resourceEiRK4QUrl );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextDocument8resourceEiRK4QUrl );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QVariant scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextDocument8resourceEiRK4QUrl, ( scorep_libwrap_arg_this, type, name ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextDocument8resourceEiRK4QUrl );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QTextDocument11addResourceEiRK4QUrlRK8QVariant
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QTextDocument11addResourceEiRK4QUrlRK8QVariant )( void *scorep_libwrap_arg_this, int type, const QUrl & name, const QVariant & resource )
{
    LIBWRAP_EARLY_INIT( _ZN13QTextDocument11addResourceEiRK4QUrlRK8QVariant );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QTextDocument11addResourceEiRK4QUrlRK8QVariant );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QTextDocument11addResourceEiRK4QUrlRK8QVariant, ( scorep_libwrap_arg_this, type, name, resource ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QTextDocument11addResourceEiRK4QUrlRK8QVariant );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK13QTextDocument10allFormatsEv
QVector<QTextFormat>
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextDocument10allFormatsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextDocument10allFormatsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextDocument10allFormatsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QVector<QTextFormat> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextDocument10allFormatsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextDocument10allFormatsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QTextDocument17markContentsDirtyEii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QTextDocument17markContentsDirtyEii )( void *scorep_libwrap_arg_this, int from, int length )
{
    LIBWRAP_EARLY_INIT( _ZN13QTextDocument17markContentsDirtyEii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QTextDocument17markContentsDirtyEii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QTextDocument17markContentsDirtyEii, ( scorep_libwrap_arg_this, from, length ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QTextDocument17markContentsDirtyEii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QTextDocument19setUseDesignMetricsEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QTextDocument19setUseDesignMetricsEb )( void *scorep_libwrap_arg_this, bool b )
{
    LIBWRAP_EARLY_INIT( _ZN13QTextDocument19setUseDesignMetricsEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QTextDocument19setUseDesignMetricsEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QTextDocument19setUseDesignMetricsEb, ( scorep_libwrap_arg_this, b ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QTextDocument19setUseDesignMetricsEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK13QTextDocument16useDesignMetricsEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextDocument16useDesignMetricsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextDocument16useDesignMetricsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextDocument16useDesignMetricsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextDocument16useDesignMetricsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextDocument16useDesignMetricsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QTextDocument12drawContentsEP8QPainterRK6QRectF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QTextDocument12drawContentsEP8QPainterRK6QRectF )( void *scorep_libwrap_arg_this, QPainter * painter, const QRectF & rect )
{
    LIBWRAP_EARLY_INIT( _ZN13QTextDocument12drawContentsEP8QPainterRK6QRectF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QTextDocument12drawContentsEP8QPainterRK6QRectF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QTextDocument12drawContentsEP8QPainterRK6QRectF, ( scorep_libwrap_arg_this, painter, rect ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QTextDocument12drawContentsEP8QPainterRK6QRectF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QTextDocument12setTextWidthEd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QTextDocument12setTextWidthEd )( void *scorep_libwrap_arg_this, qreal width )
{
    LIBWRAP_EARLY_INIT( _ZN13QTextDocument12setTextWidthEd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QTextDocument12setTextWidthEd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QTextDocument12setTextWidthEd, ( scorep_libwrap_arg_this, width ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QTextDocument12setTextWidthEd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK13QTextDocument9textWidthEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextDocument9textWidthEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextDocument9textWidthEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextDocument9textWidthEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextDocument9textWidthEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextDocument9textWidthEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QTextDocument10idealWidthEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextDocument10idealWidthEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextDocument10idealWidthEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextDocument10idealWidthEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextDocument10idealWidthEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextDocument10idealWidthEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QTextDocument11indentWidthEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextDocument11indentWidthEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextDocument11indentWidthEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextDocument11indentWidthEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextDocument11indentWidthEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextDocument11indentWidthEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QTextDocument14setIndentWidthEd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QTextDocument14setIndentWidthEd )( void *scorep_libwrap_arg_this, qreal width )
{
    LIBWRAP_EARLY_INIT( _ZN13QTextDocument14setIndentWidthEd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QTextDocument14setIndentWidthEd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QTextDocument14setIndentWidthEd, ( scorep_libwrap_arg_this, width ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QTextDocument14setIndentWidthEd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK13QTextDocument14documentMarginEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextDocument14documentMarginEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextDocument14documentMarginEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextDocument14documentMarginEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextDocument14documentMarginEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextDocument14documentMarginEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QTextDocument17setDocumentMarginEd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QTextDocument17setDocumentMarginEd )( void *scorep_libwrap_arg_this, qreal margin )
{
    LIBWRAP_EARLY_INIT( _ZN13QTextDocument17setDocumentMarginEd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QTextDocument17setDocumentMarginEd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QTextDocument17setDocumentMarginEd, ( scorep_libwrap_arg_this, margin ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QTextDocument17setDocumentMarginEd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QTextDocument10adjustSizeEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QTextDocument10adjustSizeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN13QTextDocument10adjustSizeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QTextDocument10adjustSizeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QTextDocument10adjustSizeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QTextDocument10adjustSizeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK13QTextDocument4sizeEv
QSizeF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextDocument4sizeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextDocument4sizeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextDocument4sizeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QSizeF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextDocument4sizeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextDocument4sizeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QTextDocument10blockCountEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextDocument10blockCountEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextDocument10blockCountEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextDocument10blockCountEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextDocument10blockCountEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextDocument10blockCountEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QTextDocument9lineCountEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextDocument9lineCountEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextDocument9lineCountEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextDocument9lineCountEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextDocument9lineCountEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextDocument9lineCountEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QTextDocument14characterCountEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextDocument14characterCountEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextDocument14characterCountEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextDocument14characterCountEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextDocument14characterCountEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextDocument14characterCountEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QTextDocument20setDefaultStyleSheetERK7QString
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QTextDocument20setDefaultStyleSheetERK7QString )( void *scorep_libwrap_arg_this, const QString & sheet )
{
    LIBWRAP_EARLY_INIT( _ZN13QTextDocument20setDefaultStyleSheetERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QTextDocument20setDefaultStyleSheetERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QTextDocument20setDefaultStyleSheetERK7QString, ( scorep_libwrap_arg_this, sheet ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QTextDocument20setDefaultStyleSheetERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK13QTextDocument17defaultStyleSheetEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextDocument17defaultStyleSheetEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextDocument17defaultStyleSheetEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextDocument17defaultStyleSheetEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextDocument17defaultStyleSheetEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextDocument17defaultStyleSheetEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QTextDocument4undoEP11QTextCursor
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QTextDocument4undoEP11QTextCursor )( void *scorep_libwrap_arg_this, QTextCursor * cursor )
{
    LIBWRAP_EARLY_INIT( _ZN13QTextDocument4undoEP11QTextCursor );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QTextDocument4undoEP11QTextCursor );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QTextDocument4undoEP11QTextCursor, ( scorep_libwrap_arg_this, cursor ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QTextDocument4undoEP11QTextCursor );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QTextDocument4redoEP11QTextCursor
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QTextDocument4redoEP11QTextCursor )( void *scorep_libwrap_arg_this, QTextCursor * cursor )
{
    LIBWRAP_EARLY_INIT( _ZN13QTextDocument4redoEP11QTextCursor );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QTextDocument4redoEP11QTextCursor );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QTextDocument4redoEP11QTextCursor, ( scorep_libwrap_arg_this, cursor ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QTextDocument4redoEP11QTextCursor );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QTextDocument19clearUndoRedoStacksENS_6StacksE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QTextDocument19clearUndoRedoStacksENS_6StacksE )( void *scorep_libwrap_arg_this, QTextDocument::Stacks historyToClear )
{
    LIBWRAP_EARLY_INIT( _ZN13QTextDocument19clearUndoRedoStacksENS_6StacksE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QTextDocument19clearUndoRedoStacksENS_6StacksE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QTextDocument19clearUndoRedoStacksENS_6StacksE, ( scorep_libwrap_arg_this, historyToClear ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QTextDocument19clearUndoRedoStacksENS_6StacksE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK13QTextDocument17maximumBlockCountEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextDocument17maximumBlockCountEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextDocument17maximumBlockCountEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextDocument17maximumBlockCountEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextDocument17maximumBlockCountEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextDocument17maximumBlockCountEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QTextDocument20setMaximumBlockCountEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QTextDocument20setMaximumBlockCountEi )( void *scorep_libwrap_arg_this, int maximum )
{
    LIBWRAP_EARLY_INIT( _ZN13QTextDocument20setMaximumBlockCountEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QTextDocument20setMaximumBlockCountEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QTextDocument20setMaximumBlockCountEi, ( scorep_libwrap_arg_this, maximum ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QTextDocument20setMaximumBlockCountEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK13QTextDocument17defaultTextOptionEv
QTextOption
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextDocument17defaultTextOptionEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextDocument17defaultTextOptionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextDocument17defaultTextOptionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextOption scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextDocument17defaultTextOptionEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextDocument17defaultTextOptionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QTextDocument20setDefaultTextOptionERK11QTextOption
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QTextDocument20setDefaultTextOptionERK11QTextOption )( void *scorep_libwrap_arg_this, const QTextOption & option )
{
    LIBWRAP_EARLY_INIT( _ZN13QTextDocument20setDefaultTextOptionERK11QTextOption );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QTextDocument20setDefaultTextOptionERK11QTextOption );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QTextDocument20setDefaultTextOptionERK11QTextOption, ( scorep_libwrap_arg_this, option ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QTextDocument20setDefaultTextOptionERK11QTextOption );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK13QTextDocument7baseUrlEv
QUrl
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextDocument7baseUrlEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextDocument7baseUrlEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextDocument7baseUrlEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QUrl scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextDocument7baseUrlEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextDocument7baseUrlEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QTextDocument10setBaseUrlERK4QUrl
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QTextDocument10setBaseUrlERK4QUrl )( void *scorep_libwrap_arg_this, const QUrl & url )
{
    LIBWRAP_EARLY_INIT( _ZN13QTextDocument10setBaseUrlERK4QUrl );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QTextDocument10setBaseUrlERK4QUrl );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QTextDocument10setBaseUrlERK4QUrl, ( scorep_libwrap_arg_this, url ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QTextDocument10setBaseUrlERK4QUrl );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK13QTextDocument22defaultCursorMoveStyleEv
Qt::CursorMoveStyle
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextDocument22defaultCursorMoveStyleEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextDocument22defaultCursorMoveStyleEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextDocument22defaultCursorMoveStyleEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    Qt::CursorMoveStyle scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextDocument22defaultCursorMoveStyleEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextDocument22defaultCursorMoveStyleEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QTextDocument25setDefaultCursorMoveStyleEN2Qt15CursorMoveStyleE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QTextDocument25setDefaultCursorMoveStyleEN2Qt15CursorMoveStyleE )( void *scorep_libwrap_arg_this, Qt::CursorMoveStyle style )
{
    LIBWRAP_EARLY_INIT( _ZN13QTextDocument25setDefaultCursorMoveStyleEN2Qt15CursorMoveStyleE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QTextDocument25setDefaultCursorMoveStyleEN2Qt15CursorMoveStyleE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QTextDocument25setDefaultCursorMoveStyleEN2Qt15CursorMoveStyleE, ( scorep_libwrap_arg_this, style ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QTextDocument25setDefaultCursorMoveStyleEN2Qt15CursorMoveStyleE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QTextDocument14contentsChangeEiii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QTextDocument14contentsChangeEiii )( void *scorep_libwrap_arg_this, int from, int charsRemoved, int charsAdded )
{
    LIBWRAP_EARLY_INIT( _ZN13QTextDocument14contentsChangeEiii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QTextDocument14contentsChangeEiii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QTextDocument14contentsChangeEiii, ( scorep_libwrap_arg_this, from, charsRemoved, charsAdded ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QTextDocument14contentsChangeEiii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QTextDocument15contentsChangedEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QTextDocument15contentsChangedEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN13QTextDocument15contentsChangedEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QTextDocument15contentsChangedEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QTextDocument15contentsChangedEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QTextDocument15contentsChangedEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QTextDocument13undoAvailableEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QTextDocument13undoAvailableEb )( void *scorep_libwrap_arg_this, bool scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN13QTextDocument13undoAvailableEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QTextDocument13undoAvailableEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QTextDocument13undoAvailableEb, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QTextDocument13undoAvailableEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QTextDocument13redoAvailableEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QTextDocument13redoAvailableEb )( void *scorep_libwrap_arg_this, bool scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN13QTextDocument13redoAvailableEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QTextDocument13redoAvailableEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QTextDocument13redoAvailableEb, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QTextDocument13redoAvailableEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QTextDocument16undoCommandAddedEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QTextDocument16undoCommandAddedEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN13QTextDocument16undoCommandAddedEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QTextDocument16undoCommandAddedEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QTextDocument16undoCommandAddedEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QTextDocument16undoCommandAddedEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QTextDocument19modificationChangedEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QTextDocument19modificationChangedEb )( void *scorep_libwrap_arg_this, bool m )
{
    LIBWRAP_EARLY_INIT( _ZN13QTextDocument19modificationChangedEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QTextDocument19modificationChangedEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QTextDocument19modificationChangedEb, ( scorep_libwrap_arg_this, m ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QTextDocument19modificationChangedEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QTextDocument21cursorPositionChangedERK11QTextCursor
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QTextDocument21cursorPositionChangedERK11QTextCursor )( void *scorep_libwrap_arg_this, const QTextCursor & cursor )
{
    LIBWRAP_EARLY_INIT( _ZN13QTextDocument21cursorPositionChangedERK11QTextCursor );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QTextDocument21cursorPositionChangedERK11QTextCursor );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QTextDocument21cursorPositionChangedERK11QTextCursor, ( scorep_libwrap_arg_this, cursor ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QTextDocument21cursorPositionChangedERK11QTextCursor );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QTextDocument17blockCountChangedEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QTextDocument17blockCountChangedEi )( void *scorep_libwrap_arg_this, int newBlockCount )
{
    LIBWRAP_EARLY_INIT( _ZN13QTextDocument17blockCountChangedEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QTextDocument17blockCountChangedEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QTextDocument17blockCountChangedEi, ( scorep_libwrap_arg_this, newBlockCount ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QTextDocument17blockCountChangedEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QTextDocument14baseUrlChangedERK4QUrl
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QTextDocument14baseUrlChangedERK4QUrl )( void *scorep_libwrap_arg_this, const QUrl & url )
{
    LIBWRAP_EARLY_INIT( _ZN13QTextDocument14baseUrlChangedERK4QUrl );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QTextDocument14baseUrlChangedERK4QUrl );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QTextDocument14baseUrlChangedERK4QUrl, ( scorep_libwrap_arg_this, url ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QTextDocument14baseUrlChangedERK4QUrl );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QTextDocument21documentLayoutChangedEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QTextDocument21documentLayoutChangedEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN13QTextDocument21documentLayoutChangedEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QTextDocument21documentLayoutChangedEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QTextDocument21documentLayoutChangedEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QTextDocument21documentLayoutChangedEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QTextDocument4undoEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QTextDocument4undoEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN13QTextDocument4undoEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QTextDocument4undoEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QTextDocument4undoEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QTextDocument4undoEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QTextDocument4redoEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QTextDocument4redoEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN13QTextDocument4redoEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QTextDocument4redoEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QTextDocument4redoEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QTextDocument4redoEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QTextDocument14appendUndoItemEP17QAbstractUndoItem
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QTextDocument14appendUndoItemEP17QAbstractUndoItem )( void *scorep_libwrap_arg_this, QAbstractUndoItem * scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN13QTextDocument14appendUndoItemEP17QAbstractUndoItem );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QTextDocument14appendUndoItemEP17QAbstractUndoItem );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QTextDocument14appendUndoItemEP17QAbstractUndoItem, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QTextDocument14appendUndoItemEP17QAbstractUndoItem );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QTextDocument11setModifiedEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QTextDocument11setModifiedEb )( void *scorep_libwrap_arg_this, bool m )
{
    LIBWRAP_EARLY_INIT( _ZN13QTextDocument11setModifiedEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QTextDocument11setModifiedEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QTextDocument11setModifiedEb, ( scorep_libwrap_arg_this, m ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QTextDocument11setModifiedEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK13QTextDocument9docHandleEv
QTextDocumentPrivate *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextDocument9docHandleEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextDocument9docHandleEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextDocument9docHandleEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextDocumentPrivate * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextDocument9docHandleEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextDocument9docHandleEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK27QAbstractTextDocumentLayout10metaObjectEv
const QMetaObject *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK27QAbstractTextDocumentLayout10metaObjectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK27QAbstractTextDocumentLayout10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK27QAbstractTextDocumentLayout10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QMetaObject * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK27QAbstractTextDocumentLayout10metaObjectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK27QAbstractTextDocumentLayout10metaObjectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN27QAbstractTextDocumentLayout11qt_metacastEPKc
void *
SCOREP_LIBWRAP_FUNC_NAME( _ZN27QAbstractTextDocumentLayout11qt_metacastEPKc )( void *scorep_libwrap_arg_this, const char * scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN27QAbstractTextDocumentLayout11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN27QAbstractTextDocumentLayout11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    void * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN27QAbstractTextDocumentLayout11qt_metacastEPKc, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN27QAbstractTextDocumentLayout11qt_metacastEPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN27QAbstractTextDocumentLayout11qt_metacallEN11QMetaObject4CallEiPPv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZN27QAbstractTextDocumentLayout11qt_metacallEN11QMetaObject4CallEiPPv )( void *scorep_libwrap_arg_this, QMetaObject::Call scorep_libwrap_arg_1, int scorep_libwrap_arg_2, void ** scorep_libwrap_arg_3 )
{
    LIBWRAP_EARLY_INIT( _ZN27QAbstractTextDocumentLayout11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN27QAbstractTextDocumentLayout11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN27QAbstractTextDocumentLayout11qt_metacallEN11QMetaObject4CallEiPPv, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, scorep_libwrap_arg_2, scorep_libwrap_arg_3 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN27QAbstractTextDocumentLayout11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN27QAbstractTextDocumentLayoutC2EP13QTextDocument
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN27QAbstractTextDocumentLayoutC2EP13QTextDocument )( void *scorep_libwrap_arg_this, QTextDocument * doc )
{
    LIBWRAP_EARLY_INIT( _ZN27QAbstractTextDocumentLayoutC2EP13QTextDocument );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN27QAbstractTextDocumentLayoutC2EP13QTextDocument );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN27QAbstractTextDocumentLayoutC2EP13QTextDocument, ( scorep_libwrap_arg_this, doc ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN27QAbstractTextDocumentLayoutC2EP13QTextDocument );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN27QAbstractTextDocumentLayoutD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN27QAbstractTextDocumentLayoutD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN27QAbstractTextDocumentLayoutD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN27QAbstractTextDocumentLayoutD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN27QAbstractTextDocumentLayoutD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN27QAbstractTextDocumentLayoutD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN27QAbstractTextDocumentLayoutD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN27QAbstractTextDocumentLayoutD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN27QAbstractTextDocumentLayoutD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN27QAbstractTextDocumentLayoutD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN27QAbstractTextDocumentLayoutD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN27QAbstractTextDocumentLayoutD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN27QAbstractTextDocumentLayoutD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN27QAbstractTextDocumentLayoutD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN27QAbstractTextDocumentLayoutD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN27QAbstractTextDocumentLayoutD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN27QAbstractTextDocumentLayoutD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN27QAbstractTextDocumentLayoutD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK27QAbstractTextDocumentLayout8anchorAtERK7QPointF
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK27QAbstractTextDocumentLayout8anchorAtERK7QPointF )( void *scorep_libwrap_arg_this, const QPointF & pos )
{
    LIBWRAP_EARLY_INIT( _ZNK27QAbstractTextDocumentLayout8anchorAtERK7QPointF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK27QAbstractTextDocumentLayout8anchorAtERK7QPointF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK27QAbstractTextDocumentLayout8anchorAtERK7QPointF, ( scorep_libwrap_arg_this, pos ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK27QAbstractTextDocumentLayout8anchorAtERK7QPointF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN27QAbstractTextDocumentLayout14setPaintDeviceEP12QPaintDevice
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN27QAbstractTextDocumentLayout14setPaintDeviceEP12QPaintDevice )( void *scorep_libwrap_arg_this, QPaintDevice * device )
{
    LIBWRAP_EARLY_INIT( _ZN27QAbstractTextDocumentLayout14setPaintDeviceEP12QPaintDevice );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN27QAbstractTextDocumentLayout14setPaintDeviceEP12QPaintDevice );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN27QAbstractTextDocumentLayout14setPaintDeviceEP12QPaintDevice, ( scorep_libwrap_arg_this, device ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN27QAbstractTextDocumentLayout14setPaintDeviceEP12QPaintDevice );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK27QAbstractTextDocumentLayout11paintDeviceEv
QPaintDevice *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK27QAbstractTextDocumentLayout11paintDeviceEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK27QAbstractTextDocumentLayout11paintDeviceEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK27QAbstractTextDocumentLayout11paintDeviceEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QPaintDevice * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK27QAbstractTextDocumentLayout11paintDeviceEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK27QAbstractTextDocumentLayout11paintDeviceEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK27QAbstractTextDocumentLayout8documentEv
QTextDocument *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK27QAbstractTextDocumentLayout8documentEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK27QAbstractTextDocumentLayout8documentEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK27QAbstractTextDocumentLayout8documentEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextDocument * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK27QAbstractTextDocumentLayout8documentEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK27QAbstractTextDocumentLayout8documentEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN27QAbstractTextDocumentLayout15registerHandlerEiP7QObject
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN27QAbstractTextDocumentLayout15registerHandlerEiP7QObject )( void *scorep_libwrap_arg_this, int objectType, QObject * component )
{
    LIBWRAP_EARLY_INIT( _ZN27QAbstractTextDocumentLayout15registerHandlerEiP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN27QAbstractTextDocumentLayout15registerHandlerEiP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN27QAbstractTextDocumentLayout15registerHandlerEiP7QObject, ( scorep_libwrap_arg_this, objectType, component ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN27QAbstractTextDocumentLayout15registerHandlerEiP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN27QAbstractTextDocumentLayout17unregisterHandlerEiP7QObject
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN27QAbstractTextDocumentLayout17unregisterHandlerEiP7QObject )( void *scorep_libwrap_arg_this, int objectType, QObject * component )
{
    LIBWRAP_EARLY_INIT( _ZN27QAbstractTextDocumentLayout17unregisterHandlerEiP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN27QAbstractTextDocumentLayout17unregisterHandlerEiP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN27QAbstractTextDocumentLayout17unregisterHandlerEiP7QObject, ( scorep_libwrap_arg_this, objectType, component ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN27QAbstractTextDocumentLayout17unregisterHandlerEiP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK27QAbstractTextDocumentLayout16handlerForObjectEi
QTextObjectInterface *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK27QAbstractTextDocumentLayout16handlerForObjectEi )( void *scorep_libwrap_arg_this, int objectType )
{
    LIBWRAP_EARLY_INIT( _ZNK27QAbstractTextDocumentLayout16handlerForObjectEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK27QAbstractTextDocumentLayout16handlerForObjectEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextObjectInterface * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK27QAbstractTextDocumentLayout16handlerForObjectEi, ( scorep_libwrap_arg_this, objectType ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK27QAbstractTextDocumentLayout16handlerForObjectEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN27QAbstractTextDocumentLayout6updateERK6QRectF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN27QAbstractTextDocumentLayout6updateERK6QRectF )( void *scorep_libwrap_arg_this, const QRectF & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN27QAbstractTextDocumentLayout6updateERK6QRectF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN27QAbstractTextDocumentLayout6updateERK6QRectF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN27QAbstractTextDocumentLayout6updateERK6QRectF, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN27QAbstractTextDocumentLayout6updateERK6QRectF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN27QAbstractTextDocumentLayout11updateBlockERK10QTextBlock
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN27QAbstractTextDocumentLayout11updateBlockERK10QTextBlock )( void *scorep_libwrap_arg_this, const QTextBlock & block )
{
    LIBWRAP_EARLY_INIT( _ZN27QAbstractTextDocumentLayout11updateBlockERK10QTextBlock );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN27QAbstractTextDocumentLayout11updateBlockERK10QTextBlock );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN27QAbstractTextDocumentLayout11updateBlockERK10QTextBlock, ( scorep_libwrap_arg_this, block ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN27QAbstractTextDocumentLayout11updateBlockERK10QTextBlock );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN27QAbstractTextDocumentLayout19documentSizeChangedERK6QSizeF
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN27QAbstractTextDocumentLayout19documentSizeChangedERK6QSizeF )( void *scorep_libwrap_arg_this, const QSizeF & newSize )
{
    LIBWRAP_EARLY_INIT( _ZN27QAbstractTextDocumentLayout19documentSizeChangedERK6QSizeF );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN27QAbstractTextDocumentLayout19documentSizeChangedERK6QSizeF );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN27QAbstractTextDocumentLayout19documentSizeChangedERK6QSizeF, ( scorep_libwrap_arg_this, newSize ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN27QAbstractTextDocumentLayout19documentSizeChangedERK6QSizeF );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN27QAbstractTextDocumentLayout16pageCountChangedEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN27QAbstractTextDocumentLayout16pageCountChangedEi )( void *scorep_libwrap_arg_this, int newPages )
{
    LIBWRAP_EARLY_INIT( _ZN27QAbstractTextDocumentLayout16pageCountChangedEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN27QAbstractTextDocumentLayout16pageCountChangedEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN27QAbstractTextDocumentLayout16pageCountChangedEi, ( scorep_libwrap_arg_this, newPages ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN27QAbstractTextDocumentLayout16pageCountChangedEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QTextObjectInterfaceD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QTextObjectInterfaceD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN20QTextObjectInterfaceD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QTextObjectInterfaceD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QTextObjectInterfaceD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QTextObjectInterfaceD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QTextObjectInterfaceD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QTextObjectInterfaceD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN20QTextObjectInterfaceD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QTextObjectInterfaceD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QTextObjectInterfaceD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QTextObjectInterfaceD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QTextObjectInterfaceD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QTextObjectInterfaceD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN20QTextObjectInterfaceD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QTextObjectInterfaceD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QTextObjectInterfaceD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QTextObjectInterfaceD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QStaticTextC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QStaticTextC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QStaticTextC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QStaticTextC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QStaticTextC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QStaticTextC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QStaticTextC1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QStaticTextC1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QStaticTextC1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QStaticTextC1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QStaticTextC1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QStaticTextC1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QStaticTextC2ERK7QString
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QStaticTextC2ERK7QString )( void *scorep_libwrap_arg_this, const QString & text )
{
    LIBWRAP_EARLY_INIT( _ZN11QStaticTextC2ERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QStaticTextC2ERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QStaticTextC2ERK7QString, ( scorep_libwrap_arg_this, text ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QStaticTextC2ERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QStaticTextC1ERK7QString
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QStaticTextC1ERK7QString )( void *scorep_libwrap_arg_this, const QString & text )
{
    LIBWRAP_EARLY_INIT( _ZN11QStaticTextC1ERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QStaticTextC1ERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QStaticTextC1ERK7QString, ( scorep_libwrap_arg_this, text ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QStaticTextC1ERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QStaticTextC2ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QStaticTextC2ERKS_ )( void *scorep_libwrap_arg_this, const QStaticText & other )
{
    LIBWRAP_EARLY_INIT( _ZN11QStaticTextC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QStaticTextC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QStaticTextC2ERKS_, ( scorep_libwrap_arg_this, other ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QStaticTextC2ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QStaticTextC1ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QStaticTextC1ERKS_ )( void *scorep_libwrap_arg_this, const QStaticText & other )
{
    LIBWRAP_EARLY_INIT( _ZN11QStaticTextC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QStaticTextC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QStaticTextC1ERKS_, ( scorep_libwrap_arg_this, other ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QStaticTextC1ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QStaticTextD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QStaticTextD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QStaticTextD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QStaticTextD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QStaticTextD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QStaticTextD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QStaticTextD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QStaticTextD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN11QStaticTextD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QStaticTextD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QStaticTextD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QStaticTextD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK11QStaticText4textEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QStaticText4textEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QStaticText4textEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QStaticText4textEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QStaticText4textEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QStaticText4textEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QStaticText13setTextFormatEN2Qt10TextFormatE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QStaticText13setTextFormatEN2Qt10TextFormatE )( void *scorep_libwrap_arg_this, Qt::TextFormat textFormat )
{
    LIBWRAP_EARLY_INIT( _ZN11QStaticText13setTextFormatEN2Qt10TextFormatE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QStaticText13setTextFormatEN2Qt10TextFormatE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QStaticText13setTextFormatEN2Qt10TextFormatE, ( scorep_libwrap_arg_this, textFormat ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QStaticText13setTextFormatEN2Qt10TextFormatE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK11QStaticText10textFormatEv
Qt::TextFormat
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QStaticText10textFormatEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QStaticText10textFormatEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QStaticText10textFormatEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    Qt::TextFormat scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QStaticText10textFormatEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QStaticText10textFormatEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QStaticText12setTextWidthEd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QStaticText12setTextWidthEd )( void *scorep_libwrap_arg_this, qreal textWidth )
{
    LIBWRAP_EARLY_INIT( _ZN11QStaticText12setTextWidthEd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QStaticText12setTextWidthEd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QStaticText12setTextWidthEd, ( scorep_libwrap_arg_this, textWidth ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QStaticText12setTextWidthEd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK11QStaticText9textWidthEv
qreal
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QStaticText9textWidthEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QStaticText9textWidthEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QStaticText9textWidthEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    qreal scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QStaticText9textWidthEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QStaticText9textWidthEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QStaticText13setTextOptionERK11QTextOption
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QStaticText13setTextOptionERK11QTextOption )( void *scorep_libwrap_arg_this, const QTextOption & textOption )
{
    LIBWRAP_EARLY_INIT( _ZN11QStaticText13setTextOptionERK11QTextOption );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QStaticText13setTextOptionERK11QTextOption );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QStaticText13setTextOptionERK11QTextOption, ( scorep_libwrap_arg_this, textOption ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QStaticText13setTextOptionERK11QTextOption );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK11QStaticText10textOptionEv
QTextOption
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QStaticText10textOptionEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QStaticText10textOptionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QStaticText10textOptionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextOption scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QStaticText10textOptionEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QStaticText10textOptionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QStaticText4sizeEv
QSizeF
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QStaticText4sizeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QStaticText4sizeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QStaticText4sizeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QSizeF scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QStaticText4sizeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QStaticText4sizeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QStaticText7prepareERK10QTransformRK5QFont
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QStaticText7prepareERK10QTransformRK5QFont )( void *scorep_libwrap_arg_this, const QTransform & matrix, const QFont & font )
{
    LIBWRAP_EARLY_INIT( _ZN11QStaticText7prepareERK10QTransformRK5QFont );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QStaticText7prepareERK10QTransformRK5QFont );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QStaticText7prepareERK10QTransformRK5QFont, ( scorep_libwrap_arg_this, matrix, font ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QStaticText7prepareERK10QTransformRK5QFont );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN11QStaticText18setPerformanceHintENS_15PerformanceHintE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QStaticText18setPerformanceHintENS_15PerformanceHintE )( void *scorep_libwrap_arg_this, QStaticText::PerformanceHint performanceHint )
{
    LIBWRAP_EARLY_INIT( _ZN11QStaticText18setPerformanceHintENS_15PerformanceHintE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QStaticText18setPerformanceHintENS_15PerformanceHintE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN11QStaticText18setPerformanceHintENS_15PerformanceHintE, ( scorep_libwrap_arg_this, performanceHint ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QStaticText18setPerformanceHintENS_15PerformanceHintE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK11QStaticText15performanceHintEv
QStaticText::PerformanceHint
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QStaticText15performanceHintEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QStaticText15performanceHintEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QStaticText15performanceHintEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QStaticText::PerformanceHint scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QStaticText15performanceHintEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QStaticText15performanceHintEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QStaticTexteqERKS_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QStaticTexteqERKS_ )( void *scorep_libwrap_arg_this, const QStaticText & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZNK11QStaticTexteqERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QStaticTexteqERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QStaticTexteqERKS_, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QStaticTexteqERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QStaticTextneERKS_
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QStaticTextneERKS_ )( void *scorep_libwrap_arg_this, const QStaticText & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZNK11QStaticTextneERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QStaticTextneERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QStaticTextneERKS_, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QStaticTextneERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextObject10metaObjectEv
const QMetaObject *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextObject10metaObjectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextObject10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextObject10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QMetaObject * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextObject10metaObjectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextObject10metaObjectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QTextObject11qt_metacastEPKc
void *
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextObject11qt_metacastEPKc )( void *scorep_libwrap_arg_this, const char * scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextObject11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextObject11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    void * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextObject11qt_metacastEPKc, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextObject11qt_metacastEPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN11QTextObject11qt_metacallEN11QMetaObject4CallEiPPv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZN11QTextObject11qt_metacallEN11QMetaObject4CallEiPPv )( void *scorep_libwrap_arg_this, QMetaObject::Call scorep_libwrap_arg_1, int scorep_libwrap_arg_2, void ** scorep_libwrap_arg_3 )
{
    LIBWRAP_EARLY_INIT( _ZN11QTextObject11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN11QTextObject11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN11QTextObject11qt_metacallEN11QMetaObject4CallEiPPv, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, scorep_libwrap_arg_2, scorep_libwrap_arg_3 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN11QTextObject11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextObject6formatEv
QTextFormat
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextObject6formatEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextObject6formatEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextObject6formatEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextFormat scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextObject6formatEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextObject6formatEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextObject11formatIndexEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextObject11formatIndexEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextObject11formatIndexEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextObject11formatIndexEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextObject11formatIndexEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextObject11formatIndexEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextObject8documentEv
QTextDocument *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextObject8documentEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextObject8documentEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextObject8documentEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextDocument * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextObject8documentEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextObject8documentEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextObject11objectIndexEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextObject11objectIndexEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextObject11objectIndexEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextObject11objectIndexEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextObject11objectIndexEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextObject11objectIndexEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK11QTextObject9docHandleEv
QTextDocumentPrivate *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK11QTextObject9docHandleEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK11QTextObject9docHandleEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK11QTextObject9docHandleEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextDocumentPrivate * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK11QTextObject9docHandleEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK11QTextObject9docHandleEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK15QTextBlockGroup10metaObjectEv
const QMetaObject *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK15QTextBlockGroup10metaObjectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK15QTextBlockGroup10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK15QTextBlockGroup10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QMetaObject * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK15QTextBlockGroup10metaObjectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK15QTextBlockGroup10metaObjectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QTextBlockGroup11qt_metacastEPKc
void *
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QTextBlockGroup11qt_metacastEPKc )( void *scorep_libwrap_arg_this, const char * scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN15QTextBlockGroup11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QTextBlockGroup11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    void * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN15QTextBlockGroup11qt_metacastEPKc, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QTextBlockGroup11qt_metacastEPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN15QTextBlockGroup11qt_metacallEN11QMetaObject4CallEiPPv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZN15QTextBlockGroup11qt_metacallEN11QMetaObject4CallEiPPv )( void *scorep_libwrap_arg_this, QMetaObject::Call scorep_libwrap_arg_1, int scorep_libwrap_arg_2, void ** scorep_libwrap_arg_3 )
{
    LIBWRAP_EARLY_INIT( _ZN15QTextBlockGroup11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN15QTextBlockGroup11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN15QTextBlockGroup11qt_metacallEN11QMetaObject4CallEiPPv, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, scorep_libwrap_arg_2, scorep_libwrap_arg_3 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN15QTextBlockGroup11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN20QTextFrameLayoutDataD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QTextFrameLayoutDataD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN20QTextFrameLayoutDataD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QTextFrameLayoutDataD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QTextFrameLayoutDataD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QTextFrameLayoutDataD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QTextFrameLayoutDataD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QTextFrameLayoutDataD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN20QTextFrameLayoutDataD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QTextFrameLayoutDataD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QTextFrameLayoutDataD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QTextFrameLayoutDataD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN20QTextFrameLayoutDataD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN20QTextFrameLayoutDataD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN20QTextFrameLayoutDataD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN20QTextFrameLayoutDataD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN20QTextFrameLayoutDataD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN20QTextFrameLayoutDataD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK10QTextFrame10metaObjectEv
const QMetaObject *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTextFrame10metaObjectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTextFrame10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTextFrame10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QMetaObject * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTextFrame10metaObjectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTextFrame10metaObjectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QTextFrame11qt_metacastEPKc
void *
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTextFrame11qt_metacastEPKc )( void *scorep_libwrap_arg_this, const char * scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN10QTextFrame11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTextFrame11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    void * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTextFrame11qt_metacastEPKc, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTextFrame11qt_metacastEPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QTextFrame11qt_metacallEN11QMetaObject4CallEiPPv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTextFrame11qt_metacallEN11QMetaObject4CallEiPPv )( void *scorep_libwrap_arg_this, QMetaObject::Call scorep_libwrap_arg_1, int scorep_libwrap_arg_2, void ** scorep_libwrap_arg_3 )
{
    LIBWRAP_EARLY_INIT( _ZN10QTextFrame11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTextFrame11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTextFrame11qt_metacallEN11QMetaObject4CallEiPPv, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, scorep_libwrap_arg_2, scorep_libwrap_arg_3 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTextFrame11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QTextFrameC2EP13QTextDocument
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTextFrameC2EP13QTextDocument )( void *scorep_libwrap_arg_this, QTextDocument * doc )
{
    LIBWRAP_EARLY_INIT( _ZN10QTextFrameC2EP13QTextDocument );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTextFrameC2EP13QTextDocument );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTextFrameC2EP13QTextDocument, ( scorep_libwrap_arg_this, doc ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTextFrameC2EP13QTextDocument );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QTextFrameC1EP13QTextDocument
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTextFrameC1EP13QTextDocument )( void *scorep_libwrap_arg_this, QTextDocument * doc )
{
    LIBWRAP_EARLY_INIT( _ZN10QTextFrameC1EP13QTextDocument );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTextFrameC1EP13QTextDocument );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTextFrameC1EP13QTextDocument, ( scorep_libwrap_arg_this, doc ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTextFrameC1EP13QTextDocument );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QTextFrameD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTextFrameD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN10QTextFrameD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTextFrameD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTextFrameD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTextFrameD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QTextFrameD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTextFrameD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN10QTextFrameD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTextFrameD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTextFrameD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTextFrameD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QTextFrameD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTextFrameD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN10QTextFrameD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTextFrameD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTextFrameD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTextFrameD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK10QTextFrame19firstCursorPositionEv
QTextCursor
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTextFrame19firstCursorPositionEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTextFrame19firstCursorPositionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTextFrame19firstCursorPositionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextCursor scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTextFrame19firstCursorPositionEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTextFrame19firstCursorPositionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QTextFrame18lastCursorPositionEv
QTextCursor
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTextFrame18lastCursorPositionEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTextFrame18lastCursorPositionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTextFrame18lastCursorPositionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextCursor scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTextFrame18lastCursorPositionEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTextFrame18lastCursorPositionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QTextFrame13firstPositionEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTextFrame13firstPositionEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTextFrame13firstPositionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTextFrame13firstPositionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTextFrame13firstPositionEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTextFrame13firstPositionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QTextFrame12lastPositionEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTextFrame12lastPositionEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTextFrame12lastPositionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTextFrame12lastPositionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTextFrame12lastPositionEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTextFrame12lastPositionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QTextFrame10layoutDataEv
QTextFrameLayoutData *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTextFrame10layoutDataEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTextFrame10layoutDataEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTextFrame10layoutDataEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextFrameLayoutData * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTextFrame10layoutDataEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTextFrame10layoutDataEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QTextFrame13setLayoutDataEP20QTextFrameLayoutData
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTextFrame13setLayoutDataEP20QTextFrameLayoutData )( void *scorep_libwrap_arg_this, QTextFrameLayoutData * data )
{
    LIBWRAP_EARLY_INIT( _ZN10QTextFrame13setLayoutDataEP20QTextFrameLayoutData );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTextFrame13setLayoutDataEP20QTextFrameLayoutData );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTextFrame13setLayoutDataEP20QTextFrameLayoutData, ( scorep_libwrap_arg_this, data ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTextFrame13setLayoutDataEP20QTextFrameLayoutData );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK10QTextFrame11childFramesEv
QList<QTextFrame *>
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTextFrame11childFramesEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTextFrame11childFramesEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTextFrame11childFramesEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QList<QTextFrame *> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTextFrame11childFramesEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTextFrame11childFramesEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QTextFrame11parentFrameEv
QTextFrame *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTextFrame11parentFrameEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTextFrame11parentFrameEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTextFrame11parentFrameEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextFrame * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTextFrame11parentFrameEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTextFrame11parentFrameEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QTextFrame8iteratorC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTextFrame8iteratorC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN10QTextFrame8iteratorC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTextFrame8iteratorC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTextFrame8iteratorC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTextFrame8iteratorC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QTextFrame8iteratorC1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTextFrame8iteratorC1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN10QTextFrame8iteratorC1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTextFrame8iteratorC1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTextFrame8iteratorC1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTextFrame8iteratorC1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QTextFrame8iteratorC2ERKS0_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTextFrame8iteratorC2ERKS0_ )( void *scorep_libwrap_arg_this, const QTextFrame::iterator & o )
{
    LIBWRAP_EARLY_INIT( _ZN10QTextFrame8iteratorC2ERKS0_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTextFrame8iteratorC2ERKS0_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTextFrame8iteratorC2ERKS0_, ( scorep_libwrap_arg_this, o ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTextFrame8iteratorC2ERKS0_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QTextFrame8iteratorC1ERKS0_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTextFrame8iteratorC1ERKS0_ )( void *scorep_libwrap_arg_this, const QTextFrame::iterator & o )
{
    LIBWRAP_EARLY_INIT( _ZN10QTextFrame8iteratorC1ERKS0_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTextFrame8iteratorC1ERKS0_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTextFrame8iteratorC1ERKS0_, ( scorep_libwrap_arg_this, o ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTextFrame8iteratorC1ERKS0_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QTextFrame8iteratoraSERKS0_
QTextFrame::iterator &
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTextFrame8iteratoraSERKS0_ )( void *scorep_libwrap_arg_this, const QTextFrame::iterator & o )
{
    LIBWRAP_EARLY_INIT( _ZN10QTextFrame8iteratoraSERKS0_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTextFrame8iteratoraSERKS0_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextFrame::iterator & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTextFrame8iteratoraSERKS0_, ( scorep_libwrap_arg_this, o ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTextFrame8iteratoraSERKS0_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QTextFrame8iterator12currentBlockEv
QTextBlock
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTextFrame8iterator12currentBlockEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTextFrame8iterator12currentBlockEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTextFrame8iterator12currentBlockEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextBlock scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTextFrame8iterator12currentBlockEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTextFrame8iterator12currentBlockEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QTextFrame8iteratorppEv
QTextFrame::iterator &
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTextFrame8iteratorppEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN10QTextFrame8iteratorppEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTextFrame8iteratorppEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextFrame::iterator & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTextFrame8iteratorppEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTextFrame8iteratorppEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QTextFrame8iteratormmEv
QTextFrame::iterator &
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTextFrame8iteratormmEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN10QTextFrame8iteratormmEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTextFrame8iteratormmEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextFrame::iterator & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTextFrame8iteratormmEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTextFrame8iteratormmEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QTextFrame5beginEv
QTextFrame::iterator
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTextFrame5beginEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTextFrame5beginEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTextFrame5beginEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextFrame::iterator scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTextFrame5beginEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTextFrame5beginEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QTextFrame3endEv
QTextFrame::iterator
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTextFrame3endEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTextFrame3endEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTextFrame3endEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextFrame::iterator scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTextFrame3endEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTextFrame3endEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN18QTextBlockUserDataD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QTextBlockUserDataD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN18QTextBlockUserDataD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QTextBlockUserDataD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QTextBlockUserDataD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QTextBlockUserDataD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN18QTextBlockUserDataD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QTextBlockUserDataD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN18QTextBlockUserDataD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QTextBlockUserDataD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QTextBlockUserDataD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QTextBlockUserDataD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN18QTextBlockUserDataD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QTextBlockUserDataD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN18QTextBlockUserDataD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QTextBlockUserDataD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QTextBlockUserDataD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QTextBlockUserDataD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK10QTextBlock7isValidEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTextBlock7isValidEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTextBlock7isValidEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTextBlock7isValidEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTextBlock7isValidEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTextBlock7isValidEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QTextBlock8positionEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTextBlock8positionEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTextBlock8positionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTextBlock8positionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTextBlock8positionEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTextBlock8positionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QTextBlock6lengthEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTextBlock6lengthEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTextBlock6lengthEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTextBlock6lengthEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTextBlock6lengthEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTextBlock6lengthEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QTextBlock8containsEi
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTextBlock8containsEi )( void *scorep_libwrap_arg_this, int position )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTextBlock8containsEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTextBlock8containsEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTextBlock8containsEi, ( scorep_libwrap_arg_this, position ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTextBlock8containsEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QTextBlock6layoutEv
QTextLayout *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTextBlock6layoutEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTextBlock6layoutEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTextBlock6layoutEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextLayout * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTextBlock6layoutEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTextBlock6layoutEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QTextBlock11clearLayoutEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTextBlock11clearLayoutEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN10QTextBlock11clearLayoutEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTextBlock11clearLayoutEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTextBlock11clearLayoutEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTextBlock11clearLayoutEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK10QTextBlock11blockFormatEv
QTextBlockFormat
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTextBlock11blockFormatEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTextBlock11blockFormatEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTextBlock11blockFormatEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextBlockFormat scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTextBlock11blockFormatEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTextBlock11blockFormatEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QTextBlock16blockFormatIndexEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTextBlock16blockFormatIndexEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTextBlock16blockFormatIndexEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTextBlock16blockFormatIndexEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTextBlock16blockFormatIndexEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTextBlock16blockFormatIndexEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QTextBlock10charFormatEv
QTextCharFormat
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTextBlock10charFormatEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTextBlock10charFormatEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTextBlock10charFormatEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextCharFormat scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTextBlock10charFormatEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTextBlock10charFormatEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QTextBlock15charFormatIndexEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTextBlock15charFormatIndexEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTextBlock15charFormatIndexEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTextBlock15charFormatIndexEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTextBlock15charFormatIndexEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTextBlock15charFormatIndexEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QTextBlock13textDirectionEv
Qt::LayoutDirection
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTextBlock13textDirectionEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTextBlock13textDirectionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTextBlock13textDirectionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    Qt::LayoutDirection scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTextBlock13textDirectionEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTextBlock13textDirectionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QTextBlock4textEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTextBlock4textEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTextBlock4textEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTextBlock4textEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTextBlock4textEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTextBlock4textEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QTextBlock11textFormatsEv
QVector<QTextLayout::FormatRange>
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTextBlock11textFormatsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTextBlock11textFormatsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTextBlock11textFormatsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QVector<QTextLayout::FormatRange> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTextBlock11textFormatsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTextBlock11textFormatsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QTextBlock8documentEv
const QTextDocument *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTextBlock8documentEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTextBlock8documentEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTextBlock8documentEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QTextDocument * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTextBlock8documentEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTextBlock8documentEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QTextBlock8textListEv
QTextList *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTextBlock8textListEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTextBlock8textListEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTextBlock8textListEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextList * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTextBlock8textListEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTextBlock8textListEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QTextBlock8userDataEv
QTextBlockUserData *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTextBlock8userDataEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTextBlock8userDataEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTextBlock8userDataEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextBlockUserData * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTextBlock8userDataEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTextBlock8userDataEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QTextBlock11setUserDataEP18QTextBlockUserData
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTextBlock11setUserDataEP18QTextBlockUserData )( void *scorep_libwrap_arg_this, QTextBlockUserData * data )
{
    LIBWRAP_EARLY_INIT( _ZN10QTextBlock11setUserDataEP18QTextBlockUserData );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTextBlock11setUserDataEP18QTextBlockUserData );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTextBlock11setUserDataEP18QTextBlockUserData, ( scorep_libwrap_arg_this, data ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTextBlock11setUserDataEP18QTextBlockUserData );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK10QTextBlock9userStateEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTextBlock9userStateEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTextBlock9userStateEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTextBlock9userStateEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTextBlock9userStateEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTextBlock9userStateEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QTextBlock12setUserStateEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTextBlock12setUserStateEi )( void *scorep_libwrap_arg_this, int state )
{
    LIBWRAP_EARLY_INIT( _ZN10QTextBlock12setUserStateEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTextBlock12setUserStateEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTextBlock12setUserStateEi, ( scorep_libwrap_arg_this, state ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTextBlock12setUserStateEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK10QTextBlock8revisionEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTextBlock8revisionEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTextBlock8revisionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTextBlock8revisionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTextBlock8revisionEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTextBlock8revisionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QTextBlock11setRevisionEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTextBlock11setRevisionEi )( void *scorep_libwrap_arg_this, int rev )
{
    LIBWRAP_EARLY_INIT( _ZN10QTextBlock11setRevisionEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTextBlock11setRevisionEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTextBlock11setRevisionEi, ( scorep_libwrap_arg_this, rev ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTextBlock11setRevisionEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK10QTextBlock9isVisibleEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTextBlock9isVisibleEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTextBlock9isVisibleEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTextBlock9isVisibleEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTextBlock9isVisibleEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTextBlock9isVisibleEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QTextBlock10setVisibleEb
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTextBlock10setVisibleEb )( void *scorep_libwrap_arg_this, bool visible )
{
    LIBWRAP_EARLY_INIT( _ZN10QTextBlock10setVisibleEb );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTextBlock10setVisibleEb );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTextBlock10setVisibleEb, ( scorep_libwrap_arg_this, visible ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTextBlock10setVisibleEb );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK10QTextBlock11blockNumberEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTextBlock11blockNumberEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTextBlock11blockNumberEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTextBlock11blockNumberEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTextBlock11blockNumberEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTextBlock11blockNumberEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QTextBlock15firstLineNumberEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTextBlock15firstLineNumberEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTextBlock15firstLineNumberEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTextBlock15firstLineNumberEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTextBlock15firstLineNumberEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTextBlock15firstLineNumberEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QTextBlock12setLineCountEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTextBlock12setLineCountEi )( void *scorep_libwrap_arg_this, int count )
{
    LIBWRAP_EARLY_INIT( _ZN10QTextBlock12setLineCountEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTextBlock12setLineCountEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTextBlock12setLineCountEi, ( scorep_libwrap_arg_this, count ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTextBlock12setLineCountEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK10QTextBlock9lineCountEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTextBlock9lineCountEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTextBlock9lineCountEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTextBlock9lineCountEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTextBlock9lineCountEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTextBlock9lineCountEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QTextBlock8iterator8fragmentEv
QTextFragment
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTextBlock8iterator8fragmentEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTextBlock8iterator8fragmentEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTextBlock8iterator8fragmentEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextFragment scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTextBlock8iterator8fragmentEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTextBlock8iterator8fragmentEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QTextBlock8iteratorppEv
QTextBlock::iterator &
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTextBlock8iteratorppEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN10QTextBlock8iteratorppEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTextBlock8iteratorppEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextBlock::iterator & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTextBlock8iteratorppEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTextBlock8iteratorppEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QTextBlock8iteratormmEv
QTextBlock::iterator &
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTextBlock8iteratormmEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN10QTextBlock8iteratormmEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTextBlock8iteratormmEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextBlock::iterator & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTextBlock8iteratormmEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTextBlock8iteratormmEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QTextBlock5beginEv
QTextBlock::iterator
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTextBlock5beginEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTextBlock5beginEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTextBlock5beginEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextBlock::iterator scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTextBlock5beginEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTextBlock5beginEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QTextBlock3endEv
QTextBlock::iterator
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTextBlock3endEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTextBlock3endEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTextBlock3endEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextBlock::iterator scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTextBlock3endEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTextBlock3endEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QTextBlock4nextEv
QTextBlock
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTextBlock4nextEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTextBlock4nextEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTextBlock4nextEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextBlock scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTextBlock4nextEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTextBlock4nextEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QTextBlock8previousEv
QTextBlock
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTextBlock8previousEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTextBlock8previousEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTextBlock8previousEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextBlock scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTextBlock8previousEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTextBlock8previousEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QTextFragment8positionEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextFragment8positionEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextFragment8positionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextFragment8positionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextFragment8positionEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextFragment8positionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QTextFragment6lengthEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextFragment6lengthEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextFragment6lengthEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextFragment6lengthEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextFragment6lengthEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextFragment6lengthEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QTextFragment8containsEi
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextFragment8containsEi )( void *scorep_libwrap_arg_this, int position )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextFragment8containsEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextFragment8containsEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextFragment8containsEi, ( scorep_libwrap_arg_this, position ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextFragment8containsEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QTextFragment10charFormatEv
QTextCharFormat
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextFragment10charFormatEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextFragment10charFormatEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextFragment10charFormatEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextCharFormat scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextFragment10charFormatEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextFragment10charFormatEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QTextFragment15charFormatIndexEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextFragment15charFormatIndexEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextFragment15charFormatIndexEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextFragment15charFormatIndexEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextFragment15charFormatIndexEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextFragment15charFormatIndexEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QTextFragment4textEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextFragment4textEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextFragment4textEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextFragment4textEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextFragment4textEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextFragment4textEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QTextFragment9glyphRunsEii
QList<QGlyphRun>
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QTextFragment9glyphRunsEii )( void *scorep_libwrap_arg_this, int from, int length )
{
    LIBWRAP_EARLY_INIT( _ZNK13QTextFragment9glyphRunsEii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QTextFragment9glyphRunsEii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QList<QGlyphRun> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QTextFragment9glyphRunsEii, ( scorep_libwrap_arg_this, from, length ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QTextFragment9glyphRunsEii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK18QSyntaxHighlighter10metaObjectEv
const QMetaObject *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK18QSyntaxHighlighter10metaObjectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK18QSyntaxHighlighter10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK18QSyntaxHighlighter10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QMetaObject * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK18QSyntaxHighlighter10metaObjectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK18QSyntaxHighlighter10metaObjectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN18QSyntaxHighlighter11qt_metacastEPKc
void *
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QSyntaxHighlighter11qt_metacastEPKc )( void *scorep_libwrap_arg_this, const char * scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN18QSyntaxHighlighter11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QSyntaxHighlighter11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    void * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN18QSyntaxHighlighter11qt_metacastEPKc, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QSyntaxHighlighter11qt_metacastEPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN18QSyntaxHighlighter11qt_metacallEN11QMetaObject4CallEiPPv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QSyntaxHighlighter11qt_metacallEN11QMetaObject4CallEiPPv )( void *scorep_libwrap_arg_this, QMetaObject::Call scorep_libwrap_arg_1, int scorep_libwrap_arg_2, void ** scorep_libwrap_arg_3 )
{
    LIBWRAP_EARLY_INIT( _ZN18QSyntaxHighlighter11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QSyntaxHighlighter11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN18QSyntaxHighlighter11qt_metacallEN11QMetaObject4CallEiPPv, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, scorep_libwrap_arg_2, scorep_libwrap_arg_3 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QSyntaxHighlighter11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN18QSyntaxHighlighterC2EP7QObject
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QSyntaxHighlighterC2EP7QObject )( void *scorep_libwrap_arg_this, QObject * parent )
{
    LIBWRAP_EARLY_INIT( _ZN18QSyntaxHighlighterC2EP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QSyntaxHighlighterC2EP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QSyntaxHighlighterC2EP7QObject, ( scorep_libwrap_arg_this, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QSyntaxHighlighterC2EP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN18QSyntaxHighlighterC2EP13QTextDocument
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QSyntaxHighlighterC2EP13QTextDocument )( void *scorep_libwrap_arg_this, QTextDocument * parent )
{
    LIBWRAP_EARLY_INIT( _ZN18QSyntaxHighlighterC2EP13QTextDocument );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QSyntaxHighlighterC2EP13QTextDocument );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QSyntaxHighlighterC2EP13QTextDocument, ( scorep_libwrap_arg_this, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QSyntaxHighlighterC2EP13QTextDocument );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN18QSyntaxHighlighterD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QSyntaxHighlighterD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN18QSyntaxHighlighterD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QSyntaxHighlighterD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QSyntaxHighlighterD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QSyntaxHighlighterD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN18QSyntaxHighlighterD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QSyntaxHighlighterD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN18QSyntaxHighlighterD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QSyntaxHighlighterD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QSyntaxHighlighterD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QSyntaxHighlighterD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN18QSyntaxHighlighterD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QSyntaxHighlighterD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN18QSyntaxHighlighterD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QSyntaxHighlighterD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QSyntaxHighlighterD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QSyntaxHighlighterD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN18QSyntaxHighlighter11setDocumentEP13QTextDocument
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QSyntaxHighlighter11setDocumentEP13QTextDocument )( void *scorep_libwrap_arg_this, QTextDocument * doc )
{
    LIBWRAP_EARLY_INIT( _ZN18QSyntaxHighlighter11setDocumentEP13QTextDocument );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QSyntaxHighlighter11setDocumentEP13QTextDocument );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QSyntaxHighlighter11setDocumentEP13QTextDocument, ( scorep_libwrap_arg_this, doc ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QSyntaxHighlighter11setDocumentEP13QTextDocument );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK18QSyntaxHighlighter8documentEv
QTextDocument *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK18QSyntaxHighlighter8documentEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK18QSyntaxHighlighter8documentEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK18QSyntaxHighlighter8documentEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextDocument * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK18QSyntaxHighlighter8documentEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK18QSyntaxHighlighter8documentEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN18QSyntaxHighlighter11rehighlightEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QSyntaxHighlighter11rehighlightEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN18QSyntaxHighlighter11rehighlightEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QSyntaxHighlighter11rehighlightEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QSyntaxHighlighter11rehighlightEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QSyntaxHighlighter11rehighlightEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN18QSyntaxHighlighter16rehighlightBlockERK10QTextBlock
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN18QSyntaxHighlighter16rehighlightBlockERK10QTextBlock )( void *scorep_libwrap_arg_this, const QTextBlock & block )
{
    LIBWRAP_EARLY_INIT( _ZN18QSyntaxHighlighter16rehighlightBlockERK10QTextBlock );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN18QSyntaxHighlighter16rehighlightBlockERK10QTextBlock );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN18QSyntaxHighlighter16rehighlightBlockERK10QTextBlock, ( scorep_libwrap_arg_this, block ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN18QSyntaxHighlighter16rehighlightBlockERK10QTextBlock );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN21QTextDocumentFragmentC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN21QTextDocumentFragmentC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN21QTextDocumentFragmentC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN21QTextDocumentFragmentC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN21QTextDocumentFragmentC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN21QTextDocumentFragmentC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN21QTextDocumentFragmentC1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN21QTextDocumentFragmentC1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN21QTextDocumentFragmentC1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN21QTextDocumentFragmentC1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN21QTextDocumentFragmentC1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN21QTextDocumentFragmentC1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN21QTextDocumentFragmentC2EPK13QTextDocument
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN21QTextDocumentFragmentC2EPK13QTextDocument )( void *scorep_libwrap_arg_this, const QTextDocument * document )
{
    LIBWRAP_EARLY_INIT( _ZN21QTextDocumentFragmentC2EPK13QTextDocument );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN21QTextDocumentFragmentC2EPK13QTextDocument );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN21QTextDocumentFragmentC2EPK13QTextDocument, ( scorep_libwrap_arg_this, document ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN21QTextDocumentFragmentC2EPK13QTextDocument );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN21QTextDocumentFragmentC1EPK13QTextDocument
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN21QTextDocumentFragmentC1EPK13QTextDocument )( void *scorep_libwrap_arg_this, const QTextDocument * document )
{
    LIBWRAP_EARLY_INIT( _ZN21QTextDocumentFragmentC1EPK13QTextDocument );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN21QTextDocumentFragmentC1EPK13QTextDocument );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN21QTextDocumentFragmentC1EPK13QTextDocument, ( scorep_libwrap_arg_this, document ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN21QTextDocumentFragmentC1EPK13QTextDocument );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN21QTextDocumentFragmentC2ERK11QTextCursor
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN21QTextDocumentFragmentC2ERK11QTextCursor )( void *scorep_libwrap_arg_this, const QTextCursor & range )
{
    LIBWRAP_EARLY_INIT( _ZN21QTextDocumentFragmentC2ERK11QTextCursor );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN21QTextDocumentFragmentC2ERK11QTextCursor );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN21QTextDocumentFragmentC2ERK11QTextCursor, ( scorep_libwrap_arg_this, range ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN21QTextDocumentFragmentC2ERK11QTextCursor );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN21QTextDocumentFragmentC1ERK11QTextCursor
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN21QTextDocumentFragmentC1ERK11QTextCursor )( void *scorep_libwrap_arg_this, const QTextCursor & range )
{
    LIBWRAP_EARLY_INIT( _ZN21QTextDocumentFragmentC1ERK11QTextCursor );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN21QTextDocumentFragmentC1ERK11QTextCursor );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN21QTextDocumentFragmentC1ERK11QTextCursor, ( scorep_libwrap_arg_this, range ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN21QTextDocumentFragmentC1ERK11QTextCursor );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN21QTextDocumentFragmentC2ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN21QTextDocumentFragmentC2ERKS_ )( void *scorep_libwrap_arg_this, const QTextDocumentFragment & rhs )
{
    LIBWRAP_EARLY_INIT( _ZN21QTextDocumentFragmentC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN21QTextDocumentFragmentC2ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN21QTextDocumentFragmentC2ERKS_, ( scorep_libwrap_arg_this, rhs ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN21QTextDocumentFragmentC2ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN21QTextDocumentFragmentC1ERKS_
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN21QTextDocumentFragmentC1ERKS_ )( void *scorep_libwrap_arg_this, const QTextDocumentFragment & rhs )
{
    LIBWRAP_EARLY_INIT( _ZN21QTextDocumentFragmentC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN21QTextDocumentFragmentC1ERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN21QTextDocumentFragmentC1ERKS_, ( scorep_libwrap_arg_this, rhs ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN21QTextDocumentFragmentC1ERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN21QTextDocumentFragmentaSERKS_
QTextDocumentFragment &
SCOREP_LIBWRAP_FUNC_NAME( _ZN21QTextDocumentFragmentaSERKS_ )( void *scorep_libwrap_arg_this, const QTextDocumentFragment & rhs )
{
    LIBWRAP_EARLY_INIT( _ZN21QTextDocumentFragmentaSERKS_ );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN21QTextDocumentFragmentaSERKS_ );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextDocumentFragment & scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN21QTextDocumentFragmentaSERKS_, ( scorep_libwrap_arg_this, rhs ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN21QTextDocumentFragmentaSERKS_ );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN21QTextDocumentFragmentD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN21QTextDocumentFragmentD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN21QTextDocumentFragmentD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN21QTextDocumentFragmentD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN21QTextDocumentFragmentD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN21QTextDocumentFragmentD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN21QTextDocumentFragmentD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN21QTextDocumentFragmentD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN21QTextDocumentFragmentD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN21QTextDocumentFragmentD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN21QTextDocumentFragmentD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN21QTextDocumentFragmentD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK21QTextDocumentFragment7isEmptyEv
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZNK21QTextDocumentFragment7isEmptyEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK21QTextDocumentFragment7isEmptyEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK21QTextDocumentFragment7isEmptyEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK21QTextDocumentFragment7isEmptyEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK21QTextDocumentFragment7isEmptyEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK21QTextDocumentFragment11toPlainTextEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK21QTextDocumentFragment11toPlainTextEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK21QTextDocumentFragment11toPlainTextEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK21QTextDocumentFragment11toPlainTextEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK21QTextDocumentFragment11toPlainTextEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK21QTextDocumentFragment11toPlainTextEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK21QTextDocumentFragment6toHtmlERK10QByteArray
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK21QTextDocumentFragment6toHtmlERK10QByteArray )( void *scorep_libwrap_arg_this, const QByteArray & encoding )
{
    LIBWRAP_EARLY_INIT( _ZNK21QTextDocumentFragment6toHtmlERK10QByteArray );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK21QTextDocumentFragment6toHtmlERK10QByteArray );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK21QTextDocumentFragment6toHtmlERK10QByteArray, ( scorep_libwrap_arg_this, encoding ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK21QTextDocumentFragment6toHtmlERK10QByteArray );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN21QTextDocumentFragment13fromPlainTextERK7QString
QTextDocumentFragment
SCOREP_LIBWRAP_FUNC_NAME( _ZN21QTextDocumentFragment13fromPlainTextERK7QString )( const QString & plainText )
{
    LIBWRAP_EARLY_INIT( _ZN21QTextDocumentFragment13fromPlainTextERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN21QTextDocumentFragment13fromPlainTextERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextDocumentFragment scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN21QTextDocumentFragment13fromPlainTextERK7QString, ( plainText ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN21QTextDocumentFragment13fromPlainTextERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN21QTextDocumentFragment8fromHtmlERK7QString
QTextDocumentFragment
SCOREP_LIBWRAP_FUNC_NAME( _ZN21QTextDocumentFragment8fromHtmlERK7QString )( const QString & html )
{
    LIBWRAP_EARLY_INIT( _ZN21QTextDocumentFragment8fromHtmlERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN21QTextDocumentFragment8fromHtmlERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextDocumentFragment scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN21QTextDocumentFragment8fromHtmlERK7QString, ( html ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN21QTextDocumentFragment8fromHtmlERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN21QTextDocumentFragment8fromHtmlERK7QStringPK13QTextDocument
QTextDocumentFragment
SCOREP_LIBWRAP_FUNC_NAME( _ZN21QTextDocumentFragment8fromHtmlERK7QStringPK13QTextDocument )( const QString & html, const QTextDocument * resourceProvider )
{
    LIBWRAP_EARLY_INIT( _ZN21QTextDocumentFragment8fromHtmlERK7QStringPK13QTextDocument );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN21QTextDocumentFragment8fromHtmlERK7QStringPK13QTextDocument );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextDocumentFragment scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN21QTextDocumentFragment8fromHtmlERK7QStringPK13QTextDocument, ( html, resourceProvider ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN21QTextDocumentFragment8fromHtmlERK7QStringPK13QTextDocument );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN19QTextDocumentWriterC2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QTextDocumentWriterC2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN19QTextDocumentWriterC2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QTextDocumentWriterC2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN19QTextDocumentWriterC2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QTextDocumentWriterC2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN19QTextDocumentWriterC1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QTextDocumentWriterC1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN19QTextDocumentWriterC1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QTextDocumentWriterC1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN19QTextDocumentWriterC1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QTextDocumentWriterC1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN19QTextDocumentWriterC2EP9QIODeviceRK10QByteArray
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QTextDocumentWriterC2EP9QIODeviceRK10QByteArray )( void *scorep_libwrap_arg_this, QIODevice * device, const QByteArray & format )
{
    LIBWRAP_EARLY_INIT( _ZN19QTextDocumentWriterC2EP9QIODeviceRK10QByteArray );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QTextDocumentWriterC2EP9QIODeviceRK10QByteArray );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN19QTextDocumentWriterC2EP9QIODeviceRK10QByteArray, ( scorep_libwrap_arg_this, device, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QTextDocumentWriterC2EP9QIODeviceRK10QByteArray );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN19QTextDocumentWriterC1EP9QIODeviceRK10QByteArray
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QTextDocumentWriterC1EP9QIODeviceRK10QByteArray )( void *scorep_libwrap_arg_this, QIODevice * device, const QByteArray & format )
{
    LIBWRAP_EARLY_INIT( _ZN19QTextDocumentWriterC1EP9QIODeviceRK10QByteArray );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QTextDocumentWriterC1EP9QIODeviceRK10QByteArray );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN19QTextDocumentWriterC1EP9QIODeviceRK10QByteArray, ( scorep_libwrap_arg_this, device, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QTextDocumentWriterC1EP9QIODeviceRK10QByteArray );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN19QTextDocumentWriterC2ERK7QStringRK10QByteArray
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QTextDocumentWriterC2ERK7QStringRK10QByteArray )( void *scorep_libwrap_arg_this, const QString & fileName, const QByteArray & format )
{
    LIBWRAP_EARLY_INIT( _ZN19QTextDocumentWriterC2ERK7QStringRK10QByteArray );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QTextDocumentWriterC2ERK7QStringRK10QByteArray );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN19QTextDocumentWriterC2ERK7QStringRK10QByteArray, ( scorep_libwrap_arg_this, fileName, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QTextDocumentWriterC2ERK7QStringRK10QByteArray );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN19QTextDocumentWriterC1ERK7QStringRK10QByteArray
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QTextDocumentWriterC1ERK7QStringRK10QByteArray )( void *scorep_libwrap_arg_this, const QString & fileName, const QByteArray & format )
{
    LIBWRAP_EARLY_INIT( _ZN19QTextDocumentWriterC1ERK7QStringRK10QByteArray );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QTextDocumentWriterC1ERK7QStringRK10QByteArray );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN19QTextDocumentWriterC1ERK7QStringRK10QByteArray, ( scorep_libwrap_arg_this, fileName, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QTextDocumentWriterC1ERK7QStringRK10QByteArray );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN19QTextDocumentWriterD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QTextDocumentWriterD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN19QTextDocumentWriterD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QTextDocumentWriterD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN19QTextDocumentWriterD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QTextDocumentWriterD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN19QTextDocumentWriterD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QTextDocumentWriterD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN19QTextDocumentWriterD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QTextDocumentWriterD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN19QTextDocumentWriterD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QTextDocumentWriterD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN19QTextDocumentWriter9setFormatERK10QByteArray
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QTextDocumentWriter9setFormatERK10QByteArray )( void *scorep_libwrap_arg_this, const QByteArray & format )
{
    LIBWRAP_EARLY_INIT( _ZN19QTextDocumentWriter9setFormatERK10QByteArray );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QTextDocumentWriter9setFormatERK10QByteArray );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN19QTextDocumentWriter9setFormatERK10QByteArray, ( scorep_libwrap_arg_this, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QTextDocumentWriter9setFormatERK10QByteArray );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK19QTextDocumentWriter6formatEv
QByteArray
SCOREP_LIBWRAP_FUNC_NAME( _ZNK19QTextDocumentWriter6formatEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK19QTextDocumentWriter6formatEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK19QTextDocumentWriter6formatEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QByteArray scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK19QTextDocumentWriter6formatEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK19QTextDocumentWriter6formatEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN19QTextDocumentWriter9setDeviceEP9QIODevice
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QTextDocumentWriter9setDeviceEP9QIODevice )( void *scorep_libwrap_arg_this, QIODevice * device )
{
    LIBWRAP_EARLY_INIT( _ZN19QTextDocumentWriter9setDeviceEP9QIODevice );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QTextDocumentWriter9setDeviceEP9QIODevice );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN19QTextDocumentWriter9setDeviceEP9QIODevice, ( scorep_libwrap_arg_this, device ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QTextDocumentWriter9setDeviceEP9QIODevice );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK19QTextDocumentWriter6deviceEv
QIODevice *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK19QTextDocumentWriter6deviceEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK19QTextDocumentWriter6deviceEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK19QTextDocumentWriter6deviceEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QIODevice * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK19QTextDocumentWriter6deviceEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK19QTextDocumentWriter6deviceEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN19QTextDocumentWriter11setFileNameERK7QString
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QTextDocumentWriter11setFileNameERK7QString )( void *scorep_libwrap_arg_this, const QString & fileName )
{
    LIBWRAP_EARLY_INIT( _ZN19QTextDocumentWriter11setFileNameERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QTextDocumentWriter11setFileNameERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN19QTextDocumentWriter11setFileNameERK7QString, ( scorep_libwrap_arg_this, fileName ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QTextDocumentWriter11setFileNameERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK19QTextDocumentWriter8fileNameEv
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK19QTextDocumentWriter8fileNameEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK19QTextDocumentWriter8fileNameEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK19QTextDocumentWriter8fileNameEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK19QTextDocumentWriter8fileNameEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK19QTextDocumentWriter8fileNameEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN19QTextDocumentWriter5writeEPK13QTextDocument
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QTextDocumentWriter5writeEPK13QTextDocument )( void *scorep_libwrap_arg_this, const QTextDocument * document )
{
    LIBWRAP_EARLY_INIT( _ZN19QTextDocumentWriter5writeEPK13QTextDocument );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QTextDocumentWriter5writeEPK13QTextDocument );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN19QTextDocumentWriter5writeEPK13QTextDocument, ( scorep_libwrap_arg_this, document ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QTextDocumentWriter5writeEPK13QTextDocument );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN19QTextDocumentWriter5writeERK21QTextDocumentFragment
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QTextDocumentWriter5writeERK21QTextDocumentFragment )( void *scorep_libwrap_arg_this, const QTextDocumentFragment & fragment )
{
    LIBWRAP_EARLY_INIT( _ZN19QTextDocumentWriter5writeERK21QTextDocumentFragment );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QTextDocumentWriter5writeERK21QTextDocumentFragment );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN19QTextDocumentWriter5writeERK21QTextDocumentFragment, ( scorep_libwrap_arg_this, fragment ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QTextDocumentWriter5writeERK21QTextDocumentFragment );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN19QTextDocumentWriter8setCodecEP10QTextCodec
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QTextDocumentWriter8setCodecEP10QTextCodec )( void *scorep_libwrap_arg_this, QTextCodec * codec )
{
    LIBWRAP_EARLY_INIT( _ZN19QTextDocumentWriter8setCodecEP10QTextCodec );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QTextDocumentWriter8setCodecEP10QTextCodec );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN19QTextDocumentWriter8setCodecEP10QTextCodec, ( scorep_libwrap_arg_this, codec ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QTextDocumentWriter8setCodecEP10QTextCodec );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK19QTextDocumentWriter5codecEv
QTextCodec *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK19QTextDocumentWriter5codecEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK19QTextDocumentWriter5codecEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK19QTextDocumentWriter5codecEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextCodec * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK19QTextDocumentWriter5codecEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK19QTextDocumentWriter5codecEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN19QTextDocumentWriter24supportedDocumentFormatsEv
QList<QByteArray>
SCOREP_LIBWRAP_FUNC_NAME( _ZN19QTextDocumentWriter24supportedDocumentFormatsEv )( void )
{
    LIBWRAP_EARLY_INIT( _ZN19QTextDocumentWriter24supportedDocumentFormatsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN19QTextDocumentWriter24supportedDocumentFormatsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QList<QByteArray> scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN19QTextDocumentWriter24supportedDocumentFormatsEv, (  ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN19QTextDocumentWriter24supportedDocumentFormatsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QTextList10metaObjectEv
const QMetaObject *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QTextList10metaObjectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QTextList10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QTextList10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QMetaObject * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QTextList10metaObjectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QTextList10metaObjectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN9QTextList11qt_metacastEPKc
void *
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QTextList11qt_metacastEPKc )( void *scorep_libwrap_arg_this, const char * scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN9QTextList11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QTextList11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    void * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN9QTextList11qt_metacastEPKc, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QTextList11qt_metacastEPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN9QTextList11qt_metacallEN11QMetaObject4CallEiPPv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QTextList11qt_metacallEN11QMetaObject4CallEiPPv )( void *scorep_libwrap_arg_this, QMetaObject::Call scorep_libwrap_arg_1, int scorep_libwrap_arg_2, void ** scorep_libwrap_arg_3 )
{
    LIBWRAP_EARLY_INIT( _ZN9QTextList11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QTextList11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN9QTextList11qt_metacallEN11QMetaObject4CallEiPPv, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, scorep_libwrap_arg_2, scorep_libwrap_arg_3 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QTextList11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN9QTextListC2EP13QTextDocument
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QTextListC2EP13QTextDocument )( void *scorep_libwrap_arg_this, QTextDocument * doc )
{
    LIBWRAP_EARLY_INIT( _ZN9QTextListC2EP13QTextDocument );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QTextListC2EP13QTextDocument );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QTextListC2EP13QTextDocument, ( scorep_libwrap_arg_this, doc ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QTextListC2EP13QTextDocument );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QTextListC1EP13QTextDocument
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QTextListC1EP13QTextDocument )( void *scorep_libwrap_arg_this, QTextDocument * doc )
{
    LIBWRAP_EARLY_INIT( _ZN9QTextListC1EP13QTextDocument );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QTextListC1EP13QTextDocument );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QTextListC1EP13QTextDocument, ( scorep_libwrap_arg_this, doc ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QTextListC1EP13QTextDocument );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QTextListD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QTextListD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN9QTextListD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QTextListD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QTextListD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QTextListD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QTextListD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QTextListD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN9QTextListD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QTextListD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QTextListD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QTextListD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QTextListD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QTextListD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN9QTextListD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QTextListD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QTextListD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QTextListD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK9QTextList5countEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QTextList5countEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK9QTextList5countEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QTextList5countEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QTextList5countEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QTextList5countEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QTextList4itemEi
QTextBlock
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QTextList4itemEi )( void *scorep_libwrap_arg_this, int i )
{
    LIBWRAP_EARLY_INIT( _ZNK9QTextList4itemEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QTextList4itemEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextBlock scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QTextList4itemEi, ( scorep_libwrap_arg_this, i ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QTextList4itemEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QTextList10itemNumberERK10QTextBlock
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QTextList10itemNumberERK10QTextBlock )( void *scorep_libwrap_arg_this, const QTextBlock & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZNK9QTextList10itemNumberERK10QTextBlock );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QTextList10itemNumberERK10QTextBlock );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QTextList10itemNumberERK10QTextBlock, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QTextList10itemNumberERK10QTextBlock );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK9QTextList8itemTextERK10QTextBlock
QString
SCOREP_LIBWRAP_FUNC_NAME( _ZNK9QTextList8itemTextERK10QTextBlock )( void *scorep_libwrap_arg_this, const QTextBlock & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZNK9QTextList8itemTextERK10QTextBlock );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK9QTextList8itemTextERK10QTextBlock );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QString scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK9QTextList8itemTextERK10QTextBlock, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK9QTextList8itemTextERK10QTextBlock );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN9QTextList10removeItemEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QTextList10removeItemEi )( void *scorep_libwrap_arg_this, int i )
{
    LIBWRAP_EARLY_INIT( _ZN9QTextList10removeItemEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QTextList10removeItemEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QTextList10removeItemEi, ( scorep_libwrap_arg_this, i ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QTextList10removeItemEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QTextList6removeERK10QTextBlock
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QTextList6removeERK10QTextBlock )( void *scorep_libwrap_arg_this, const QTextBlock & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN9QTextList6removeERK10QTextBlock );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QTextList6removeERK10QTextBlock );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QTextList6removeERK10QTextBlock, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QTextList6removeERK10QTextBlock );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN9QTextList3addERK10QTextBlock
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN9QTextList3addERK10QTextBlock )( void *scorep_libwrap_arg_this, const QTextBlock & block )
{
    LIBWRAP_EARLY_INIT( _ZN9QTextList3addERK10QTextBlock );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN9QTextList3addERK10QTextBlock );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN9QTextList3addERK10QTextBlock, ( scorep_libwrap_arg_this, block ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN9QTextList3addERK10QTextBlock );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN14QTextTableCell9setFormatERK15QTextCharFormat
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN14QTextTableCell9setFormatERK15QTextCharFormat )( void *scorep_libwrap_arg_this, const QTextCharFormat & format )
{
    LIBWRAP_EARLY_INIT( _ZN14QTextTableCell9setFormatERK15QTextCharFormat );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN14QTextTableCell9setFormatERK15QTextCharFormat );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN14QTextTableCell9setFormatERK15QTextCharFormat, ( scorep_libwrap_arg_this, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN14QTextTableCell9setFormatERK15QTextCharFormat );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK14QTextTableCell6formatEv
QTextCharFormat
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QTextTableCell6formatEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QTextTableCell6formatEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QTextTableCell6formatEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextCharFormat scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QTextTableCell6formatEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QTextTableCell6formatEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK14QTextTableCell3rowEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QTextTableCell3rowEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QTextTableCell3rowEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QTextTableCell3rowEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QTextTableCell3rowEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QTextTableCell3rowEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK14QTextTableCell6columnEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QTextTableCell6columnEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QTextTableCell6columnEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QTextTableCell6columnEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QTextTableCell6columnEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QTextTableCell6columnEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK14QTextTableCell7rowSpanEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QTextTableCell7rowSpanEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QTextTableCell7rowSpanEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QTextTableCell7rowSpanEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QTextTableCell7rowSpanEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QTextTableCell7rowSpanEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK14QTextTableCell10columnSpanEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QTextTableCell10columnSpanEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QTextTableCell10columnSpanEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QTextTableCell10columnSpanEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QTextTableCell10columnSpanEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QTextTableCell10columnSpanEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK14QTextTableCell19firstCursorPositionEv
QTextCursor
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QTextTableCell19firstCursorPositionEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QTextTableCell19firstCursorPositionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QTextTableCell19firstCursorPositionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextCursor scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QTextTableCell19firstCursorPositionEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QTextTableCell19firstCursorPositionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK14QTextTableCell18lastCursorPositionEv
QTextCursor
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QTextTableCell18lastCursorPositionEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QTextTableCell18lastCursorPositionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QTextTableCell18lastCursorPositionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextCursor scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QTextTableCell18lastCursorPositionEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QTextTableCell18lastCursorPositionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK14QTextTableCell13firstPositionEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QTextTableCell13firstPositionEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QTextTableCell13firstPositionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QTextTableCell13firstPositionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QTextTableCell13firstPositionEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QTextTableCell13firstPositionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK14QTextTableCell12lastPositionEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QTextTableCell12lastPositionEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QTextTableCell12lastPositionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QTextTableCell12lastPositionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QTextTableCell12lastPositionEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QTextTableCell12lastPositionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK14QTextTableCell5beginEv
QTextFrame::iterator
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QTextTableCell5beginEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QTextTableCell5beginEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QTextTableCell5beginEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextFrame::iterator scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QTextTableCell5beginEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QTextTableCell5beginEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK14QTextTableCell3endEv
QTextFrame::iterator
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QTextTableCell3endEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QTextTableCell3endEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QTextTableCell3endEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextFrame::iterator scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QTextTableCell3endEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QTextTableCell3endEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK14QTextTableCell20tableCellFormatIndexEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK14QTextTableCell20tableCellFormatIndexEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK14QTextTableCell20tableCellFormatIndexEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK14QTextTableCell20tableCellFormatIndexEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK14QTextTableCell20tableCellFormatIndexEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK14QTextTableCell20tableCellFormatIndexEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QTextTable10metaObjectEv
const QMetaObject *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTextTable10metaObjectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTextTable10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTextTable10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QMetaObject * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTextTable10metaObjectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTextTable10metaObjectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QTextTable11qt_metacastEPKc
void *
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTextTable11qt_metacastEPKc )( void *scorep_libwrap_arg_this, const char * scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN10QTextTable11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTextTable11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    void * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTextTable11qt_metacastEPKc, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTextTable11qt_metacastEPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QTextTable11qt_metacallEN11QMetaObject4CallEiPPv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTextTable11qt_metacallEN11QMetaObject4CallEiPPv )( void *scorep_libwrap_arg_this, QMetaObject::Call scorep_libwrap_arg_1, int scorep_libwrap_arg_2, void ** scorep_libwrap_arg_3 )
{
    LIBWRAP_EARLY_INIT( _ZN10QTextTable11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTextTable11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTextTable11qt_metacallEN11QMetaObject4CallEiPPv, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, scorep_libwrap_arg_2, scorep_libwrap_arg_3 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTextTable11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QTextTableC2EP13QTextDocument
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTextTableC2EP13QTextDocument )( void *scorep_libwrap_arg_this, QTextDocument * doc )
{
    LIBWRAP_EARLY_INIT( _ZN10QTextTableC2EP13QTextDocument );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTextTableC2EP13QTextDocument );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTextTableC2EP13QTextDocument, ( scorep_libwrap_arg_this, doc ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTextTableC2EP13QTextDocument );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QTextTableC1EP13QTextDocument
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTextTableC1EP13QTextDocument )( void *scorep_libwrap_arg_this, QTextDocument * doc )
{
    LIBWRAP_EARLY_INIT( _ZN10QTextTableC1EP13QTextDocument );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTextTableC1EP13QTextDocument );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTextTableC1EP13QTextDocument, ( scorep_libwrap_arg_this, doc ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTextTableC1EP13QTextDocument );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QTextTableD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTextTableD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN10QTextTableD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTextTableD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTextTableD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTextTableD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QTextTableD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTextTableD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN10QTextTableD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTextTableD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTextTableD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTextTableD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QTextTableD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTextTableD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN10QTextTableD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTextTableD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTextTableD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTextTableD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QTextTable6resizeEii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTextTable6resizeEii )( void *scorep_libwrap_arg_this, int rows, int cols )
{
    LIBWRAP_EARLY_INIT( _ZN10QTextTable6resizeEii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTextTable6resizeEii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTextTable6resizeEii, ( scorep_libwrap_arg_this, rows, cols ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTextTable6resizeEii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QTextTable10insertRowsEii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTextTable10insertRowsEii )( void *scorep_libwrap_arg_this, int pos, int num )
{
    LIBWRAP_EARLY_INIT( _ZN10QTextTable10insertRowsEii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTextTable10insertRowsEii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTextTable10insertRowsEii, ( scorep_libwrap_arg_this, pos, num ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTextTable10insertRowsEii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QTextTable13insertColumnsEii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTextTable13insertColumnsEii )( void *scorep_libwrap_arg_this, int pos, int num )
{
    LIBWRAP_EARLY_INIT( _ZN10QTextTable13insertColumnsEii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTextTable13insertColumnsEii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTextTable13insertColumnsEii, ( scorep_libwrap_arg_this, pos, num ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTextTable13insertColumnsEii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QTextTable10appendRowsEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTextTable10appendRowsEi )( void *scorep_libwrap_arg_this, int count )
{
    LIBWRAP_EARLY_INIT( _ZN10QTextTable10appendRowsEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTextTable10appendRowsEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTextTable10appendRowsEi, ( scorep_libwrap_arg_this, count ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTextTable10appendRowsEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QTextTable13appendColumnsEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTextTable13appendColumnsEi )( void *scorep_libwrap_arg_this, int count )
{
    LIBWRAP_EARLY_INIT( _ZN10QTextTable13appendColumnsEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTextTable13appendColumnsEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTextTable13appendColumnsEi, ( scorep_libwrap_arg_this, count ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTextTable13appendColumnsEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QTextTable10removeRowsEii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTextTable10removeRowsEii )( void *scorep_libwrap_arg_this, int pos, int num )
{
    LIBWRAP_EARLY_INIT( _ZN10QTextTable10removeRowsEii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTextTable10removeRowsEii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTextTable10removeRowsEii, ( scorep_libwrap_arg_this, pos, num ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTextTable10removeRowsEii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QTextTable13removeColumnsEii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTextTable13removeColumnsEii )( void *scorep_libwrap_arg_this, int pos, int num )
{
    LIBWRAP_EARLY_INIT( _ZN10QTextTable13removeColumnsEii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTextTable13removeColumnsEii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTextTable13removeColumnsEii, ( scorep_libwrap_arg_this, pos, num ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTextTable13removeColumnsEii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QTextTable10mergeCellsEiiii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTextTable10mergeCellsEiiii )( void *scorep_libwrap_arg_this, int row, int col, int numRows, int numCols )
{
    LIBWRAP_EARLY_INIT( _ZN10QTextTable10mergeCellsEiiii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTextTable10mergeCellsEiiii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTextTable10mergeCellsEiiii, ( scorep_libwrap_arg_this, row, col, numRows, numCols ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTextTable10mergeCellsEiiii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QTextTable10mergeCellsERK11QTextCursor
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTextTable10mergeCellsERK11QTextCursor )( void *scorep_libwrap_arg_this, const QTextCursor & cursor )
{
    LIBWRAP_EARLY_INIT( _ZN10QTextTable10mergeCellsERK11QTextCursor );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTextTable10mergeCellsERK11QTextCursor );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTextTable10mergeCellsERK11QTextCursor, ( scorep_libwrap_arg_this, cursor ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTextTable10mergeCellsERK11QTextCursor );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QTextTable9splitCellEiiii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTextTable9splitCellEiiii )( void *scorep_libwrap_arg_this, int row, int col, int numRows, int numCols )
{
    LIBWRAP_EARLY_INIT( _ZN10QTextTable9splitCellEiiii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTextTable9splitCellEiiii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTextTable9splitCellEiiii, ( scorep_libwrap_arg_this, row, col, numRows, numCols ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTextTable9splitCellEiiii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK10QTextTable4rowsEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTextTable4rowsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTextTable4rowsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTextTable4rowsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTextTable4rowsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTextTable4rowsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QTextTable7columnsEv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTextTable7columnsEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTextTable7columnsEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTextTable7columnsEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTextTable7columnsEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTextTable7columnsEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QTextTable6cellAtEii
QTextTableCell
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTextTable6cellAtEii )( void *scorep_libwrap_arg_this, int row, int col )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTextTable6cellAtEii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTextTable6cellAtEii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextTableCell scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTextTable6cellAtEii, ( scorep_libwrap_arg_this, row, col ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTextTable6cellAtEii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QTextTable6cellAtEi
QTextTableCell
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTextTable6cellAtEi )( void *scorep_libwrap_arg_this, int position )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTextTable6cellAtEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTextTable6cellAtEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextTableCell scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTextTable6cellAtEi, ( scorep_libwrap_arg_this, position ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTextTable6cellAtEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QTextTable6cellAtERK11QTextCursor
QTextTableCell
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTextTable6cellAtERK11QTextCursor )( void *scorep_libwrap_arg_this, const QTextCursor & c )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTextTable6cellAtERK11QTextCursor );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTextTable6cellAtERK11QTextCursor );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextTableCell scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTextTable6cellAtERK11QTextCursor, ( scorep_libwrap_arg_this, c ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTextTable6cellAtERK11QTextCursor );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QTextTable8rowStartERK11QTextCursor
QTextCursor
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTextTable8rowStartERK11QTextCursor )( void *scorep_libwrap_arg_this, const QTextCursor & c )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTextTable8rowStartERK11QTextCursor );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTextTable8rowStartERK11QTextCursor );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextCursor scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTextTable8rowStartERK11QTextCursor, ( scorep_libwrap_arg_this, c ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTextTable8rowStartERK11QTextCursor );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QTextTable6rowEndERK11QTextCursor
QTextCursor
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QTextTable6rowEndERK11QTextCursor )( void *scorep_libwrap_arg_this, const QTextCursor & c )
{
    LIBWRAP_EARLY_INIT( _ZNK10QTextTable6rowEndERK11QTextCursor );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QTextTable6rowEndERK11QTextCursor );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QTextCursor scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QTextTable6rowEndERK11QTextCursor, ( scorep_libwrap_arg_this, c ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QTextTable6rowEndERK11QTextCursor );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QTextTable9setFormatERK16QTextTableFormat
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QTextTable9setFormatERK16QTextTableFormat )( void *scorep_libwrap_arg_this, const QTextTableFormat & format )
{
    LIBWRAP_EARLY_INIT( _ZN10QTextTable9setFormatERK16QTextTableFormat );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QTextTable9setFormatERK16QTextTableFormat );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QTextTable9setFormatERK16QTextTableFormat, ( scorep_libwrap_arg_this, format ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QTextTable9setFormatERK16QTextTableFormat );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN16QDesktopServices7openUrlERK4QUrl
bool
SCOREP_LIBWRAP_FUNC_NAME( _ZN16QDesktopServices7openUrlERK4QUrl )( const QUrl & url )
{
    LIBWRAP_EARLY_INIT( _ZN16QDesktopServices7openUrlERK4QUrl );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN16QDesktopServices7openUrlERK4QUrl );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    bool scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN16QDesktopServices7openUrlERK4QUrl, ( url ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN16QDesktopServices7openUrlERK4QUrl );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN16QDesktopServices13setUrlHandlerERK7QStringP7QObjectPKc
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN16QDesktopServices13setUrlHandlerERK7QStringP7QObjectPKc )( const QString & scheme, QObject * receiver, const char * method )
{
    LIBWRAP_EARLY_INIT( _ZN16QDesktopServices13setUrlHandlerERK7QStringP7QObjectPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN16QDesktopServices13setUrlHandlerERK7QStringP7QObjectPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN16QDesktopServices13setUrlHandlerERK7QStringP7QObjectPKc, ( scheme, receiver, method ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN16QDesktopServices13setUrlHandlerERK7QStringP7QObjectPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN16QDesktopServices15unsetUrlHandlerERK7QString
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN16QDesktopServices15unsetUrlHandlerERK7QString )( const QString & scheme )
{
    LIBWRAP_EARLY_INIT( _ZN16QDesktopServices15unsetUrlHandlerERK7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN16QDesktopServices15unsetUrlHandlerERK7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN16QDesktopServices15unsetUrlHandlerERK7QString, ( scheme ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN16QDesktopServices15unsetUrlHandlerERK7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK10QValidator10metaObjectEv
const QMetaObject *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QValidator10metaObjectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QValidator10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QValidator10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QMetaObject * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QValidator10metaObjectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QValidator10metaObjectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QValidator11qt_metacastEPKc
void *
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QValidator11qt_metacastEPKc )( void *scorep_libwrap_arg_this, const char * scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN10QValidator11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QValidator11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    void * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN10QValidator11qt_metacastEPKc, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QValidator11qt_metacastEPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QValidator11qt_metacallEN11QMetaObject4CallEiPPv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QValidator11qt_metacallEN11QMetaObject4CallEiPPv )( void *scorep_libwrap_arg_this, QMetaObject::Call scorep_libwrap_arg_1, int scorep_libwrap_arg_2, void ** scorep_libwrap_arg_3 )
{
    LIBWRAP_EARLY_INIT( _ZN10QValidator11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QValidator11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN10QValidator11qt_metacallEN11QMetaObject4CallEiPPv, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, scorep_libwrap_arg_2, scorep_libwrap_arg_3 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QValidator11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN10QValidatorC2EP7QObject
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QValidatorC2EP7QObject )( void *scorep_libwrap_arg_this, QObject * parent )
{
    LIBWRAP_EARLY_INIT( _ZN10QValidatorC2EP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QValidatorC2EP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QValidatorC2EP7QObject, ( scorep_libwrap_arg_this, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QValidatorC2EP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QValidatorD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QValidatorD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN10QValidatorD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QValidatorD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QValidatorD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QValidatorD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QValidatorD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QValidatorD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN10QValidatorD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QValidatorD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QValidatorD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QValidatorD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QValidatorD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QValidatorD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN10QValidatorD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QValidatorD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QValidatorD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QValidatorD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QValidator9setLocaleERK7QLocale
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QValidator9setLocaleERK7QLocale )( void *scorep_libwrap_arg_this, const QLocale & locale )
{
    LIBWRAP_EARLY_INIT( _ZN10QValidator9setLocaleERK7QLocale );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QValidator9setLocaleERK7QLocale );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QValidator9setLocaleERK7QLocale, ( scorep_libwrap_arg_this, locale ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QValidator9setLocaleERK7QLocale );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK10QValidator6localeEv
QLocale
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QValidator6localeEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK10QValidator6localeEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QValidator6localeEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QLocale scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QValidator6localeEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QValidator6localeEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK10QValidator5fixupER7QString
void
SCOREP_LIBWRAP_FUNC_NAME( _ZNK10QValidator5fixupER7QString )( void *scorep_libwrap_arg_this, QString & scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZNK10QValidator5fixupER7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK10QValidator5fixupER7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZNK10QValidator5fixupER7QString, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK10QValidator5fixupER7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN10QValidator7changedEv
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN10QValidator7changedEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN10QValidator7changedEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN10QValidator7changedEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN10QValidator7changedEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN10QValidator7changedEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK13QIntValidator10metaObjectEv
const QMetaObject *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QIntValidator10metaObjectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK13QIntValidator10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QIntValidator10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QMetaObject * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QIntValidator10metaObjectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QIntValidator10metaObjectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QIntValidator11qt_metacastEPKc
void *
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QIntValidator11qt_metacastEPKc )( void *scorep_libwrap_arg_this, const char * scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN13QIntValidator11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QIntValidator11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    void * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN13QIntValidator11qt_metacastEPKc, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QIntValidator11qt_metacastEPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QIntValidator11qt_metacallEN11QMetaObject4CallEiPPv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QIntValidator11qt_metacallEN11QMetaObject4CallEiPPv )( void *scorep_libwrap_arg_this, QMetaObject::Call scorep_libwrap_arg_1, int scorep_libwrap_arg_2, void ** scorep_libwrap_arg_3 )
{
    LIBWRAP_EARLY_INIT( _ZN13QIntValidator11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QIntValidator11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN13QIntValidator11qt_metacallEN11QMetaObject4CallEiPPv, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, scorep_libwrap_arg_2, scorep_libwrap_arg_3 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QIntValidator11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN13QIntValidatorC2EP7QObject
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QIntValidatorC2EP7QObject )( void *scorep_libwrap_arg_this, QObject * parent )
{
    LIBWRAP_EARLY_INIT( _ZN13QIntValidatorC2EP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QIntValidatorC2EP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QIntValidatorC2EP7QObject, ( scorep_libwrap_arg_this, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QIntValidatorC2EP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QIntValidatorC1EP7QObject
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QIntValidatorC1EP7QObject )( void *scorep_libwrap_arg_this, QObject * parent )
{
    LIBWRAP_EARLY_INIT( _ZN13QIntValidatorC1EP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QIntValidatorC1EP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QIntValidatorC1EP7QObject, ( scorep_libwrap_arg_this, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QIntValidatorC1EP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QIntValidatorC2EiiP7QObject
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QIntValidatorC2EiiP7QObject )( void *scorep_libwrap_arg_this, int bottom, int top, QObject * parent )
{
    LIBWRAP_EARLY_INIT( _ZN13QIntValidatorC2EiiP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QIntValidatorC2EiiP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QIntValidatorC2EiiP7QObject, ( scorep_libwrap_arg_this, bottom, top, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QIntValidatorC2EiiP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QIntValidatorC1EiiP7QObject
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QIntValidatorC1EiiP7QObject )( void *scorep_libwrap_arg_this, int bottom, int top, QObject * parent )
{
    LIBWRAP_EARLY_INIT( _ZN13QIntValidatorC1EiiP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QIntValidatorC1EiiP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QIntValidatorC1EiiP7QObject, ( scorep_libwrap_arg_this, bottom, top, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QIntValidatorC1EiiP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QIntValidatorD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QIntValidatorD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN13QIntValidatorD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QIntValidatorD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QIntValidatorD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QIntValidatorD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QIntValidatorD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QIntValidatorD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN13QIntValidatorD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QIntValidatorD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QIntValidatorD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QIntValidatorD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QIntValidatorD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QIntValidatorD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN13QIntValidatorD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QIntValidatorD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QIntValidatorD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QIntValidatorD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK13QIntValidator8validateER7QStringRi
QValidator::State
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QIntValidator8validateER7QStringRi )( void *scorep_libwrap_arg_this, QString & scorep_libwrap_arg_1, int & scorep_libwrap_arg_2 )
{
    LIBWRAP_EARLY_INIT( _ZNK13QIntValidator8validateER7QStringRi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QIntValidator8validateER7QStringRi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QValidator::State scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QIntValidator8validateER7QStringRi, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, scorep_libwrap_arg_2 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QIntValidator8validateER7QStringRi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK13QIntValidator5fixupER7QString
void
SCOREP_LIBWRAP_FUNC_NAME( _ZNK13QIntValidator5fixupER7QString )( void *scorep_libwrap_arg_this, QString & input )
{
    LIBWRAP_EARLY_INIT( _ZNK13QIntValidator5fixupER7QString );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK13QIntValidator5fixupER7QString );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZNK13QIntValidator5fixupER7QString, ( scorep_libwrap_arg_this, input ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK13QIntValidator5fixupER7QString );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QIntValidator9setBottomEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QIntValidator9setBottomEi )( void *scorep_libwrap_arg_this, int scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN13QIntValidator9setBottomEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QIntValidator9setBottomEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QIntValidator9setBottomEi, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QIntValidator9setBottomEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QIntValidator6setTopEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QIntValidator6setTopEi )( void *scorep_libwrap_arg_this, int scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN13QIntValidator6setTopEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QIntValidator6setTopEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QIntValidator6setTopEi, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QIntValidator6setTopEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QIntValidator8setRangeEii
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QIntValidator8setRangeEii )( void *scorep_libwrap_arg_this, int bottom, int top )
{
    LIBWRAP_EARLY_INIT( _ZN13QIntValidator8setRangeEii );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QIntValidator8setRangeEii );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QIntValidator8setRangeEii, ( scorep_libwrap_arg_this, bottom, top ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QIntValidator8setRangeEii );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QIntValidator13bottomChangedEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QIntValidator13bottomChangedEi )( void *scorep_libwrap_arg_this, int bottom )
{
    LIBWRAP_EARLY_INIT( _ZN13QIntValidator13bottomChangedEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QIntValidator13bottomChangedEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QIntValidator13bottomChangedEi, ( scorep_libwrap_arg_this, bottom ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QIntValidator13bottomChangedEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN13QIntValidator10topChangedEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN13QIntValidator10topChangedEi )( void *scorep_libwrap_arg_this, int top )
{
    LIBWRAP_EARLY_INIT( _ZN13QIntValidator10topChangedEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN13QIntValidator10topChangedEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN13QIntValidator10topChangedEi, ( scorep_libwrap_arg_this, top ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN13QIntValidator10topChangedEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK16QDoubleValidator10metaObjectEv
const QMetaObject *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK16QDoubleValidator10metaObjectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK16QDoubleValidator10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK16QDoubleValidator10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QMetaObject * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK16QDoubleValidator10metaObjectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK16QDoubleValidator10metaObjectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN16QDoubleValidator11qt_metacastEPKc
void *
SCOREP_LIBWRAP_FUNC_NAME( _ZN16QDoubleValidator11qt_metacastEPKc )( void *scorep_libwrap_arg_this, const char * scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN16QDoubleValidator11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN16QDoubleValidator11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    void * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN16QDoubleValidator11qt_metacastEPKc, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN16QDoubleValidator11qt_metacastEPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN16QDoubleValidator11qt_metacallEN11QMetaObject4CallEiPPv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZN16QDoubleValidator11qt_metacallEN11QMetaObject4CallEiPPv )( void *scorep_libwrap_arg_this, QMetaObject::Call scorep_libwrap_arg_1, int scorep_libwrap_arg_2, void ** scorep_libwrap_arg_3 )
{
    LIBWRAP_EARLY_INIT( _ZN16QDoubleValidator11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN16QDoubleValidator11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN16QDoubleValidator11qt_metacallEN11QMetaObject4CallEiPPv, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, scorep_libwrap_arg_2, scorep_libwrap_arg_3 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN16QDoubleValidator11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN16QDoubleValidatorC2EP7QObject
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN16QDoubleValidatorC2EP7QObject )( void *scorep_libwrap_arg_this, QObject * parent )
{
    LIBWRAP_EARLY_INIT( _ZN16QDoubleValidatorC2EP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN16QDoubleValidatorC2EP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN16QDoubleValidatorC2EP7QObject, ( scorep_libwrap_arg_this, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN16QDoubleValidatorC2EP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN16QDoubleValidatorC2EddiP7QObject
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN16QDoubleValidatorC2EddiP7QObject )( void *scorep_libwrap_arg_this, double bottom, double top, int decimals, QObject * parent )
{
    LIBWRAP_EARLY_INIT( _ZN16QDoubleValidatorC2EddiP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN16QDoubleValidatorC2EddiP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN16QDoubleValidatorC2EddiP7QObject, ( scorep_libwrap_arg_this, bottom, top, decimals, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN16QDoubleValidatorC2EddiP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN16QDoubleValidatorD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN16QDoubleValidatorD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN16QDoubleValidatorD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN16QDoubleValidatorD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN16QDoubleValidatorD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN16QDoubleValidatorD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN16QDoubleValidatorD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN16QDoubleValidatorD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN16QDoubleValidatorD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN16QDoubleValidatorD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN16QDoubleValidatorD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN16QDoubleValidatorD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN16QDoubleValidatorD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN16QDoubleValidatorD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN16QDoubleValidatorD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN16QDoubleValidatorD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN16QDoubleValidatorD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN16QDoubleValidatorD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN16QDoubleValidator8setRangeEddi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN16QDoubleValidator8setRangeEddi )( void *scorep_libwrap_arg_this, double bottom, double top, int decimals )
{
    LIBWRAP_EARLY_INIT( _ZN16QDoubleValidator8setRangeEddi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN16QDoubleValidator8setRangeEddi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN16QDoubleValidator8setRangeEddi, ( scorep_libwrap_arg_this, bottom, top, decimals ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN16QDoubleValidator8setRangeEddi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN16QDoubleValidator9setBottomEd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN16QDoubleValidator9setBottomEd )( void *scorep_libwrap_arg_this, double scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN16QDoubleValidator9setBottomEd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN16QDoubleValidator9setBottomEd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN16QDoubleValidator9setBottomEd, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN16QDoubleValidator9setBottomEd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN16QDoubleValidator6setTopEd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN16QDoubleValidator6setTopEd )( void *scorep_libwrap_arg_this, double scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN16QDoubleValidator6setTopEd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN16QDoubleValidator6setTopEd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN16QDoubleValidator6setTopEd, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN16QDoubleValidator6setTopEd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN16QDoubleValidator11setDecimalsEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN16QDoubleValidator11setDecimalsEi )( void *scorep_libwrap_arg_this, int scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN16QDoubleValidator11setDecimalsEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN16QDoubleValidator11setDecimalsEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN16QDoubleValidator11setDecimalsEi, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN16QDoubleValidator11setDecimalsEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN16QDoubleValidator11setNotationENS_8NotationE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN16QDoubleValidator11setNotationENS_8NotationE )( void *scorep_libwrap_arg_this, QDoubleValidator::Notation scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN16QDoubleValidator11setNotationENS_8NotationE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN16QDoubleValidator11setNotationENS_8NotationE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN16QDoubleValidator11setNotationENS_8NotationE, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN16QDoubleValidator11setNotationENS_8NotationE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK16QDoubleValidator8notationEv
QDoubleValidator::Notation
SCOREP_LIBWRAP_FUNC_NAME( _ZNK16QDoubleValidator8notationEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK16QDoubleValidator8notationEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK16QDoubleValidator8notationEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QDoubleValidator::Notation scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK16QDoubleValidator8notationEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK16QDoubleValidator8notationEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN16QDoubleValidator13bottomChangedEd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN16QDoubleValidator13bottomChangedEd )( void *scorep_libwrap_arg_this, double bottom )
{
    LIBWRAP_EARLY_INIT( _ZN16QDoubleValidator13bottomChangedEd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN16QDoubleValidator13bottomChangedEd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN16QDoubleValidator13bottomChangedEd, ( scorep_libwrap_arg_this, bottom ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN16QDoubleValidator13bottomChangedEd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN16QDoubleValidator10topChangedEd
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN16QDoubleValidator10topChangedEd )( void *scorep_libwrap_arg_this, double top )
{
    LIBWRAP_EARLY_INIT( _ZN16QDoubleValidator10topChangedEd );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN16QDoubleValidator10topChangedEd );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN16QDoubleValidator10topChangedEd, ( scorep_libwrap_arg_this, top ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN16QDoubleValidator10topChangedEd );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN16QDoubleValidator15decimalsChangedEi
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN16QDoubleValidator15decimalsChangedEi )( void *scorep_libwrap_arg_this, int decimals )
{
    LIBWRAP_EARLY_INIT( _ZN16QDoubleValidator15decimalsChangedEi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN16QDoubleValidator15decimalsChangedEi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN16QDoubleValidator15decimalsChangedEi, ( scorep_libwrap_arg_this, decimals ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN16QDoubleValidator15decimalsChangedEi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN16QDoubleValidator15notationChangedENS_8NotationE
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN16QDoubleValidator15notationChangedENS_8NotationE )( void *scorep_libwrap_arg_this, QDoubleValidator::Notation notation )
{
    LIBWRAP_EARLY_INIT( _ZN16QDoubleValidator15notationChangedENS_8NotationE );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN16QDoubleValidator15notationChangedENS_8NotationE );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN16QDoubleValidator15notationChangedENS_8NotationE, ( scorep_libwrap_arg_this, notation ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN16QDoubleValidator15notationChangedENS_8NotationE );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK16QRegExpValidator10metaObjectEv
const QMetaObject *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK16QRegExpValidator10metaObjectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK16QRegExpValidator10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK16QRegExpValidator10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QMetaObject * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK16QRegExpValidator10metaObjectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK16QRegExpValidator10metaObjectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN16QRegExpValidator11qt_metacastEPKc
void *
SCOREP_LIBWRAP_FUNC_NAME( _ZN16QRegExpValidator11qt_metacastEPKc )( void *scorep_libwrap_arg_this, const char * scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN16QRegExpValidator11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN16QRegExpValidator11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    void * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN16QRegExpValidator11qt_metacastEPKc, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN16QRegExpValidator11qt_metacastEPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN16QRegExpValidator11qt_metacallEN11QMetaObject4CallEiPPv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZN16QRegExpValidator11qt_metacallEN11QMetaObject4CallEiPPv )( void *scorep_libwrap_arg_this, QMetaObject::Call scorep_libwrap_arg_1, int scorep_libwrap_arg_2, void ** scorep_libwrap_arg_3 )
{
    LIBWRAP_EARLY_INIT( _ZN16QRegExpValidator11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN16QRegExpValidator11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN16QRegExpValidator11qt_metacallEN11QMetaObject4CallEiPPv, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, scorep_libwrap_arg_2, scorep_libwrap_arg_3 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN16QRegExpValidator11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN16QRegExpValidatorC2EP7QObject
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN16QRegExpValidatorC2EP7QObject )( void *scorep_libwrap_arg_this, QObject * parent )
{
    LIBWRAP_EARLY_INIT( _ZN16QRegExpValidatorC2EP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN16QRegExpValidatorC2EP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN16QRegExpValidatorC2EP7QObject, ( scorep_libwrap_arg_this, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN16QRegExpValidatorC2EP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN16QRegExpValidatorC1EP7QObject
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN16QRegExpValidatorC1EP7QObject )( void *scorep_libwrap_arg_this, QObject * parent )
{
    LIBWRAP_EARLY_INIT( _ZN16QRegExpValidatorC1EP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN16QRegExpValidatorC1EP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN16QRegExpValidatorC1EP7QObject, ( scorep_libwrap_arg_this, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN16QRegExpValidatorC1EP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN16QRegExpValidatorC2ERK7QRegExpP7QObject
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN16QRegExpValidatorC2ERK7QRegExpP7QObject )( void *scorep_libwrap_arg_this, const QRegExp & rx, QObject * parent )
{
    LIBWRAP_EARLY_INIT( _ZN16QRegExpValidatorC2ERK7QRegExpP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN16QRegExpValidatorC2ERK7QRegExpP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN16QRegExpValidatorC2ERK7QRegExpP7QObject, ( scorep_libwrap_arg_this, rx, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN16QRegExpValidatorC2ERK7QRegExpP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN16QRegExpValidatorC1ERK7QRegExpP7QObject
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN16QRegExpValidatorC1ERK7QRegExpP7QObject )( void *scorep_libwrap_arg_this, const QRegExp & rx, QObject * parent )
{
    LIBWRAP_EARLY_INIT( _ZN16QRegExpValidatorC1ERK7QRegExpP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN16QRegExpValidatorC1ERK7QRegExpP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN16QRegExpValidatorC1ERK7QRegExpP7QObject, ( scorep_libwrap_arg_this, rx, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN16QRegExpValidatorC1ERK7QRegExpP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN16QRegExpValidatorD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN16QRegExpValidatorD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN16QRegExpValidatorD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN16QRegExpValidatorD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN16QRegExpValidatorD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN16QRegExpValidatorD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN16QRegExpValidatorD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN16QRegExpValidatorD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN16QRegExpValidatorD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN16QRegExpValidatorD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN16QRegExpValidatorD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN16QRegExpValidatorD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN16QRegExpValidatorD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN16QRegExpValidatorD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN16QRegExpValidatorD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN16QRegExpValidatorD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN16QRegExpValidatorD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN16QRegExpValidatorD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK16QRegExpValidator8validateER7QStringRi
QValidator::State
SCOREP_LIBWRAP_FUNC_NAME( _ZNK16QRegExpValidator8validateER7QStringRi )( void *scorep_libwrap_arg_this, QString & input, int & pos )
{
    LIBWRAP_EARLY_INIT( _ZNK16QRegExpValidator8validateER7QStringRi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK16QRegExpValidator8validateER7QStringRi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QValidator::State scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK16QRegExpValidator8validateER7QStringRi, ( scorep_libwrap_arg_this, input, pos ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK16QRegExpValidator8validateER7QStringRi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN16QRegExpValidator9setRegExpERK7QRegExp
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN16QRegExpValidator9setRegExpERK7QRegExp )( void *scorep_libwrap_arg_this, const QRegExp & rx )
{
    LIBWRAP_EARLY_INIT( _ZN16QRegExpValidator9setRegExpERK7QRegExp );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN16QRegExpValidator9setRegExpERK7QRegExp );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN16QRegExpValidator9setRegExpERK7QRegExp, ( scorep_libwrap_arg_this, rx ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN16QRegExpValidator9setRegExpERK7QRegExp );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN16QRegExpValidator13regExpChangedERK7QRegExp
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN16QRegExpValidator13regExpChangedERK7QRegExp )( void *scorep_libwrap_arg_this, const QRegExp & regExp )
{
    LIBWRAP_EARLY_INIT( _ZN16QRegExpValidator13regExpChangedERK7QRegExp );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN16QRegExpValidator13regExpChangedERK7QRegExp );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN16QRegExpValidator13regExpChangedERK7QRegExp, ( scorep_libwrap_arg_this, regExp ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN16QRegExpValidator13regExpChangedERK7QRegExp );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK27QRegularExpressionValidator10metaObjectEv
const QMetaObject *
SCOREP_LIBWRAP_FUNC_NAME( _ZNK27QRegularExpressionValidator10metaObjectEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK27QRegularExpressionValidator10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK27QRegularExpressionValidator10metaObjectEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    const QMetaObject * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK27QRegularExpressionValidator10metaObjectEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK27QRegularExpressionValidator10metaObjectEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN27QRegularExpressionValidator11qt_metacastEPKc
void *
SCOREP_LIBWRAP_FUNC_NAME( _ZN27QRegularExpressionValidator11qt_metacastEPKc )( void *scorep_libwrap_arg_this, const char * scorep_libwrap_arg_1 )
{
    LIBWRAP_EARLY_INIT( _ZN27QRegularExpressionValidator11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN27QRegularExpressionValidator11qt_metacastEPKc );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    void * scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN27QRegularExpressionValidator11qt_metacastEPKc, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN27QRegularExpressionValidator11qt_metacastEPKc );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN27QRegularExpressionValidator11qt_metacallEN11QMetaObject4CallEiPPv
int
SCOREP_LIBWRAP_FUNC_NAME( _ZN27QRegularExpressionValidator11qt_metacallEN11QMetaObject4CallEiPPv )( void *scorep_libwrap_arg_this, QMetaObject::Call scorep_libwrap_arg_1, int scorep_libwrap_arg_2, void ** scorep_libwrap_arg_3 )
{
    LIBWRAP_EARLY_INIT( _ZN27QRegularExpressionValidator11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN27QRegularExpressionValidator11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    int scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZN27QRegularExpressionValidator11qt_metacallEN11QMetaObject4CallEiPPv, ( scorep_libwrap_arg_this, scorep_libwrap_arg_1, scorep_libwrap_arg_2, scorep_libwrap_arg_3 ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN27QRegularExpressionValidator11qt_metacallEN11QMetaObject4CallEiPPv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN27QRegularExpressionValidatorC2EP7QObject
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN27QRegularExpressionValidatorC2EP7QObject )( void *scorep_libwrap_arg_this, QObject * parent )
{
    LIBWRAP_EARLY_INIT( _ZN27QRegularExpressionValidatorC2EP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN27QRegularExpressionValidatorC2EP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN27QRegularExpressionValidatorC2EP7QObject, ( scorep_libwrap_arg_this, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN27QRegularExpressionValidatorC2EP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN27QRegularExpressionValidatorC1EP7QObject
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN27QRegularExpressionValidatorC1EP7QObject )( void *scorep_libwrap_arg_this, QObject * parent )
{
    LIBWRAP_EARLY_INIT( _ZN27QRegularExpressionValidatorC1EP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN27QRegularExpressionValidatorC1EP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN27QRegularExpressionValidatorC1EP7QObject, ( scorep_libwrap_arg_this, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN27QRegularExpressionValidatorC1EP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN27QRegularExpressionValidatorC2ERK18QRegularExpressionP7QObject
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN27QRegularExpressionValidatorC2ERK18QRegularExpressionP7QObject )( void *scorep_libwrap_arg_this, const QRegularExpression & re, QObject * parent )
{
    LIBWRAP_EARLY_INIT( _ZN27QRegularExpressionValidatorC2ERK18QRegularExpressionP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN27QRegularExpressionValidatorC2ERK18QRegularExpressionP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN27QRegularExpressionValidatorC2ERK18QRegularExpressionP7QObject, ( scorep_libwrap_arg_this, re, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN27QRegularExpressionValidatorC2ERK18QRegularExpressionP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN27QRegularExpressionValidatorC1ERK18QRegularExpressionP7QObject
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN27QRegularExpressionValidatorC1ERK18QRegularExpressionP7QObject )( void *scorep_libwrap_arg_this, const QRegularExpression & re, QObject * parent )
{
    LIBWRAP_EARLY_INIT( _ZN27QRegularExpressionValidatorC1ERK18QRegularExpressionP7QObject );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN27QRegularExpressionValidatorC1ERK18QRegularExpressionP7QObject );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN27QRegularExpressionValidatorC1ERK18QRegularExpressionP7QObject, ( scorep_libwrap_arg_this, re, parent ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN27QRegularExpressionValidatorC1ERK18QRegularExpressionP7QObject );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN27QRegularExpressionValidatorD2Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN27QRegularExpressionValidatorD2Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN27QRegularExpressionValidatorD2Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN27QRegularExpressionValidatorD2Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN27QRegularExpressionValidatorD2Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN27QRegularExpressionValidatorD2Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN27QRegularExpressionValidatorD1Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN27QRegularExpressionValidatorD1Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN27QRegularExpressionValidatorD1Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN27QRegularExpressionValidatorD1Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN27QRegularExpressionValidatorD1Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN27QRegularExpressionValidatorD1Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN27QRegularExpressionValidatorD0Ev
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN27QRegularExpressionValidatorD0Ev )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZN27QRegularExpressionValidatorD0Ev );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN27QRegularExpressionValidatorD0Ev );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN27QRegularExpressionValidatorD0Ev, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN27QRegularExpressionValidatorD0Ev );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZNK27QRegularExpressionValidator8validateER7QStringRi
QValidator::State
SCOREP_LIBWRAP_FUNC_NAME( _ZNK27QRegularExpressionValidator8validateER7QStringRi )( void *scorep_libwrap_arg_this, QString & input, int & pos )
{
    LIBWRAP_EARLY_INIT( _ZNK27QRegularExpressionValidator8validateER7QStringRi );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK27QRegularExpressionValidator8validateER7QStringRi );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QValidator::State scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK27QRegularExpressionValidator8validateER7QStringRi, ( scorep_libwrap_arg_this, input, pos ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK27QRegularExpressionValidator8validateER7QStringRi );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZNK27QRegularExpressionValidator17regularExpressionEv
QRegularExpression
SCOREP_LIBWRAP_FUNC_NAME( _ZNK27QRegularExpressionValidator17regularExpressionEv )( void *scorep_libwrap_arg_this )
{
    LIBWRAP_EARLY_INIT( _ZNK27QRegularExpressionValidator17regularExpressionEv );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZNK27QRegularExpressionValidator17regularExpressionEv );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    QRegularExpression scorep_libwrap_var_ret = SCOREP_LIBWRAP_FUNC_CALL( _ZNK27QRegularExpressionValidator17regularExpressionEv, ( scorep_libwrap_arg_this ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZNK27QRegularExpressionValidator17regularExpressionEv );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
    return scorep_libwrap_var_ret;
}

#undef _ZN27QRegularExpressionValidator20setRegularExpressionERK18QRegularExpression
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN27QRegularExpressionValidator20setRegularExpressionERK18QRegularExpression )( void *scorep_libwrap_arg_this, const QRegularExpression & re )
{
    LIBWRAP_EARLY_INIT( _ZN27QRegularExpressionValidator20setRegularExpressionERK18QRegularExpression );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN27QRegularExpressionValidator20setRegularExpressionERK18QRegularExpression );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN27QRegularExpressionValidator20setRegularExpressionERK18QRegularExpression, ( scorep_libwrap_arg_this, re ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN27QRegularExpressionValidator20setRegularExpressionERK18QRegularExpression );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#undef _ZN27QRegularExpressionValidator24regularExpressionChangedERK18QRegularExpression
void
SCOREP_LIBWRAP_FUNC_NAME( _ZN27QRegularExpressionValidator24regularExpressionChangedERK18QRegularExpression )( void *scorep_libwrap_arg_this, const QRegularExpression & re )
{
    LIBWRAP_EARLY_INIT( _ZN27QRegularExpressionValidator24regularExpressionChangedERK18QRegularExpression );
    SCOREP_LIBWRAP_ENTER_MEASUREMENT();
    SCOREP_LIBWRAP_INIT( libwrap_qtgui_and_qtwidgets_handle,
                         libwrap_qtgui_and_qtwidgets_attributes );
    SCOREP_LIBWRAP_FUNC_ENTER( _ZN27QRegularExpressionValidator24regularExpressionChangedERK18QRegularExpression );
    SCOREP_LIBWRAP_ENTER_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_CALL( _ZN27QRegularExpressionValidator24regularExpressionChangedERK18QRegularExpression, ( scorep_libwrap_arg_this, re ) );
    SCOREP_LIBWRAP_EXIT_WRAPPED_REGION();
    SCOREP_LIBWRAP_FUNC_EXIT( _ZN27QRegularExpressionValidator24regularExpressionChangedERK18QRegularExpression );
    SCOREP_LIBWRAP_EXIT_MEASUREMENT();
}

#ifdef __cplusplus
}
#endif
